{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string[]} filenames filenames\n   * @param {boolean} pathIsFile pathIsFile\n   * @param {string | ResolveStepHook} target target\n   */\n  function DescriptionFilePlugin(source, filenames, pathIsFile, target) {\n    _classCallCheck(this, DescriptionFilePlugin);\n    this.source = source;\n    this.filenames = filenames;\n    this.pathIsFile = pathIsFile;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(DescriptionFilePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"DescriptionFilePlugin\", function (request, resolveContext, callback) {\n        var path = request.path;\n        if (!path) return callback();\n        var directory = _this.pathIsFile ? DescriptionFileUtils.cdUp(path) : path;\n        if (!directory) return callback();\n        DescriptionFileUtils.loadDescriptionFile(resolver, directory, _this.filenames, request.descriptionFilePath ? {\n          path: request.descriptionFilePath,\n          content: request.descriptionFileData,\n          directory: /** @type {string} */request.descriptionFileRoot\n        } : undefined, resolveContext, function (err, result) {\n          if (err) return callback(err);\n          if (!result) {\n            if (resolveContext.log) resolveContext.log(\"No description file found in \".concat(directory, \" or above\"));\n            return callback();\n          }\n          var relativePath = \".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n          var obj = _objectSpread(_objectSpread({}, request), {}, {\n            descriptionFilePath: result.path,\n            descriptionFileData: result.content,\n            descriptionFileRoot: result.directory,\n            relativePath: relativePath\n          });\n          resolver.doResolve(target, obj, \"using description file: \" + result.path + \" (relative path: \" + relativePath + \")\", resolveContext, function (err, result) {\n            if (err) return callback(err);\n\n            // Don't allow other processing\n            if (result === undefined) return callback(null, null);\n            callback(null, result);\n          });\n        });\n      });\n    }\n  }]);\n  return DescriptionFilePlugin;\n}();","map":{"version":3,"names":["DescriptionFileUtils","require","module","exports","source","filenames","pathIsFile","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","path","directory","cdUp","loadDescriptionFile","descriptionFilePath","content","descriptionFileData","descriptionFileRoot","undefined","err","result","log","relativePath","substr","length","replace","obj","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class DescriptionFilePlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string[]} filenames filenames\n\t * @param {boolean} pathIsFile pathIsFile\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, filenames, pathIsFile, target) {\n\t\tthis.source = source;\n\t\tthis.filenames = filenames;\n\t\tthis.pathIsFile = pathIsFile;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DescriptionFilePlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst path = request.path;\n\t\t\t\t\tif (!path) return callback();\n\t\t\t\t\tconst directory = this.pathIsFile\n\t\t\t\t\t\t? DescriptionFileUtils.cdUp(path)\n\t\t\t\t\t\t: path;\n\t\t\t\t\tif (!directory) return callback();\n\t\t\t\t\tDescriptionFileUtils.loadDescriptionFile(\n\t\t\t\t\t\tresolver,\n\t\t\t\t\t\tdirectory,\n\t\t\t\t\t\tthis.filenames,\n\t\t\t\t\t\trequest.descriptionFilePath\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tpath: request.descriptionFilePath,\n\t\t\t\t\t\t\t\t\tcontent: request.descriptionFileData,\n\t\t\t\t\t\t\t\t\tdirectory: /** @type {string} */ (request.descriptionFileRoot)\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t`No description file found in ${directory} or above`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst relativePath =\n\t\t\t\t\t\t\t\t\".\" + path.substr(result.directory.length).replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\tdescriptionFilePath: result.path,\n\t\t\t\t\t\t\t\tdescriptionFileData: result.content,\n\t\t\t\t\t\t\t\tdescriptionFileRoot: result.directory,\n\t\t\t\t\t\t\t\trelativePath: relativePath\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"using description file: \" +\n\t\t\t\t\t\t\t\t\tresult.path +\n\t\t\t\t\t\t\t\t\t\" (relative path: \" +\n\t\t\t\t\t\t\t\t\trelativePath +\n\t\t\t\t\t\t\t\t\t\")\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other processing\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;;AAEAC,MAAM,CAACC,OAAO;EACb;AACD;AACA;AACA;AACA;AACA;EACC,+BAAYC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAE;IAAA;IAClD,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MAAA;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC;MAC/CC,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CACR,uBAAuB,EACvB,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACtC,IAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI;QACzB,IAAI,CAACA,IAAI,EAAE,OAAOD,QAAQ,EAAE;QAC5B,IAAME,SAAS,GAAG,KAAI,CAACV,UAAU,GAC9BN,oBAAoB,CAACiB,IAAI,CAACF,IAAI,CAAC,GAC/BA,IAAI;QACP,IAAI,CAACC,SAAS,EAAE,OAAOF,QAAQ,EAAE;QACjCd,oBAAoB,CAACkB,mBAAmB,CACvCV,QAAQ,EACRQ,SAAS,EACT,KAAI,CAACX,SAAS,EACdO,OAAO,CAACO,mBAAmB,GACxB;UACAJ,IAAI,EAAEH,OAAO,CAACO,mBAAmB;UACjCC,OAAO,EAAER,OAAO,CAACS,mBAAmB;UACpCL,SAAS,EAAE,qBAAuBJ,OAAO,CAACU;QAC1C,CAAC,GACDC,SAAS,EACZV,cAAc,EACd,UAACW,GAAG,EAAEC,MAAM,EAAK;UAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;UAC7B,IAAI,CAACC,MAAM,EAAE;YACZ,IAAIZ,cAAc,CAACa,GAAG,EACrBb,cAAc,CAACa,GAAG,wCACeV,SAAS,eACzC;YACF,OAAOF,QAAQ,EAAE;UAClB;UACA,IAAMa,YAAY,GACjB,GAAG,GAAGZ,IAAI,CAACa,MAAM,CAACH,MAAM,CAACT,SAAS,CAACa,MAAM,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;UAC/D,IAAMC,GAAG,mCACLnB,OAAO;YACVO,mBAAmB,EAAEM,MAAM,CAACV,IAAI;YAChCM,mBAAmB,EAAEI,MAAM,CAACL,OAAO;YACnCE,mBAAmB,EAAEG,MAAM,CAACT,SAAS;YACrCW,YAAY,EAAEA;UAAY,EAC1B;UACDnB,QAAQ,CAACwB,SAAS,CACjBzB,MAAM,EACNwB,GAAG,EACH,0BAA0B,GACzBN,MAAM,CAACV,IAAI,GACX,mBAAmB,GACnBY,YAAY,GACZ,GAAG,EACJd,cAAc,EACd,UAACW,GAAG,EAAEC,MAAM,EAAK;YAChB,IAAID,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;;YAE7B;YACA,IAAIC,MAAM,KAAKF,SAAS,EAAE,OAAOT,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;YACrDA,QAAQ,CAAC,IAAI,EAAEW,MAAM,CAAC;UACvB,CAAC,CACD;QACF,CAAC,CACD;MACF,CAAC,CACD;IACH;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}