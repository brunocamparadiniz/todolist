{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar makeSerializable = require(\"../util/makeSerializable\");\nvar memoize = require(\"../util/memoize\");\nvar ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nvar getRawDataUrlModule = memoize(function () {\n  return require(\"../asset/RawDataUrlModule\");\n});\nvar CssUrlDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(CssUrlDependency, _ModuleDependency);\n  var _super = _createSuper(CssUrlDependency);\n  /**\n   * @param {string} request request\n   * @param {[number, number]} range range of the argument\n   * @param {string} cssFunctionKind kind of css function, e. g. url(), image()\n   */\n  function CssUrlDependency(request, range, cssFunctionKind) {\n    var _this;\n    _classCallCheck(this, CssUrlDependency);\n    _this = _super.call(this, request);\n    _this.range = range;\n    _this.cssFunctionKind = cssFunctionKind;\n    return _this;\n  }\n  _createClass(CssUrlDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"css url()\";\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return \"url\";\n    }\n\n    /**\n     * @param {string} context context directory\n     * @returns {Module} a module\n     */\n  }, {\n    key: \"createIgnoredModule\",\n    value: function createIgnoredModule(context) {\n      var RawDataUrlModule = getRawDataUrlModule();\n      return new RawDataUrlModule(\"data:,\", \"ignored-asset\", \"(ignored asset)\");\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.cssFunctionKind);\n      _get(_getPrototypeOf(CssUrlDependency.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.cssFunctionKind = read();\n      _get(_getPrototypeOf(CssUrlDependency.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n  return CssUrlDependency;\n}(ModuleDependency);\nvar cssEscapeString = function cssEscapeString(str) {\n  var countWhiteOrBracket = 0;\n  var countQuotation = 0;\n  var countApostrophe = 0;\n  for (var i = 0; i < str.length; i++) {\n    var cc = str.charCodeAt(i);\n    switch (cc) {\n      case 9: // tab\n      case 10: // nl\n      case 32: // space\n      case 40: // (\n      case 41:\n        // )\n        countWhiteOrBracket++;\n        break;\n      case 34:\n        countQuotation++;\n        break;\n      case 39:\n        countApostrophe++;\n        break;\n    }\n  }\n  if (countWhiteOrBracket < 2) {\n    return str.replace(/[\\n\\t ()'\"\\\\]/g, function (m) {\n      return \"\\\\\".concat(m);\n    });\n  } else if (countQuotation <= countApostrophe) {\n    return \"\\\"\".concat(str.replace(/[\\n\"\\\\]/g, function (m) {\n      return \"\\\\\".concat(m);\n    }), \"\\\"\");\n  } else {\n    return \"'\".concat(str.replace(/[\\n'\\\\]/g, function (m) {\n      return \"\\\\\".concat(m);\n    }), \"'\");\n  }\n};\nCssUrlDependency.Template = /*#__PURE__*/function (_ModuleDependency$Tem) {\n  _inherits(CssUrlDependencyTemplate, _ModuleDependency$Tem);\n  var _super2 = _createSuper(CssUrlDependencyTemplate);\n  function CssUrlDependencyTemplate() {\n    _classCallCheck(this, CssUrlDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(CssUrlDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, _ref) {\n      var runtime = _ref.runtime,\n        moduleGraph = _ref.moduleGraph,\n        runtimeTemplate = _ref.runtimeTemplate,\n        codeGenerationResults = _ref.codeGenerationResults;\n      var dep = /** @type {CssUrlDependency} */dependency;\n      source.replace(dep.range[0], dep.range[1] - 1, \"\".concat(dep.cssFunctionKind, \"(\").concat(cssEscapeString(runtimeTemplate.assetUrl({\n        publicPath: \"\",\n        runtime: runtime,\n        module: moduleGraph.getModule(dep),\n        codeGenerationResults: codeGenerationResults\n      })), \")\"));\n    }\n  }]);\n  return CssUrlDependencyTemplate;\n}(ModuleDependency.Template);\nmakeSerializable(CssUrlDependency, \"webpack/lib/dependencies/CssUrlDependency\");\nmodule.exports = CssUrlDependency;","map":{"version":3,"names":["makeSerializable","require","memoize","ModuleDependency","getRawDataUrlModule","CssUrlDependency","request","range","cssFunctionKind","context","RawDataUrlModule","write","read","cssEscapeString","str","countWhiteOrBracket","countQuotation","countApostrophe","i","length","cc","charCodeAt","replace","m","Template","dependency","source","runtime","moduleGraph","runtimeTemplate","codeGenerationResults","dep","assetUrl","publicPath","module","getModule","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/CssUrlDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst memoize = require(\"../util/memoize\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst getRawDataUrlModule = memoize(() => require(\"../asset/RawDataUrlModule\"));\n\nclass CssUrlDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {[number, number]} range range of the argument\n\t * @param {string} cssFunctionKind kind of css function, e. g. url(), image()\n\t */\n\tconstructor(request, range, cssFunctionKind) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.cssFunctionKind = cssFunctionKind;\n\t}\n\n\tget type() {\n\t\treturn \"css url()\";\n\t}\n\n\tget category() {\n\t\treturn \"url\";\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\tconst RawDataUrlModule = getRawDataUrlModule();\n\t\treturn new RawDataUrlModule(\"data:,\", `ignored-asset`, `(ignored asset)`);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.cssFunctionKind);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.cssFunctionKind = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nconst cssEscapeString = str => {\n\tlet countWhiteOrBracket = 0;\n\tlet countQuotation = 0;\n\tlet countApostrophe = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst cc = str.charCodeAt(i);\n\t\tswitch (cc) {\n\t\t\tcase 9: // tab\n\t\t\tcase 10: // nl\n\t\t\tcase 32: // space\n\t\t\tcase 40: // (\n\t\t\tcase 41: // )\n\t\t\t\tcountWhiteOrBracket++;\n\t\t\t\tbreak;\n\t\t\tcase 34:\n\t\t\t\tcountQuotation++;\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tcountApostrophe++;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tif (countWhiteOrBracket < 2) {\n\t\treturn str.replace(/[\\n\\t ()'\"\\\\]/g, m => `\\\\${m}`);\n\t} else if (countQuotation <= countApostrophe) {\n\t\treturn `\"${str.replace(/[\\n\"\\\\]/g, m => `\\\\${m}`)}\"`;\n\t} else {\n\t\treturn `'${str.replace(/[\\n'\\\\]/g, m => `\\\\${m}`)}'`;\n\t}\n};\n\nCssUrlDependency.Template = class CssUrlDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{ runtime, moduleGraph, runtimeTemplate, codeGenerationResults }\n\t) {\n\t\tconst dep = /** @type {CssUrlDependency} */ (dependency);\n\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\t`${dep.cssFunctionKind}(${cssEscapeString(\n\t\t\t\truntimeTemplate.assetUrl({\n\t\t\t\t\tpublicPath: \"\",\n\t\t\t\t\truntime,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\tcodeGenerationResults\n\t\t\t\t})\n\t\t\t)})`\n\t\t);\n\t}\n};\n\nmakeSerializable(CssUrlDependency, \"webpack/lib/dependencies/CssUrlDependency\");\n\nmodule.exports = CssUrlDependency;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}