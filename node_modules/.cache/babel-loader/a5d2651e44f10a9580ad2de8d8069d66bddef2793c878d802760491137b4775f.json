{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar AddManagedPathsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Iterable<string | RegExp>} managedPaths list of managed paths\n   * @param {Iterable<string | RegExp>} immutablePaths list of immutable paths\n   */\n  function AddManagedPathsPlugin(managedPaths, immutablePaths) {\n    _classCallCheck(this, AddManagedPathsPlugin);\n    this.managedPaths = new Set(managedPaths);\n    this.immutablePaths = new Set(immutablePaths);\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(AddManagedPathsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _iterator = _createForOfIteratorHelper(this.managedPaths),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var managedPath = _step.value;\n          compiler.managedPaths.add(managedPath);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(this.immutablePaths),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var immutablePath = _step2.value;\n          compiler.immutablePaths.add(immutablePath);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n  return AddManagedPathsPlugin;\n}();\nmodule.exports = AddManagedPathsPlugin;","map":{"version":3,"names":["AddManagedPathsPlugin","managedPaths","immutablePaths","Set","compiler","managedPath","add","immutablePath","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/cache/AddManagedPathsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass AddManagedPathsPlugin {\n\t/**\n\t * @param {Iterable<string | RegExp>} managedPaths list of managed paths\n\t * @param {Iterable<string | RegExp>} immutablePaths list of immutable paths\n\t */\n\tconstructor(managedPaths, immutablePaths) {\n\t\tthis.managedPaths = new Set(managedPaths);\n\t\tthis.immutablePaths = new Set(immutablePaths);\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tfor (const managedPath of this.managedPaths) {\n\t\t\tcompiler.managedPaths.add(managedPath);\n\t\t}\n\t\tfor (const immutablePath of this.immutablePaths) {\n\t\t\tcompiler.immutablePaths.add(immutablePath);\n\t\t}\n\t}\n}\n\nmodule.exports = AddManagedPathsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAAA;AAAA;AAAA;AAAA,IAEMA,qBAAqB;EAC1B;AACD;AACA;AACA;EACC,+BAAYC,YAAY,EAAEC,cAAc,EAAE;IAAA;IACzC,IAAI,CAACD,YAAY,GAAG,IAAIE,GAAG,CAACF,YAAY,CAAC;IACzC,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAACD,cAAc,CAAC;EAC9C;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAME,QAAQ,EAAE;MAAA,2CACW,IAAI,CAACH,YAAY;QAAA;MAAA;QAA3C,oDAA6C;UAAA,IAAlCI,WAAW;UACrBD,QAAQ,CAACH,YAAY,CAACK,GAAG,CAACD,WAAW,CAAC;QACvC;MAAC;QAAA;MAAA;QAAA;MAAA;MAAA,4CAC2B,IAAI,CAACH,cAAc;QAAA;MAAA;QAA/C,uDAAiD;UAAA,IAAtCK,aAAa;UACvBH,QAAQ,CAACF,cAAc,CAACI,GAAG,CAACC,aAAa,CAAC;QAC3C;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;EAAA;AAAA;AAGFC,MAAM,CAACC,OAAO,GAAGT,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}