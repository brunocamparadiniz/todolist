{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar UseStrictPlugin = /*#__PURE__*/function () {\n  function UseStrictPlugin() {\n    _classCallCheck(this, UseStrictPlugin);\n  }\n  _createClass(UseStrictPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"UseStrictPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        var handler = function handler(parser) {\n          parser.hooks.program.tap(\"UseStrictPlugin\", function (ast) {\n            var firstNode = ast.body[0];\n            if (firstNode && firstNode.type === \"ExpressionStatement\" && firstNode.expression.type === \"Literal\" && firstNode.expression.value === \"use strict\") {\n              // Remove \"use strict\" expression. It will be added later by the renderer again.\n              // This is necessary in order to not break the strict mode when webpack prepends code.\n              // @see https://github.com/webpack/webpack/issues/1970\n              var dep = new ConstDependency(\"\", firstNode.range);\n              dep.loc = firstNode.loc;\n              parser.state.module.addPresentationalDependency(dep);\n              parser.state.module.buildInfo.strict = true;\n            }\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"UseStrictPlugin\", handler);\n      });\n    }\n  }]);\n  return UseStrictPlugin;\n}();\nmodule.exports = UseStrictPlugin;","map":{"version":3,"names":["ConstDependency","require","UseStrictPlugin","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","program","ast","firstNode","body","type","expression","value","dep","range","loc","state","module","addPresentationalDependency","buildInfo","strict","for","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/UseStrictPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass UseStrictPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"UseStrictPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.program.tap(\"UseStrictPlugin\", ast => {\n\t\t\t\t\t\tconst firstNode = ast.body[0];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfirstNode &&\n\t\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\n\t\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\n\t\t\t\t\t\t\tfirstNode.expression.value === \"use strict\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\n\t\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", firstNode.range);\n\t\t\t\t\t\t\tdep.loc = firstNode.loc;\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\tparser.state.module.buildInfo.strict = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"UseStrictPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseStrictPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAgC,CAAC;;AAEjE;AAAA,IAEMC,eAAe;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACpB;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,iBAAiB,EACjB,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClC,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,MAAM,EAAI;UACzBA,MAAM,CAACL,KAAK,CAACM,OAAO,CAACJ,GAAG,CAAC,iBAAiB,EAAE,UAAAK,GAAG,EAAI;YAClD,IAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;YAC7B,IACCD,SAAS,IACTA,SAAS,CAACE,IAAI,KAAK,qBAAqB,IACxCF,SAAS,CAACG,UAAU,CAACD,IAAI,KAAK,SAAS,IACvCF,SAAS,CAACG,UAAU,CAACC,KAAK,KAAK,YAAY,EAC1C;cACD;cACA;cACA;cACA,IAAMC,GAAG,GAAG,IAAIjB,eAAe,CAAC,EAAE,EAAEY,SAAS,CAACM,KAAK,CAAC;cACpDD,GAAG,CAACE,GAAG,GAAGP,SAAS,CAACO,GAAG;cACvBV,MAAM,CAACW,KAAK,CAACC,MAAM,CAACC,2BAA2B,CAACL,GAAG,CAAC;cACpDR,MAAM,CAACW,KAAK,CAACC,MAAM,CAACE,SAAS,CAACC,MAAM,GAAG,IAAI;YAC5C;UACD,CAAC,CAAC;QACH,CAAC;QAEDjB,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,iBAAiB,CAAC,CACtBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;QACjCD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,oBAAoB,CAAC,CACzBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;QACjCD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BgB,GAAG,CAAC,gBAAgB,CAAC,CACrBnB,GAAG,CAAC,iBAAiB,EAAEE,OAAO,CAAC;MAClC,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFa,MAAM,CAACK,OAAO,GAAGxB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}