{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar RuntimeModule = require(\"../RuntimeModule\");\nvar Template = require(\"../Template\");\nvar EnsureChunkRuntimeModule = /*#__PURE__*/function (_RuntimeModule) {\n  _inherits(EnsureChunkRuntimeModule, _RuntimeModule);\n  var _super = _createSuper(EnsureChunkRuntimeModule);\n  function EnsureChunkRuntimeModule(runtimeRequirements) {\n    var _this;\n    _classCallCheck(this, EnsureChunkRuntimeModule);\n    _this = _super.call(this, \"ensure chunk\");\n    _this.runtimeRequirements = runtimeRequirements;\n    return _this;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  _createClass(EnsureChunkRuntimeModule, [{\n    key: \"generate\",\n    value: function generate() {\n      var runtimeTemplate = this.compilation.runtimeTemplate;\n      // Check if there are non initial chunks which need to be imported using require-ensure\n      if (this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers)) {\n        var handlers = RuntimeGlobals.ensureChunkHandlers;\n        return Template.asString([\"\".concat(handlers, \" = {};\"), \"// This file contains only the entry chunk.\", \"// The chunk loading function for additional chunks\", \"\".concat(RuntimeGlobals.ensureChunk, \" = \").concat(runtimeTemplate.basicFunction(\"chunkId\", [\"return Promise.all(Object.keys(\".concat(handlers, \").reduce(\").concat(runtimeTemplate.basicFunction(\"promises, key\", [\"\".concat(handlers, \"[key](chunkId, promises);\"), \"return promises;\"]), \", []));\")]), \";\")]);\n      } else {\n        // There ensureChunk is used somewhere in the tree, so we need an empty requireEnsure\n        // function. This can happen with multiple entrypoints.\n        return Template.asString([\"// The chunk loading function for additional chunks\", \"// Since all referenced chunks are already included\", \"// in this file, this function is empty here.\", \"\".concat(RuntimeGlobals.ensureChunk, \" = \").concat(runtimeTemplate.returningFunction(\"Promise.resolve()\"), \";\")]);\n      }\n    }\n  }]);\n  return EnsureChunkRuntimeModule;\n}(RuntimeModule);\nmodule.exports = EnsureChunkRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","EnsureChunkRuntimeModule","runtimeRequirements","runtimeTemplate","compilation","has","ensureChunkHandlers","handlers","asString","ensureChunk","basicFunction","returningFunction","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/runtime/EnsureChunkRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\n\nclass EnsureChunkRuntimeModule extends RuntimeModule {\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"ensure chunk\");\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { runtimeTemplate } = this.compilation;\n\t\t// Check if there are non initial chunks which need to be imported using require-ensure\n\t\tif (this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers)) {\n\t\t\tconst handlers = RuntimeGlobals.ensureChunkHandlers;\n\t\t\treturn Template.asString([\n\t\t\t\t`${handlers} = {};`,\n\t\t\t\t\"// This file contains only the entry chunk.\",\n\t\t\t\t\"// The chunk loading function for additional chunks\",\n\t\t\t\t`${RuntimeGlobals.ensureChunk} = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\"chunkId\",\n\t\t\t\t\t[\n\t\t\t\t\t\t`return Promise.all(Object.keys(${handlers}).reduce(${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"promises, key\",\n\t\t\t\t\t\t\t[`${handlers}[key](chunkId, promises);`, \"return promises;\"]\n\t\t\t\t\t\t)}, []));`\n\t\t\t\t\t]\n\t\t\t\t)};`\n\t\t\t]);\n\t\t} else {\n\t\t\t// There ensureChunk is used somewhere in the tree, so we need an empty requireEnsure\n\t\t\t// function. This can happen with multiple entrypoints.\n\t\t\treturn Template.asString([\n\t\t\t\t\"// The chunk loading function for additional chunks\",\n\t\t\t\t\"// Since all referenced chunks are already included\",\n\t\t\t\t\"// in this file, this function is empty here.\",\n\t\t\t\t`${RuntimeGlobals.ensureChunk} = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\"Promise.resolve()\"\n\t\t\t\t)};`\n\t\t\t]);\n\t\t}\n\t}\n}\n\nmodule.exports = EnsureChunkRuntimeModule;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,IAAMC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACjD,IAAME,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;AAAC,IAElCG,wBAAwB;EAAA;EAAA;EAC7B,kCAAYC,mBAAmB,EAAE;IAAA;IAAA;IAChC,0BAAM,cAAc;IACpB,MAAKA,mBAAmB,GAAGA,mBAAmB;IAAC;EAChD;;EAEA;AACD;AACA;EAFC;IAAA;IAAA,OAGA,oBAAW;MACV,IAAQC,eAAe,GAAK,IAAI,CAACC,WAAW,CAApCD,eAAe;MACvB;MACA,IAAI,IAAI,CAACD,mBAAmB,CAACG,GAAG,CAACR,cAAc,CAACS,mBAAmB,CAAC,EAAE;QACrE,IAAMC,QAAQ,GAAGV,cAAc,CAACS,mBAAmB;QACnD,OAAON,QAAQ,CAACQ,QAAQ,CAAC,WACrBD,QAAQ,aACX,6CAA6C,EAC7C,qDAAqD,YAClDV,cAAc,CAACY,WAAW,gBAAMN,eAAe,CAACO,aAAa,CAC/D,SAAS,EACT,0CACmCH,QAAQ,sBAAYJ,eAAe,CAACO,aAAa,CAClF,eAAe,EACf,WAAIH,QAAQ,gCAA6B,kBAAkB,CAAC,CAC5D,aACD,CACD,OACD,CAAC;MACH,CAAC,MAAM;QACN;QACA;QACA,OAAOP,QAAQ,CAACQ,QAAQ,CAAC,CACxB,qDAAqD,EACrD,qDAAqD,EACrD,+CAA+C,YAC5CX,cAAc,CAACY,WAAW,gBAAMN,eAAe,CAACQ,iBAAiB,CACnE,mBAAmB,CACnB,OACD,CAAC;MACH;IACD;EAAC;EAAA;AAAA,EAxCqCZ,aAAa;AA2CpDa,MAAM,CAACC,OAAO,GAAGZ,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}