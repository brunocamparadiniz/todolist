{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Generator = require(\"../Generator\");\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nvar _require = require(\"../util/comparators\"),\n  compareModulesByIdentifier = _require.compareModulesByIdentifier;\nvar memoize = require(\"../util/memoize\");\nvar WebAssemblyInInitialChunkError = require(\"./WebAssemblyInInitialChunkError\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\nvar getWebAssemblyGenerator = memoize(function () {\n  return require(\"./WebAssemblyGenerator\");\n});\nvar getWebAssemblyJavascriptGenerator = memoize(function () {\n  return require(\"./WebAssemblyJavascriptGenerator\");\n});\nvar getWebAssemblyParser = memoize(function () {\n  return require(\"./WebAssemblyParser\");\n});\nvar WebAssemblyModulesPlugin = /*#__PURE__*/function () {\n  function WebAssemblyModulesPlugin(options) {\n    _classCallCheck(this, WebAssemblyModulesPlugin);\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(WebAssemblyModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"WebAssemblyModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(WebAssemblyImportDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(WebAssemblyExportImportedDependency, normalModuleFactory);\n        normalModuleFactory.hooks.createParser.for(\"webassembly/sync\").tap(\"WebAssemblyModulesPlugin\", function () {\n          var WebAssemblyParser = getWebAssemblyParser();\n          return new WebAssemblyParser();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"webassembly/sync\").tap(\"WebAssemblyModulesPlugin\", function () {\n          var WebAssemblyJavascriptGenerator = getWebAssemblyJavascriptGenerator();\n          var WebAssemblyGenerator = getWebAssemblyGenerator();\n          return Generator.byType({\n            javascript: new WebAssemblyJavascriptGenerator(),\n            webassembly: new WebAssemblyGenerator(_this.options)\n          });\n        });\n        compilation.hooks.renderManifest.tap(\"WebAssemblyModulesPlugin\", function (result, options) {\n          var chunkGraph = compilation.chunkGraph;\n          var chunk = options.chunk,\n            outputOptions = options.outputOptions,\n            codeGenerationResults = options.codeGenerationResults;\n          var _iterator = _createForOfIteratorHelper(chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier)),\n            _step;\n          try {\n            var _loop = function _loop() {\n              var module = _step.value;\n              if (module.type === \"webassembly/sync\") {\n                var filenameTemplate = outputOptions.webassemblyModuleFilename;\n                result.push({\n                  render: function render() {\n                    return codeGenerationResults.getSource(module, chunk.runtime, \"webassembly\");\n                  },\n                  filenameTemplate: filenameTemplate,\n                  pathOptions: {\n                    module: module,\n                    runtime: chunk.runtime,\n                    chunkGraph: chunkGraph\n                  },\n                  auxiliary: true,\n                  identifier: \"webassemblyModule\".concat(chunkGraph.getModuleId(module)),\n                  hash: chunkGraph.getModuleHash(module, chunk.runtime)\n                });\n              }\n            };\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          return result;\n        });\n        compilation.hooks.afterChunks.tap(\"WebAssemblyModulesPlugin\", function () {\n          var chunkGraph = compilation.chunkGraph;\n          var initialWasmModules = new Set();\n          var _iterator2 = _createForOfIteratorHelper(compilation.chunks),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var chunk = _step2.value;\n              if (chunk.canBeInitial()) {\n                var _iterator4 = _createForOfIteratorHelper(chunkGraph.getChunkModulesIterable(chunk)),\n                  _step4;\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _module = _step4.value;\n                    if (_module.type === \"webassembly/sync\") {\n                      initialWasmModules.add(_module);\n                    }\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          var _iterator3 = _createForOfIteratorHelper(initialWasmModules),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _module2 = _step3.value;\n              compilation.errors.push(new WebAssemblyInInitialChunkError(_module2, compilation.moduleGraph, compilation.chunkGraph, compilation.requestShortener));\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        });\n      });\n    }\n  }]);\n  return WebAssemblyModulesPlugin;\n}();\nmodule.exports = WebAssemblyModulesPlugin;","map":{"version":3,"names":["Generator","require","WebAssemblyExportImportedDependency","WebAssemblyImportDependency","compareModulesByIdentifier","memoize","WebAssemblyInInitialChunkError","getWebAssemblyGenerator","getWebAssemblyJavascriptGenerator","getWebAssemblyParser","WebAssemblyModulesPlugin","options","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","createParser","for","WebAssemblyParser","createGenerator","WebAssemblyJavascriptGenerator","WebAssemblyGenerator","byType","javascript","webassembly","renderManifest","result","chunkGraph","chunk","outputOptions","codeGenerationResults","getOrderedChunkModulesIterable","module","type","filenameTemplate","webassemblyModuleFilename","push","render","getSource","runtime","pathOptions","auxiliary","identifier","getModuleId","hash","getModuleHash","afterChunks","initialWasmModules","Set","chunks","canBeInitial","getChunkModulesIterable","add","errors","moduleGraph","requestShortener","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/wasm-sync/WebAssemblyModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\nconst { compareModulesByIdentifier } = require(\"../util/comparators\");\nconst memoize = require(\"../util/memoize\");\nconst WebAssemblyInInitialChunkError = require(\"./WebAssemblyInInitialChunkError\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleTemplate\")} ModuleTemplate */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n\nconst getWebAssemblyGenerator = memoize(() =>\n\trequire(\"./WebAssemblyGenerator\")\n);\nconst getWebAssemblyJavascriptGenerator = memoize(() =>\n\trequire(\"./WebAssemblyJavascriptGenerator\")\n);\nconst getWebAssemblyParser = memoize(() => require(\"./WebAssemblyParser\"));\n\nclass WebAssemblyModulesPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"WebAssemblyModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tWebAssemblyImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tWebAssemblyExportImportedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"webassembly/sync\")\n\t\t\t\t\t.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\t\tconst WebAssemblyParser = getWebAssemblyParser();\n\n\t\t\t\t\t\treturn new WebAssemblyParser();\n\t\t\t\t\t});\n\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"webassembly/sync\")\n\t\t\t\t\t.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\t\tconst WebAssemblyJavascriptGenerator =\n\t\t\t\t\t\t\tgetWebAssemblyJavascriptGenerator();\n\t\t\t\t\t\tconst WebAssemblyGenerator = getWebAssemblyGenerator();\n\n\t\t\t\t\t\treturn Generator.byType({\n\t\t\t\t\t\t\tjavascript: new WebAssemblyJavascriptGenerator(),\n\t\t\t\t\t\t\twebassembly: new WebAssemblyGenerator(this.options)\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.renderManifest.tap(\n\t\t\t\t\t\"WebAssemblyModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\t\tconst { chunk, outputOptions, codeGenerationResults } = options;\n\n\t\t\t\t\t\tfor (const module of chunkGraph.getOrderedChunkModulesIterable(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tif (module.type === \"webassembly/sync\") {\n\t\t\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\t\t\toutputOptions.webassemblyModuleFilename;\n\n\t\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\t\t\tcodeGenerationResults.getSource(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\tchunk.runtime,\n\t\t\t\t\t\t\t\t\t\t\t\"webassembly\"\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tauxiliary: true,\n\t\t\t\t\t\t\t\t\tidentifier: `webassemblyModule${chunkGraph.getModuleId(\n\t\t\t\t\t\t\t\t\t\tmodule\n\t\t\t\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\t\t\thash: chunkGraph.getModuleHash(module, chunk.runtime)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.afterChunks.tap(\"WebAssemblyModulesPlugin\", () => {\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\tconst initialWasmModules = new Set();\n\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\tif (chunk.canBeInitial()) {\n\t\t\t\t\t\t\tfor (const module of chunkGraph.getChunkModulesIterable(chunk)) {\n\t\t\t\t\t\t\t\tif (module.type === \"webassembly/sync\") {\n\t\t\t\t\t\t\t\t\tinitialWasmModules.add(module);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const module of initialWasmModules) {\n\t\t\t\t\t\tcompilation.errors.push(\n\t\t\t\t\t\t\tnew WebAssemblyInInitialChunkError(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tcompilation.moduleGraph,\n\t\t\t\t\t\t\t\tcompilation.chunkGraph,\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = WebAssemblyModulesPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}