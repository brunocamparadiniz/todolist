{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar path = require(\"path\");\nvar DirectoryWatcher = require(\"./DirectoryWatcher\");\nvar WatcherManager = /*#__PURE__*/function () {\n  function WatcherManager(options) {\n    _classCallCheck(this, WatcherManager);\n    this.options = options;\n    this.directoryWatchers = new Map();\n  }\n  _createClass(WatcherManager, [{\n    key: \"getDirectoryWatcher\",\n    value: function getDirectoryWatcher(directory) {\n      var _this = this;\n      var watcher = this.directoryWatchers.get(directory);\n      if (watcher === undefined) {\n        var newWatcher = new DirectoryWatcher(this, directory, this.options);\n        this.directoryWatchers.set(directory, newWatcher);\n        newWatcher.on(\"closed\", function () {\n          _this.directoryWatchers.delete(directory);\n        });\n        return newWatcher;\n      }\n      return watcher;\n    }\n  }, {\n    key: \"watchFile\",\n    value: function watchFile(p, startTime) {\n      var directory = path.dirname(p);\n      if (directory === p) return null;\n      return this.getDirectoryWatcher(directory).watch(p, startTime);\n    }\n  }, {\n    key: \"watchDirectory\",\n    value: function watchDirectory(directory, startTime) {\n      return this.getDirectoryWatcher(directory).watch(directory, startTime);\n    }\n  }]);\n  return WatcherManager;\n}();\nvar watcherManagers = new WeakMap();\n/**\n * @param {object} options options\n * @returns {WatcherManager} the watcher manager\n */\nmodule.exports = function (options) {\n  var watcherManager = watcherManagers.get(options);\n  if (watcherManager !== undefined) return watcherManager;\n  var newWatcherManager = new WatcherManager(options);\n  watcherManagers.set(options, newWatcherManager);\n  return newWatcherManager;\n};\nmodule.exports.WatcherManager = WatcherManager;","map":{"version":3,"names":["path","require","DirectoryWatcher","WatcherManager","options","directoryWatchers","Map","directory","watcher","get","undefined","newWatcher","set","on","delete","p","startTime","dirname","getDirectoryWatcher","watch","watcherManagers","WeakMap","module","exports","watcherManager","newWatcherManager"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/watchpack/lib/getWatcherManager.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst DirectoryWatcher = require(\"./DirectoryWatcher\");\n\nclass WatcherManager {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t\tthis.directoryWatchers = new Map();\n\t}\n\n\tgetDirectoryWatcher(directory) {\n\t\tconst watcher = this.directoryWatchers.get(directory);\n\t\tif (watcher === undefined) {\n\t\t\tconst newWatcher = new DirectoryWatcher(this, directory, this.options);\n\t\t\tthis.directoryWatchers.set(directory, newWatcher);\n\t\t\tnewWatcher.on(\"closed\", () => {\n\t\t\t\tthis.directoryWatchers.delete(directory);\n\t\t\t});\n\t\t\treturn newWatcher;\n\t\t}\n\t\treturn watcher;\n\t}\n\n\twatchFile(p, startTime) {\n\t\tconst directory = path.dirname(p);\n\t\tif (directory === p) return null;\n\t\treturn this.getDirectoryWatcher(directory).watch(p, startTime);\n\t}\n\n\twatchDirectory(directory, startTime) {\n\t\treturn this.getDirectoryWatcher(directory).watch(directory, startTime);\n\t}\n}\n\nconst watcherManagers = new WeakMap();\n/**\n * @param {object} options options\n * @returns {WatcherManager} the watcher manager\n */\nmodule.exports = options => {\n\tconst watcherManager = watcherManagers.get(options);\n\tif (watcherManager !== undefined) return watcherManager;\n\tconst newWatcherManager = new WatcherManager(options);\n\twatcherManagers.set(options, newWatcherManager);\n\treturn newWatcherManager;\n};\nmodule.exports.WatcherManager = WatcherManager;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAAC,IAEjDE,cAAc;EACnB,wBAAYC,OAAO,EAAE;IAAA;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,iBAAiB,GAAG,IAAIC,GAAG,EAAE;EACnC;EAAC;IAAA;IAAA,OAED,6BAAoBC,SAAS,EAAE;MAAA;MAC9B,IAAMC,OAAO,GAAG,IAAI,CAACH,iBAAiB,CAACI,GAAG,CAACF,SAAS,CAAC;MACrD,IAAIC,OAAO,KAAKE,SAAS,EAAE;QAC1B,IAAMC,UAAU,GAAG,IAAIT,gBAAgB,CAAC,IAAI,EAAEK,SAAS,EAAE,IAAI,CAACH,OAAO,CAAC;QACtE,IAAI,CAACC,iBAAiB,CAACO,GAAG,CAACL,SAAS,EAAEI,UAAU,CAAC;QACjDA,UAAU,CAACE,EAAE,CAAC,QAAQ,EAAE,YAAM;UAC7B,KAAI,CAACR,iBAAiB,CAACS,MAAM,CAACP,SAAS,CAAC;QACzC,CAAC,CAAC;QACF,OAAOI,UAAU;MAClB;MACA,OAAOH,OAAO;IACf;EAAC;IAAA;IAAA,OAED,mBAAUO,CAAC,EAAEC,SAAS,EAAE;MACvB,IAAMT,SAAS,GAAGP,IAAI,CAACiB,OAAO,CAACF,CAAC,CAAC;MACjC,IAAIR,SAAS,KAAKQ,CAAC,EAAE,OAAO,IAAI;MAChC,OAAO,IAAI,CAACG,mBAAmB,CAACX,SAAS,CAAC,CAACY,KAAK,CAACJ,CAAC,EAAEC,SAAS,CAAC;IAC/D;EAAC;IAAA;IAAA,OAED,wBAAeT,SAAS,EAAES,SAAS,EAAE;MACpC,OAAO,IAAI,CAACE,mBAAmB,CAACX,SAAS,CAAC,CAACY,KAAK,CAACZ,SAAS,EAAES,SAAS,CAAC;IACvE;EAAC;EAAA;AAAA;AAGF,IAAMI,eAAe,GAAG,IAAIC,OAAO,EAAE;AACrC;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAAAnB,OAAO,EAAI;EAC3B,IAAMoB,cAAc,GAAGJ,eAAe,CAACX,GAAG,CAACL,OAAO,CAAC;EACnD,IAAIoB,cAAc,KAAKd,SAAS,EAAE,OAAOc,cAAc;EACvD,IAAMC,iBAAiB,GAAG,IAAItB,cAAc,CAACC,OAAO,CAAC;EACrDgB,eAAe,CAACR,GAAG,CAACR,OAAO,EAAEqB,iBAAiB,CAAC;EAC/C,OAAOA,iBAAiB;AACzB,CAAC;AACDH,MAAM,CAACC,OAAO,CAACpB,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}