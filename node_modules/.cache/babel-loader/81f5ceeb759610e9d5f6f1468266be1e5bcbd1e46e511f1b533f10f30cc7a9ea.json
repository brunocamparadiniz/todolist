{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nvar getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | Array<string>} field field\n   * @param {string | ResolveStepHook} target target\n   */\n  function AliasFieldPlugin(source, field, target) {\n    _classCallCheck(this, AliasFieldPlugin);\n    this.source = source;\n    this.field = field;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(AliasFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"AliasFieldPlugin\", function (request, resolveContext, callback) {\n        if (!request.descriptionFileData) return callback();\n        var innerRequest = getInnerRequest(resolver, request);\n        if (!innerRequest) return callback();\n        var fieldData = DescriptionFileUtils.getField(request.descriptionFileData, _this.field);\n        if (fieldData === null || typeof fieldData !== \"object\") {\n          if (resolveContext.log) resolveContext.log(\"Field '\" + _this.field + \"' doesn't contain a valid alias configuration\");\n          return callback();\n        }\n        var data = Object.prototype.hasOwnProperty.call(fieldData, innerRequest) ? fieldData[innerRequest] : innerRequest.startsWith(\"./\") ? fieldData[innerRequest.slice(2)] : undefined;\n        if (data === innerRequest) return callback();\n        if (data === undefined) return callback();\n        if (data === false) {\n          /** @type {ResolveRequest} */\n          var ignoreObj = _objectSpread(_objectSpread({}, request), {}, {\n            path: false\n          });\n          if (typeof resolveContext.yield === \"function\") {\n            resolveContext.yield(ignoreObj);\n            return callback(null, null);\n          }\n          return callback(null, ignoreObj);\n        }\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: request.descriptionFileRoot,\n          request: data,\n          fullySpecified: false\n        });\n        resolver.doResolve(target, obj, \"aliased from description file \" + request.descriptionFilePath + \" with mapping '\" + innerRequest + \"' to '\" + data + \"'\", resolveContext, function (err, result) {\n          if (err) return callback(err);\n\n          // Don't allow other aliasing or raw request\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    }\n  }]);\n  return AliasFieldPlugin;\n}();","map":{"version":3,"names":["DescriptionFileUtils","require","getInnerRequest","module","exports","source","field","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileData","innerRequest","fieldData","getField","log","data","Object","prototype","hasOwnProperty","call","startsWith","slice","undefined","ignoreObj","path","yield","obj","descriptionFileRoot","fullySpecified","doResolve","descriptionFilePath","err","result"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AliasFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} field field\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, field, target) {\n\t\tthis.source = source;\n\t\tthis.field = field;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.descriptionFileData) return callback();\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst fieldData = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.field\n\t\t\t\t);\n\t\t\t\tif (fieldData === null || typeof fieldData !== \"object\") {\n\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\"Field '\" +\n\t\t\t\t\t\t\t\tthis.field +\n\t\t\t\t\t\t\t\t\"' doesn't contain a valid alias configuration\"\n\t\t\t\t\t\t);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst data = Object.prototype.hasOwnProperty.call(\n\t\t\t\t\tfieldData,\n\t\t\t\t\tinnerRequest\n\t\t\t\t)\n\t\t\t\t\t? fieldData[innerRequest]\n\t\t\t\t\t: innerRequest.startsWith(\"./\")\n\t\t\t\t\t? fieldData[innerRequest.slice(2)]\n\t\t\t\t\t: undefined;\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t};\n\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data,\n\t\t\t\t\tfullySpecified: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}