{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _toConsumableArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar RuntimeModule = require(\"../RuntimeModule\");\nvar Template = require(\"../Template\");\nvar _require = require(\"../util/comparators\"),\n  compareModulesByIdentifier = _require.compareModulesByIdentifier;\nvar WebAssemblyUtils = require(\"./WebAssemblyUtils\");\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n// TODO webpack 6 remove the whole folder\n\n// Get all wasm modules\nvar getAllWasmModules = function getAllWasmModules(moduleGraph, chunkGraph, chunk) {\n  var wasmModules = chunk.getAllAsyncChunks();\n  var array = [];\n  var _iterator = _createForOfIteratorHelper(wasmModules),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _chunk = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(chunkGraph.getOrderedChunkModulesIterable(_chunk, compareModulesByIdentifier)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var m = _step2.value;\n          if (m.type.startsWith(\"webassembly\")) {\n            array.push(m);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return array;\n};\n\n/**\n * generates the import object function for a module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} module the module\n * @param {boolean} mangle mangle imports\n * @param {string[]} declarations array where declarations are pushed to\n * @param {RuntimeSpec} runtime the runtime\n * @returns {string} source code\n */\nvar generateImportObject = function generateImportObject(chunkGraph, module, mangle, declarations, runtime) {\n  var moduleGraph = chunkGraph.moduleGraph;\n  var waitForInstances = new Map();\n  var properties = [];\n  var usedWasmDependencies = WebAssemblyUtils.getUsedDependencies(moduleGraph, module, mangle);\n  var _iterator3 = _createForOfIteratorHelper(usedWasmDependencies),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var usedDep = _step3.value;\n      var dep = usedDep.dependency;\n      var importedModule = moduleGraph.getModule(dep);\n      var exportName = dep.name;\n      var usedName = importedModule && moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n      var description = dep.description;\n      var direct = dep.onlyDirectImport;\n      var _module = usedDep.module;\n      var name = usedDep.name;\n      if (direct) {\n        var instanceVar = \"m\".concat(waitForInstances.size);\n        waitForInstances.set(instanceVar, chunkGraph.getModuleId(importedModule));\n        properties.push({\n          module: _module,\n          name: name,\n          value: \"\".concat(instanceVar, \"[\").concat(JSON.stringify(usedName), \"]\")\n        });\n      } else {\n        var params = description.signature.params.map(function (param, k) {\n          return \"p\" + k + param.valtype;\n        });\n        var mod = \"\".concat(RuntimeGlobals.moduleCache, \"[\").concat(JSON.stringify(chunkGraph.getModuleId(importedModule)), \"]\");\n        var modExports = \"\".concat(mod, \".exports\");\n        var cache = \"wasmImportedFuncCache\".concat(declarations.length);\n        declarations.push(\"var \".concat(cache, \";\"));\n        properties.push({\n          module: _module,\n          name: name,\n          value: Template.asString([(importedModule.type.startsWith(\"webassembly\") ? \"\".concat(mod, \" ? \").concat(modExports, \"[\").concat(JSON.stringify(usedName), \"] : \") : \"\") + \"function(\".concat(params, \") {\"), Template.indent([\"if(\".concat(cache, \" === undefined) \").concat(cache, \" = \").concat(modExports, \";\"), \"return \".concat(cache, \"[\").concat(JSON.stringify(usedName), \"](\").concat(params, \");\")]), \"}\"])\n        });\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var importObject;\n  if (mangle) {\n    importObject = [\"return {\", Template.indent([properties.map(function (p) {\n      return \"\".concat(JSON.stringify(p.name), \": \").concat(p.value);\n    }).join(\",\\n\")]), \"};\"];\n  } else {\n    var propertiesByModule = new Map();\n    var _iterator4 = _createForOfIteratorHelper(properties),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var p = _step4.value;\n        var list = propertiesByModule.get(p.module);\n        if (list === undefined) {\n          propertiesByModule.set(p.module, list = []);\n        }\n        list.push(p);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    importObject = [\"return {\", Template.indent([Array.from(propertiesByModule, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        module = _ref2[0],\n        list = _ref2[1];\n      return Template.asString([\"\".concat(JSON.stringify(module), \": {\"), Template.indent([list.map(function (p) {\n        return \"\".concat(JSON.stringify(p.name), \": \").concat(p.value);\n      }).join(\",\\n\")]), \"}\"]);\n    }).join(\",\\n\")]), \"};\"];\n  }\n  var moduleIdStringified = JSON.stringify(chunkGraph.getModuleId(module));\n  if (waitForInstances.size === 1) {\n    var moduleId = Array.from(waitForInstances.values())[0];\n    var promise = \"installedWasmModules[\".concat(JSON.stringify(moduleId), \"]\");\n    var variable = Array.from(waitForInstances.keys())[0];\n    return Template.asString([\"\".concat(moduleIdStringified, \": function() {\"), Template.indent([\"return promiseResolve().then(function() { return \".concat(promise, \"; }).then(function(\").concat(variable, \") {\"), Template.indent(importObject), \"});\"]), \"},\"]);\n  } else if (waitForInstances.size > 0) {\n    var promises = Array.from(waitForInstances.values(), function (id) {\n      return \"installedWasmModules[\".concat(JSON.stringify(id), \"]\");\n    }).join(\", \");\n    var variables = Array.from(waitForInstances.keys(), function (name, i) {\n      return \"\".concat(name, \" = array[\").concat(i, \"]\");\n    }).join(\", \");\n    return Template.asString([\"\".concat(moduleIdStringified, \": function() {\"), Template.indent([\"return promiseResolve().then(function() { return Promise.all([\".concat(promises, \"]); }).then(function(array) {\"), Template.indent([\"var \".concat(variables, \";\")].concat(_toConsumableArray(importObject))), \"});\"]), \"},\"]);\n  } else {\n    return Template.asString([\"\".concat(moduleIdStringified, \": function() {\"), Template.indent(importObject), \"},\"]);\n  }\n};\nvar WasmChunkLoadingRuntimeModule = /*#__PURE__*/function (_RuntimeModule) {\n  _inherits(WasmChunkLoadingRuntimeModule, _RuntimeModule);\n  var _super = _createSuper(WasmChunkLoadingRuntimeModule);\n  function WasmChunkLoadingRuntimeModule(_ref3) {\n    var _this;\n    var generateLoadBinaryCode = _ref3.generateLoadBinaryCode,\n      supportsStreaming = _ref3.supportsStreaming,\n      mangleImports = _ref3.mangleImports,\n      runtimeRequirements = _ref3.runtimeRequirements;\n    _classCallCheck(this, WasmChunkLoadingRuntimeModule);\n    _this = _super.call(this, \"wasm chunk loading\", RuntimeModule.STAGE_ATTACH);\n    _this.generateLoadBinaryCode = generateLoadBinaryCode;\n    _this.supportsStreaming = supportsStreaming;\n    _this.mangleImports = mangleImports;\n    _this._runtimeRequirements = runtimeRequirements;\n    return _this;\n  }\n\n  /**\n   * @returns {string} runtime code\n   */\n  _createClass(WasmChunkLoadingRuntimeModule, [{\n    key: \"generate\",\n    value: function generate() {\n      var _this2 = this;\n      var chunkGraph = this.chunkGraph,\n        compilation = this.compilation,\n        chunk = this.chunk,\n        mangleImports = this.mangleImports;\n      var moduleGraph = compilation.moduleGraph,\n        outputOptions = compilation.outputOptions;\n      var fn = RuntimeGlobals.ensureChunkHandlers;\n      var withHmr = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n      var wasmModules = getAllWasmModules(moduleGraph, chunkGraph, chunk);\n      var declarations = [];\n      var importObjects = wasmModules.map(function (module) {\n        return generateImportObject(chunkGraph, module, _this2.mangleImports, declarations, chunk.runtime);\n      });\n      var chunkModuleIdMap = chunkGraph.getChunkModuleIdMap(chunk, function (m) {\n        return m.type.startsWith(\"webassembly\");\n      });\n      var createImportObject = function createImportObject(content) {\n        return mangleImports ? \"{ \".concat(JSON.stringify(WebAssemblyUtils.MANGLED_MODULE), \": \").concat(content, \" }\") : content;\n      };\n      var wasmModuleSrcPath = compilation.getPath(JSON.stringify(outputOptions.webassemblyModuleFilename), {\n        hash: \"\\\" + \".concat(RuntimeGlobals.getFullHash, \"() + \\\"\"),\n        hashWithLength: function hashWithLength(length) {\n          return \"\\\" + \".concat(RuntimeGlobals.getFullHash, \"}().slice(0, \").concat(length, \") + \\\"\");\n        },\n        module: {\n          id: '\" + wasmModuleId + \"',\n          hash: \"\\\" + \".concat(JSON.stringify(chunkGraph.getChunkModuleRenderedHashMap(chunk, function (m) {\n            return m.type.startsWith(\"webassembly\");\n          })), \"[chunkId][wasmModuleId] + \\\"\"),\n          hashWithLength: function hashWithLength(length) {\n            return \"\\\" + \".concat(JSON.stringify(chunkGraph.getChunkModuleRenderedHashMap(chunk, function (m) {\n              return m.type.startsWith(\"webassembly\");\n            }, length)), \"[chunkId][wasmModuleId] + \\\"\");\n          }\n        },\n        runtime: chunk.runtime\n      });\n      var stateExpression = withHmr ? \"\".concat(RuntimeGlobals.hmrRuntimeStatePrefix, \"_wasm\") : undefined;\n      return Template.asString([\"// object to store loaded and loading wasm modules\", \"var installedWasmModules = \".concat(stateExpression ? \"\".concat(stateExpression, \" = \").concat(stateExpression, \" || \") : \"\", \"{};\"), \"\",\n      // This function is used to delay reading the installed wasm module promises\n      // by a microtask. Sorting them doesn't help because there are edge cases where\n      // sorting is not possible (modules splitted into different chunks).\n      // So we not even trying and solve this by a microtask delay.\n      \"function promiseResolve() { return Promise.resolve(); }\", \"\", Template.asString(declarations), \"var wasmImportObjects = {\", Template.indent(importObjects), \"};\", \"\", \"var wasmModuleMap = \".concat(JSON.stringify(chunkModuleIdMap, undefined, \"\\t\"), \";\"), \"\", \"// object with all WebAssembly.instance exports\", \"\".concat(RuntimeGlobals.wasmInstances, \" = {};\"), \"\", \"// Fetch + compile chunk loading for webassembly\", \"\".concat(fn, \".wasm = function(chunkId, promises) {\"), Template.indent([\"\", \"var wasmModules = wasmModuleMap[chunkId] || [];\", \"\", \"wasmModules.forEach(function(wasmModuleId, idx) {\", Template.indent([\"var installedWasmModuleData = installedWasmModules[wasmModuleId];\", \"\", '// a Promise means \"currently loading\" or \"already loaded\".', \"if(installedWasmModuleData)\", Template.indent([\"promises.push(installedWasmModuleData);\"]), \"else {\", Template.indent([\"var importObject = wasmImportObjects[wasmModuleId]();\", \"var req = \".concat(this.generateLoadBinaryCode(wasmModuleSrcPath), \";\"), \"var promise;\", this.supportsStreaming ? Template.asString([\"if(importObject && typeof importObject.then === 'function' && typeof WebAssembly.compileStreaming === 'function') {\", Template.indent([\"promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\", Template.indent([\"return WebAssembly.instantiate(items[0], \".concat(createImportObject(\"items[1]\"), \");\")]), \"});\"]), \"} else if(typeof WebAssembly.instantiateStreaming === 'function') {\", Template.indent([\"promise = WebAssembly.instantiateStreaming(req, \".concat(createImportObject(\"importObject\"), \");\")])]) : Template.asString([\"if(importObject && typeof importObject.then === 'function') {\", Template.indent([\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\", \"promise = Promise.all([\", Template.indent([\"bytesPromise.then(function(bytes) { return WebAssembly.compile(bytes); }),\", \"importObject\"]), \"]).then(function(items) {\", Template.indent([\"return WebAssembly.instantiate(items[0], \".concat(createImportObject(\"items[1]\"), \");\")]), \"});\"])]), \"} else {\", Template.indent([\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\", \"promise = bytesPromise.then(function(bytes) {\", Template.indent([\"return WebAssembly.instantiate(bytes, \".concat(createImportObject(\"importObject\"), \");\")]), \"});\"]), \"}\", \"promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\", Template.indent([\"return \".concat(RuntimeGlobals.wasmInstances, \"[wasmModuleId] = (res.instance || res).exports;\")]), \"}));\"]), \"}\"]), \"});\"]), \"};\"]);\n    }\n  }]);\n  return WasmChunkLoadingRuntimeModule;\n}(RuntimeModule);\nmodule.exports = WasmChunkLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","compareModulesByIdentifier","WebAssemblyUtils","getAllWasmModules","moduleGraph","chunkGraph","chunk","wasmModules","getAllAsyncChunks","array","getOrderedChunkModulesIterable","m","type","startsWith","push","generateImportObject","module","mangle","declarations","runtime","waitForInstances","Map","properties","usedWasmDependencies","getUsedDependencies","usedDep","dep","dependency","importedModule","getModule","exportName","name","usedName","getExportsInfo","getUsedName","description","direct","onlyDirectImport","instanceVar","size","set","getModuleId","value","JSON","stringify","params","signature","map","param","k","valtype","mod","moduleCache","modExports","cache","length","asString","indent","importObject","p","join","propertiesByModule","list","get","undefined","Array","from","moduleIdStringified","moduleId","values","promise","variable","keys","promises","id","variables","i","WasmChunkLoadingRuntimeModule","generateLoadBinaryCode","supportsStreaming","mangleImports","runtimeRequirements","STAGE_ATTACH","_runtimeRequirements","compilation","outputOptions","fn","ensureChunkHandlers","withHmr","has","hmrDownloadUpdateHandlers","importObjects","chunkModuleIdMap","getChunkModuleIdMap","createImportObject","content","MANGLED_MODULE","wasmModuleSrcPath","getPath","webassemblyModuleFilename","hash","getFullHash","hashWithLength","getChunkModuleRenderedHashMap","stateExpression","hmrRuntimeStatePrefix","wasmInstances","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/wasm-sync/WasmChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst { compareModulesByIdentifier } = require(\"../util/comparators\");\nconst WebAssemblyUtils = require(\"./WebAssemblyUtils\");\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n// TODO webpack 6 remove the whole folder\n\n// Get all wasm modules\nconst getAllWasmModules = (moduleGraph, chunkGraph, chunk) => {\n\tconst wasmModules = chunk.getAllAsyncChunks();\n\tconst array = [];\n\tfor (const chunk of wasmModules) {\n\t\tfor (const m of chunkGraph.getOrderedChunkModulesIterable(\n\t\t\tchunk,\n\t\t\tcompareModulesByIdentifier\n\t\t)) {\n\t\t\tif (m.type.startsWith(\"webassembly\")) {\n\t\t\t\tarray.push(m);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn array;\n};\n\n/**\n * generates the import object function for a module\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} module the module\n * @param {boolean} mangle mangle imports\n * @param {string[]} declarations array where declarations are pushed to\n * @param {RuntimeSpec} runtime the runtime\n * @returns {string} source code\n */\nconst generateImportObject = (\n\tchunkGraph,\n\tmodule,\n\tmangle,\n\tdeclarations,\n\truntime\n) => {\n\tconst moduleGraph = chunkGraph.moduleGraph;\n\tconst waitForInstances = new Map();\n\tconst properties = [];\n\tconst usedWasmDependencies = WebAssemblyUtils.getUsedDependencies(\n\t\tmoduleGraph,\n\t\tmodule,\n\t\tmangle\n\t);\n\tfor (const usedDep of usedWasmDependencies) {\n\t\tconst dep = usedDep.dependency;\n\t\tconst importedModule = moduleGraph.getModule(dep);\n\t\tconst exportName = dep.name;\n\t\tconst usedName =\n\t\t\timportedModule &&\n\t\t\tmoduleGraph\n\t\t\t\t.getExportsInfo(importedModule)\n\t\t\t\t.getUsedName(exportName, runtime);\n\t\tconst description = dep.description;\n\t\tconst direct = dep.onlyDirectImport;\n\n\t\tconst module = usedDep.module;\n\t\tconst name = usedDep.name;\n\n\t\tif (direct) {\n\t\t\tconst instanceVar = `m${waitForInstances.size}`;\n\t\t\twaitForInstances.set(instanceVar, chunkGraph.getModuleId(importedModule));\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: `${instanceVar}[${JSON.stringify(usedName)}]`\n\t\t\t});\n\t\t} else {\n\t\t\tconst params = description.signature.params.map(\n\t\t\t\t(param, k) => \"p\" + k + param.valtype\n\t\t\t);\n\n\t\t\tconst mod = `${RuntimeGlobals.moduleCache}[${JSON.stringify(\n\t\t\t\tchunkGraph.getModuleId(importedModule)\n\t\t\t)}]`;\n\t\t\tconst modExports = `${mod}.exports`;\n\n\t\t\tconst cache = `wasmImportedFuncCache${declarations.length}`;\n\t\t\tdeclarations.push(`var ${cache};`);\n\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: Template.asString([\n\t\t\t\t\t(importedModule.type.startsWith(\"webassembly\")\n\t\t\t\t\t\t? `${mod} ? ${modExports}[${JSON.stringify(usedName)}] : `\n\t\t\t\t\t\t: \"\") + `function(${params}) {`,\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t`if(${cache} === undefined) ${cache} = ${modExports};`,\n\t\t\t\t\t\t`return ${cache}[${JSON.stringify(usedName)}](${params});`\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\"\n\t\t\t\t])\n\t\t\t});\n\t\t}\n\t}\n\n\tlet importObject;\n\tif (mangle) {\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tproperties.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t} else {\n\t\tconst propertiesByModule = new Map();\n\t\tfor (const p of properties) {\n\t\t\tlet list = propertiesByModule.get(p.module);\n\t\t\tif (list === undefined) {\n\t\t\t\tpropertiesByModule.set(p.module, (list = []));\n\t\t\t}\n\t\t\tlist.push(p);\n\t\t}\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tArray.from(propertiesByModule, ([module, list]) => {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t`${JSON.stringify(module)}: {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tlist.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t}).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t}\n\n\tconst moduleIdStringified = JSON.stringify(chunkGraph.getModuleId(module));\n\tif (waitForInstances.size === 1) {\n\t\tconst moduleId = Array.from(waitForInstances.values())[0];\n\t\tconst promise = `installedWasmModules[${JSON.stringify(moduleId)}]`;\n\t\tconst variable = Array.from(waitForInstances.keys())[0];\n\t\treturn Template.asString([\n\t\t\t`${moduleIdStringified}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return ${promise}; }).then(function(${variable}) {`,\n\t\t\t\tTemplate.indent(importObject),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else if (waitForInstances.size > 0) {\n\t\tconst promises = Array.from(\n\t\t\twaitForInstances.values(),\n\t\t\tid => `installedWasmModules[${JSON.stringify(id)}]`\n\t\t).join(\", \");\n\t\tconst variables = Array.from(\n\t\t\twaitForInstances.keys(),\n\t\t\t(name, i) => `${name} = array[${i}]`\n\t\t).join(\", \");\n\t\treturn Template.asString([\n\t\t\t`${moduleIdStringified}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return Promise.all([${promises}]); }).then(function(array) {`,\n\t\t\t\tTemplate.indent([`var ${variables};`, ...importObject]),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else {\n\t\treturn Template.asString([\n\t\t\t`${moduleIdStringified}: function() {`,\n\t\t\tTemplate.indent(importObject),\n\t\t\t\"},\"\n\t\t]);\n\t}\n};\n\nclass WasmChunkLoadingRuntimeModule extends RuntimeModule {\n\tconstructor({\n\t\tgenerateLoadBinaryCode,\n\t\tsupportsStreaming,\n\t\tmangleImports,\n\t\truntimeRequirements\n\t}) {\n\t\tsuper(\"wasm chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.generateLoadBinaryCode = generateLoadBinaryCode;\n\t\tthis.supportsStreaming = supportsStreaming;\n\t\tthis.mangleImports = mangleImports;\n\t\tthis._runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, compilation, chunk, mangleImports } = this;\n\t\tconst { moduleGraph, outputOptions } = compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withHmr = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst wasmModules = getAllWasmModules(moduleGraph, chunkGraph, chunk);\n\t\tconst declarations = [];\n\t\tconst importObjects = wasmModules.map(module => {\n\t\t\treturn generateImportObject(\n\t\t\t\tchunkGraph,\n\t\t\t\tmodule,\n\t\t\t\tthis.mangleImports,\n\t\t\t\tdeclarations,\n\t\t\t\tchunk.runtime\n\t\t\t);\n\t\t});\n\t\tconst chunkModuleIdMap = chunkGraph.getChunkModuleIdMap(chunk, m =>\n\t\t\tm.type.startsWith(\"webassembly\")\n\t\t);\n\t\tconst createImportObject = content =>\n\t\t\tmangleImports\n\t\t\t\t? `{ ${JSON.stringify(WebAssemblyUtils.MANGLED_MODULE)}: ${content} }`\n\t\t\t\t: content;\n\t\tconst wasmModuleSrcPath = compilation.getPath(\n\t\t\tJSON.stringify(outputOptions.webassemblyModuleFilename),\n\t\t\t{\n\t\t\t\thash: `\" + ${RuntimeGlobals.getFullHash}() + \"`,\n\t\t\t\thashWithLength: length =>\n\t\t\t\t\t`\" + ${RuntimeGlobals.getFullHash}}().slice(0, ${length}) + \"`,\n\t\t\t\tmodule: {\n\t\t\t\t\tid: '\" + wasmModuleId + \"',\n\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\tchunkGraph.getChunkModuleRenderedHashMap(chunk, m =>\n\t\t\t\t\t\t\tm.type.startsWith(\"webassembly\")\n\t\t\t\t\t\t)\n\t\t\t\t\t)}[chunkId][wasmModuleId] + \"`,\n\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\tchunkGraph.getChunkModuleRenderedHashMap(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tm => m.type.startsWith(\"webassembly\"),\n\t\t\t\t\t\t\t\tlength\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}[chunkId][wasmModuleId] + \"`;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\truntime: chunk.runtime\n\t\t\t}\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_wasm`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\t\"// object to store loaded and loading wasm modules\",\n\t\t\t`var installedWasmModules = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{};`,\n\t\t\t\"\",\n\t\t\t// This function is used to delay reading the installed wasm module promises\n\t\t\t// by a microtask. Sorting them doesn't help because there are edge cases where\n\t\t\t// sorting is not possible (modules splitted into different chunks).\n\t\t\t// So we not even trying and solve this by a microtask delay.\n\t\t\t\"function promiseResolve() { return Promise.resolve(); }\",\n\t\t\t\"\",\n\t\t\tTemplate.asString(declarations),\n\t\t\t\"var wasmImportObjects = {\",\n\t\t\tTemplate.indent(importObjects),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\t`var wasmModuleMap = ${JSON.stringify(\n\t\t\t\tchunkModuleIdMap,\n\t\t\t\tundefined,\n\t\t\t\t\"\\t\"\n\t\t\t)};`,\n\t\t\t\"\",\n\t\t\t\"// object with all WebAssembly.instance exports\",\n\t\t\t`${RuntimeGlobals.wasmInstances} = {};`,\n\t\t\t\"\",\n\t\t\t\"// Fetch + compile chunk loading for webassembly\",\n\t\t\t`${fn}.wasm = function(chunkId, promises) {`,\n\t\t\tTemplate.indent([\n\t\t\t\t\"\",\n\t\t\t\t`var wasmModules = wasmModuleMap[chunkId] || [];`,\n\t\t\t\t\"\",\n\t\t\t\t\"wasmModules.forEach(function(wasmModuleId, idx) {\",\n\t\t\t\tTemplate.indent([\n\t\t\t\t\t\"var installedWasmModuleData = installedWasmModules[wasmModuleId];\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t'// a Promise means \"currently loading\" or \"already loaded\".',\n\t\t\t\t\t\"if(installedWasmModuleData)\",\n\t\t\t\t\tTemplate.indent([\"promises.push(installedWasmModuleData);\"]),\n\t\t\t\t\t\"else {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t`var importObject = wasmImportObjects[wasmModuleId]();`,\n\t\t\t\t\t\t`var req = ${this.generateLoadBinaryCode(wasmModuleSrcPath)};`,\n\t\t\t\t\t\t\"var promise;\",\n\t\t\t\t\t\tthis.supportsStreaming\n\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\"if(importObject && typeof importObject.then === 'function' && typeof WebAssembly.compileStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"} else if(typeof WebAssembly.instantiateStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`promise = WebAssembly.instantiateStreaming(req, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\t\t\"if(importObject && typeof importObject.then === 'function') {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"bytesPromise.then(function(bytes) { return WebAssembly.compile(bytes); }),\",\n\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t  ]),\n\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\"promise = bytesPromise.then(function(bytes) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(bytes, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`return ${RuntimeGlobals.wasmInstances}[wasmModuleId] = (res.instance || res).exports;`\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}));\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"}\"\n\t\t\t\t]),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"};\"\n\t\t]);\n\t}\n}\n\nmodule.exports = WasmChunkLoadingRuntimeModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}