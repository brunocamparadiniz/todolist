{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ContextElementDependency = require(\"./ContextElementDependency\");\nvar ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nvar ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar ImportMetaContextPlugin = /*#__PURE__*/function () {\n  function ImportMetaContextPlugin() {\n    _classCallCheck(this, ImportMetaContextPlugin);\n  }\n  _createClass(ImportMetaContextPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"RequireContextPlugin\", function (compilation, _ref) {\n        var contextModuleFactory = _ref.contextModuleFactory,\n          normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ImportMetaContextDependency, contextModuleFactory);\n        compilation.dependencyTemplates.set(ImportMetaContextDependency, new ImportMetaContextDependency.Template());\n        compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.importMetaContext !== undefined && !parserOptions.importMetaContext) return;\n          new ImportMetaContextDependencyParserPlugin().apply(parser);\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportMetaContextPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportMetaContextPlugin\", handler);\n      });\n    }\n  }]);\n  return ImportMetaContextPlugin;\n}();\nmodule.exports = ImportMetaContextPlugin;","map":{"version":3,"names":["ContextElementDependency","require","ImportMetaContextDependency","ImportMetaContextDependencyParserPlugin","ImportMetaContextPlugin","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","importMetaContext","undefined","apply","for","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/ImportMetaContextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ImportMetaContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"RequireContextPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tnew ImportMetaContextDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.importMetaContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.importMetaContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportMetaContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ImportMetaContextPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaContextPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACtE,IAAMC,2BAA2B,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAC5E,IAAME,uCAAuC,GAAGF,OAAO,CAAC,2CAA2C,CAAC;;AAEpG;AACA;AAAA,IAEMG,uBAAuB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC5B;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,sBAAsB,EACtB,UAACD,WAAW,QAAoD;QAAA,IAAhDE,oBAAoB,QAApBA,oBAAoB;UAAEC,mBAAmB,QAAnBA,mBAAmB;QACxDH,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCV,2BAA2B,EAC3BO,oBAAoB,CACpB;QACDF,WAAW,CAACM,mBAAmB,CAACD,GAAG,CAClCV,2BAA2B,EAC3B,IAAIA,2BAA2B,CAACY,QAAQ,EAAE,CAC1C;QACDP,WAAW,CAACI,mBAAmB,CAACC,GAAG,CAClCZ,wBAAwB,EACxBU,mBAAmB,CACnB;QAED,IAAMK,OAAO,GAAG,SAAVA,OAAO,CAAIC,MAAM,EAAEC,aAAa,EAAK;UAC1C,IACCA,aAAa,CAACC,iBAAiB,KAAKC,SAAS,IAC7C,CAACF,aAAa,CAACC,iBAAiB,EAEhC;UAED,IAAIf,uCAAuC,EAAE,CAACiB,KAAK,CAACJ,MAAM,CAAC;QAC5D,CAAC;QAEDN,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAAC,iBAAiB,CAAC,CACtBb,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;QACzCL,mBAAmB,CAACJ,KAAK,CAACU,MAAM,CAC9BK,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CAAC,yBAAyB,EAAEO,OAAO,CAAC;MAC1C,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFO,MAAM,CAACC,OAAO,GAAGnB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}