{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar Template = require(\"../Template\");\nvar _require = require(\"../util/SetHelpers\"),\n  isSubset = _require.isSubset;\nvar _require2 = require(\"./ChunkHelpers\"),\n  getAllChunks = _require2.getAllChunks;\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGraph\").EntryModuleWithChunkGroup} EntryModuleWithChunkGroup */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {(string|number)[]} EntryItem */\n\nvar EXPORT_PREFIX = \"var __webpack_exports__ = \";\n\n/**\n * @param {ChunkGraph} chunkGraph chunkGraph\n * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n * @param {EntryModuleWithChunkGroup[]} entries entries\n * @param {Chunk} chunk chunk\n * @param {boolean} passive true: passive startup with on chunks loaded\n * @returns {string} runtime code\n */\nexports.generateEntryStartup = function (chunkGraph, runtimeTemplate, entries, chunk, passive) {\n  /** @type {string[]} */\n  var runtime = [\"var __webpack_exec__ = \".concat(runtimeTemplate.returningFunction(\"__webpack_require__(\".concat(RuntimeGlobals.entryModuleId, \" = moduleId)\"), \"moduleId\"))];\n  var runModule = function runModule(id) {\n    return \"__webpack_exec__(\".concat(JSON.stringify(id), \")\");\n  };\n  var outputCombination = function outputCombination(chunks, moduleIds, final) {\n    if (chunks.size === 0) {\n      runtime.push(\"\".concat(final ? EXPORT_PREFIX : \"\", \"(\").concat(moduleIds.map(runModule).join(\", \"), \");\"));\n    } else {\n      var fn = runtimeTemplate.returningFunction(moduleIds.map(runModule).join(\", \"));\n      runtime.push(\"\".concat(final && !passive ? EXPORT_PREFIX : \"\").concat(passive ? RuntimeGlobals.onChunksLoaded : RuntimeGlobals.startupEntrypoint, \"(0, \").concat(JSON.stringify(Array.from(chunks, function (c) {\n        return c.id;\n      })), \", \").concat(fn, \");\"));\n      if (final && passive) {\n        runtime.push(\"\".concat(EXPORT_PREFIX).concat(RuntimeGlobals.onChunksLoaded, \"();\"));\n      }\n    }\n  };\n  var currentChunks = undefined;\n  var currentModuleIds = undefined;\n  var _iterator = _createForOfIteratorHelper(entries),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        module = _step$value[0],\n        entrypoint = _step$value[1];\n      var runtimeChunk = entrypoint.getRuntimeChunk();\n      var moduleId = chunkGraph.getModuleId(module);\n      var chunks = getAllChunks(entrypoint, chunk, runtimeChunk);\n      if (currentChunks && currentChunks.size === chunks.size && isSubset(currentChunks, chunks)) {\n        currentModuleIds.push(moduleId);\n      } else {\n        if (currentChunks) {\n          outputCombination(currentChunks, currentModuleIds);\n        }\n        currentChunks = chunks;\n        currentModuleIds = [moduleId];\n      }\n    }\n\n    // output current modules with export prefix\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (currentChunks) {\n    outputCombination(currentChunks, currentModuleIds, true);\n  }\n  runtime.push(\"\");\n  return Template.asString(runtime);\n};\n\n/**\n * @param {Hash} hash the hash to update\n * @param {ChunkGraph} chunkGraph chunkGraph\n * @param {EntryModuleWithChunkGroup[]} entries entries\n * @param {Chunk} chunk chunk\n * @returns {void}\n */\nexports.updateHashForEntryStartup = function (hash, chunkGraph, entries, chunk) {\n  var _iterator2 = _createForOfIteratorHelper(entries),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n        module = _step2$value[0],\n        entrypoint = _step2$value[1];\n      var runtimeChunk = entrypoint.getRuntimeChunk();\n      var moduleId = chunkGraph.getModuleId(module);\n      hash.update(\"\".concat(moduleId));\n      var _iterator3 = _createForOfIteratorHelper(getAllChunks(entrypoint, chunk, runtimeChunk)),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var c = _step3.value;\n          hash.update(\"\".concat(c.id));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n};\n\n/**\n * @param {Chunk} chunk the chunk\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {function(Chunk, ChunkGraph): boolean} filterFn filter function\n * @returns {Set<number | string>} initially fulfilled chunk ids\n */\nexports.getInitialChunkIds = function (chunk, chunkGraph, filterFn) {\n  var initialChunkIds = new Set(chunk.ids);\n  var _iterator4 = _createForOfIteratorHelper(chunk.getAllInitialChunks()),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var c = _step4.value;\n      if (c === chunk || filterFn(c, chunkGraph)) continue;\n      var _iterator5 = _createForOfIteratorHelper(c.ids),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var id = _step5.value;\n          initialChunkIds.add(id);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return initialChunkIds;\n};","map":{"version":3,"names":["RuntimeGlobals","require","Template","isSubset","getAllChunks","EXPORT_PREFIX","exports","generateEntryStartup","chunkGraph","runtimeTemplate","entries","chunk","passive","runtime","returningFunction","entryModuleId","runModule","id","JSON","stringify","outputCombination","chunks","moduleIds","final","size","push","map","join","fn","onChunksLoaded","startupEntrypoint","Array","from","c","currentChunks","undefined","currentModuleIds","module","entrypoint","runtimeChunk","getRuntimeChunk","moduleId","getModuleId","asString","updateHashForEntryStartup","hash","update","getInitialChunkIds","filterFn","initialChunkIds","Set","ids","getAllInitialChunks","add"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/javascript/StartupHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst { isSubset } = require(\"../util/SetHelpers\");\nconst { getAllChunks } = require(\"./ChunkHelpers\");\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGraph\").EntryModuleWithChunkGroup} EntryModuleWithChunkGroup */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {(string|number)[]} EntryItem */\n\nconst EXPORT_PREFIX = \"var __webpack_exports__ = \";\n\n/**\n * @param {ChunkGraph} chunkGraph chunkGraph\n * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate\n * @param {EntryModuleWithChunkGroup[]} entries entries\n * @param {Chunk} chunk chunk\n * @param {boolean} passive true: passive startup with on chunks loaded\n * @returns {string} runtime code\n */\nexports.generateEntryStartup = (\n\tchunkGraph,\n\truntimeTemplate,\n\tentries,\n\tchunk,\n\tpassive\n) => {\n\t/** @type {string[]} */\n\tconst runtime = [\n\t\t`var __webpack_exec__ = ${runtimeTemplate.returningFunction(\n\t\t\t`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`,\n\t\t\t\"moduleId\"\n\t\t)}`\n\t];\n\n\tconst runModule = id => {\n\t\treturn `__webpack_exec__(${JSON.stringify(id)})`;\n\t};\n\tconst outputCombination = (chunks, moduleIds, final) => {\n\t\tif (chunks.size === 0) {\n\t\t\truntime.push(\n\t\t\t\t`${final ? EXPORT_PREFIX : \"\"}(${moduleIds.map(runModule).join(\", \")});`\n\t\t\t);\n\t\t} else {\n\t\t\tconst fn = runtimeTemplate.returningFunction(\n\t\t\t\tmoduleIds.map(runModule).join(\", \")\n\t\t\t);\n\t\t\truntime.push(\n\t\t\t\t`${final && !passive ? EXPORT_PREFIX : \"\"}${\n\t\t\t\t\tpassive\n\t\t\t\t\t\t? RuntimeGlobals.onChunksLoaded\n\t\t\t\t\t\t: RuntimeGlobals.startupEntrypoint\n\t\t\t\t}(0, ${JSON.stringify(Array.from(chunks, c => c.id))}, ${fn});`\n\t\t\t);\n\t\t\tif (final && passive) {\n\t\t\t\truntime.push(`${EXPORT_PREFIX}${RuntimeGlobals.onChunksLoaded}();`);\n\t\t\t}\n\t\t}\n\t};\n\n\tlet currentChunks = undefined;\n\tlet currentModuleIds = undefined;\n\n\tfor (const [module, entrypoint] of entries) {\n\t\tconst runtimeChunk = entrypoint.getRuntimeChunk();\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\tconst chunks = getAllChunks(entrypoint, chunk, runtimeChunk);\n\t\tif (\n\t\t\tcurrentChunks &&\n\t\t\tcurrentChunks.size === chunks.size &&\n\t\t\tisSubset(currentChunks, chunks)\n\t\t) {\n\t\t\tcurrentModuleIds.push(moduleId);\n\t\t} else {\n\t\t\tif (currentChunks) {\n\t\t\t\toutputCombination(currentChunks, currentModuleIds);\n\t\t\t}\n\t\t\tcurrentChunks = chunks;\n\t\t\tcurrentModuleIds = [moduleId];\n\t\t}\n\t}\n\n\t// output current modules with export prefix\n\tif (currentChunks) {\n\t\toutputCombination(currentChunks, currentModuleIds, true);\n\t}\n\truntime.push(\"\");\n\treturn Template.asString(runtime);\n};\n\n/**\n * @param {Hash} hash the hash to update\n * @param {ChunkGraph} chunkGraph chunkGraph\n * @param {EntryModuleWithChunkGroup[]} entries entries\n * @param {Chunk} chunk chunk\n * @returns {void}\n */\nexports.updateHashForEntryStartup = (hash, chunkGraph, entries, chunk) => {\n\tfor (const [module, entrypoint] of entries) {\n\t\tconst runtimeChunk = entrypoint.getRuntimeChunk();\n\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\thash.update(`${moduleId}`);\n\t\tfor (const c of getAllChunks(entrypoint, chunk, runtimeChunk))\n\t\t\thash.update(`${c.id}`);\n\t}\n};\n\n/**\n * @param {Chunk} chunk the chunk\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {function(Chunk, ChunkGraph): boolean} filterFn filter function\n * @returns {Set<number | string>} initially fulfilled chunk ids\n */\nexports.getInitialChunkIds = (chunk, chunkGraph, filterFn) => {\n\tconst initialChunkIds = new Set(chunk.ids);\n\tfor (const c of chunk.getAllInitialChunks()) {\n\t\tif (c === chunk || filterFn(c, chunkGraph)) continue;\n\t\tfor (const id of c.ids) initialChunkIds.add(id);\n\t}\n\treturn initialChunkIds;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}