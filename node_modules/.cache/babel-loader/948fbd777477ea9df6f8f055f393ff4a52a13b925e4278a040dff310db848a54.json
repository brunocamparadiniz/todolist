{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"./util/ArrayHelpers\"),\n  equals = _require.equals;\nvar SortableSet = require(\"./util/SortableSet\");\nvar makeSerializable = require(\"./util/makeSerializable\");\nvar _require2 = require(\"./util/runtime\"),\n  forEachRuntime = _require2.forEachRuntime;\n\n/** @typedef {import(\"./Dependency\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof UsageState.OnlyPropertiesUsed | typeof UsageState.NoInfo | typeof UsageState.Unknown | typeof UsageState.Used} RuntimeUsageStateType */\n/** @typedef {typeof UsageState.Unused | RuntimeUsageStateType} UsageStateType */\n\nvar UsageState = Object.freeze({\n  Unused: /** @type {0} */0,\n  OnlyPropertiesUsed: /** @type {1} */1,\n  NoInfo: /** @type {2} */2,\n  Unknown: /** @type {3} */3,\n  Used: /** @type {4} */4\n});\nvar RETURNS_TRUE = function RETURNS_TRUE() {\n  return true;\n};\nvar CIRCULAR = Symbol(\"circular target\");\nvar RestoreProvidedData = /*#__PURE__*/function () {\n  function RestoreProvidedData(exports, otherProvided, otherCanMangleProvide, otherTerminalBinding) {\n    _classCallCheck(this, RestoreProvidedData);\n    this.exports = exports;\n    this.otherProvided = otherProvided;\n    this.otherCanMangleProvide = otherCanMangleProvide;\n    this.otherTerminalBinding = otherTerminalBinding;\n  }\n  _createClass(RestoreProvidedData, [{\n    key: \"serialize\",\n    value: function serialize(_ref) {\n      var write = _ref.write;\n      write(this.exports);\n      write(this.otherProvided);\n      write(this.otherCanMangleProvide);\n      write(this.otherTerminalBinding);\n    }\n  }], [{\n    key: \"deserialize\",\n    value: function deserialize(_ref2) {\n      var read = _ref2.read;\n      return new RestoreProvidedData(read(), read(), read(), read());\n    }\n  }]);\n  return RestoreProvidedData;\n}();\nmakeSerializable(RestoreProvidedData, \"webpack/lib/ModuleGraph\", \"RestoreProvidedData\");\nvar ExportsInfo = /*#__PURE__*/function () {\n  function ExportsInfo() {\n    _classCallCheck(this, ExportsInfo);\n    /** @type {Map<string, ExportInfo>} */\n    this._exports = new Map();\n    this._otherExportsInfo = new ExportInfo(null);\n    this._sideEffectsOnlyInfo = new ExportInfo(\"*side effects only*\");\n    this._exportsAreOrdered = false;\n    /** @type {ExportsInfo=} */\n    this._redirectTo = undefined;\n  }\n\n  /**\n   * @returns {Iterable<ExportInfo>} all owned exports in any order\n   */\n  _createClass(ExportsInfo, [{\n    key: \"ownedExports\",\n    get: function get() {\n      return this._exports.values();\n    }\n\n    /**\n     * @returns {Iterable<ExportInfo>} all owned exports in order\n     */\n  }, {\n    key: \"orderedOwnedExports\",\n    get: function get() {\n      if (!this._exportsAreOrdered) {\n        this._sortExports();\n      }\n      return this._exports.values();\n    }\n\n    /**\n     * @returns {Iterable<ExportInfo>} all exports in any order\n     */\n  }, {\n    key: \"exports\",\n    get: function get() {\n      if (this._redirectTo !== undefined) {\n        var map = new Map(this._redirectTo._exports);\n        var _iterator = _createForOfIteratorHelper(this._exports),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n            map.set(key, value);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return map.values();\n      }\n      return this._exports.values();\n    }\n\n    /**\n     * @returns {Iterable<ExportInfo>} all exports in order\n     */\n  }, {\n    key: \"orderedExports\",\n    get: function get() {\n      if (!this._exportsAreOrdered) {\n        this._sortExports();\n      }\n      if (this._redirectTo !== undefined) {\n        var map = new Map(Array.from(this._redirectTo.orderedExports, function (item) {\n          return [item.name, item];\n        }));\n        var _iterator2 = _createForOfIteratorHelper(this._exports),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              key = _step2$value[0],\n              value = _step2$value[1];\n            map.set(key, value);\n          }\n          // sorting should be pretty fast as map contains\n          // a lot of presorted items\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        this._sortExportsMap(map);\n        return map.values();\n      }\n      return this._exports.values();\n    }\n\n    /**\n     * @returns {ExportInfo} the export info of unlisted exports\n     */\n  }, {\n    key: \"otherExportsInfo\",\n    get: function get() {\n      if (this._redirectTo !== undefined) return this._redirectTo.otherExportsInfo;\n      return this._otherExportsInfo;\n    }\n  }, {\n    key: \"_sortExportsMap\",\n    value: function _sortExportsMap(exports) {\n      if (exports.size > 1) {\n        var namesInOrder = [];\n        var _iterator3 = _createForOfIteratorHelper(exports.values()),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var entry = _step3.value;\n            namesInOrder.push(entry.name);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        namesInOrder.sort();\n        var i = 0;\n        var _iterator4 = _createForOfIteratorHelper(exports.values()),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _entry = _step4.value;\n            var _name = namesInOrder[i];\n            if (_entry.name !== _name) break;\n            i++;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        for (; i < namesInOrder.length; i++) {\n          var name = namesInOrder[i];\n          var correctEntry = exports.get(name);\n          exports.delete(name);\n          exports.set(name, correctEntry);\n        }\n      }\n    }\n  }, {\n    key: \"_sortExports\",\n    value: function _sortExports() {\n      this._sortExportsMap(this._exports);\n      this._exportsAreOrdered = true;\n    }\n  }, {\n    key: \"setRedirectNamedTo\",\n    value: function setRedirectNamedTo(exportsInfo) {\n      if (this._redirectTo === exportsInfo) return false;\n      this._redirectTo = exportsInfo;\n      return true;\n    }\n  }, {\n    key: \"setHasProvideInfo\",\n    value: function setHasProvideInfo() {\n      var _iterator5 = _createForOfIteratorHelper(this._exports.values()),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var exportInfo = _step5.value;\n          if (exportInfo.provided === undefined) {\n            exportInfo.provided = false;\n          }\n          if (exportInfo.canMangleProvide === undefined) {\n            exportInfo.canMangleProvide = true;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      if (this._redirectTo !== undefined) {\n        this._redirectTo.setHasProvideInfo();\n      } else {\n        if (this._otherExportsInfo.provided === undefined) {\n          this._otherExportsInfo.provided = false;\n        }\n        if (this._otherExportsInfo.canMangleProvide === undefined) {\n          this._otherExportsInfo.canMangleProvide = true;\n        }\n      }\n    }\n  }, {\n    key: \"setHasUseInfo\",\n    value: function setHasUseInfo() {\n      var _iterator6 = _createForOfIteratorHelper(this._exports.values()),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var exportInfo = _step6.value;\n          exportInfo.setHasUseInfo();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      this._sideEffectsOnlyInfo.setHasUseInfo();\n      if (this._redirectTo !== undefined) {\n        this._redirectTo.setHasUseInfo();\n      } else {\n        this._otherExportsInfo.setHasUseInfo();\n        if (this._otherExportsInfo.canMangleUse === undefined) {\n          this._otherExportsInfo.canMangleUse = true;\n        }\n      }\n    }\n\n    /**\n     * @param {string} name export name\n     * @returns {ExportInfo} export info for this name\n     */\n  }, {\n    key: \"getOwnExportInfo\",\n    value: function getOwnExportInfo(name) {\n      var info = this._exports.get(name);\n      if (info !== undefined) return info;\n      var newInfo = new ExportInfo(name, this._otherExportsInfo);\n      this._exports.set(name, newInfo);\n      this._exportsAreOrdered = false;\n      return newInfo;\n    }\n\n    /**\n     * @param {string} name export name\n     * @returns {ExportInfo} export info for this name\n     */\n  }, {\n    key: \"getExportInfo\",\n    value: function getExportInfo(name) {\n      var info = this._exports.get(name);\n      if (info !== undefined) return info;\n      if (this._redirectTo !== undefined) return this._redirectTo.getExportInfo(name);\n      var newInfo = new ExportInfo(name, this._otherExportsInfo);\n      this._exports.set(name, newInfo);\n      this._exportsAreOrdered = false;\n      return newInfo;\n    }\n\n    /**\n     * @param {string} name export name\n     * @returns {ExportInfo} export info for this name\n     */\n  }, {\n    key: \"getReadOnlyExportInfo\",\n    value: function getReadOnlyExportInfo(name) {\n      var info = this._exports.get(name);\n      if (info !== undefined) return info;\n      if (this._redirectTo !== undefined) return this._redirectTo.getReadOnlyExportInfo(name);\n      return this._otherExportsInfo;\n    }\n\n    /**\n     * @param {string[]} name export name\n     * @returns {ExportInfo | undefined} export info for this name\n     */\n  }, {\n    key: \"getReadOnlyExportInfoRecursive\",\n    value: function getReadOnlyExportInfoRecursive(name) {\n      var exportInfo = this.getReadOnlyExportInfo(name[0]);\n      if (name.length === 1) return exportInfo;\n      if (!exportInfo.exportsInfo) return undefined;\n      return exportInfo.exportsInfo.getReadOnlyExportInfoRecursive(name.slice(1));\n    }\n\n    /**\n     * @param {string[]=} name the export name\n     * @returns {ExportsInfo | undefined} the nested exports info\n     */\n  }, {\n    key: \"getNestedExportsInfo\",\n    value: function getNestedExportsInfo(name) {\n      if (Array.isArray(name) && name.length > 0) {\n        var info = this.getReadOnlyExportInfo(name[0]);\n        if (!info.exportsInfo) return undefined;\n        return info.exportsInfo.getNestedExportsInfo(name.slice(1));\n      }\n      return this;\n    }\n\n    /**\n     * @param {boolean=} canMangle true, if exports can still be mangled (defaults to false)\n     * @param {Set<string>=} excludeExports list of unaffected exports\n     * @param {any=} targetKey use this as key for the target\n     * @param {ModuleGraphConnection=} targetModule set this module as target\n     * @param {number=} priority priority\n     * @returns {boolean} true, if this call changed something\n     */\n  }, {\n    key: \"setUnknownExportsProvided\",\n    value: function setUnknownExportsProvided(canMangle, excludeExports, targetKey, targetModule, priority) {\n      var changed = false;\n      if (excludeExports) {\n        var _iterator7 = _createForOfIteratorHelper(excludeExports),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var name = _step7.value;\n            // Make sure these entries exist, so they can get different info\n            this.getExportInfo(name);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n      var _iterator8 = _createForOfIteratorHelper(this._exports.values()),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var exportInfo = _step8.value;\n          if (!canMangle && exportInfo.canMangleProvide !== false) {\n            exportInfo.canMangleProvide = false;\n            changed = true;\n          }\n          if (excludeExports && excludeExports.has(exportInfo.name)) continue;\n          if (exportInfo.provided !== true && exportInfo.provided !== null) {\n            exportInfo.provided = null;\n            changed = true;\n          }\n          if (targetKey) {\n            exportInfo.setTarget(targetKey, targetModule, [exportInfo.name], -1);\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      if (this._redirectTo !== undefined) {\n        if (this._redirectTo.setUnknownExportsProvided(canMangle, excludeExports, targetKey, targetModule, priority)) {\n          changed = true;\n        }\n      } else {\n        if (this._otherExportsInfo.provided !== true && this._otherExportsInfo.provided !== null) {\n          this._otherExportsInfo.provided = null;\n          changed = true;\n        }\n        if (!canMangle && this._otherExportsInfo.canMangleProvide !== false) {\n          this._otherExportsInfo.canMangleProvide = false;\n          changed = true;\n        }\n        if (targetKey) {\n          this._otherExportsInfo.setTarget(targetKey, targetModule, undefined, priority);\n        }\n      }\n      return changed;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setUsedInUnknownWay\",\n    value: function setUsedInUnknownWay(runtime) {\n      var changed = false;\n      var _iterator9 = _createForOfIteratorHelper(this._exports.values()),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var exportInfo = _step9.value;\n          if (exportInfo.setUsedInUnknownWay(runtime)) {\n            changed = true;\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      if (this._redirectTo !== undefined) {\n        if (this._redirectTo.setUsedInUnknownWay(runtime)) {\n          changed = true;\n        }\n      } else {\n        if (this._otherExportsInfo.setUsedConditionally(function (used) {\n          return used < UsageState.Unknown;\n        }, UsageState.Unknown, runtime)) {\n          changed = true;\n        }\n        if (this._otherExportsInfo.canMangleUse !== false) {\n          this._otherExportsInfo.canMangleUse = false;\n          changed = true;\n        }\n      }\n      return changed;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setUsedWithoutInfo\",\n    value: function setUsedWithoutInfo(runtime) {\n      var changed = false;\n      var _iterator10 = _createForOfIteratorHelper(this._exports.values()),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var exportInfo = _step10.value;\n          if (exportInfo.setUsedWithoutInfo(runtime)) {\n            changed = true;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      if (this._redirectTo !== undefined) {\n        if (this._redirectTo.setUsedWithoutInfo(runtime)) {\n          changed = true;\n        }\n      } else {\n        if (this._otherExportsInfo.setUsed(UsageState.NoInfo, runtime)) {\n          changed = true;\n        }\n        if (this._otherExportsInfo.canMangleUse !== false) {\n          this._otherExportsInfo.canMangleUse = false;\n          changed = true;\n        }\n      }\n      return changed;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setAllKnownExportsUsed\",\n    value: function setAllKnownExportsUsed(runtime) {\n      var changed = false;\n      var _iterator11 = _createForOfIteratorHelper(this._exports.values()),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var exportInfo = _step11.value;\n          if (!exportInfo.provided) continue;\n          if (exportInfo.setUsed(UsageState.Used, runtime)) {\n            changed = true;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return changed;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setUsedForSideEffectsOnly\",\n    value: function setUsedForSideEffectsOnly(runtime) {\n      return this._sideEffectsOnlyInfo.setUsedConditionally(function (used) {\n        return used === UsageState.Unused;\n      }, UsageState.Used, runtime);\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when the module exports are used in any way\n     */\n  }, {\n    key: \"isUsed\",\n    value: function isUsed(runtime) {\n      if (this._redirectTo !== undefined) {\n        if (this._redirectTo.isUsed(runtime)) {\n          return true;\n        }\n      } else {\n        if (this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n          return true;\n        }\n      }\n      var _iterator12 = _createForOfIteratorHelper(this._exports.values()),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var exportInfo = _step12.value;\n          if (exportInfo.getUsed(runtime) !== UsageState.Unused) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return false;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {boolean} true, when the module is used in any way\n     */\n  }, {\n    key: \"isModuleUsed\",\n    value: function isModuleUsed(runtime) {\n      if (this.isUsed(runtime)) return true;\n      if (this._sideEffectsOnlyInfo.getUsed(runtime) !== UsageState.Unused) return true;\n      return false;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {SortableSet<string> | boolean | null} set of used exports, or true (when namespace object is used), or false (when unused), or null (when unknown)\n     */\n  }, {\n    key: \"getUsedExports\",\n    value: function getUsedExports(runtime) {\n      if (!this._redirectTo !== undefined) {\n        switch (this._otherExportsInfo.getUsed(runtime)) {\n          case UsageState.NoInfo:\n            return null;\n          case UsageState.Unknown:\n          case UsageState.OnlyPropertiesUsed:\n          case UsageState.Used:\n            return true;\n        }\n      }\n      var array = [];\n      if (!this._exportsAreOrdered) this._sortExports();\n      var _iterator13 = _createForOfIteratorHelper(this._exports.values()),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var exportInfo = _step13.value;\n          switch (exportInfo.getUsed(runtime)) {\n            case UsageState.NoInfo:\n              return null;\n            case UsageState.Unknown:\n              return true;\n            case UsageState.OnlyPropertiesUsed:\n            case UsageState.Used:\n              array.push(exportInfo.name);\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      if (this._redirectTo !== undefined) {\n        var inner = this._redirectTo.getUsedExports(runtime);\n        if (inner === null) return null;\n        if (inner === true) return true;\n        if (inner !== false) {\n          var _iterator14 = _createForOfIteratorHelper(inner),\n            _step14;\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var item = _step14.value;\n              array.push(item);\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n        }\n      }\n      if (array.length === 0) {\n        switch (this._sideEffectsOnlyInfo.getUsed(runtime)) {\n          case UsageState.NoInfo:\n            return null;\n          case UsageState.Unused:\n            return false;\n        }\n      }\n      return new SortableSet(array);\n    }\n\n    /**\n     * @returns {null | true | string[]} list of exports when known\n     */\n  }, {\n    key: \"getProvidedExports\",\n    value: function getProvidedExports() {\n      if (!this._redirectTo !== undefined) {\n        switch (this._otherExportsInfo.provided) {\n          case undefined:\n            return null;\n          case null:\n            return true;\n          case true:\n            return true;\n        }\n      }\n      var array = [];\n      if (!this._exportsAreOrdered) this._sortExports();\n      var _iterator15 = _createForOfIteratorHelper(this._exports.values()),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var exportInfo = _step15.value;\n          switch (exportInfo.provided) {\n            case undefined:\n              return null;\n            case null:\n              return true;\n            case true:\n              array.push(exportInfo.name);\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      if (this._redirectTo !== undefined) {\n        var inner = this._redirectTo.getProvidedExports();\n        if (inner === null) return null;\n        if (inner === true) return true;\n        var _iterator16 = _createForOfIteratorHelper(inner),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var item = _step16.value;\n            if (!array.includes(item)) {\n              array.push(item);\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n      return array;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {ExportInfo[]} exports that are relevant (not unused and potential provided)\n     */\n  }, {\n    key: \"getRelevantExports\",\n    value: function getRelevantExports(runtime) {\n      var list = [];\n      var _iterator17 = _createForOfIteratorHelper(this._exports.values()),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var _exportInfo = _step17.value;\n          var used = _exportInfo.getUsed(runtime);\n          if (used === UsageState.Unused) continue;\n          if (_exportInfo.provided === false) continue;\n          list.push(_exportInfo);\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      if (this._redirectTo !== undefined) {\n        var _iterator18 = _createForOfIteratorHelper(this._redirectTo.getRelevantExports(runtime)),\n          _step18;\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var exportInfo = _step18.value;\n            if (!this._exports.has(exportInfo.name)) list.push(exportInfo);\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n      }\n      if (this._otherExportsInfo.provided !== false && this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n        list.push(this._otherExportsInfo);\n      }\n      return list;\n    }\n\n    /**\n     * @param {string | string[]} name the name of the export\n     * @returns {boolean | undefined | null} if the export is provided\n     */\n  }, {\n    key: \"isExportProvided\",\n    value: function isExportProvided(name) {\n      if (Array.isArray(name)) {\n        var _info = this.getReadOnlyExportInfo(name[0]);\n        if (_info.exportsInfo && name.length > 1) {\n          return _info.exportsInfo.isExportProvided(name.slice(1));\n        }\n        return _info.provided ? name.length === 1 || undefined : _info.provided;\n      }\n      var info = this.getReadOnlyExportInfo(name);\n      return info.provided;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime runtime\n     * @returns {string} key representing the usage\n     */\n  }, {\n    key: \"getUsageKey\",\n    value: function getUsageKey(runtime) {\n      var key = [];\n      if (this._redirectTo !== undefined) {\n        key.push(this._redirectTo.getUsageKey(runtime));\n      } else {\n        key.push(this._otherExportsInfo.getUsed(runtime));\n      }\n      key.push(this._sideEffectsOnlyInfo.getUsed(runtime));\n      var _iterator19 = _createForOfIteratorHelper(this.orderedOwnedExports),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var exportInfo = _step19.value;\n          key.push(exportInfo.getUsed(runtime));\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return key.join(\"|\");\n    }\n\n    /**\n     * @param {RuntimeSpec} runtimeA first runtime\n     * @param {RuntimeSpec} runtimeB second runtime\n     * @returns {boolean} true, when equally used\n     */\n  }, {\n    key: \"isEquallyUsed\",\n    value: function isEquallyUsed(runtimeA, runtimeB) {\n      if (this._redirectTo !== undefined) {\n        if (!this._redirectTo.isEquallyUsed(runtimeA, runtimeB)) return false;\n      } else {\n        if (this._otherExportsInfo.getUsed(runtimeA) !== this._otherExportsInfo.getUsed(runtimeB)) {\n          return false;\n        }\n      }\n      if (this._sideEffectsOnlyInfo.getUsed(runtimeA) !== this._sideEffectsOnlyInfo.getUsed(runtimeB)) {\n        return false;\n      }\n      var _iterator20 = _createForOfIteratorHelper(this.ownedExports),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var exportInfo = _step20.value;\n          if (exportInfo.getUsed(runtimeA) !== exportInfo.getUsed(runtimeB)) return false;\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return true;\n    }\n\n    /**\n     * @param {string | string[]} name export name\n     * @param {RuntimeSpec} runtime check usage for this runtime only\n     * @returns {UsageStateType} usage status\n     */\n  }, {\n    key: \"getUsed\",\n    value: function getUsed(name, runtime) {\n      if (Array.isArray(name)) {\n        if (name.length === 0) return this.otherExportsInfo.getUsed(runtime);\n        var _info2 = this.getReadOnlyExportInfo(name[0]);\n        if (_info2.exportsInfo && name.length > 1) {\n          return _info2.exportsInfo.getUsed(name.slice(1), runtime);\n        }\n        return _info2.getUsed(runtime);\n      }\n      var info = this.getReadOnlyExportInfo(name);\n      return info.getUsed(runtime);\n    }\n\n    /**\n     * @param {string | string[]} name the export name\n     * @param {RuntimeSpec} runtime check usage for this runtime only\n     * @returns {string | string[] | false} the used name\n     */\n  }, {\n    key: \"getUsedName\",\n    value: function getUsedName(name, runtime) {\n      if (Array.isArray(name)) {\n        // TODO improve this\n        if (name.length === 0) {\n          if (!this.isUsed(runtime)) return false;\n          return name;\n        }\n        var info = this.getReadOnlyExportInfo(name[0]);\n        var x = info.getUsedName(name[0], runtime);\n        if (x === false) return false;\n        var arr = x === name[0] && name.length === 1 ? name : [x];\n        if (name.length === 1) {\n          return arr;\n        }\n        if (info.exportsInfo && info.getUsed(runtime) === UsageState.OnlyPropertiesUsed) {\n          var nested = info.exportsInfo.getUsedName(name.slice(1), runtime);\n          if (!nested) return false;\n          return arr.concat(nested);\n        } else {\n          return arr.concat(name.slice(1));\n        }\n      } else {\n        var _info3 = this.getReadOnlyExportInfo(name);\n        var usedName = _info3.getUsedName(name, runtime);\n        return usedName;\n      }\n    }\n\n    /**\n     * @param {Hash} hash the hash\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, runtime) {\n      this._updateHash(hash, runtime, new Set());\n    }\n\n    /**\n     * @param {Hash} hash the hash\n     * @param {RuntimeSpec} runtime the runtime\n     * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n     * @returns {void}\n     */\n  }, {\n    key: \"_updateHash\",\n    value: function _updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n      var set = new Set(alreadyVisitedExportsInfo);\n      set.add(this);\n      var _iterator21 = _createForOfIteratorHelper(this.orderedExports),\n        _step21;\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var exportInfo = _step21.value;\n          if (exportInfo.hasInfo(this._otherExportsInfo, runtime)) {\n            exportInfo._updateHash(hash, runtime, set);\n          }\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n      this._sideEffectsOnlyInfo._updateHash(hash, runtime, set);\n      this._otherExportsInfo._updateHash(hash, runtime, set);\n      if (this._redirectTo !== undefined) {\n        this._redirectTo._updateHash(hash, runtime, set);\n      }\n    }\n  }, {\n    key: \"getRestoreProvidedData\",\n    value: function getRestoreProvidedData() {\n      var otherProvided = this._otherExportsInfo.provided;\n      var otherCanMangleProvide = this._otherExportsInfo.canMangleProvide;\n      var otherTerminalBinding = this._otherExportsInfo.terminalBinding;\n      var exports = [];\n      var _iterator22 = _createForOfIteratorHelper(this.orderedExports),\n        _step22;\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var exportInfo = _step22.value;\n          if (exportInfo.provided !== otherProvided || exportInfo.canMangleProvide !== otherCanMangleProvide || exportInfo.terminalBinding !== otherTerminalBinding || exportInfo.exportsInfoOwned) {\n            exports.push({\n              name: exportInfo.name,\n              provided: exportInfo.provided,\n              canMangleProvide: exportInfo.canMangleProvide,\n              terminalBinding: exportInfo.terminalBinding,\n              exportsInfo: exportInfo.exportsInfoOwned ? exportInfo.exportsInfo.getRestoreProvidedData() : undefined\n            });\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n      return new RestoreProvidedData(exports, otherProvided, otherCanMangleProvide, otherTerminalBinding);\n    }\n  }, {\n    key: \"restoreProvided\",\n    value: function restoreProvided(_ref3) {\n      var otherProvided = _ref3.otherProvided,\n        otherCanMangleProvide = _ref3.otherCanMangleProvide,\n        otherTerminalBinding = _ref3.otherTerminalBinding,\n        exports = _ref3.exports;\n      var wasEmpty = true;\n      var _iterator23 = _createForOfIteratorHelper(this._exports.values()),\n        _step23;\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var exportInfo = _step23.value;\n          wasEmpty = false;\n          exportInfo.provided = otherProvided;\n          exportInfo.canMangleProvide = otherCanMangleProvide;\n          exportInfo.terminalBinding = otherTerminalBinding;\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n      this._otherExportsInfo.provided = otherProvided;\n      this._otherExportsInfo.canMangleProvide = otherCanMangleProvide;\n      this._otherExportsInfo.terminalBinding = otherTerminalBinding;\n      var _iterator24 = _createForOfIteratorHelper(exports),\n        _step24;\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var exp = _step24.value;\n          var _exportInfo2 = this.getExportInfo(exp.name);\n          _exportInfo2.provided = exp.provided;\n          _exportInfo2.canMangleProvide = exp.canMangleProvide;\n          _exportInfo2.terminalBinding = exp.terminalBinding;\n          if (exp.exportsInfo) {\n            var exportsInfo = _exportInfo2.createNestedExportsInfo();\n            exportsInfo.restoreProvided(exp.exportsInfo);\n          }\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n      if (wasEmpty) this._exportsAreOrdered = true;\n    }\n  }]);\n  return ExportsInfo;\n}();\nvar ExportInfo = /*#__PURE__*/function () {\n  /**\n   * @param {string} name the original name of the export\n   * @param {ExportInfo=} initFrom init values from this ExportInfo\n   */\n  function ExportInfo(name, initFrom) {\n    _classCallCheck(this, ExportInfo);\n    /** @type {string} */\n    this.name = name;\n    /** @private @type {string | null} */\n    this._usedName = initFrom ? initFrom._usedName : null;\n    /** @private @type {UsageStateType} */\n    this._globalUsed = initFrom ? initFrom._globalUsed : undefined;\n    /** @private @type {Map<string, RuntimeUsageStateType>} */\n    this._usedInRuntime = initFrom && initFrom._usedInRuntime ? new Map(initFrom._usedInRuntime) : undefined;\n    /** @private @type {boolean} */\n    this._hasUseInRuntimeInfo = initFrom ? initFrom._hasUseInRuntimeInfo : false;\n    /**\n     * true: it is provided\n     * false: it is not provided\n     * null: only the runtime knows if it is provided\n     * undefined: it was not determined if it is provided\n     * @type {boolean | null | undefined}\n     */\n    this.provided = initFrom ? initFrom.provided : undefined;\n    /**\n     * is the export a terminal binding that should be checked for export star conflicts\n     * @type {boolean}\n     */\n    this.terminalBinding = initFrom ? initFrom.terminalBinding : false;\n    /**\n     * true: it can be mangled\n     * false: is can not be mangled\n     * undefined: it was not determined if it can be mangled\n     * @type {boolean | undefined}\n     */\n    this.canMangleProvide = initFrom ? initFrom.canMangleProvide : undefined;\n    /**\n     * true: it can be mangled\n     * false: is can not be mangled\n     * undefined: it was not determined if it can be mangled\n     * @type {boolean | undefined}\n     */\n    this.canMangleUse = initFrom ? initFrom.canMangleUse : undefined;\n    /** @type {boolean} */\n    this.exportsInfoOwned = false;\n    /** @type {ExportsInfo=} */\n    this.exportsInfo = undefined;\n    /** @type {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>=} */\n    this._target = undefined;\n    if (initFrom && initFrom._target) {\n      this._target = new Map();\n      var _iterator25 = _createForOfIteratorHelper(initFrom._target),\n        _step25;\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var _step25$value = _slicedToArray(_step25.value, 2),\n            key = _step25$value[0],\n            value = _step25$value[1];\n          this._target.set(key, {\n            connection: value.connection,\n            export: value.export || [name],\n            priority: value.priority\n          });\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n    }\n    /** @type {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>=} */\n    this._maxTarget = undefined;\n  }\n\n  // TODO webpack 5 remove\n  /** @private */\n  _createClass(ExportInfo, [{\n    key: \"used\",\n    get: function get() {\n      throw new Error(\"REMOVED\");\n    }\n    /** @private */,\n    set:\n    /**\n     * @private\n     * @param {*} v v\n     */\n    function set(v) {\n      throw new Error(\"REMOVED\");\n    }\n    /**\n     * @private\n     * @param {*} v v\n     */\n  }, {\n    key: \"usedName\",\n    get: function get() {\n      throw new Error(\"REMOVED\");\n    },\n    set: function set(v) {\n      throw new Error(\"REMOVED\");\n    }\n  }, {\n    key: \"canMangle\",\n    get: function get() {\n      switch (this.canMangleProvide) {\n        case undefined:\n          return this.canMangleUse === false ? false : undefined;\n        case false:\n          return false;\n        case true:\n          switch (this.canMangleUse) {\n            case undefined:\n              return undefined;\n            case false:\n              return false;\n            case true:\n              return true;\n          }\n      }\n      throw new Error(\"Unexpected flags for canMangle \".concat(this.canMangleProvide, \" \").concat(this.canMangleUse));\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime only apply to this runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setUsedInUnknownWay\",\n    value: function setUsedInUnknownWay(runtime) {\n      var changed = false;\n      if (this.setUsedConditionally(function (used) {\n        return used < UsageState.Unknown;\n      }, UsageState.Unknown, runtime)) {\n        changed = true;\n      }\n      if (this.canMangleUse !== false) {\n        this.canMangleUse = false;\n        changed = true;\n      }\n      return changed;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime only apply to this runtime\n     * @returns {boolean} true, when something changed\n     */\n  }, {\n    key: \"setUsedWithoutInfo\",\n    value: function setUsedWithoutInfo(runtime) {\n      var changed = false;\n      if (this.setUsed(UsageState.NoInfo, runtime)) {\n        changed = true;\n      }\n      if (this.canMangleUse !== false) {\n        this.canMangleUse = false;\n        changed = true;\n      }\n      return changed;\n    }\n  }, {\n    key: \"setHasUseInfo\",\n    value: function setHasUseInfo() {\n      if (!this._hasUseInRuntimeInfo) {\n        this._hasUseInRuntimeInfo = true;\n      }\n      if (this.canMangleUse === undefined) {\n        this.canMangleUse = true;\n      }\n      if (this.exportsInfoOwned) {\n        this.exportsInfo.setHasUseInfo();\n      }\n    }\n\n    /**\n     * @param {function(UsageStateType): boolean} condition compare with old value\n     * @param {UsageStateType} newValue set when condition is true\n     * @param {RuntimeSpec} runtime only apply to this runtime\n     * @returns {boolean} true when something has changed\n     */\n  }, {\n    key: \"setUsedConditionally\",\n    value: function setUsedConditionally(condition, newValue, runtime) {\n      var _this = this;\n      if (runtime === undefined) {\n        if (this._globalUsed === undefined) {\n          this._globalUsed = newValue;\n          return true;\n        } else {\n          if (this._globalUsed !== newValue && condition(this._globalUsed)) {\n            this._globalUsed = newValue;\n            return true;\n          }\n        }\n      } else if (this._usedInRuntime === undefined) {\n        if (newValue !== UsageState.Unused && condition(UsageState.Unused)) {\n          this._usedInRuntime = new Map();\n          forEachRuntime(runtime, function (runtime) {\n            return _this._usedInRuntime.set(runtime, newValue);\n          });\n          return true;\n        }\n      } else {\n        var changed = false;\n        forEachRuntime(runtime, function (runtime) {\n          /** @type {UsageStateType} */\n          var oldValue = _this._usedInRuntime.get(runtime);\n          if (oldValue === undefined) oldValue = UsageState.Unused;\n          if (newValue !== oldValue && condition(oldValue)) {\n            if (newValue === UsageState.Unused) {\n              _this._usedInRuntime.delete(runtime);\n            } else {\n              _this._usedInRuntime.set(runtime, newValue);\n            }\n            changed = true;\n          }\n        });\n        if (changed) {\n          if (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * @param {UsageStateType} newValue new value of the used state\n     * @param {RuntimeSpec} runtime only apply to this runtime\n     * @returns {boolean} true when something has changed\n     */\n  }, {\n    key: \"setUsed\",\n    value: function setUsed(newValue, runtime) {\n      var _this2 = this;\n      if (runtime === undefined) {\n        if (this._globalUsed !== newValue) {\n          this._globalUsed = newValue;\n          return true;\n        }\n      } else if (this._usedInRuntime === undefined) {\n        if (newValue !== UsageState.Unused) {\n          this._usedInRuntime = new Map();\n          forEachRuntime(runtime, function (runtime) {\n            return _this2._usedInRuntime.set(runtime, newValue);\n          });\n          return true;\n        }\n      } else {\n        var changed = false;\n        forEachRuntime(runtime, function (runtime) {\n          /** @type {UsageStateType} */\n          var oldValue = _this2._usedInRuntime.get(runtime);\n          if (oldValue === undefined) oldValue = UsageState.Unused;\n          if (newValue !== oldValue) {\n            if (newValue === UsageState.Unused) {\n              _this2._usedInRuntime.delete(runtime);\n            } else {\n              _this2._usedInRuntime.set(runtime, newValue);\n            }\n            changed = true;\n          }\n        });\n        if (changed) {\n          if (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * @param {any} key the key\n     * @returns {boolean} true, if something has changed\n     */\n  }, {\n    key: \"unsetTarget\",\n    value: function unsetTarget(key) {\n      if (!this._target) return false;\n      if (this._target.delete(key)) {\n        this._maxTarget = undefined;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {any} key the key\n     * @param {ModuleGraphConnection} connection the target module if a single one\n     * @param {string[]=} exportName the exported name\n     * @param {number=} priority priority\n     * @returns {boolean} true, if something has changed\n     */\n  }, {\n    key: \"setTarget\",\n    value: function setTarget(key, connection, exportName) {\n      var priority = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      if (exportName) exportName = _toConsumableArray(exportName);\n      if (!this._target) {\n        this._target = new Map();\n        this._target.set(key, {\n          connection: connection,\n          export: exportName,\n          priority: priority\n        });\n        return true;\n      }\n      var oldTarget = this._target.get(key);\n      if (!oldTarget) {\n        if (oldTarget === null && !connection) return false;\n        this._target.set(key, {\n          connection: connection,\n          export: exportName,\n          priority: priority\n        });\n        this._maxTarget = undefined;\n        return true;\n      }\n      if (oldTarget.connection !== connection || oldTarget.priority !== priority || (exportName ? !oldTarget.export || !equals(oldTarget.export, exportName) : oldTarget.export)) {\n        oldTarget.connection = connection;\n        oldTarget.export = exportName;\n        oldTarget.priority = priority;\n        this._maxTarget = undefined;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {RuntimeSpec} runtime for this runtime\n     * @returns {UsageStateType} usage state\n     */\n  }, {\n    key: \"getUsed\",\n    value: function getUsed(runtime) {\n      if (!this._hasUseInRuntimeInfo) return UsageState.NoInfo;\n      if (this._globalUsed !== undefined) return this._globalUsed;\n      if (this._usedInRuntime === undefined) {\n        return UsageState.Unused;\n      } else if (typeof runtime === \"string\") {\n        var value = this._usedInRuntime.get(runtime);\n        return value === undefined ? UsageState.Unused : value;\n      } else if (runtime === undefined) {\n        /** @type {UsageStateType} */\n        var max = UsageState.Unused;\n        var _iterator26 = _createForOfIteratorHelper(this._usedInRuntime.values()),\n          _step26;\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var _value = _step26.value;\n            if (_value === UsageState.Used) {\n              return UsageState.Used;\n            }\n            if (max < _value) max = _value;\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n        return max;\n      } else {\n        /** @type {UsageStateType} */\n        var _max = UsageState.Unused;\n        var _iterator27 = _createForOfIteratorHelper(runtime),\n          _step27;\n        try {\n          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n            var item = _step27.value;\n            var _value2 = this._usedInRuntime.get(item);\n            if (_value2 !== undefined) {\n              if (_value2 === UsageState.Used) {\n                return UsageState.Used;\n              }\n              if (_max < _value2) _max = _value2;\n            }\n          }\n        } catch (err) {\n          _iterator27.e(err);\n        } finally {\n          _iterator27.f();\n        }\n        return _max;\n      }\n    }\n\n    /**\n     * get used name\n     * @param {string | undefined} fallbackName fallback name for used exports with no name\n     * @param {RuntimeSpec} runtime check usage for this runtime only\n     * @returns {string | false} used name\n     */\n  }, {\n    key: \"getUsedName\",\n    value: function getUsedName(fallbackName, runtime) {\n      var _this3 = this;\n      if (this._hasUseInRuntimeInfo) {\n        if (this._globalUsed !== undefined) {\n          if (this._globalUsed === UsageState.Unused) return false;\n        } else {\n          if (this._usedInRuntime === undefined) return false;\n          if (typeof runtime === \"string\") {\n            if (!this._usedInRuntime.has(runtime)) {\n              return false;\n            }\n          } else if (runtime !== undefined) {\n            if (Array.from(runtime).every(function (runtime) {\n              return !_this3._usedInRuntime.has(runtime);\n            })) {\n              return false;\n            }\n          }\n        }\n      }\n      if (this._usedName !== null) return this._usedName;\n      return this.name || fallbackName;\n    }\n\n    /**\n     * @returns {boolean} true, when a mangled name of this export is set\n     */\n  }, {\n    key: \"hasUsedName\",\n    value: function hasUsedName() {\n      return this._usedName !== null;\n    }\n\n    /**\n     * Sets the mangled name of this export\n     * @param {string} name the new name\n     * @returns {void}\n     */\n  }, {\n    key: \"setUsedName\",\n    value: function setUsedName(name) {\n      this._usedName = name;\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n     * @returns {ExportInfo | ExportsInfo | undefined} the terminal binding export(s) info if known\n     */\n  }, {\n    key: \"getTerminalBinding\",\n    value: function getTerminalBinding(moduleGraph) {\n      var resolveTargetFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : RETURNS_TRUE;\n      if (this.terminalBinding) return this;\n      var target = this.getTarget(moduleGraph, resolveTargetFilter);\n      if (!target) return undefined;\n      var exportsInfo = moduleGraph.getExportsInfo(target.module);\n      if (!target.export) return exportsInfo;\n      return exportsInfo.getReadOnlyExportInfoRecursive(target.export);\n    }\n  }, {\n    key: \"isReexport\",\n    value: function isReexport() {\n      return !this.terminalBinding && this._target && this._target.size > 0;\n    }\n  }, {\n    key: \"_getMaxTarget\",\n    value: function _getMaxTarget() {\n      if (this._maxTarget !== undefined) return this._maxTarget;\n      if (this._target.size <= 1) return this._maxTarget = this._target;\n      var maxPriority = -Infinity;\n      var minPriority = Infinity;\n      var _iterator28 = _createForOfIteratorHelper(this._target.values()),\n        _step28;\n      try {\n        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n          var priority = _step28.value.priority;\n          if (maxPriority < priority) maxPriority = priority;\n          if (minPriority > priority) minPriority = priority;\n        }\n        // This should be very common\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n      if (maxPriority === minPriority) return this._maxTarget = this._target;\n\n      // This is an edge case\n      var map = new Map();\n      var _iterator29 = _createForOfIteratorHelper(this._target),\n        _step29;\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var _step29$value = _slicedToArray(_step29.value, 2),\n            key = _step29$value[0],\n            value = _step29$value[1];\n          if (maxPriority === value.priority) {\n            map.set(key, value);\n          }\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n      this._maxTarget = map;\n      return map;\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n     * @returns {{ module: Module, export: string[] | undefined } | undefined | false} the target, undefined when there is no target, false when no target is valid\n     */\n  }, {\n    key: \"findTarget\",\n    value: function findTarget(moduleGraph, validTargetModuleFilter) {\n      return this._findTarget(moduleGraph, validTargetModuleFilter, new Set());\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n     * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n     * @returns {{ module: Module, export: string[] | undefined } | undefined | false} the target, undefined when there is no target, false when no target is valid\n     */\n  }, {\n    key: \"_findTarget\",\n    value: function _findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited) {\n      if (!this._target || this._target.size === 0) return undefined;\n      var rawTarget = this._getMaxTarget().values().next().value;\n      if (!rawTarget) return undefined;\n      /** @type {{ module: Module, export: string[] | undefined }} */\n      var target = {\n        module: rawTarget.connection.module,\n        export: rawTarget.export\n      };\n      for (;;) {\n        if (validTargetModuleFilter(target.module)) return target;\n        var exportsInfo = moduleGraph.getExportsInfo(target.module);\n        var exportInfo = exportsInfo.getExportInfo(target.export[0]);\n        if (alreadyVisited.has(exportInfo)) return null;\n        var newTarget = exportInfo._findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited);\n        if (!newTarget) return false;\n        if (target.export.length === 1) {\n          target = newTarget;\n        } else {\n          target = {\n            module: newTarget.module,\n            export: newTarget.export ? newTarget.export.concat(target.export.slice(1)) : target.export.slice(1)\n          };\n        }\n      }\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n     * @returns {{ module: Module, export: string[] | undefined } | undefined} the target\n     */\n  }, {\n    key: \"getTarget\",\n    value: function getTarget(moduleGraph) {\n      var resolveTargetFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : RETURNS_TRUE;\n      var result = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n      if (result === CIRCULAR) return undefined;\n      return result;\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function({ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n     * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n     * @returns {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined } | CIRCULAR | undefined} the target\n     */\n  }, {\n    key: \"_getTarget\",\n    value: function _getTarget(moduleGraph, resolveTargetFilter, alreadyVisited) {\n      /**\n       * @param {{ connection: ModuleGraphConnection, export: string[] | undefined } | null} inputTarget unresolved target\n       * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n       * @returns {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined } | CIRCULAR | null} resolved target\n       */\n      var resolveTarget = function resolveTarget(inputTarget, alreadyVisited) {\n        if (!inputTarget) return null;\n        if (!inputTarget.export) {\n          return {\n            module: inputTarget.connection.module,\n            connection: inputTarget.connection,\n            export: undefined\n          };\n        }\n        /** @type {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }} */\n        var target = {\n          module: inputTarget.connection.module,\n          connection: inputTarget.connection,\n          export: inputTarget.export\n        };\n        if (!resolveTargetFilter(target)) return target;\n        var alreadyVisitedOwned = false;\n        for (;;) {\n          var exportsInfo = moduleGraph.getExportsInfo(target.module);\n          var exportInfo = exportsInfo.getExportInfo(target.export[0]);\n          if (!exportInfo) return target;\n          if (alreadyVisited.has(exportInfo)) return CIRCULAR;\n          var newTarget = exportInfo._getTarget(moduleGraph, resolveTargetFilter, alreadyVisited);\n          if (newTarget === CIRCULAR) return CIRCULAR;\n          if (!newTarget) return target;\n          if (target.export.length === 1) {\n            target = newTarget;\n            if (!target.export) return target;\n          } else {\n            target = {\n              module: newTarget.module,\n              connection: newTarget.connection,\n              export: newTarget.export ? newTarget.export.concat(target.export.slice(1)) : target.export.slice(1)\n            };\n          }\n          if (!resolveTargetFilter(target)) return target;\n          if (!alreadyVisitedOwned) {\n            alreadyVisited = new Set(alreadyVisited);\n            alreadyVisitedOwned = true;\n          }\n          alreadyVisited.add(exportInfo);\n        }\n      };\n      if (!this._target || this._target.size === 0) return undefined;\n      if (alreadyVisited && alreadyVisited.has(this)) return CIRCULAR;\n      var newAlreadyVisited = new Set(alreadyVisited);\n      newAlreadyVisited.add(this);\n      var values = this._getMaxTarget().values();\n      var target = resolveTarget(values.next().value, newAlreadyVisited);\n      if (target === CIRCULAR) return CIRCULAR;\n      if (target === null) return undefined;\n      var result = values.next();\n      while (!result.done) {\n        var t = resolveTarget(result.value, newAlreadyVisited);\n        if (t === CIRCULAR) return CIRCULAR;\n        if (t === null) return undefined;\n        if (t.module !== target.module) return undefined;\n        if (!t.export !== !target.export) return undefined;\n        if (target.export && !equals(t.export, target.export)) return undefined;\n        result = values.next();\n      }\n      return target;\n    }\n\n    /**\n     * Move the target forward as long resolveTargetFilter is fulfilled\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n     * @param {function({ module: Module, export: string[] | undefined }): ModuleGraphConnection=} updateOriginalConnection updates the original connection instead of using the target connection\n     * @returns {{ module: Module, export: string[] | undefined } | undefined} the resolved target when moved\n     */\n  }, {\n    key: \"moveTarget\",\n    value: function moveTarget(moduleGraph, resolveTargetFilter, updateOriginalConnection) {\n      var target = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n      if (target === CIRCULAR) return undefined;\n      if (!target) return undefined;\n      var originalTarget = this._getMaxTarget().values().next().value;\n      if (originalTarget.connection === target.connection && originalTarget.export === target.export) {\n        return undefined;\n      }\n      this._target.clear();\n      this._target.set(undefined, {\n        connection: updateOriginalConnection ? updateOriginalConnection(target) : target.connection,\n        export: target.export,\n        priority: 0\n      });\n      return target;\n    }\n  }, {\n    key: \"createNestedExportsInfo\",\n    value: function createNestedExportsInfo() {\n      if (this.exportsInfoOwned) return this.exportsInfo;\n      this.exportsInfoOwned = true;\n      var oldExportsInfo = this.exportsInfo;\n      this.exportsInfo = new ExportsInfo();\n      this.exportsInfo.setHasProvideInfo();\n      if (oldExportsInfo) {\n        this.exportsInfo.setRedirectNamedTo(oldExportsInfo);\n      }\n      return this.exportsInfo;\n    }\n  }, {\n    key: \"getNestedExportsInfo\",\n    value: function getNestedExportsInfo() {\n      return this.exportsInfo;\n    }\n  }, {\n    key: \"hasInfo\",\n    value: function hasInfo(baseInfo, runtime) {\n      return this._usedName && this._usedName !== this.name || this.provided || this.terminalBinding || this.getUsed(runtime) !== baseInfo.getUsed(runtime);\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, runtime) {\n      this._updateHash(hash, runtime, new Set());\n    }\n  }, {\n    key: \"_updateHash\",\n    value: function _updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n      hash.update(\"\".concat(this._usedName || this.name).concat(this.getUsed(runtime)).concat(this.provided).concat(this.terminalBinding));\n      if (this.exportsInfo && !alreadyVisitedExportsInfo.has(this.exportsInfo)) {\n        this.exportsInfo._updateHash(hash, runtime, alreadyVisitedExportsInfo);\n      }\n    }\n  }, {\n    key: \"getUsedInfo\",\n    value: function getUsedInfo() {\n      if (this._globalUsed !== undefined) {\n        switch (this._globalUsed) {\n          case UsageState.Unused:\n            return \"unused\";\n          case UsageState.NoInfo:\n            return \"no usage info\";\n          case UsageState.Unknown:\n            return \"maybe used (runtime-defined)\";\n          case UsageState.Used:\n            return \"used\";\n          case UsageState.OnlyPropertiesUsed:\n            return \"only properties used\";\n        }\n      } else if (this._usedInRuntime !== undefined) {\n        /** @type {Map<RuntimeUsageStateType, string[]>} */\n        var map = new Map();\n        var _iterator30 = _createForOfIteratorHelper(this._usedInRuntime),\n          _step30;\n        try {\n          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n            var _step30$value = _slicedToArray(_step30.value, 2),\n              runtime = _step30$value[0],\n              used = _step30$value[1];\n            var list = map.get(used);\n            if (list !== undefined) list.push(runtime);else map.set(used, [runtime]);\n          }\n        } catch (err) {\n          _iterator30.e(err);\n        } finally {\n          _iterator30.f();\n        }\n        var specificInfo = Array.from(map, function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n            used = _ref5[0],\n            runtimes = _ref5[1];\n          switch (used) {\n            case UsageState.NoInfo:\n              return \"no usage info in \".concat(runtimes.join(\", \"));\n            case UsageState.Unknown:\n              return \"maybe used in \".concat(runtimes.join(\", \"), \" (runtime-defined)\");\n            case UsageState.Used:\n              return \"used in \".concat(runtimes.join(\", \"));\n            case UsageState.OnlyPropertiesUsed:\n              return \"only properties used in \".concat(runtimes.join(\", \"));\n          }\n        });\n        if (specificInfo.length > 0) {\n          return specificInfo.join(\"; \");\n        }\n      }\n      return this._hasUseInRuntimeInfo ? \"unused\" : \"no usage info\";\n    }\n  }, {\n    key: \"getProvidedInfo\",\n    value: function getProvidedInfo() {\n      switch (this.provided) {\n        case undefined:\n          return \"no provided info\";\n        case null:\n          return \"maybe provided (runtime-defined)\";\n        case true:\n          return \"provided\";\n        case false:\n          return \"not provided\";\n      }\n    }\n  }, {\n    key: \"getRenameInfo\",\n    value: function getRenameInfo() {\n      if (this._usedName !== null && this._usedName !== this.name) {\n        return \"renamed to \".concat(JSON.stringify(this._usedName).slice(1, -1));\n      }\n      switch (this.canMangleProvide) {\n        case undefined:\n          switch (this.canMangleUse) {\n            case undefined:\n              return \"missing provision and use info prevents renaming\";\n            case false:\n              return \"usage prevents renaming (no provision info)\";\n            case true:\n              return \"missing provision info prevents renaming\";\n          }\n          break;\n        case true:\n          switch (this.canMangleUse) {\n            case undefined:\n              return \"missing usage info prevents renaming\";\n            case false:\n              return \"usage prevents renaming\";\n            case true:\n              return \"could be renamed\";\n          }\n          break;\n        case false:\n          switch (this.canMangleUse) {\n            case undefined:\n              return \"provision prevents renaming (no use info)\";\n            case false:\n              return \"usage and provision prevents renaming\";\n            case true:\n              return \"provision prevents renaming\";\n          }\n          break;\n      }\n      throw new Error(\"Unexpected flags for getRenameInfo \".concat(this.canMangleProvide, \" \").concat(this.canMangleUse));\n    }\n  }]);\n  return ExportInfo;\n}();\nmodule.exports = ExportsInfo;\nmodule.exports.ExportInfo = ExportInfo;\nmodule.exports.UsageState = UsageState;","map":{"version":3,"names":["require","equals","SortableSet","makeSerializable","forEachRuntime","UsageState","Object","freeze","Unused","OnlyPropertiesUsed","NoInfo","Unknown","Used","RETURNS_TRUE","CIRCULAR","Symbol","RestoreProvidedData","exports","otherProvided","otherCanMangleProvide","otherTerminalBinding","write","read","ExportsInfo","_exports","Map","_otherExportsInfo","ExportInfo","_sideEffectsOnlyInfo","_exportsAreOrdered","_redirectTo","undefined","values","_sortExports","map","key","value","set","Array","from","orderedExports","item","name","_sortExportsMap","otherExportsInfo","size","namesInOrder","entry","push","sort","i","length","correctEntry","get","delete","exportsInfo","exportInfo","provided","canMangleProvide","setHasProvideInfo","setHasUseInfo","canMangleUse","info","newInfo","getExportInfo","getReadOnlyExportInfo","getReadOnlyExportInfoRecursive","slice","isArray","getNestedExportsInfo","canMangle","excludeExports","targetKey","targetModule","priority","changed","has","setTarget","setUnknownExportsProvided","runtime","setUsedInUnknownWay","setUsedConditionally","used","setUsedWithoutInfo","setUsed","isUsed","getUsed","array","inner","getUsedExports","getProvidedExports","includes","list","getRelevantExports","isExportProvided","getUsageKey","orderedOwnedExports","join","runtimeA","runtimeB","isEquallyUsed","ownedExports","x","getUsedName","arr","nested","concat","usedName","hash","_updateHash","Set","alreadyVisitedExportsInfo","add","hasInfo","terminalBinding","exportsInfoOwned","getRestoreProvidedData","wasEmpty","exp","createNestedExportsInfo","restoreProvided","initFrom","_usedName","_globalUsed","_usedInRuntime","_hasUseInRuntimeInfo","_target","connection","export","_maxTarget","Error","v","condition","newValue","oldValue","exportName","oldTarget","max","fallbackName","every","moduleGraph","resolveTargetFilter","target","getTarget","getExportsInfo","module","maxPriority","Infinity","minPriority","validTargetModuleFilter","_findTarget","alreadyVisited","rawTarget","_getMaxTarget","next","newTarget","result","_getTarget","resolveTarget","inputTarget","alreadyVisitedOwned","newAlreadyVisited","done","t","updateOriginalConnection","originalTarget","clear","oldExportsInfo","setRedirectNamedTo","baseInfo","update","specificInfo","runtimes","JSON","stringify"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ExportsInfo.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst { forEachRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"./Dependency\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof UsageState.OnlyPropertiesUsed | typeof UsageState.NoInfo | typeof UsageState.Unknown | typeof UsageState.Used} RuntimeUsageStateType */\n/** @typedef {typeof UsageState.Unused | RuntimeUsageStateType} UsageStateType */\n\nconst UsageState = Object.freeze({\n\tUnused: /** @type {0} */ (0),\n\tOnlyPropertiesUsed: /** @type {1} */ (1),\n\tNoInfo: /** @type {2} */ (2),\n\tUnknown: /** @type {3} */ (3),\n\tUsed: /** @type {4} */ (4)\n});\n\nconst RETURNS_TRUE = () => true;\n\nconst CIRCULAR = Symbol(\"circular target\");\n\nclass RestoreProvidedData {\n\tconstructor(\n\t\texports,\n\t\totherProvided,\n\t\totherCanMangleProvide,\n\t\totherTerminalBinding\n\t) {\n\t\tthis.exports = exports;\n\t\tthis.otherProvided = otherProvided;\n\t\tthis.otherCanMangleProvide = otherCanMangleProvide;\n\t\tthis.otherTerminalBinding = otherTerminalBinding;\n\t}\n\n\tserialize({ write }) {\n\t\twrite(this.exports);\n\t\twrite(this.otherProvided);\n\t\twrite(this.otherCanMangleProvide);\n\t\twrite(this.otherTerminalBinding);\n\t}\n\n\tstatic deserialize({ read }) {\n\t\treturn new RestoreProvidedData(read(), read(), read(), read());\n\t}\n}\n\nmakeSerializable(\n\tRestoreProvidedData,\n\t\"webpack/lib/ModuleGraph\",\n\t\"RestoreProvidedData\"\n);\n\nclass ExportsInfo {\n\tconstructor() {\n\t\t/** @type {Map<string, ExportInfo>} */\n\t\tthis._exports = new Map();\n\t\tthis._otherExportsInfo = new ExportInfo(null);\n\t\tthis._sideEffectsOnlyInfo = new ExportInfo(\"*side effects only*\");\n\t\tthis._exportsAreOrdered = false;\n\t\t/** @type {ExportsInfo=} */\n\t\tthis._redirectTo = undefined;\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all owned exports in any order\n\t */\n\tget ownedExports() {\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all owned exports in order\n\t */\n\tget orderedOwnedExports() {\n\t\tif (!this._exportsAreOrdered) {\n\t\t\tthis._sortExports();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all exports in any order\n\t */\n\tget exports() {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst map = new Map(this._redirectTo._exports);\n\t\t\tfor (const [key, value] of this._exports) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t\treturn map.values();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all exports in order\n\t */\n\tget orderedExports() {\n\t\tif (!this._exportsAreOrdered) {\n\t\t\tthis._sortExports();\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst map = new Map(\n\t\t\t\tArray.from(this._redirectTo.orderedExports, item => [item.name, item])\n\t\t\t);\n\t\t\tfor (const [key, value] of this._exports) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t\t// sorting should be pretty fast as map contains\n\t\t\t// a lot of presorted items\n\t\t\tthis._sortExportsMap(map);\n\t\t\treturn map.values();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {ExportInfo} the export info of unlisted exports\n\t */\n\tget otherExportsInfo() {\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.otherExportsInfo;\n\t\treturn this._otherExportsInfo;\n\t}\n\n\t_sortExportsMap(exports) {\n\t\tif (exports.size > 1) {\n\t\t\tconst namesInOrder = [];\n\t\t\tfor (const entry of exports.values()) {\n\t\t\t\tnamesInOrder.push(entry.name);\n\t\t\t}\n\t\t\tnamesInOrder.sort();\n\t\t\tlet i = 0;\n\t\t\tfor (const entry of exports.values()) {\n\t\t\t\tconst name = namesInOrder[i];\n\t\t\t\tif (entry.name !== name) break;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tfor (; i < namesInOrder.length; i++) {\n\t\t\t\tconst name = namesInOrder[i];\n\t\t\t\tconst correctEntry = exports.get(name);\n\t\t\t\texports.delete(name);\n\t\t\t\texports.set(name, correctEntry);\n\t\t\t}\n\t\t}\n\t}\n\n\t_sortExports() {\n\t\tthis._sortExportsMap(this._exports);\n\t\tthis._exportsAreOrdered = true;\n\t}\n\n\tsetRedirectNamedTo(exportsInfo) {\n\t\tif (this._redirectTo === exportsInfo) return false;\n\t\tthis._redirectTo = exportsInfo;\n\t\treturn true;\n\t}\n\n\tsetHasProvideInfo() {\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.provided === undefined) {\n\t\t\t\texportInfo.provided = false;\n\t\t\t}\n\t\t\tif (exportInfo.canMangleProvide === undefined) {\n\t\t\t\texportInfo.canMangleProvide = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo.setHasProvideInfo();\n\t\t} else {\n\t\t\tif (this._otherExportsInfo.provided === undefined) {\n\t\t\t\tthis._otherExportsInfo.provided = false;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleProvide === undefined) {\n\t\t\t\tthis._otherExportsInfo.canMangleProvide = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tsetHasUseInfo() {\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\texportInfo.setHasUseInfo();\n\t\t}\n\t\tthis._sideEffectsOnlyInfo.setHasUseInfo();\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo.setHasUseInfo();\n\t\t} else {\n\t\t\tthis._otherExportsInfo.setHasUseInfo();\n\t\t\tif (this._otherExportsInfo.canMangleUse === undefined) {\n\t\t\t\tthis._otherExportsInfo.canMangleUse = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetOwnExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tconst newInfo = new ExportInfo(name, this._otherExportsInfo);\n\t\tthis._exports.set(name, newInfo);\n\t\tthis._exportsAreOrdered = false;\n\t\treturn newInfo;\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.getExportInfo(name);\n\t\tconst newInfo = new ExportInfo(name, this._otherExportsInfo);\n\t\tthis._exports.set(name, newInfo);\n\t\tthis._exportsAreOrdered = false;\n\t\treturn newInfo;\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetReadOnlyExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.getReadOnlyExportInfo(name);\n\t\treturn this._otherExportsInfo;\n\t}\n\n\t/**\n\t * @param {string[]} name export name\n\t * @returns {ExportInfo | undefined} export info for this name\n\t */\n\tgetReadOnlyExportInfoRecursive(name) {\n\t\tconst exportInfo = this.getReadOnlyExportInfo(name[0]);\n\t\tif (name.length === 1) return exportInfo;\n\t\tif (!exportInfo.exportsInfo) return undefined;\n\t\treturn exportInfo.exportsInfo.getReadOnlyExportInfoRecursive(name.slice(1));\n\t}\n\n\t/**\n\t * @param {string[]=} name the export name\n\t * @returns {ExportsInfo | undefined} the nested exports info\n\t */\n\tgetNestedExportsInfo(name) {\n\t\tif (Array.isArray(name) && name.length > 0) {\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (!info.exportsInfo) return undefined;\n\t\t\treturn info.exportsInfo.getNestedExportsInfo(name.slice(1));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {boolean=} canMangle true, if exports can still be mangled (defaults to false)\n\t * @param {Set<string>=} excludeExports list of unaffected exports\n\t * @param {any=} targetKey use this as key for the target\n\t * @param {ModuleGraphConnection=} targetModule set this module as target\n\t * @param {number=} priority priority\n\t * @returns {boolean} true, if this call changed something\n\t */\n\tsetUnknownExportsProvided(\n\t\tcanMangle,\n\t\texcludeExports,\n\t\ttargetKey,\n\t\ttargetModule,\n\t\tpriority\n\t) {\n\t\tlet changed = false;\n\t\tif (excludeExports) {\n\t\t\tfor (const name of excludeExports) {\n\t\t\t\t// Make sure these entries exist, so they can get different info\n\t\t\t\tthis.getExportInfo(name);\n\t\t\t}\n\t\t}\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (!canMangle && exportInfo.canMangleProvide !== false) {\n\t\t\t\texportInfo.canMangleProvide = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (excludeExports && excludeExports.has(exportInfo.name)) continue;\n\t\t\tif (exportInfo.provided !== true && exportInfo.provided !== null) {\n\t\t\t\texportInfo.provided = null;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (targetKey) {\n\t\t\t\texportInfo.setTarget(targetKey, targetModule, [exportInfo.name], -1);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (\n\t\t\t\tthis._redirectTo.setUnknownExportsProvided(\n\t\t\t\t\tcanMangle,\n\t\t\t\t\texcludeExports,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\ttargetModule,\n\t\t\t\t\tpriority\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis._otherExportsInfo.provided !== true &&\n\t\t\t\tthis._otherExportsInfo.provided !== null\n\t\t\t) {\n\t\t\t\tthis._otherExportsInfo.provided = null;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (!canMangle && this._otherExportsInfo.canMangleProvide !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleProvide = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (targetKey) {\n\t\t\t\tthis._otherExportsInfo.setTarget(\n\t\t\t\t\ttargetKey,\n\t\t\t\t\ttargetModule,\n\t\t\t\t\tundefined,\n\t\t\t\t\tpriority\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedInUnknownWay(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.setUsedInUnknownWay(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.setUsedInUnknownWay(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis._otherExportsInfo.setUsedConditionally(\n\t\t\t\t\tused => used < UsageState.Unknown,\n\t\t\t\t\tUsageState.Unknown,\n\t\t\t\t\truntime\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleUse !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleUse = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedWithoutInfo(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.setUsedWithoutInfo(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.setUsedWithoutInfo(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._otherExportsInfo.setUsed(UsageState.NoInfo, runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleUse !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleUse = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetAllKnownExportsUsed(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (!exportInfo.provided) continue;\n\t\t\tif (exportInfo.setUsed(UsageState.Used, runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedForSideEffectsOnly(runtime) {\n\t\treturn this._sideEffectsOnlyInfo.setUsedConditionally(\n\t\t\tused => used === UsageState.Unused,\n\t\t\tUsageState.Used,\n\t\t\truntime\n\t\t);\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when the module exports are used in any way\n\t */\n\tisUsed(runtime) {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.isUsed(runtime)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when the module is used in any way\n\t */\n\tisModuleUsed(runtime) {\n\t\tif (this.isUsed(runtime)) return true;\n\t\tif (this._sideEffectsOnlyInfo.getUsed(runtime) !== UsageState.Unused)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {SortableSet<string> | boolean | null} set of used exports, or true (when namespace object is used), or false (when unused), or null (when unknown)\n\t */\n\tgetUsedExports(runtime) {\n\t\tif (!this._redirectTo !== undefined) {\n\t\t\tswitch (this._otherExportsInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst array = [];\n\t\tif (!this._exportsAreOrdered) this._sortExports();\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tswitch (exportInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\treturn true;\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\tarray.push(exportInfo.name);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst inner = this._redirectTo.getUsedExports(runtime);\n\t\t\tif (inner === null) return null;\n\t\t\tif (inner === true) return true;\n\t\t\tif (inner !== false) {\n\t\t\t\tfor (const item of inner) {\n\t\t\t\t\tarray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (array.length === 0) {\n\t\t\tswitch (this._sideEffectsOnlyInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unused:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn new SortableSet(array);\n\t}\n\n\t/**\n\t * @returns {null | true | string[]} list of exports when known\n\t */\n\tgetProvidedExports() {\n\t\tif (!this._redirectTo !== undefined) {\n\t\t\tswitch (this._otherExportsInfo.provided) {\n\t\t\t\tcase undefined:\n\t\t\t\t\treturn null;\n\t\t\t\tcase null:\n\t\t\t\t\treturn true;\n\t\t\t\tcase true:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst array = [];\n\t\tif (!this._exportsAreOrdered) this._sortExports();\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tswitch (exportInfo.provided) {\n\t\t\t\tcase undefined:\n\t\t\t\t\treturn null;\n\t\t\t\tcase null:\n\t\t\t\t\treturn true;\n\t\t\t\tcase true:\n\t\t\t\t\tarray.push(exportInfo.name);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst inner = this._redirectTo.getProvidedExports();\n\t\t\tif (inner === null) return null;\n\t\t\tif (inner === true) return true;\n\t\t\tfor (const item of inner) {\n\t\t\t\tif (!array.includes(item)) {\n\t\t\t\t\tarray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {ExportInfo[]} exports that are relevant (not unused and potential provided)\n\t */\n\tgetRelevantExports(runtime) {\n\t\tconst list = [];\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tconst used = exportInfo.getUsed(runtime);\n\t\t\tif (used === UsageState.Unused) continue;\n\t\t\tif (exportInfo.provided === false) continue;\n\t\t\tlist.push(exportInfo);\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tfor (const exportInfo of this._redirectTo.getRelevantExports(runtime)) {\n\t\t\t\tif (!this._exports.has(exportInfo.name)) list.push(exportInfo);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tthis._otherExportsInfo.provided !== false &&\n\t\t\tthis._otherExportsInfo.getUsed(runtime) !== UsageState.Unused\n\t\t) {\n\t\t\tlist.push(this._otherExportsInfo);\n\t\t}\n\t\treturn list;\n\t}\n\n\t/**\n\t * @param {string | string[]} name the name of the export\n\t * @returns {boolean | undefined | null} if the export is provided\n\t */\n\tisExportProvided(name) {\n\t\tif (Array.isArray(name)) {\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (info.exportsInfo && name.length > 1) {\n\t\t\t\treturn info.exportsInfo.isExportProvided(name.slice(1));\n\t\t\t}\n\t\t\treturn info.provided ? name.length === 1 || undefined : info.provided;\n\t\t}\n\t\tconst info = this.getReadOnlyExportInfo(name);\n\t\treturn info.provided;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime runtime\n\t * @returns {string} key representing the usage\n\t */\n\tgetUsageKey(runtime) {\n\t\tconst key = [];\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tkey.push(this._redirectTo.getUsageKey(runtime));\n\t\t} else {\n\t\t\tkey.push(this._otherExportsInfo.getUsed(runtime));\n\t\t}\n\t\tkey.push(this._sideEffectsOnlyInfo.getUsed(runtime));\n\t\tfor (const exportInfo of this.orderedOwnedExports) {\n\t\t\tkey.push(exportInfo.getUsed(runtime));\n\t\t}\n\t\treturn key.join(\"|\");\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtimeA first runtime\n\t * @param {RuntimeSpec} runtimeB second runtime\n\t * @returns {boolean} true, when equally used\n\t */\n\tisEquallyUsed(runtimeA, runtimeB) {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (!this._redirectTo.isEquallyUsed(runtimeA, runtimeB)) return false;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis._otherExportsInfo.getUsed(runtimeA) !==\n\t\t\t\tthis._otherExportsInfo.getUsed(runtimeB)\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tthis._sideEffectsOnlyInfo.getUsed(runtimeA) !==\n\t\t\tthis._sideEffectsOnlyInfo.getUsed(runtimeB)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const exportInfo of this.ownedExports) {\n\t\t\tif (exportInfo.getUsed(runtimeA) !== exportInfo.getUsed(runtimeB))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {string | string[]} name export name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {UsageStateType} usage status\n\t */\n\tgetUsed(name, runtime) {\n\t\tif (Array.isArray(name)) {\n\t\t\tif (name.length === 0) return this.otherExportsInfo.getUsed(runtime);\n\t\t\tlet info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (info.exportsInfo && name.length > 1) {\n\t\t\t\treturn info.exportsInfo.getUsed(name.slice(1), runtime);\n\t\t\t}\n\t\t\treturn info.getUsed(runtime);\n\t\t}\n\t\tlet info = this.getReadOnlyExportInfo(name);\n\t\treturn info.getUsed(runtime);\n\t}\n\n\t/**\n\t * @param {string | string[]} name the export name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {string | string[] | false} the used name\n\t */\n\tgetUsedName(name, runtime) {\n\t\tif (Array.isArray(name)) {\n\t\t\t// TODO improve this\n\t\t\tif (name.length === 0) {\n\t\t\t\tif (!this.isUsed(runtime)) return false;\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\tlet info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tconst x = info.getUsedName(name[0], runtime);\n\t\t\tif (x === false) return false;\n\t\t\tconst arr = x === name[0] && name.length === 1 ? name : [x];\n\t\t\tif (name.length === 1) {\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tinfo.exportsInfo &&\n\t\t\t\tinfo.getUsed(runtime) === UsageState.OnlyPropertiesUsed\n\t\t\t) {\n\t\t\t\tconst nested = info.exportsInfo.getUsedName(name.slice(1), runtime);\n\t\t\t\tif (!nested) return false;\n\t\t\t\treturn arr.concat(nested);\n\t\t\t} else {\n\t\t\t\treturn arr.concat(name.slice(1));\n\t\t\t}\n\t\t} else {\n\t\t\tlet info = this.getReadOnlyExportInfo(name);\n\t\t\tconst usedName = info.getUsedName(name, runtime);\n\t\t\treturn usedName;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {void}\n\t */\n\tupdateHash(hash, runtime) {\n\t\tthis._updateHash(hash, runtime, new Set());\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n\t * @returns {void}\n\t */\n\t_updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n\t\tconst set = new Set(alreadyVisitedExportsInfo);\n\t\tset.add(this);\n\t\tfor (const exportInfo of this.orderedExports) {\n\t\t\tif (exportInfo.hasInfo(this._otherExportsInfo, runtime)) {\n\t\t\t\texportInfo._updateHash(hash, runtime, set);\n\t\t\t}\n\t\t}\n\t\tthis._sideEffectsOnlyInfo._updateHash(hash, runtime, set);\n\t\tthis._otherExportsInfo._updateHash(hash, runtime, set);\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo._updateHash(hash, runtime, set);\n\t\t}\n\t}\n\n\tgetRestoreProvidedData() {\n\t\tconst otherProvided = this._otherExportsInfo.provided;\n\t\tconst otherCanMangleProvide = this._otherExportsInfo.canMangleProvide;\n\t\tconst otherTerminalBinding = this._otherExportsInfo.terminalBinding;\n\t\tconst exports = [];\n\t\tfor (const exportInfo of this.orderedExports) {\n\t\t\tif (\n\t\t\t\texportInfo.provided !== otherProvided ||\n\t\t\t\texportInfo.canMangleProvide !== otherCanMangleProvide ||\n\t\t\t\texportInfo.terminalBinding !== otherTerminalBinding ||\n\t\t\t\texportInfo.exportsInfoOwned\n\t\t\t) {\n\t\t\t\texports.push({\n\t\t\t\t\tname: exportInfo.name,\n\t\t\t\t\tprovided: exportInfo.provided,\n\t\t\t\t\tcanMangleProvide: exportInfo.canMangleProvide,\n\t\t\t\t\tterminalBinding: exportInfo.terminalBinding,\n\t\t\t\t\texportsInfo: exportInfo.exportsInfoOwned\n\t\t\t\t\t\t? exportInfo.exportsInfo.getRestoreProvidedData()\n\t\t\t\t\t\t: undefined\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn new RestoreProvidedData(\n\t\t\texports,\n\t\t\totherProvided,\n\t\t\totherCanMangleProvide,\n\t\t\totherTerminalBinding\n\t\t);\n\t}\n\n\trestoreProvided({\n\t\totherProvided,\n\t\totherCanMangleProvide,\n\t\totherTerminalBinding,\n\t\texports\n\t}) {\n\t\tlet wasEmpty = true;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\twasEmpty = false;\n\t\t\texportInfo.provided = otherProvided;\n\t\t\texportInfo.canMangleProvide = otherCanMangleProvide;\n\t\t\texportInfo.terminalBinding = otherTerminalBinding;\n\t\t}\n\t\tthis._otherExportsInfo.provided = otherProvided;\n\t\tthis._otherExportsInfo.canMangleProvide = otherCanMangleProvide;\n\t\tthis._otherExportsInfo.terminalBinding = otherTerminalBinding;\n\t\tfor (const exp of exports) {\n\t\t\tconst exportInfo = this.getExportInfo(exp.name);\n\t\t\texportInfo.provided = exp.provided;\n\t\t\texportInfo.canMangleProvide = exp.canMangleProvide;\n\t\t\texportInfo.terminalBinding = exp.terminalBinding;\n\t\t\tif (exp.exportsInfo) {\n\t\t\t\tconst exportsInfo = exportInfo.createNestedExportsInfo();\n\t\t\t\texportsInfo.restoreProvided(exp.exportsInfo);\n\t\t\t}\n\t\t}\n\t\tif (wasEmpty) this._exportsAreOrdered = true;\n\t}\n}\n\nclass ExportInfo {\n\t/**\n\t * @param {string} name the original name of the export\n\t * @param {ExportInfo=} initFrom init values from this ExportInfo\n\t */\n\tconstructor(name, initFrom) {\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/** @private @type {string | null} */\n\t\tthis._usedName = initFrom ? initFrom._usedName : null;\n\t\t/** @private @type {UsageStateType} */\n\t\tthis._globalUsed = initFrom ? initFrom._globalUsed : undefined;\n\t\t/** @private @type {Map<string, RuntimeUsageStateType>} */\n\t\tthis._usedInRuntime =\n\t\t\tinitFrom && initFrom._usedInRuntime\n\t\t\t\t? new Map(initFrom._usedInRuntime)\n\t\t\t\t: undefined;\n\t\t/** @private @type {boolean} */\n\t\tthis._hasUseInRuntimeInfo = initFrom\n\t\t\t? initFrom._hasUseInRuntimeInfo\n\t\t\t: false;\n\t\t/**\n\t\t * true: it is provided\n\t\t * false: it is not provided\n\t\t * null: only the runtime knows if it is provided\n\t\t * undefined: it was not determined if it is provided\n\t\t * @type {boolean | null | undefined}\n\t\t */\n\t\tthis.provided = initFrom ? initFrom.provided : undefined;\n\t\t/**\n\t\t * is the export a terminal binding that should be checked for export star conflicts\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.terminalBinding = initFrom ? initFrom.terminalBinding : false;\n\t\t/**\n\t\t * true: it can be mangled\n\t\t * false: is can not be mangled\n\t\t * undefined: it was not determined if it can be mangled\n\t\t * @type {boolean | undefined}\n\t\t */\n\t\tthis.canMangleProvide = initFrom ? initFrom.canMangleProvide : undefined;\n\t\t/**\n\t\t * true: it can be mangled\n\t\t * false: is can not be mangled\n\t\t * undefined: it was not determined if it can be mangled\n\t\t * @type {boolean | undefined}\n\t\t */\n\t\tthis.canMangleUse = initFrom ? initFrom.canMangleUse : undefined;\n\t\t/** @type {boolean} */\n\t\tthis.exportsInfoOwned = false;\n\t\t/** @type {ExportsInfo=} */\n\t\tthis.exportsInfo = undefined;\n\t\t/** @type {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>=} */\n\t\tthis._target = undefined;\n\t\tif (initFrom && initFrom._target) {\n\t\t\tthis._target = new Map();\n\t\t\tfor (const [key, value] of initFrom._target) {\n\t\t\t\tthis._target.set(key, {\n\t\t\t\t\tconnection: value.connection,\n\t\t\t\t\texport: value.export || [name],\n\t\t\t\t\tpriority: value.priority\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/** @type {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>=} */\n\t\tthis._maxTarget = undefined;\n\t}\n\n\t// TODO webpack 5 remove\n\t/** @private */\n\tget used() {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\t/** @private */\n\tget usedName() {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\t/**\n\t * @private\n\t * @param {*} v v\n\t */\n\tset used(v) {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\t/**\n\t * @private\n\t * @param {*} v v\n\t */\n\tset usedName(v) {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\n\tget canMangle() {\n\t\tswitch (this.canMangleProvide) {\n\t\t\tcase undefined:\n\t\t\t\treturn this.canMangleUse === false ? false : undefined;\n\t\t\tcase false:\n\t\t\t\treturn false;\n\t\t\tcase true:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t}\n\t\tthrow new Error(\n\t\t\t`Unexpected flags for canMangle ${this.canMangleProvide} ${this.canMangleUse}`\n\t\t);\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedInUnknownWay(runtime) {\n\t\tlet changed = false;\n\t\tif (\n\t\t\tthis.setUsedConditionally(\n\t\t\t\tused => used < UsageState.Unknown,\n\t\t\t\tUsageState.Unknown,\n\t\t\t\truntime\n\t\t\t)\n\t\t) {\n\t\t\tchanged = true;\n\t\t}\n\t\tif (this.canMangleUse !== false) {\n\t\t\tthis.canMangleUse = false;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedWithoutInfo(runtime) {\n\t\tlet changed = false;\n\t\tif (this.setUsed(UsageState.NoInfo, runtime)) {\n\t\t\tchanged = true;\n\t\t}\n\t\tif (this.canMangleUse !== false) {\n\t\t\tthis.canMangleUse = false;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\tsetHasUseInfo() {\n\t\tif (!this._hasUseInRuntimeInfo) {\n\t\t\tthis._hasUseInRuntimeInfo = true;\n\t\t}\n\t\tif (this.canMangleUse === undefined) {\n\t\t\tthis.canMangleUse = true;\n\t\t}\n\t\tif (this.exportsInfoOwned) {\n\t\t\tthis.exportsInfo.setHasUseInfo();\n\t\t}\n\t}\n\n\t/**\n\t * @param {function(UsageStateType): boolean} condition compare with old value\n\t * @param {UsageStateType} newValue set when condition is true\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true when something has changed\n\t */\n\tsetUsedConditionally(condition, newValue, runtime) {\n\t\tif (runtime === undefined) {\n\t\t\tif (this._globalUsed === undefined) {\n\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (this._globalUsed !== newValue && condition(this._globalUsed)) {\n\t\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this._usedInRuntime === undefined) {\n\t\t\tif (newValue !== UsageState.Unused && condition(UsageState.Unused)) {\n\t\t\t\tthis._usedInRuntime = new Map();\n\t\t\t\tforEachRuntime(runtime, runtime =>\n\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue)\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tlet changed = false;\n\t\t\tforEachRuntime(runtime, runtime => {\n\t\t\t\t/** @type {UsageStateType} */\n\t\t\t\tlet oldValue = this._usedInRuntime.get(runtime);\n\t\t\t\tif (oldValue === undefined) oldValue = UsageState.Unused;\n\t\t\t\tif (newValue !== oldValue && condition(oldValue)) {\n\t\t\t\t\tif (newValue === UsageState.Unused) {\n\t\t\t\t\t\tthis._usedInRuntime.delete(runtime);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (changed) {\n\t\t\t\tif (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {UsageStateType} newValue new value of the used state\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true when something has changed\n\t */\n\tsetUsed(newValue, runtime) {\n\t\tif (runtime === undefined) {\n\t\t\tif (this._globalUsed !== newValue) {\n\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this._usedInRuntime === undefined) {\n\t\t\tif (newValue !== UsageState.Unused) {\n\t\t\t\tthis._usedInRuntime = new Map();\n\t\t\t\tforEachRuntime(runtime, runtime =>\n\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue)\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tlet changed = false;\n\t\t\tforEachRuntime(runtime, runtime => {\n\t\t\t\t/** @type {UsageStateType} */\n\t\t\t\tlet oldValue = this._usedInRuntime.get(runtime);\n\t\t\t\tif (oldValue === undefined) oldValue = UsageState.Unused;\n\t\t\t\tif (newValue !== oldValue) {\n\t\t\t\t\tif (newValue === UsageState.Unused) {\n\t\t\t\t\t\tthis._usedInRuntime.delete(runtime);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (changed) {\n\t\t\t\tif (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {any} key the key\n\t * @returns {boolean} true, if something has changed\n\t */\n\tunsetTarget(key) {\n\t\tif (!this._target) return false;\n\t\tif (this._target.delete(key)) {\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {any} key the key\n\t * @param {ModuleGraphConnection} connection the target module if a single one\n\t * @param {string[]=} exportName the exported name\n\t * @param {number=} priority priority\n\t * @returns {boolean} true, if something has changed\n\t */\n\tsetTarget(key, connection, exportName, priority = 0) {\n\t\tif (exportName) exportName = [...exportName];\n\t\tif (!this._target) {\n\t\t\tthis._target = new Map();\n\t\t\tthis._target.set(key, { connection, export: exportName, priority });\n\t\t\treturn true;\n\t\t}\n\t\tconst oldTarget = this._target.get(key);\n\t\tif (!oldTarget) {\n\t\t\tif (oldTarget === null && !connection) return false;\n\t\t\tthis._target.set(key, { connection, export: exportName, priority });\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\toldTarget.connection !== connection ||\n\t\t\toldTarget.priority !== priority ||\n\t\t\t(exportName\n\t\t\t\t? !oldTarget.export || !equals(oldTarget.export, exportName)\n\t\t\t\t: oldTarget.export)\n\t\t) {\n\t\t\toldTarget.connection = connection;\n\t\t\toldTarget.export = exportName;\n\t\t\toldTarget.priority = priority;\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime for this runtime\n\t * @returns {UsageStateType} usage state\n\t */\n\tgetUsed(runtime) {\n\t\tif (!this._hasUseInRuntimeInfo) return UsageState.NoInfo;\n\t\tif (this._globalUsed !== undefined) return this._globalUsed;\n\t\tif (this._usedInRuntime === undefined) {\n\t\t\treturn UsageState.Unused;\n\t\t} else if (typeof runtime === \"string\") {\n\t\t\tconst value = this._usedInRuntime.get(runtime);\n\t\t\treturn value === undefined ? UsageState.Unused : value;\n\t\t} else if (runtime === undefined) {\n\t\t\t/** @type {UsageStateType} */\n\t\t\tlet max = UsageState.Unused;\n\t\t\tfor (const value of this._usedInRuntime.values()) {\n\t\t\t\tif (value === UsageState.Used) {\n\t\t\t\t\treturn UsageState.Used;\n\t\t\t\t}\n\t\t\t\tif (max < value) max = value;\n\t\t\t}\n\t\t\treturn max;\n\t\t} else {\n\t\t\t/** @type {UsageStateType} */\n\t\t\tlet max = UsageState.Unused;\n\t\t\tfor (const item of runtime) {\n\t\t\t\tconst value = this._usedInRuntime.get(item);\n\t\t\t\tif (value !== undefined) {\n\t\t\t\t\tif (value === UsageState.Used) {\n\t\t\t\t\t\treturn UsageState.Used;\n\t\t\t\t\t}\n\t\t\t\t\tif (max < value) max = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t}\n\n\t/**\n\t * get used name\n\t * @param {string | undefined} fallbackName fallback name for used exports with no name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {string | false} used name\n\t */\n\tgetUsedName(fallbackName, runtime) {\n\t\tif (this._hasUseInRuntimeInfo) {\n\t\t\tif (this._globalUsed !== undefined) {\n\t\t\t\tif (this._globalUsed === UsageState.Unused) return false;\n\t\t\t} else {\n\t\t\t\tif (this._usedInRuntime === undefined) return false;\n\t\t\t\tif (typeof runtime === \"string\") {\n\t\t\t\t\tif (!this._usedInRuntime.has(runtime)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (runtime !== undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tArray.from(runtime).every(\n\t\t\t\t\t\t\truntime => !this._usedInRuntime.has(runtime)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._usedName !== null) return this._usedName;\n\t\treturn this.name || fallbackName;\n\t}\n\n\t/**\n\t * @returns {boolean} true, when a mangled name of this export is set\n\t */\n\thasUsedName() {\n\t\treturn this._usedName !== null;\n\t}\n\n\t/**\n\t * Sets the mangled name of this export\n\t * @param {string} name the new name\n\t * @returns {void}\n\t */\n\tsetUsedName(name) {\n\t\tthis._usedName = name;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n\t * @returns {ExportInfo | ExportsInfo | undefined} the terminal binding export(s) info if known\n\t */\n\tgetTerminalBinding(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n\t\tif (this.terminalBinding) return this;\n\t\tconst target = this.getTarget(moduleGraph, resolveTargetFilter);\n\t\tif (!target) return undefined;\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\tif (!target.export) return exportsInfo;\n\t\treturn exportsInfo.getReadOnlyExportInfoRecursive(target.export);\n\t}\n\n\tisReexport() {\n\t\treturn !this.terminalBinding && this._target && this._target.size > 0;\n\t}\n\n\t_getMaxTarget() {\n\t\tif (this._maxTarget !== undefined) return this._maxTarget;\n\t\tif (this._target.size <= 1) return (this._maxTarget = this._target);\n\t\tlet maxPriority = -Infinity;\n\t\tlet minPriority = Infinity;\n\t\tfor (const { priority } of this._target.values()) {\n\t\t\tif (maxPriority < priority) maxPriority = priority;\n\t\t\tif (minPriority > priority) minPriority = priority;\n\t\t}\n\t\t// This should be very common\n\t\tif (maxPriority === minPriority) return (this._maxTarget = this._target);\n\n\t\t// This is an edge case\n\t\tconst map = new Map();\n\t\tfor (const [key, value] of this._target) {\n\t\t\tif (maxPriority === value.priority) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t}\n\t\tthis._maxTarget = map;\n\t\treturn map;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n\t * @returns {{ module: Module, export: string[] | undefined } | undefined | false} the target, undefined when there is no target, false when no target is valid\n\t */\n\tfindTarget(moduleGraph, validTargetModuleFilter) {\n\t\treturn this._findTarget(moduleGraph, validTargetModuleFilter, new Set());\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n\t * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n\t * @returns {{ module: Module, export: string[] | undefined } | undefined | false} the target, undefined when there is no target, false when no target is valid\n\t */\n\t_findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited) {\n\t\tif (!this._target || this._target.size === 0) return undefined;\n\t\tlet rawTarget = this._getMaxTarget().values().next().value;\n\t\tif (!rawTarget) return undefined;\n\t\t/** @type {{ module: Module, export: string[] | undefined }} */\n\t\tlet target = {\n\t\t\tmodule: rawTarget.connection.module,\n\t\t\texport: rawTarget.export\n\t\t};\n\t\tfor (;;) {\n\t\t\tif (validTargetModuleFilter(target.module)) return target;\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\t\tconst exportInfo = exportsInfo.getExportInfo(target.export[0]);\n\t\t\tif (alreadyVisited.has(exportInfo)) return null;\n\t\t\tconst newTarget = exportInfo._findTarget(\n\t\t\t\tmoduleGraph,\n\t\t\t\tvalidTargetModuleFilter,\n\t\t\t\talreadyVisited\n\t\t\t);\n\t\t\tif (!newTarget) return false;\n\t\t\tif (target.export.length === 1) {\n\t\t\t\ttarget = newTarget;\n\t\t\t} else {\n\t\t\t\ttarget = {\n\t\t\t\t\tmodule: newTarget.module,\n\t\t\t\t\texport: newTarget.export\n\t\t\t\t\t\t? newTarget.export.concat(target.export.slice(1))\n\t\t\t\t\t\t: target.export.slice(1)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n\t * @returns {{ module: Module, export: string[] | undefined } | undefined} the target\n\t */\n\tgetTarget(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n\t\tconst result = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n\t\tif (result === CIRCULAR) return undefined;\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function({ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n\t * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n\t * @returns {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined } | CIRCULAR | undefined} the target\n\t */\n\t_getTarget(moduleGraph, resolveTargetFilter, alreadyVisited) {\n\t\t/**\n\t\t * @param {{ connection: ModuleGraphConnection, export: string[] | undefined } | null} inputTarget unresolved target\n\t\t * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n\t\t * @returns {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined } | CIRCULAR | null} resolved target\n\t\t */\n\t\tconst resolveTarget = (inputTarget, alreadyVisited) => {\n\t\t\tif (!inputTarget) return null;\n\t\t\tif (!inputTarget.export) {\n\t\t\t\treturn {\n\t\t\t\t\tmodule: inputTarget.connection.module,\n\t\t\t\t\tconnection: inputTarget.connection,\n\t\t\t\t\texport: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }} */\n\t\t\tlet target = {\n\t\t\t\tmodule: inputTarget.connection.module,\n\t\t\t\tconnection: inputTarget.connection,\n\t\t\t\texport: inputTarget.export\n\t\t\t};\n\t\t\tif (!resolveTargetFilter(target)) return target;\n\t\t\tlet alreadyVisitedOwned = false;\n\t\t\tfor (;;) {\n\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\t\t\tconst exportInfo = exportsInfo.getExportInfo(target.export[0]);\n\t\t\t\tif (!exportInfo) return target;\n\t\t\t\tif (alreadyVisited.has(exportInfo)) return CIRCULAR;\n\t\t\t\tconst newTarget = exportInfo._getTarget(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tresolveTargetFilter,\n\t\t\t\t\talreadyVisited\n\t\t\t\t);\n\t\t\t\tif (newTarget === CIRCULAR) return CIRCULAR;\n\t\t\t\tif (!newTarget) return target;\n\t\t\t\tif (target.export.length === 1) {\n\t\t\t\t\ttarget = newTarget;\n\t\t\t\t\tif (!target.export) return target;\n\t\t\t\t} else {\n\t\t\t\t\ttarget = {\n\t\t\t\t\t\tmodule: newTarget.module,\n\t\t\t\t\t\tconnection: newTarget.connection,\n\t\t\t\t\t\texport: newTarget.export\n\t\t\t\t\t\t\t? newTarget.export.concat(target.export.slice(1))\n\t\t\t\t\t\t\t: target.export.slice(1)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (!resolveTargetFilter(target)) return target;\n\t\t\t\tif (!alreadyVisitedOwned) {\n\t\t\t\t\talreadyVisited = new Set(alreadyVisited);\n\t\t\t\t\talreadyVisitedOwned = true;\n\t\t\t\t}\n\t\t\t\talreadyVisited.add(exportInfo);\n\t\t\t}\n\t\t};\n\n\t\tif (!this._target || this._target.size === 0) return undefined;\n\t\tif (alreadyVisited && alreadyVisited.has(this)) return CIRCULAR;\n\t\tconst newAlreadyVisited = new Set(alreadyVisited);\n\t\tnewAlreadyVisited.add(this);\n\t\tconst values = this._getMaxTarget().values();\n\t\tconst target = resolveTarget(values.next().value, newAlreadyVisited);\n\t\tif (target === CIRCULAR) return CIRCULAR;\n\t\tif (target === null) return undefined;\n\t\tlet result = values.next();\n\t\twhile (!result.done) {\n\t\t\tconst t = resolveTarget(result.value, newAlreadyVisited);\n\t\t\tif (t === CIRCULAR) return CIRCULAR;\n\t\t\tif (t === null) return undefined;\n\t\t\tif (t.module !== target.module) return undefined;\n\t\t\tif (!t.export !== !target.export) return undefined;\n\t\t\tif (target.export && !equals(t.export, target.export)) return undefined;\n\t\t\tresult = values.next();\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Move the target forward as long resolveTargetFilter is fulfilled\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function({ module: Module, export: string[] | undefined }): boolean} resolveTargetFilter filter function to further resolve target\n\t * @param {function({ module: Module, export: string[] | undefined }): ModuleGraphConnection=} updateOriginalConnection updates the original connection instead of using the target connection\n\t * @returns {{ module: Module, export: string[] | undefined } | undefined} the resolved target when moved\n\t */\n\tmoveTarget(moduleGraph, resolveTargetFilter, updateOriginalConnection) {\n\t\tconst target = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n\t\tif (target === CIRCULAR) return undefined;\n\t\tif (!target) return undefined;\n\t\tconst originalTarget = this._getMaxTarget().values().next().value;\n\t\tif (\n\t\t\toriginalTarget.connection === target.connection &&\n\t\t\toriginalTarget.export === target.export\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._target.clear();\n\t\tthis._target.set(undefined, {\n\t\t\tconnection: updateOriginalConnection\n\t\t\t\t? updateOriginalConnection(target)\n\t\t\t\t: target.connection,\n\t\t\texport: target.export,\n\t\t\tpriority: 0\n\t\t});\n\t\treturn target;\n\t}\n\n\tcreateNestedExportsInfo() {\n\t\tif (this.exportsInfoOwned) return this.exportsInfo;\n\t\tthis.exportsInfoOwned = true;\n\t\tconst oldExportsInfo = this.exportsInfo;\n\t\tthis.exportsInfo = new ExportsInfo();\n\t\tthis.exportsInfo.setHasProvideInfo();\n\t\tif (oldExportsInfo) {\n\t\t\tthis.exportsInfo.setRedirectNamedTo(oldExportsInfo);\n\t\t}\n\t\treturn this.exportsInfo;\n\t}\n\n\tgetNestedExportsInfo() {\n\t\treturn this.exportsInfo;\n\t}\n\n\thasInfo(baseInfo, runtime) {\n\t\treturn (\n\t\t\t(this._usedName && this._usedName !== this.name) ||\n\t\t\tthis.provided ||\n\t\t\tthis.terminalBinding ||\n\t\t\tthis.getUsed(runtime) !== baseInfo.getUsed(runtime)\n\t\t);\n\t}\n\n\tupdateHash(hash, runtime) {\n\t\tthis._updateHash(hash, runtime, new Set());\n\t}\n\n\t_updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n\t\thash.update(\n\t\t\t`${this._usedName || this.name}${this.getUsed(runtime)}${this.provided}${\n\t\t\t\tthis.terminalBinding\n\t\t\t}`\n\t\t);\n\t\tif (this.exportsInfo && !alreadyVisitedExportsInfo.has(this.exportsInfo)) {\n\t\t\tthis.exportsInfo._updateHash(hash, runtime, alreadyVisitedExportsInfo);\n\t\t}\n\t}\n\n\tgetUsedInfo() {\n\t\tif (this._globalUsed !== undefined) {\n\t\t\tswitch (this._globalUsed) {\n\t\t\t\tcase UsageState.Unused:\n\t\t\t\t\treturn \"unused\";\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn \"no usage info\";\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\treturn \"maybe used (runtime-defined)\";\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\treturn \"used\";\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\t\treturn \"only properties used\";\n\t\t\t}\n\t\t} else if (this._usedInRuntime !== undefined) {\n\t\t\t/** @type {Map<RuntimeUsageStateType, string[]>} */\n\t\t\tconst map = new Map();\n\t\t\tfor (const [runtime, used] of this._usedInRuntime) {\n\t\t\t\tconst list = map.get(used);\n\t\t\t\tif (list !== undefined) list.push(runtime);\n\t\t\t\telse map.set(used, [runtime]);\n\t\t\t}\n\t\t\tconst specificInfo = Array.from(map, ([used, runtimes]) => {\n\t\t\t\tswitch (used) {\n\t\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\t\treturn `no usage info in ${runtimes.join(\", \")}`;\n\t\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\t\treturn `maybe used in ${runtimes.join(\", \")} (runtime-defined)`;\n\t\t\t\t\tcase UsageState.Used:\n\t\t\t\t\t\treturn `used in ${runtimes.join(\", \")}`;\n\t\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\t\t\treturn `only properties used in ${runtimes.join(\", \")}`;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (specificInfo.length > 0) {\n\t\t\t\treturn specificInfo.join(\"; \");\n\t\t\t}\n\t\t}\n\t\treturn this._hasUseInRuntimeInfo ? \"unused\" : \"no usage info\";\n\t}\n\n\tgetProvidedInfo() {\n\t\tswitch (this.provided) {\n\t\t\tcase undefined:\n\t\t\t\treturn \"no provided info\";\n\t\t\tcase null:\n\t\t\t\treturn \"maybe provided (runtime-defined)\";\n\t\t\tcase true:\n\t\t\t\treturn \"provided\";\n\t\t\tcase false:\n\t\t\t\treturn \"not provided\";\n\t\t}\n\t}\n\n\tgetRenameInfo() {\n\t\tif (this._usedName !== null && this._usedName !== this.name) {\n\t\t\treturn `renamed to ${JSON.stringify(this._usedName).slice(1, -1)}`;\n\t\t}\n\t\tswitch (this.canMangleProvide) {\n\t\t\tcase undefined:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"missing provision and use info prevents renaming\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage prevents renaming (no provision info)\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"missing provision info prevents renaming\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase true:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"missing usage info prevents renaming\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage prevents renaming\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"could be renamed\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"provision prevents renaming (no use info)\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage and provision prevents renaming\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"provision prevents renaming\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthrow new Error(\n\t\t\t`Unexpected flags for getRenameInfo ${this.canMangleProvide} ${this.canMangleUse}`\n\t\t);\n\t}\n}\n\nmodule.exports = ExportsInfo;\nmodule.exports.ExportInfo = ExportInfo;\nmodule.exports.UsageState = UsageState;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}