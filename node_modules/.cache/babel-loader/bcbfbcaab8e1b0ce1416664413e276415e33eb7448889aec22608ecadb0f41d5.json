{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NormalModule = require(\"../NormalModule\");\nvar LazySet = require(\"../util/LazySet\");\nvar LoaderDependency = require(\"./LoaderDependency\");\nvar LoaderImportDependency = require(\"./LoaderImportDependency\");\n\n/** @typedef {import(\"../Compilation\").DepConstructor} DepConstructor */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\n/**\n * @callback LoadModuleCallback\n * @param {(Error | null)=} err error object\n * @param {string | Buffer=} source source code\n * @param {object=} map source map\n * @param {Module=} module loaded module if successful\n */\n\n/**\n * @callback ImportModuleCallback\n * @param {(Error | null)=} err error object\n * @param {any=} exports exports of the evaluated module\n */\n\n/**\n * @typedef {Object} ImportModuleOptions\n * @property {string=} layer the target layer\n * @property {string=} publicPath the target public path\n * @property {string=} baseUri target base uri\n */\nvar LoaderPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options options\n   */\n  function LoaderPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, LoaderPlugin);\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(LoaderPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"LoaderPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(LoaderDependency, normalModuleFactory);\n        compilation.dependencyFactories.set(LoaderImportDependency, normalModuleFactory);\n      });\n      compiler.hooks.compilation.tap(\"LoaderPlugin\", function (compilation) {\n        var moduleGraph = compilation.moduleGraph;\n        NormalModule.getCompilationHooks(compilation).loader.tap(\"LoaderPlugin\", function (loaderContext) {\n          /**\n           * @param {string} request the request string to load the module from\n           * @param {LoadModuleCallback} callback callback returning the loaded module or error\n           * @returns {void}\n           */\n          loaderContext.loadModule = function (request, callback) {\n            var dep = new LoaderDependency(request);\n            dep.loc = {\n              name: request\n            };\n            var factory = compilation.dependencyFactories.get( /** @type {DepConstructor} */dep.constructor);\n            if (factory === undefined) {\n              return callback(new Error(\"No module factory available for dependency type: \".concat(dep.constructor.name)));\n            }\n            compilation.buildQueue.increaseParallelism();\n            compilation.handleModuleCreation({\n              factory: factory,\n              dependencies: [dep],\n              originModule: loaderContext._module,\n              context: loaderContext.context,\n              recursive: false\n            }, function (err) {\n              compilation.buildQueue.decreaseParallelism();\n              if (err) {\n                return callback(err);\n              }\n              var referencedModule = moduleGraph.getModule(dep);\n              if (!referencedModule) {\n                return callback(new Error(\"Cannot load the module\"));\n              }\n              if (referencedModule.getNumberOfErrors() > 0) {\n                return callback(new Error(\"The loaded module contains errors\"));\n              }\n              var moduleSource = referencedModule.originalSource();\n              if (!moduleSource) {\n                return callback(new Error(\"The module created for a LoaderDependency must have an original source\"));\n              }\n              var source, map;\n              if (moduleSource.sourceAndMap) {\n                var sourceAndMap = moduleSource.sourceAndMap();\n                map = sourceAndMap.map;\n                source = sourceAndMap.source;\n              } else {\n                map = moduleSource.map();\n                source = moduleSource.source();\n              }\n              var fileDependencies = new LazySet();\n              var contextDependencies = new LazySet();\n              var missingDependencies = new LazySet();\n              var buildDependencies = new LazySet();\n              referencedModule.addCacheDependencies(fileDependencies, contextDependencies, missingDependencies, buildDependencies);\n              var _iterator = _createForOfIteratorHelper(fileDependencies),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var d = _step.value;\n                  loaderContext.addDependency(d);\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              var _iterator2 = _createForOfIteratorHelper(contextDependencies),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var _d = _step2.value;\n                  loaderContext.addContextDependency(_d);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              var _iterator3 = _createForOfIteratorHelper(missingDependencies),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _d2 = _step3.value;\n                  loaderContext.addMissingDependency(_d2);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              var _iterator4 = _createForOfIteratorHelper(buildDependencies),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var _d3 = _step4.value;\n                  loaderContext.addBuildDependency(_d3);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              return callback(null, source, map, referencedModule);\n            });\n          };\n\n          /**\n           * @param {string} request the request string to load the module from\n           * @param {ImportModuleOptions=} options options\n           * @param {ImportModuleCallback=} callback callback returning the exports\n           * @returns {void}\n           */\n          var importModule = function importModule(request, options, callback) {\n            var dep = new LoaderImportDependency(request);\n            dep.loc = {\n              name: request\n            };\n            var factory = compilation.dependencyFactories.get( /** @type {DepConstructor} */dep.constructor);\n            if (factory === undefined) {\n              return callback(new Error(\"No module factory available for dependency type: \".concat(dep.constructor.name)));\n            }\n            compilation.buildQueue.increaseParallelism();\n            compilation.handleModuleCreation({\n              factory: factory,\n              dependencies: [dep],\n              originModule: loaderContext._module,\n              contextInfo: {\n                issuerLayer: options.layer\n              },\n              context: loaderContext.context,\n              connectOrigin: false\n            }, function (err) {\n              compilation.buildQueue.decreaseParallelism();\n              if (err) {\n                return callback(err);\n              }\n              var referencedModule = moduleGraph.getModule(dep);\n              if (!referencedModule) {\n                return callback(new Error(\"Cannot load the module\"));\n              }\n              compilation.executeModule(referencedModule, {\n                entryOptions: {\n                  baseUri: options.baseUri,\n                  publicPath: options.publicPath\n                }\n              }, function (err, result) {\n                if (err) return callback(err);\n                var _iterator5 = _createForOfIteratorHelper(result.fileDependencies),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var d = _step5.value;\n                    loaderContext.addDependency(d);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n                var _iterator6 = _createForOfIteratorHelper(result.contextDependencies),\n                  _step6;\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    var _d4 = _step6.value;\n                    loaderContext.addContextDependency(_d4);\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n                var _iterator7 = _createForOfIteratorHelper(result.missingDependencies),\n                  _step7;\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var _d5 = _step7.value;\n                    loaderContext.addMissingDependency(_d5);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n                var _iterator8 = _createForOfIteratorHelper(result.buildDependencies),\n                  _step8;\n                try {\n                  for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                    var _d6 = _step8.value;\n                    loaderContext.addBuildDependency(_d6);\n                  }\n                } catch (err) {\n                  _iterator8.e(err);\n                } finally {\n                  _iterator8.f();\n                }\n                if (result.cacheable === false) loaderContext.cacheable(false);\n                var _iterator9 = _createForOfIteratorHelper(result.assets),\n                  _step9;\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    var _step9$value = _slicedToArray(_step9.value, 2),\n                      name = _step9$value[0],\n                      _step9$value$ = _step9$value[1],\n                      source = _step9$value$.source,\n                      info = _step9$value$.info;\n                    var buildInfo = loaderContext._module.buildInfo;\n                    if (!buildInfo.assets) {\n                      buildInfo.assets = Object.create(null);\n                      buildInfo.assetsInfo = new Map();\n                    }\n                    buildInfo.assets[name] = source;\n                    buildInfo.assetsInfo.set(name, info);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n                callback(null, result.exports);\n              });\n            });\n          };\n\n          /**\n           * @param {string} request the request string to load the module from\n           * @param {ImportModuleOptions} options options\n           * @param {ImportModuleCallback=} callback callback returning the exports\n           * @returns {Promise<any> | void} exports\n           */\n          loaderContext.importModule = function (request, options, callback) {\n            if (!callback) {\n              return new Promise(function (resolve, reject) {\n                importModule(request, options || {}, function (err, result) {\n                  if (err) reject(err);else resolve(result);\n                });\n              });\n            }\n            return importModule(request, options || {}, callback);\n          };\n        });\n      });\n    }\n  }]);\n  return LoaderPlugin;\n}();\nmodule.exports = LoaderPlugin;","map":{"version":3,"names":["NormalModule","require","LazySet","LoaderDependency","LoaderImportDependency","LoaderPlugin","options","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","moduleGraph","getCompilationHooks","loader","loaderContext","loadModule","request","callback","dep","loc","name","factory","get","constructor","undefined","Error","buildQueue","increaseParallelism","handleModuleCreation","dependencies","originModule","_module","context","recursive","err","decreaseParallelism","referencedModule","getModule","getNumberOfErrors","moduleSource","originalSource","source","map","sourceAndMap","fileDependencies","contextDependencies","missingDependencies","buildDependencies","addCacheDependencies","d","addDependency","addContextDependency","addMissingDependency","addBuildDependency","importModule","contextInfo","issuerLayer","layer","connectOrigin","executeModule","entryOptions","baseUri","publicPath","result","cacheable","assets","info","buildInfo","Object","create","assetsInfo","Map","exports","Promise","resolve","reject","module"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/LoaderPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst NormalModule = require(\"../NormalModule\");\nconst LazySet = require(\"../util/LazySet\");\nconst LoaderDependency = require(\"./LoaderDependency\");\nconst LoaderImportDependency = require(\"./LoaderImportDependency\");\n\n/** @typedef {import(\"../Compilation\").DepConstructor} DepConstructor */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\n/**\n * @callback LoadModuleCallback\n * @param {(Error | null)=} err error object\n * @param {string | Buffer=} source source code\n * @param {object=} map source map\n * @param {Module=} module loaded module if successful\n */\n\n/**\n * @callback ImportModuleCallback\n * @param {(Error | null)=} err error object\n * @param {any=} exports exports of the evaluated module\n */\n\n/**\n * @typedef {Object} ImportModuleOptions\n * @property {string=} layer the target layer\n * @property {string=} publicPath the target public path\n * @property {string=} baseUri target base uri\n */\n\nclass LoaderPlugin {\n\t/**\n\t * @param {Object} options options\n\t */\n\tconstructor(options = {}) {}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"LoaderPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLoaderDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tLoaderImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"LoaderPlugin\", compilation => {\n\t\t\tconst moduleGraph = compilation.moduleGraph;\n\t\t\tNormalModule.getCompilationHooks(compilation).loader.tap(\n\t\t\t\t\"LoaderPlugin\",\n\t\t\t\tloaderContext => {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} request the request string to load the module from\n\t\t\t\t\t * @param {LoadModuleCallback} callback callback returning the loaded module or error\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tloaderContext.loadModule = (request, callback) => {\n\t\t\t\t\t\tconst dep = new LoaderDependency(request);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: request\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst factory = compilation.dependencyFactories.get(\n\t\t\t\t\t\t\t/** @type {DepConstructor} */ (dep.constructor)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (factory === undefined) {\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`No module factory available for dependency type: ${dep.constructor.name}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.buildQueue.increaseParallelism();\n\t\t\t\t\t\tcompilation.handleModuleCreation(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfactory,\n\t\t\t\t\t\t\t\tdependencies: [dep],\n\t\t\t\t\t\t\t\toriginModule: loaderContext._module,\n\t\t\t\t\t\t\t\tcontext: loaderContext.context,\n\t\t\t\t\t\t\t\trecursive: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tcompilation.buildQueue.decreaseParallelism();\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst referencedModule = moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\tif (!referencedModule) {\n\t\t\t\t\t\t\t\t\treturn callback(new Error(\"Cannot load the module\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (referencedModule.getNumberOfErrors() > 0) {\n\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\tnew Error(\"The loaded module contains errors\")\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst moduleSource = referencedModule.originalSource();\n\t\t\t\t\t\t\t\tif (!moduleSource) {\n\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\"The module created for a LoaderDependency must have an original source\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet source, map;\n\t\t\t\t\t\t\t\tif (moduleSource.sourceAndMap) {\n\t\t\t\t\t\t\t\t\tconst sourceAndMap = moduleSource.sourceAndMap();\n\t\t\t\t\t\t\t\t\tmap = sourceAndMap.map;\n\t\t\t\t\t\t\t\t\tsource = sourceAndMap.source;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmap = moduleSource.map();\n\t\t\t\t\t\t\t\t\tsource = moduleSource.source();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst fileDependencies = new LazySet();\n\t\t\t\t\t\t\t\tconst contextDependencies = new LazySet();\n\t\t\t\t\t\t\t\tconst missingDependencies = new LazySet();\n\t\t\t\t\t\t\t\tconst buildDependencies = new LazySet();\n\t\t\t\t\t\t\t\treferencedModule.addCacheDependencies(\n\t\t\t\t\t\t\t\t\tfileDependencies,\n\t\t\t\t\t\t\t\t\tcontextDependencies,\n\t\t\t\t\t\t\t\t\tmissingDependencies,\n\t\t\t\t\t\t\t\t\tbuildDependencies\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tfor (const d of fileDependencies) {\n\t\t\t\t\t\t\t\t\tloaderContext.addDependency(d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const d of contextDependencies) {\n\t\t\t\t\t\t\t\t\tloaderContext.addContextDependency(d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const d of missingDependencies) {\n\t\t\t\t\t\t\t\t\tloaderContext.addMissingDependency(d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const d of buildDependencies) {\n\t\t\t\t\t\t\t\t\tloaderContext.addBuildDependency(d);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback(null, source, map, referencedModule);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} request the request string to load the module from\n\t\t\t\t\t * @param {ImportModuleOptions=} options options\n\t\t\t\t\t * @param {ImportModuleCallback=} callback callback returning the exports\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst importModule = (request, options, callback) => {\n\t\t\t\t\t\tconst dep = new LoaderImportDependency(request);\n\t\t\t\t\t\tdep.loc = {\n\t\t\t\t\t\t\tname: request\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst factory = compilation.dependencyFactories.get(\n\t\t\t\t\t\t\t/** @type {DepConstructor} */ (dep.constructor)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (factory === undefined) {\n\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`No module factory available for dependency type: ${dep.constructor.name}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.buildQueue.increaseParallelism();\n\t\t\t\t\t\tcompilation.handleModuleCreation(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfactory,\n\t\t\t\t\t\t\t\tdependencies: [dep],\n\t\t\t\t\t\t\t\toriginModule: loaderContext._module,\n\t\t\t\t\t\t\t\tcontextInfo: {\n\t\t\t\t\t\t\t\t\tissuerLayer: options.layer\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcontext: loaderContext.context,\n\t\t\t\t\t\t\t\tconnectOrigin: false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\tcompilation.buildQueue.decreaseParallelism();\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst referencedModule = moduleGraph.getModule(dep);\n\t\t\t\t\t\t\t\tif (!referencedModule) {\n\t\t\t\t\t\t\t\t\treturn callback(new Error(\"Cannot load the module\"));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcompilation.executeModule(\n\t\t\t\t\t\t\t\t\treferencedModule,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tentryOptions: {\n\t\t\t\t\t\t\t\t\t\t\tbaseUri: options.baseUri,\n\t\t\t\t\t\t\t\t\t\t\tpublicPath: options.publicPath\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\tfor (const d of result.fileDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (const d of result.contextDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addContextDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (const d of result.missingDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addMissingDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tfor (const d of result.buildDependencies) {\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.addBuildDependency(d);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (result.cacheable === false)\n\t\t\t\t\t\t\t\t\t\t\tloaderContext.cacheable(false);\n\t\t\t\t\t\t\t\t\t\tfor (const [name, { source, info }] of result.assets) {\n\t\t\t\t\t\t\t\t\t\t\tconst { buildInfo } = loaderContext._module;\n\t\t\t\t\t\t\t\t\t\t\tif (!buildInfo.assets) {\n\t\t\t\t\t\t\t\t\t\t\t\tbuildInfo.assets = Object.create(null);\n\t\t\t\t\t\t\t\t\t\t\t\tbuildInfo.assetsInfo = new Map();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbuildInfo.assets[name] = source;\n\t\t\t\t\t\t\t\t\t\t\tbuildInfo.assetsInfo.set(name, info);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcallback(null, result.exports);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} request the request string to load the module from\n\t\t\t\t\t * @param {ImportModuleOptions} options options\n\t\t\t\t\t * @param {ImportModuleCallback=} callback callback returning the exports\n\t\t\t\t\t * @returns {Promise<any> | void} exports\n\t\t\t\t\t */\n\t\t\t\t\tloaderContext.importModule = (request, options, callback) => {\n\t\t\t\t\t\tif (!callback) {\n\t\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\timportModule(request, options || {}, (err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\t\t\t\t\telse resolve(result);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn importModule(request, options || {}, callback);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = LoaderPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}