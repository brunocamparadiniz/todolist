{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar MapObjectSerializer = /*#__PURE__*/function () {\n  function MapObjectSerializer() {\n    _classCallCheck(this, MapObjectSerializer);\n  }\n  _createClass(MapObjectSerializer, [{\n    key: \"serialize\",\n    value: function serialize(obj, _ref) {\n      var write = _ref.write;\n      write(obj.size);\n      var _iterator = _createForOfIteratorHelper(obj.keys()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          write(key);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(obj.values()),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var value = _step2.value;\n          write(value);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(_ref2) {\n      var read = _ref2.read;\n      var size = read();\n      var map = new Map();\n      var keys = [];\n      for (var i = 0; i < size; i++) {\n        keys.push(read());\n      }\n      for (var _i = 0; _i < size; _i++) {\n        map.set(keys[_i], read());\n      }\n      return map;\n    }\n  }]);\n  return MapObjectSerializer;\n}();\nmodule.exports = MapObjectSerializer;","map":{"version":3,"names":["MapObjectSerializer","obj","write","size","keys","key","values","value","read","map","Map","i","push","set","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/serialization/MapObjectSerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nclass MapObjectSerializer {\n\tserialize(obj, { write }) {\n\t\twrite(obj.size);\n\t\tfor (const key of obj.keys()) {\n\t\t\twrite(key);\n\t\t}\n\t\tfor (const value of obj.values()) {\n\t\t\twrite(value);\n\t\t}\n\t}\n\tdeserialize({ read }) {\n\t\tlet size = read();\n\t\tconst map = new Map();\n\t\tconst keys = [];\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tkeys.push(read());\n\t\t}\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tmap.set(keys[i], read());\n\t\t}\n\t\treturn map;\n\t}\n}\n\nmodule.exports = MapObjectSerializer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA,IAEPA,mBAAmB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACxB,mBAAUC,GAAG,QAAa;MAAA,IAATC,KAAK,QAALA,KAAK;MACrBA,KAAK,CAACD,GAAG,CAACE,IAAI,CAAC;MAAC,2CACEF,GAAG,CAACG,IAAI,EAAE;QAAA;MAAA;QAA5B,oDAA8B;UAAA,IAAnBC,GAAG;UACbH,KAAK,CAACG,GAAG,CAAC;QACX;MAAC;QAAA;MAAA;QAAA;MAAA;MAAA,4CACmBJ,GAAG,CAACK,MAAM,EAAE;QAAA;MAAA;QAAhC,uDAAkC;UAAA,IAAvBC,KAAK;UACfL,KAAK,CAACK,KAAK,CAAC;QACb;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OACD,4BAAsB;MAAA,IAARC,IAAI,SAAJA,IAAI;MACjB,IAAIL,IAAI,GAAGK,IAAI,EAAE;MACjB,IAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;MACrB,IAAMN,IAAI,GAAG,EAAE;MACf,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,EAAEQ,CAAC,EAAE,EAAE;QAC9BP,IAAI,CAACQ,IAAI,CAACJ,IAAI,EAAE,CAAC;MAClB;MACA,KAAK,IAAIG,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGR,IAAI,EAAEQ,EAAC,EAAE,EAAE;QAC9BF,GAAG,CAACI,GAAG,CAACT,IAAI,CAACO,EAAC,CAAC,EAAEH,IAAI,EAAE,CAAC;MACzB;MACA,OAAOC,GAAG;IACX;EAAC;EAAA;AAAA;AAGFK,MAAM,CAACC,OAAO,GAAGf,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}