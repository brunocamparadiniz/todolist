{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar EventEmitter = require(\"events\").EventEmitter;\nvar fs = require(\"graceful-fs\");\nvar path = require(\"path\");\nvar watchEventSource = require(\"./watchEventSource\");\nvar EXISTANCE_ONLY_TIME_ENTRY = Object.freeze({});\nvar FS_ACCURACY = 2000;\nvar IS_OSX = require(\"os\").platform() === \"darwin\";\nvar WATCHPACK_POLLING = process.env.WATCHPACK_POLLING;\nvar FORCE_POLLING = \"\".concat(+WATCHPACK_POLLING) === WATCHPACK_POLLING ? +WATCHPACK_POLLING : !!WATCHPACK_POLLING && WATCHPACK_POLLING !== \"false\";\nfunction withoutCase(str) {\n  return str.toLowerCase();\n}\nfunction needCalls(times, callback) {\n  return function () {\n    if (--times === 0) {\n      return callback();\n    }\n  };\n}\nvar Watcher = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Watcher, _EventEmitter);\n  var _super = _createSuper(Watcher);\n  function Watcher(directoryWatcher, filePath, startTime) {\n    var _this;\n    _classCallCheck(this, Watcher);\n    _this = _super.call(this);\n    _this.directoryWatcher = directoryWatcher;\n    _this.path = filePath;\n    _this.startTime = startTime && +startTime;\n    return _this;\n  }\n  _createClass(Watcher, [{\n    key: \"checkStartTime\",\n    value: function checkStartTime(mtime, initial) {\n      var startTime = this.startTime;\n      if (typeof startTime !== \"number\") return !initial;\n      return startTime <= mtime;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.emit(\"closed\");\n    }\n  }]);\n  return Watcher;\n}(EventEmitter);\nvar DirectoryWatcher = /*#__PURE__*/function (_EventEmitter2) {\n  _inherits(DirectoryWatcher, _EventEmitter2);\n  var _super2 = _createSuper(DirectoryWatcher);\n  function DirectoryWatcher(watcherManager, directoryPath, options) {\n    var _this2;\n    _classCallCheck(this, DirectoryWatcher);\n    _this2 = _super2.call(this);\n    if (FORCE_POLLING) {\n      options.poll = FORCE_POLLING;\n    }\n    _this2.watcherManager = watcherManager;\n    _this2.options = options;\n    _this2.path = directoryPath;\n    // safeTime is the point in time after which reading is safe to be unchanged\n    // timestamp is a value that should be compared with another timestamp (mtime)\n    /** @type {Map<string, { safeTime: number, timestamp: number }} */\n    _this2.files = new Map();\n    /** @type {Map<string, number>} */\n    _this2.filesWithoutCase = new Map();\n    _this2.directories = new Map();\n    _this2.lastWatchEvent = 0;\n    _this2.initialScan = true;\n    _this2.ignored = options.ignored || function () {\n      return false;\n    };\n    _this2.nestedWatching = false;\n    _this2.polledWatching = typeof options.poll === \"number\" ? options.poll : options.poll ? 5007 : false;\n    _this2.timeout = undefined;\n    _this2.initialScanRemoved = new Set();\n    _this2.initialScanFinished = undefined;\n    /** @type {Map<string, Set<Watcher>>} */\n    _this2.watchers = new Map();\n    _this2.parentWatcher = null;\n    _this2.refs = 0;\n    _this2._activeEvents = new Map();\n    _this2.closed = false;\n    _this2.scanning = false;\n    _this2.scanAgain = false;\n    _this2.scanAgainInitial = false;\n    _this2.createWatcher();\n    _this2.doScan(true);\n    return _this2;\n  }\n  _createClass(DirectoryWatcher, [{\n    key: \"createWatcher\",\n    value: function createWatcher() {\n      var _this3 = this;\n      try {\n        if (this.polledWatching) {\n          this.watcher = {\n            close: function close() {\n              if (_this3.timeout) {\n                clearTimeout(_this3.timeout);\n                _this3.timeout = undefined;\n              }\n            }\n          };\n        } else {\n          if (IS_OSX) {\n            this.watchInParentDirectory();\n          }\n          this.watcher = watchEventSource.watch(this.path);\n          this.watcher.on(\"change\", this.onWatchEvent.bind(this));\n          this.watcher.on(\"error\", this.onWatcherError.bind(this));\n        }\n      } catch (err) {\n        this.onWatcherError(err);\n      }\n    }\n  }, {\n    key: \"forEachWatcher\",\n    value: function forEachWatcher(path, fn) {\n      var watchers = this.watchers.get(withoutCase(path));\n      if (watchers !== undefined) {\n        var _iterator = _createForOfIteratorHelper(watchers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var w = _step.value;\n            fn(w);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }, {\n    key: \"setMissing\",\n    value: function setMissing(itemPath, initial, type) {\n      if (this.initialScan) {\n        this.initialScanRemoved.add(itemPath);\n      }\n      var oldDirectory = this.directories.get(itemPath);\n      if (oldDirectory) {\n        if (this.nestedWatching) oldDirectory.close();\n        this.directories.delete(itemPath);\n        this.forEachWatcher(itemPath, function (w) {\n          return w.emit(\"remove\", type);\n        });\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", itemPath, null, type, initial);\n          });\n        }\n      }\n      var oldFile = this.files.get(itemPath);\n      if (oldFile) {\n        this.files.delete(itemPath);\n        var key = withoutCase(itemPath);\n        var count = this.filesWithoutCase.get(key) - 1;\n        if (count <= 0) {\n          this.filesWithoutCase.delete(key);\n          this.forEachWatcher(itemPath, function (w) {\n            return w.emit(\"remove\", type);\n          });\n        } else {\n          this.filesWithoutCase.set(key, count);\n        }\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", itemPath, null, type, initial);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setFileTime\",\n    value: function setFileTime(filePath, mtime, initial, ignoreWhenEqual, type) {\n      var now = Date.now();\n      if (this.ignored(filePath)) return;\n      var old = this.files.get(filePath);\n      var safeTime, accuracy;\n      if (initial) {\n        safeTime = Math.min(now, mtime) + FS_ACCURACY;\n        accuracy = FS_ACCURACY;\n      } else {\n        safeTime = now;\n        accuracy = 0;\n        if (old && old.timestamp === mtime && mtime + FS_ACCURACY < now) {\n          // We are sure that mtime is untouched\n          // This can be caused by some file attribute change\n          // e. g. when access time has been changed\n          // but the file content is untouched\n          return;\n        }\n      }\n      if (ignoreWhenEqual && old && old.timestamp === mtime) return;\n      this.files.set(filePath, {\n        safeTime: safeTime,\n        accuracy: accuracy,\n        timestamp: mtime\n      });\n      if (!old) {\n        var key = withoutCase(filePath);\n        var count = this.filesWithoutCase.get(key);\n        this.filesWithoutCase.set(key, (count || 0) + 1);\n        if (count !== undefined) {\n          // There is already a file with case-insensitive-equal name\n          // On a case-insensitive filesystem we may miss the renaming\n          // when only casing is changed.\n          // To be sure that our information is correct\n          // we trigger a rescan here\n          this.doScan(false);\n        }\n        this.forEachWatcher(filePath, function (w) {\n          if (!initial || w.checkStartTime(safeTime, initial)) {\n            w.emit(\"change\", mtime, type);\n          }\n        });\n      } else if (!initial) {\n        this.forEachWatcher(filePath, function (w) {\n          return w.emit(\"change\", mtime, type);\n        });\n      }\n      this.forEachWatcher(this.path, function (w) {\n        if (!initial || w.checkStartTime(safeTime, initial)) {\n          w.emit(\"change\", filePath, safeTime, type, initial);\n        }\n      });\n    }\n  }, {\n    key: \"setDirectory\",\n    value: function setDirectory(directoryPath, birthtime, initial, type) {\n      if (this.ignored(directoryPath)) return;\n      if (directoryPath === this.path) {\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", directoryPath, birthtime, type, initial);\n          });\n        }\n      } else {\n        var old = this.directories.get(directoryPath);\n        if (!old) {\n          var now = Date.now();\n          if (this.nestedWatching) {\n            this.createNestedWatcher(directoryPath);\n          } else {\n            this.directories.set(directoryPath, true);\n          }\n          var safeTime;\n          if (initial) {\n            safeTime = Math.min(now, birthtime) + FS_ACCURACY;\n          } else {\n            safeTime = now;\n          }\n          this.forEachWatcher(directoryPath, function (w) {\n            if (!initial || w.checkStartTime(safeTime, false)) {\n              w.emit(\"change\", birthtime, type);\n            }\n          });\n          this.forEachWatcher(this.path, function (w) {\n            if (!initial || w.checkStartTime(safeTime, initial)) {\n              w.emit(\"change\", directoryPath, safeTime, type, initial);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"createNestedWatcher\",\n    value: function createNestedWatcher(directoryPath) {\n      var _this4 = this;\n      var watcher = this.watcherManager.watchDirectory(directoryPath, 1);\n      watcher.on(\"change\", function (filePath, mtime, type, initial) {\n        _this4.forEachWatcher(_this4.path, function (w) {\n          if (!initial || w.checkStartTime(mtime, initial)) {\n            w.emit(\"change\", filePath, mtime, type, initial);\n          }\n        });\n      });\n      this.directories.set(directoryPath, watcher);\n    }\n  }, {\n    key: \"setNestedWatching\",\n    value: function setNestedWatching(flag) {\n      if (this.nestedWatching !== !!flag) {\n        this.nestedWatching = !!flag;\n        if (this.nestedWatching) {\n          var _iterator2 = _createForOfIteratorHelper(this.directories.keys()),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var directory = _step2.value;\n              this.createNestedWatcher(directory);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        } else {\n          var _iterator3 = _createForOfIteratorHelper(this.directories),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _slicedToArray(_step3.value, 2),\n                _directory = _step3$value[0],\n                watcher = _step3$value[1];\n              watcher.close();\n              this.directories.set(_directory, true);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"watch\",\n    value: function watch(filePath, startTime) {\n      var _this5 = this;\n      var key = withoutCase(filePath);\n      var watchers = this.watchers.get(key);\n      if (watchers === undefined) {\n        watchers = new Set();\n        this.watchers.set(key, watchers);\n      }\n      this.refs++;\n      var watcher = new Watcher(this, filePath, startTime);\n      watcher.on(\"closed\", function () {\n        if (--_this5.refs <= 0) {\n          _this5.close();\n          return;\n        }\n        watchers.delete(watcher);\n        if (watchers.size === 0) {\n          _this5.watchers.delete(key);\n          if (_this5.path === filePath) _this5.setNestedWatching(false);\n        }\n      });\n      watchers.add(watcher);\n      var safeTime;\n      if (filePath === this.path) {\n        this.setNestedWatching(true);\n        safeTime = this.lastWatchEvent;\n        var _iterator4 = _createForOfIteratorHelper(this.files.values()),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var entry = _step4.value;\n            fixupEntryAccuracy(entry);\n            safeTime = Math.max(safeTime, entry.safeTime);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      } else {\n        var _entry = this.files.get(filePath);\n        if (_entry) {\n          fixupEntryAccuracy(_entry);\n          safeTime = _entry.safeTime;\n        } else {\n          safeTime = 0;\n        }\n      }\n      if (safeTime) {\n        if (safeTime >= startTime) {\n          process.nextTick(function () {\n            if (_this5.closed) return;\n            if (filePath === _this5.path) {\n              watcher.emit(\"change\", filePath, safeTime, \"watch (outdated on attach)\", true);\n            } else {\n              watcher.emit(\"change\", safeTime, \"watch (outdated on attach)\", true);\n            }\n          });\n        }\n      } else if (this.initialScan) {\n        if (this.initialScanRemoved.has(filePath)) {\n          process.nextTick(function () {\n            if (_this5.closed) return;\n            watcher.emit(\"remove\");\n          });\n        }\n      } else if (!this.directories.has(filePath) && watcher.checkStartTime(this.initialScanFinished, false)) {\n        process.nextTick(function () {\n          if (_this5.closed) return;\n          watcher.emit(\"initial-missing\", \"watch (missing on attach)\");\n        });\n      }\n      return watcher;\n    }\n  }, {\n    key: \"onWatchEvent\",\n    value: function onWatchEvent(eventType, filename) {\n      var _this6 = this;\n      if (this.closed) return;\n      if (!filename) {\n        // In some cases no filename is provided\n        // This seem to happen on windows\n        // So some event happened but we don't know which file is affected\n        // We have to do a full scan of the directory\n        this.doScan(false);\n        return;\n      }\n      var filePath = path.join(this.path, filename);\n      if (this.ignored(filePath)) return;\n      if (this._activeEvents.get(filename) === undefined) {\n        this._activeEvents.set(filename, false);\n        var checkStats = function checkStats() {\n          if (_this6.closed) return;\n          _this6._activeEvents.set(filename, false);\n          fs.lstat(filePath, function (err, stats) {\n            if (_this6.closed) return;\n            if (_this6._activeEvents.get(filename) === true) {\n              process.nextTick(checkStats);\n              return;\n            }\n            _this6._activeEvents.delete(filename);\n            // ENOENT happens when the file/directory doesn't exist\n            // EPERM happens when the containing directory doesn't exist\n            if (err) {\n              if (err.code !== \"ENOENT\" && err.code !== \"EPERM\" && err.code !== \"EBUSY\") {\n                _this6.onStatsError(err);\n              } else {\n                if (filename === path.basename(_this6.path)) {\n                  // This may indicate that the directory itself was removed\n                  if (!fs.existsSync(_this6.path)) {\n                    _this6.onDirectoryRemoved(\"stat failed\");\n                  }\n                }\n              }\n            }\n            _this6.lastWatchEvent = Date.now();\n            if (!stats) {\n              _this6.setMissing(filePath, false, eventType);\n            } else if (stats.isDirectory()) {\n              _this6.setDirectory(filePath, +stats.birthtime || 1, false, eventType);\n            } else if (stats.isFile() || stats.isSymbolicLink()) {\n              if (stats.mtime) {\n                ensureFsAccuracy(stats.mtime);\n              }\n              _this6.setFileTime(filePath, +stats.mtime || +stats.ctime || 1, false, false, eventType);\n            }\n          });\n        };\n        process.nextTick(checkStats);\n      } else {\n        this._activeEvents.set(filename, true);\n      }\n    }\n  }, {\n    key: \"onWatcherError\",\n    value: function onWatcherError(err) {\n      if (this.closed) return;\n      if (err) {\n        if (err.code !== \"EPERM\" && err.code !== \"ENOENT\") {\n          console.error(\"Watchpack Error (watcher): \" + err);\n        }\n        this.onDirectoryRemoved(\"watch error\");\n      }\n    }\n  }, {\n    key: \"onStatsError\",\n    value: function onStatsError(err) {\n      if (err) {\n        console.error(\"Watchpack Error (stats): \" + err);\n      }\n    }\n  }, {\n    key: \"onScanError\",\n    value: function onScanError(err) {\n      if (err) {\n        console.error(\"Watchpack Error (initial scan): \" + err);\n      }\n      this.onScanFinished();\n    }\n  }, {\n    key: \"onScanFinished\",\n    value: function onScanFinished() {\n      var _this7 = this;\n      if (this.polledWatching) {\n        this.timeout = setTimeout(function () {\n          if (_this7.closed) return;\n          _this7.doScan(false);\n        }, this.polledWatching);\n      }\n    }\n  }, {\n    key: \"onDirectoryRemoved\",\n    value: function onDirectoryRemoved(reason) {\n      if (this.watcher) {\n        this.watcher.close();\n        this.watcher = null;\n      }\n      this.watchInParentDirectory();\n      var type = \"directory-removed (\".concat(reason, \")\");\n      var _iterator5 = _createForOfIteratorHelper(this.directories.keys()),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var directory = _step5.value;\n          this.setMissing(directory, null, type);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var _iterator6 = _createForOfIteratorHelper(this.files.keys()),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var file = _step6.value;\n          this.setMissing(file, null, type);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"watchInParentDirectory\",\n    value: function watchInParentDirectory() {\n      var _this8 = this;\n      if (!this.parentWatcher) {\n        var parentDir = path.dirname(this.path);\n        // avoid watching in the root directory\n        // removing directories in the root directory is not supported\n        if (path.dirname(parentDir) === parentDir) return;\n        this.parentWatcher = this.watcherManager.watchFile(this.path, 1);\n        this.parentWatcher.on(\"change\", function (mtime, type) {\n          if (_this8.closed) return;\n\n          // On non-osx platforms we don't need this watcher to detect\n          // directory removal, as an EPERM error indicates that\n          if ((!IS_OSX || _this8.polledWatching) && _this8.parentWatcher) {\n            _this8.parentWatcher.close();\n            _this8.parentWatcher = null;\n          }\n          // Try to create the watcher when parent directory is found\n          if (!_this8.watcher) {\n            _this8.createWatcher();\n            _this8.doScan(false);\n\n            // directory was created so we emit an event\n            _this8.forEachWatcher(_this8.path, function (w) {\n              return w.emit(\"change\", _this8.path, mtime, type, false);\n            });\n          }\n        });\n        this.parentWatcher.on(\"remove\", function () {\n          _this8.onDirectoryRemoved(\"parent directory removed\");\n        });\n      }\n    }\n  }, {\n    key: \"doScan\",\n    value: function doScan(initial) {\n      var _this9 = this;\n      if (this.scanning) {\n        if (this.scanAgain) {\n          if (!initial) this.scanAgainInitial = false;\n        } else {\n          this.scanAgain = true;\n          this.scanAgainInitial = initial;\n        }\n        return;\n      }\n      this.scanning = true;\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = undefined;\n      }\n      process.nextTick(function () {\n        if (_this9.closed) return;\n        fs.readdir(_this9.path, function (err, items) {\n          if (_this9.closed) return;\n          if (err) {\n            if (err.code === \"ENOENT\" || err.code === \"EPERM\") {\n              _this9.onDirectoryRemoved(\"scan readdir failed\");\n            } else {\n              _this9.onScanError(err);\n            }\n            _this9.initialScan = false;\n            _this9.initialScanFinished = Date.now();\n            if (initial) {\n              var _iterator7 = _createForOfIteratorHelper(_this9.watchers.values()),\n                _step7;\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var watchers = _step7.value;\n                  var _iterator8 = _createForOfIteratorHelper(watchers),\n                    _step8;\n                  try {\n                    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                      var watcher = _step8.value;\n                      if (watcher.checkStartTime(_this9.initialScanFinished, false)) {\n                        watcher.emit(\"initial-missing\", \"scan (parent directory missing in initial scan)\");\n                      }\n                    }\n                  } catch (err) {\n                    _iterator8.e(err);\n                  } finally {\n                    _iterator8.f();\n                  }\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n            }\n            if (_this9.scanAgain) {\n              _this9.scanAgain = false;\n              _this9.doScan(_this9.scanAgainInitial);\n            } else {\n              _this9.scanning = false;\n            }\n            return;\n          }\n          var itemPaths = new Set(items.map(function (item) {\n            return path.join(_this9.path, item.normalize(\"NFC\"));\n          }));\n          var _iterator9 = _createForOfIteratorHelper(_this9.files.keys()),\n            _step9;\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var file = _step9.value;\n              if (!itemPaths.has(file)) {\n                _this9.setMissing(file, initial, \"scan (missing)\");\n              }\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n          var _iterator10 = _createForOfIteratorHelper(_this9.directories.keys()),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var directory = _step10.value;\n              if (!itemPaths.has(directory)) {\n                _this9.setMissing(directory, initial, \"scan (missing)\");\n              }\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n          if (_this9.scanAgain) {\n            // Early repeat of scan\n            _this9.scanAgain = false;\n            _this9.doScan(initial);\n            return;\n          }\n          var itemFinished = needCalls(itemPaths.size + 1, function () {\n            if (_this9.closed) return;\n            _this9.initialScan = false;\n            _this9.initialScanRemoved = null;\n            _this9.initialScanFinished = Date.now();\n            if (initial) {\n              var missingWatchers = new Map(_this9.watchers);\n              missingWatchers.delete(withoutCase(_this9.path));\n              var _iterator11 = _createForOfIteratorHelper(itemPaths),\n                _step11;\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var item = _step11.value;\n                  missingWatchers.delete(withoutCase(item));\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n              var _iterator12 = _createForOfIteratorHelper(missingWatchers.values()),\n                _step12;\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  var _watchers = _step12.value;\n                  var _iterator13 = _createForOfIteratorHelper(_watchers),\n                    _step13;\n                  try {\n                    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                      var _watcher = _step13.value;\n                      if (_watcher.checkStartTime(_this9.initialScanFinished, false)) {\n                        _watcher.emit(\"initial-missing\", \"scan (missing in initial scan)\");\n                      }\n                    }\n                  } catch (err) {\n                    _iterator13.e(err);\n                  } finally {\n                    _iterator13.f();\n                  }\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n            }\n            if (_this9.scanAgain) {\n              _this9.scanAgain = false;\n              _this9.doScan(_this9.scanAgainInitial);\n            } else {\n              _this9.scanning = false;\n              _this9.onScanFinished();\n            }\n          });\n          var _iterator14 = _createForOfIteratorHelper(itemPaths),\n            _step14;\n          try {\n            var _loop = function _loop() {\n              var itemPath = _step14.value;\n              fs.lstat(itemPath, function (err2, stats) {\n                if (_this9.closed) return;\n                if (err2) {\n                  if (err2.code === \"ENOENT\" || err2.code === \"EPERM\" || err2.code === \"EACCES\" || err2.code === \"EBUSY\") {\n                    _this9.setMissing(itemPath, initial, \"scan (\" + err2.code + \")\");\n                  } else {\n                    _this9.onScanError(err2);\n                  }\n                  itemFinished();\n                  return;\n                }\n                if (stats.isFile() || stats.isSymbolicLink()) {\n                  if (stats.mtime) {\n                    ensureFsAccuracy(stats.mtime);\n                  }\n                  _this9.setFileTime(itemPath, +stats.mtime || +stats.ctime || 1, initial, true, \"scan (file)\");\n                } else if (stats.isDirectory()) {\n                  if (!initial || !_this9.directories.has(itemPath)) _this9.setDirectory(itemPath, +stats.birthtime || 1, initial, \"scan (dir)\");\n                }\n                itemFinished();\n              });\n            };\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n          itemFinished();\n        });\n      });\n    }\n  }, {\n    key: \"getTimes\",\n    value: function getTimes() {\n      var obj = Object.create(null);\n      var safeTime = this.lastWatchEvent;\n      var _iterator15 = _createForOfIteratorHelper(this.files),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _slicedToArray(_step15.value, 2),\n            _file = _step15$value[0],\n            entry = _step15$value[1];\n          fixupEntryAccuracy(entry);\n          safeTime = Math.max(safeTime, entry.safeTime);\n          obj[_file] = Math.max(entry.safeTime, entry.timestamp);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      if (this.nestedWatching) {\n        var _iterator16 = _createForOfIteratorHelper(this.directories.values()),\n          _step16;\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var w = _step16.value;\n            var times = w.directoryWatcher.getTimes();\n            for (var _i = 0, _Object$keys = Object.keys(times); _i < _Object$keys.length; _i++) {\n              var file = _Object$keys[_i];\n              var time = times[file];\n              safeTime = Math.max(safeTime, time);\n              obj[file] = time;\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n        obj[this.path] = safeTime;\n      }\n      if (!this.initialScan) {\n        var _iterator17 = _createForOfIteratorHelper(this.watchers.values()),\n          _step17;\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var watchers = _step17.value;\n            var _iterator18 = _createForOfIteratorHelper(watchers),\n              _step18;\n            try {\n              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                var watcher = _step18.value;\n                var _path = watcher.path;\n                if (!Object.prototype.hasOwnProperty.call(obj, _path)) {\n                  obj[_path] = null;\n                }\n              }\n            } catch (err) {\n              _iterator18.e(err);\n            } finally {\n              _iterator18.f();\n            }\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n      }\n      return obj;\n    }\n  }, {\n    key: \"collectTimeInfoEntries\",\n    value: function collectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n      var safeTime = this.lastWatchEvent;\n      var _iterator19 = _createForOfIteratorHelper(this.files),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var _step19$value = _slicedToArray(_step19.value, 2),\n            file = _step19$value[0],\n            entry = _step19$value[1];\n          fixupEntryAccuracy(entry);\n          safeTime = Math.max(safeTime, entry.safeTime);\n          fileTimestamps.set(file, entry);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      if (this.nestedWatching) {\n        var _iterator20 = _createForOfIteratorHelper(this.directories.values()),\n          _step20;\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var w = _step20.value;\n            safeTime = Math.max(safeTime, w.directoryWatcher.collectTimeInfoEntries(fileTimestamps, directoryTimestamps));\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n        fileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n        directoryTimestamps.set(this.path, {\n          safeTime: safeTime\n        });\n      } else {\n        var _iterator21 = _createForOfIteratorHelper(this.directories.keys()),\n          _step21;\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var dir = _step21.value;\n            // No additional info about this directory\n            // but maybe another DirectoryWatcher has info\n            fileTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n            if (!directoryTimestamps.has(dir)) directoryTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n        fileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n        directoryTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n      }\n      if (!this.initialScan) {\n        var _iterator22 = _createForOfIteratorHelper(this.watchers.values()),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var watchers = _step22.value;\n            var _iterator23 = _createForOfIteratorHelper(watchers),\n              _step23;\n            try {\n              for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                var watcher = _step23.value;\n                var _path2 = watcher.path;\n                if (!fileTimestamps.has(_path2)) {\n                  fileTimestamps.set(_path2, null);\n                }\n              }\n            } catch (err) {\n              _iterator23.e(err);\n            } finally {\n              _iterator23.f();\n            }\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n      return safeTime;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.closed = true;\n      this.initialScan = false;\n      if (this.watcher) {\n        this.watcher.close();\n        this.watcher = null;\n      }\n      if (this.nestedWatching) {\n        var _iterator24 = _createForOfIteratorHelper(this.directories.values()),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var w = _step24.value;\n            w.close();\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n        this.directories.clear();\n      }\n      if (this.parentWatcher) {\n        this.parentWatcher.close();\n        this.parentWatcher = null;\n      }\n      this.emit(\"closed\");\n    }\n  }]);\n  return DirectoryWatcher;\n}(EventEmitter);\nmodule.exports = DirectoryWatcher;\nmodule.exports.EXISTANCE_ONLY_TIME_ENTRY = EXISTANCE_ONLY_TIME_ENTRY;\nfunction fixupEntryAccuracy(entry) {\n  if (entry.accuracy > FS_ACCURACY) {\n    entry.safeTime = entry.safeTime - entry.accuracy + FS_ACCURACY;\n    entry.accuracy = FS_ACCURACY;\n  }\n}\nfunction ensureFsAccuracy(mtime) {\n  if (!mtime) return;\n  if (FS_ACCURACY > 1 && mtime % 1 !== 0) FS_ACCURACY = 1;else if (FS_ACCURACY > 10 && mtime % 10 !== 0) FS_ACCURACY = 10;else if (FS_ACCURACY > 100 && mtime % 100 !== 0) FS_ACCURACY = 100;else if (FS_ACCURACY > 1000 && mtime % 1000 !== 0) FS_ACCURACY = 1000;\n}","map":{"version":3,"names":["EventEmitter","require","fs","path","watchEventSource","EXISTANCE_ONLY_TIME_ENTRY","Object","freeze","FS_ACCURACY","IS_OSX","platform","WATCHPACK_POLLING","process","env","FORCE_POLLING","withoutCase","str","toLowerCase","needCalls","times","callback","Watcher","directoryWatcher","filePath","startTime","mtime","initial","emit","DirectoryWatcher","watcherManager","directoryPath","options","poll","files","Map","filesWithoutCase","directories","lastWatchEvent","initialScan","ignored","nestedWatching","polledWatching","timeout","undefined","initialScanRemoved","Set","initialScanFinished","watchers","parentWatcher","refs","_activeEvents","closed","scanning","scanAgain","scanAgainInitial","createWatcher","doScan","watcher","close","clearTimeout","watchInParentDirectory","watch","on","onWatchEvent","bind","onWatcherError","err","fn","get","w","itemPath","type","add","oldDirectory","delete","forEachWatcher","oldFile","key","count","set","ignoreWhenEqual","now","Date","old","safeTime","accuracy","Math","min","timestamp","checkStartTime","birthtime","createNestedWatcher","watchDirectory","flag","keys","directory","size","setNestedWatching","values","entry","fixupEntryAccuracy","max","nextTick","has","eventType","filename","join","checkStats","lstat","stats","code","onStatsError","basename","existsSync","onDirectoryRemoved","setMissing","isDirectory","setDirectory","isFile","isSymbolicLink","ensureFsAccuracy","setFileTime","ctime","console","error","onScanFinished","setTimeout","reason","file","parentDir","dirname","watchFile","readdir","items","onScanError","itemPaths","map","item","normalize","itemFinished","missingWatchers","err2","obj","create","getTimes","time","prototype","hasOwnProperty","call","fileTimestamps","directoryTimestamps","collectTimeInfoEntries","dir","clear","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/watchpack/lib/DirectoryWatcher.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EventEmitter = require(\"events\").EventEmitter;\nconst fs = require(\"graceful-fs\");\nconst path = require(\"path\");\n\nconst watchEventSource = require(\"./watchEventSource\");\n\nconst EXISTANCE_ONLY_TIME_ENTRY = Object.freeze({});\n\nlet FS_ACCURACY = 2000;\n\nconst IS_OSX = require(\"os\").platform() === \"darwin\";\nconst WATCHPACK_POLLING = process.env.WATCHPACK_POLLING;\nconst FORCE_POLLING =\n\t`${+WATCHPACK_POLLING}` === WATCHPACK_POLLING\n\t\t? +WATCHPACK_POLLING\n\t\t: !!WATCHPACK_POLLING && WATCHPACK_POLLING !== \"false\";\n\nfunction withoutCase(str) {\n\treturn str.toLowerCase();\n}\n\nfunction needCalls(times, callback) {\n\treturn function() {\n\t\tif (--times === 0) {\n\t\t\treturn callback();\n\t\t}\n\t};\n}\n\nclass Watcher extends EventEmitter {\n\tconstructor(directoryWatcher, filePath, startTime) {\n\t\tsuper();\n\t\tthis.directoryWatcher = directoryWatcher;\n\t\tthis.path = filePath;\n\t\tthis.startTime = startTime && +startTime;\n\t}\n\n\tcheckStartTime(mtime, initial) {\n\t\tconst startTime = this.startTime;\n\t\tif (typeof startTime !== \"number\") return !initial;\n\t\treturn startTime <= mtime;\n\t}\n\n\tclose() {\n\t\tthis.emit(\"closed\");\n\t}\n}\n\nclass DirectoryWatcher extends EventEmitter {\n\tconstructor(watcherManager, directoryPath, options) {\n\t\tsuper();\n\t\tif (FORCE_POLLING) {\n\t\t\toptions.poll = FORCE_POLLING;\n\t\t}\n\t\tthis.watcherManager = watcherManager;\n\t\tthis.options = options;\n\t\tthis.path = directoryPath;\n\t\t// safeTime is the point in time after which reading is safe to be unchanged\n\t\t// timestamp is a value that should be compared with another timestamp (mtime)\n\t\t/** @type {Map<string, { safeTime: number, timestamp: number }} */\n\t\tthis.files = new Map();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.filesWithoutCase = new Map();\n\t\tthis.directories = new Map();\n\t\tthis.lastWatchEvent = 0;\n\t\tthis.initialScan = true;\n\t\tthis.ignored = options.ignored || (() => false);\n\t\tthis.nestedWatching = false;\n\t\tthis.polledWatching =\n\t\t\ttypeof options.poll === \"number\"\n\t\t\t\t? options.poll\n\t\t\t\t: options.poll\n\t\t\t\t? 5007\n\t\t\t\t: false;\n\t\tthis.timeout = undefined;\n\t\tthis.initialScanRemoved = new Set();\n\t\tthis.initialScanFinished = undefined;\n\t\t/** @type {Map<string, Set<Watcher>>} */\n\t\tthis.watchers = new Map();\n\t\tthis.parentWatcher = null;\n\t\tthis.refs = 0;\n\t\tthis._activeEvents = new Map();\n\t\tthis.closed = false;\n\t\tthis.scanning = false;\n\t\tthis.scanAgain = false;\n\t\tthis.scanAgainInitial = false;\n\n\t\tthis.createWatcher();\n\t\tthis.doScan(true);\n\t}\n\n\tcreateWatcher() {\n\t\ttry {\n\t\t\tif (this.polledWatching) {\n\t\t\t\tthis.watcher = {\n\t\t\t\t\tclose: () => {\n\t\t\t\t\t\tif (this.timeout) {\n\t\t\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\t\t\tthis.timeout = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (IS_OSX) {\n\t\t\t\t\tthis.watchInParentDirectory();\n\t\t\t\t}\n\t\t\t\tthis.watcher = watchEventSource.watch(this.path);\n\t\t\t\tthis.watcher.on(\"change\", this.onWatchEvent.bind(this));\n\t\t\t\tthis.watcher.on(\"error\", this.onWatcherError.bind(this));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.onWatcherError(err);\n\t\t}\n\t}\n\n\tforEachWatcher(path, fn) {\n\t\tconst watchers = this.watchers.get(withoutCase(path));\n\t\tif (watchers !== undefined) {\n\t\t\tfor (const w of watchers) {\n\t\t\t\tfn(w);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMissing(itemPath, initial, type) {\n\t\tif (this.initialScan) {\n\t\t\tthis.initialScanRemoved.add(itemPath);\n\t\t}\n\n\t\tconst oldDirectory = this.directories.get(itemPath);\n\t\tif (oldDirectory) {\n\t\t\tif (this.nestedWatching) oldDirectory.close();\n\t\t\tthis.directories.delete(itemPath);\n\n\t\t\tthis.forEachWatcher(itemPath, w => w.emit(\"remove\", type));\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", itemPath, null, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst oldFile = this.files.get(itemPath);\n\t\tif (oldFile) {\n\t\t\tthis.files.delete(itemPath);\n\t\t\tconst key = withoutCase(itemPath);\n\t\t\tconst count = this.filesWithoutCase.get(key) - 1;\n\t\t\tif (count <= 0) {\n\t\t\t\tthis.filesWithoutCase.delete(key);\n\t\t\t\tthis.forEachWatcher(itemPath, w => w.emit(\"remove\", type));\n\t\t\t} else {\n\t\t\t\tthis.filesWithoutCase.set(key, count);\n\t\t\t}\n\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", itemPath, null, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetFileTime(filePath, mtime, initial, ignoreWhenEqual, type) {\n\t\tconst now = Date.now();\n\n\t\tif (this.ignored(filePath)) return;\n\n\t\tconst old = this.files.get(filePath);\n\n\t\tlet safeTime, accuracy;\n\t\tif (initial) {\n\t\t\tsafeTime = Math.min(now, mtime) + FS_ACCURACY;\n\t\t\taccuracy = FS_ACCURACY;\n\t\t} else {\n\t\t\tsafeTime = now;\n\t\t\taccuracy = 0;\n\n\t\t\tif (old && old.timestamp === mtime && mtime + FS_ACCURACY < now) {\n\t\t\t\t// We are sure that mtime is untouched\n\t\t\t\t// This can be caused by some file attribute change\n\t\t\t\t// e. g. when access time has been changed\n\t\t\t\t// but the file content is untouched\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (ignoreWhenEqual && old && old.timestamp === mtime) return;\n\n\t\tthis.files.set(filePath, {\n\t\t\tsafeTime,\n\t\t\taccuracy,\n\t\t\ttimestamp: mtime\n\t\t});\n\n\t\tif (!old) {\n\t\t\tconst key = withoutCase(filePath);\n\t\t\tconst count = this.filesWithoutCase.get(key);\n\t\t\tthis.filesWithoutCase.set(key, (count || 0) + 1);\n\t\t\tif (count !== undefined) {\n\t\t\t\t// There is already a file with case-insensitive-equal name\n\t\t\t\t// On a case-insensitive filesystem we may miss the renaming\n\t\t\t\t// when only casing is changed.\n\t\t\t\t// To be sure that our information is correct\n\t\t\t\t// we trigger a rescan here\n\t\t\t\tthis.doScan(false);\n\t\t\t}\n\n\t\t\tthis.forEachWatcher(filePath, w => {\n\t\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\t\tw.emit(\"change\", mtime, type);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (!initial) {\n\t\t\tthis.forEachWatcher(filePath, w => w.emit(\"change\", mtime, type));\n\t\t}\n\t\tthis.forEachWatcher(this.path, w => {\n\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\tw.emit(\"change\", filePath, safeTime, type, initial);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetDirectory(directoryPath, birthtime, initial, type) {\n\t\tif (this.ignored(directoryPath)) return;\n\t\tif (directoryPath === this.path) {\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", directoryPath, birthtime, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst old = this.directories.get(directoryPath);\n\t\t\tif (!old) {\n\t\t\t\tconst now = Date.now();\n\n\t\t\t\tif (this.nestedWatching) {\n\t\t\t\t\tthis.createNestedWatcher(directoryPath);\n\t\t\t\t} else {\n\t\t\t\t\tthis.directories.set(directoryPath, true);\n\t\t\t\t}\n\n\t\t\t\tlet safeTime;\n\t\t\t\tif (initial) {\n\t\t\t\t\tsafeTime = Math.min(now, birthtime) + FS_ACCURACY;\n\t\t\t\t} else {\n\t\t\t\t\tsafeTime = now;\n\t\t\t\t}\n\n\t\t\t\tthis.forEachWatcher(directoryPath, w => {\n\t\t\t\t\tif (!initial || w.checkStartTime(safeTime, false)) {\n\t\t\t\t\t\tw.emit(\"change\", birthtime, type);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.forEachWatcher(this.path, w => {\n\t\t\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\t\t\tw.emit(\"change\", directoryPath, safeTime, type, initial);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateNestedWatcher(directoryPath) {\n\t\tconst watcher = this.watcherManager.watchDirectory(directoryPath, 1);\n\t\twatcher.on(\"change\", (filePath, mtime, type, initial) => {\n\t\t\tthis.forEachWatcher(this.path, w => {\n\t\t\t\tif (!initial || w.checkStartTime(mtime, initial)) {\n\t\t\t\t\tw.emit(\"change\", filePath, mtime, type, initial);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.directories.set(directoryPath, watcher);\n\t}\n\n\tsetNestedWatching(flag) {\n\t\tif (this.nestedWatching !== !!flag) {\n\t\t\tthis.nestedWatching = !!flag;\n\t\t\tif (this.nestedWatching) {\n\t\t\t\tfor (const directory of this.directories.keys()) {\n\t\t\t\t\tthis.createNestedWatcher(directory);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const [directory, watcher] of this.directories) {\n\t\t\t\t\twatcher.close();\n\t\t\t\t\tthis.directories.set(directory, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twatch(filePath, startTime) {\n\t\tconst key = withoutCase(filePath);\n\t\tlet watchers = this.watchers.get(key);\n\t\tif (watchers === undefined) {\n\t\t\twatchers = new Set();\n\t\t\tthis.watchers.set(key, watchers);\n\t\t}\n\t\tthis.refs++;\n\t\tconst watcher = new Watcher(this, filePath, startTime);\n\t\twatcher.on(\"closed\", () => {\n\t\t\tif (--this.refs <= 0) {\n\t\t\t\tthis.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twatchers.delete(watcher);\n\t\t\tif (watchers.size === 0) {\n\t\t\t\tthis.watchers.delete(key);\n\t\t\t\tif (this.path === filePath) this.setNestedWatching(false);\n\t\t\t}\n\t\t});\n\t\twatchers.add(watcher);\n\t\tlet safeTime;\n\t\tif (filePath === this.path) {\n\t\t\tthis.setNestedWatching(true);\n\t\t\tsafeTime = this.lastWatchEvent;\n\t\t\tfor (const entry of this.files.values()) {\n\t\t\t\tfixupEntryAccuracy(entry);\n\t\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\t}\n\t\t} else {\n\t\t\tconst entry = this.files.get(filePath);\n\t\t\tif (entry) {\n\t\t\t\tfixupEntryAccuracy(entry);\n\t\t\t\tsafeTime = entry.safeTime;\n\t\t\t} else {\n\t\t\t\tsafeTime = 0;\n\t\t\t}\n\t\t}\n\t\tif (safeTime) {\n\t\t\tif (safeTime >= startTime) {\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tif (filePath === this.path) {\n\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\"change\",\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\tsafeTime,\n\t\t\t\t\t\t\t\"watch (outdated on attach)\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\"change\",\n\t\t\t\t\t\t\tsafeTime,\n\t\t\t\t\t\t\t\"watch (outdated on attach)\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (this.initialScan) {\n\t\t\tif (this.initialScanRemoved.has(filePath)) {\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\twatcher.emit(\"remove\");\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (\n\t\t\t!this.directories.has(filePath) &&\n\t\t\twatcher.checkStartTime(this.initialScanFinished, false)\n\t\t) {\n\t\t\tprocess.nextTick(() => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\twatcher.emit(\"initial-missing\", \"watch (missing on attach)\");\n\t\t\t});\n\t\t}\n\t\treturn watcher;\n\t}\n\n\tonWatchEvent(eventType, filename) {\n\t\tif (this.closed) return;\n\t\tif (!filename) {\n\t\t\t// In some cases no filename is provided\n\t\t\t// This seem to happen on windows\n\t\t\t// So some event happened but we don't know which file is affected\n\t\t\t// We have to do a full scan of the directory\n\t\t\tthis.doScan(false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst filePath = path.join(this.path, filename);\n\t\tif (this.ignored(filePath)) return;\n\n\t\tif (this._activeEvents.get(filename) === undefined) {\n\t\t\tthis._activeEvents.set(filename, false);\n\t\t\tconst checkStats = () => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tthis._activeEvents.set(filename, false);\n\t\t\t\tfs.lstat(filePath, (err, stats) => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tif (this._activeEvents.get(filename) === true) {\n\t\t\t\t\t\tprocess.nextTick(checkStats);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeEvents.delete(filename);\n\t\t\t\t\t// ENOENT happens when the file/directory doesn't exist\n\t\t\t\t\t// EPERM happens when the containing directory doesn't exist\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\terr.code !== \"ENOENT\" &&\n\t\t\t\t\t\t\terr.code !== \"EPERM\" &&\n\t\t\t\t\t\t\terr.code !== \"EBUSY\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.onStatsError(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (filename === path.basename(this.path)) {\n\t\t\t\t\t\t\t\t// This may indicate that the directory itself was removed\n\t\t\t\t\t\t\t\tif (!fs.existsSync(this.path)) {\n\t\t\t\t\t\t\t\t\tthis.onDirectoryRemoved(\"stat failed\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastWatchEvent = Date.now();\n\t\t\t\t\tif (!stats) {\n\t\t\t\t\t\tthis.setMissing(filePath, false, eventType);\n\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\tthis.setDirectory(\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t+stats.birthtime || 1,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\teventType\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (stats.isFile() || stats.isSymbolicLink()) {\n\t\t\t\t\t\tif (stats.mtime) {\n\t\t\t\t\t\t\tensureFsAccuracy(stats.mtime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setFileTime(\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t+stats.mtime || +stats.ctime || 1,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\teventType\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tprocess.nextTick(checkStats);\n\t\t} else {\n\t\t\tthis._activeEvents.set(filename, true);\n\t\t}\n\t}\n\n\tonWatcherError(err) {\n\t\tif (this.closed) return;\n\t\tif (err) {\n\t\t\tif (err.code !== \"EPERM\" && err.code !== \"ENOENT\") {\n\t\t\t\tconsole.error(\"Watchpack Error (watcher): \" + err);\n\t\t\t}\n\t\t\tthis.onDirectoryRemoved(\"watch error\");\n\t\t}\n\t}\n\n\tonStatsError(err) {\n\t\tif (err) {\n\t\t\tconsole.error(\"Watchpack Error (stats): \" + err);\n\t\t}\n\t}\n\n\tonScanError(err) {\n\t\tif (err) {\n\t\t\tconsole.error(\"Watchpack Error (initial scan): \" + err);\n\t\t}\n\t\tthis.onScanFinished();\n\t}\n\n\tonScanFinished() {\n\t\tif (this.polledWatching) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tthis.doScan(false);\n\t\t\t}, this.polledWatching);\n\t\t}\n\t}\n\n\tonDirectoryRemoved(reason) {\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tthis.watchInParentDirectory();\n\t\tconst type = `directory-removed (${reason})`;\n\t\tfor (const directory of this.directories.keys()) {\n\t\t\tthis.setMissing(directory, null, type);\n\t\t}\n\t\tfor (const file of this.files.keys()) {\n\t\t\tthis.setMissing(file, null, type);\n\t\t}\n\t}\n\n\twatchInParentDirectory() {\n\t\tif (!this.parentWatcher) {\n\t\t\tconst parentDir = path.dirname(this.path);\n\t\t\t// avoid watching in the root directory\n\t\t\t// removing directories in the root directory is not supported\n\t\t\tif (path.dirname(parentDir) === parentDir) return;\n\n\t\t\tthis.parentWatcher = this.watcherManager.watchFile(this.path, 1);\n\t\t\tthis.parentWatcher.on(\"change\", (mtime, type) => {\n\t\t\t\tif (this.closed) return;\n\n\t\t\t\t// On non-osx platforms we don't need this watcher to detect\n\t\t\t\t// directory removal, as an EPERM error indicates that\n\t\t\t\tif ((!IS_OSX || this.polledWatching) && this.parentWatcher) {\n\t\t\t\t\tthis.parentWatcher.close();\n\t\t\t\t\tthis.parentWatcher = null;\n\t\t\t\t}\n\t\t\t\t// Try to create the watcher when parent directory is found\n\t\t\t\tif (!this.watcher) {\n\t\t\t\t\tthis.createWatcher();\n\t\t\t\t\tthis.doScan(false);\n\n\t\t\t\t\t// directory was created so we emit an event\n\t\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\t\tw.emit(\"change\", this.path, mtime, type, false)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.parentWatcher.on(\"remove\", () => {\n\t\t\t\tthis.onDirectoryRemoved(\"parent directory removed\");\n\t\t\t});\n\t\t}\n\t}\n\n\tdoScan(initial) {\n\t\tif (this.scanning) {\n\t\t\tif (this.scanAgain) {\n\t\t\t\tif (!initial) this.scanAgainInitial = false;\n\t\t\t} else {\n\t\t\t\tthis.scanAgain = true;\n\t\t\t\tthis.scanAgainInitial = initial;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.scanning = true;\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = undefined;\n\t\t}\n\t\tprocess.nextTick(() => {\n\t\t\tif (this.closed) return;\n\t\t\tfs.readdir(this.path, (err, items) => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === \"ENOENT\" || err.code === \"EPERM\") {\n\t\t\t\t\t\tthis.onDirectoryRemoved(\"scan readdir failed\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.onScanError(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis.initialScan = false;\n\t\t\t\t\tthis.initialScanFinished = Date.now();\n\t\t\t\t\tif (initial) {\n\t\t\t\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\t\t\t\tif (watcher.checkStartTime(this.initialScanFinished, false)) {\n\t\t\t\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\t\t\t\"initial-missing\",\n\t\t\t\t\t\t\t\t\t\t\"scan (parent directory missing in initial scan)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\t\tthis.doScan(this.scanAgainInitial);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scanning = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemPaths = new Set(\n\t\t\t\t\titems.map(item => path.join(this.path, item.normalize(\"NFC\")))\n\t\t\t\t);\n\t\t\t\tfor (const file of this.files.keys()) {\n\t\t\t\t\tif (!itemPaths.has(file)) {\n\t\t\t\t\t\tthis.setMissing(file, initial, \"scan (missing)\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const directory of this.directories.keys()) {\n\t\t\t\t\tif (!itemPaths.has(directory)) {\n\t\t\t\t\t\tthis.setMissing(directory, initial, \"scan (missing)\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t// Early repeat of scan\n\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\tthis.doScan(initial);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemFinished = needCalls(itemPaths.size + 1, () => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tthis.initialScan = false;\n\t\t\t\t\tthis.initialScanRemoved = null;\n\t\t\t\t\tthis.initialScanFinished = Date.now();\n\t\t\t\t\tif (initial) {\n\t\t\t\t\t\tconst missingWatchers = new Map(this.watchers);\n\t\t\t\t\t\tmissingWatchers.delete(withoutCase(this.path));\n\t\t\t\t\t\tfor (const item of itemPaths) {\n\t\t\t\t\t\t\tmissingWatchers.delete(withoutCase(item));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const watchers of missingWatchers.values()) {\n\t\t\t\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\t\t\t\tif (watcher.checkStartTime(this.initialScanFinished, false)) {\n\t\t\t\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\t\t\t\"initial-missing\",\n\t\t\t\t\t\t\t\t\t\t\"scan (missing in initial scan)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\t\tthis.doScan(this.scanAgainInitial);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scanning = false;\n\t\t\t\t\t\tthis.onScanFinished();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const itemPath of itemPaths) {\n\t\t\t\t\tfs.lstat(itemPath, (err2, stats) => {\n\t\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\t\tif (err2) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\terr2.code === \"ENOENT\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EPERM\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EACCES\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EBUSY\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.setMissing(itemPath, initial, \"scan (\" + err2.code + \")\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.onScanError(err2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titemFinished();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stats.isFile() || stats.isSymbolicLink()) {\n\t\t\t\t\t\t\tif (stats.mtime) {\n\t\t\t\t\t\t\t\tensureFsAccuracy(stats.mtime);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setFileTime(\n\t\t\t\t\t\t\t\titemPath,\n\t\t\t\t\t\t\t\t+stats.mtime || +stats.ctime || 1,\n\t\t\t\t\t\t\t\tinitial,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\"scan (file)\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\t\tif (!initial || !this.directories.has(itemPath))\n\t\t\t\t\t\t\t\tthis.setDirectory(\n\t\t\t\t\t\t\t\t\titemPath,\n\t\t\t\t\t\t\t\t\t+stats.birthtime || 1,\n\t\t\t\t\t\t\t\t\tinitial,\n\t\t\t\t\t\t\t\t\t\"scan (dir)\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\titemFinished();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\titemFinished();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetTimes() {\n\t\tconst obj = Object.create(null);\n\t\tlet safeTime = this.lastWatchEvent;\n\t\tfor (const [file, entry] of this.files) {\n\t\t\tfixupEntryAccuracy(entry);\n\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\tobj[file] = Math.max(entry.safeTime, entry.timestamp);\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tconst times = w.directoryWatcher.getTimes();\n\t\t\t\tfor (const file of Object.keys(times)) {\n\t\t\t\t\tconst time = times[file];\n\t\t\t\t\tsafeTime = Math.max(safeTime, time);\n\t\t\t\t\tobj[file] = time;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj[this.path] = safeTime;\n\t\t}\n\t\tif (!this.initialScan) {\n\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\tconst path = watcher.path;\n\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, path)) {\n\t\t\t\t\t\tobj[path] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\tcollectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n\t\tlet safeTime = this.lastWatchEvent;\n\t\tfor (const [file, entry] of this.files) {\n\t\t\tfixupEntryAccuracy(entry);\n\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\tfileTimestamps.set(file, entry);\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tsafeTime = Math.max(\n\t\t\t\t\tsafeTime,\n\t\t\t\t\tw.directoryWatcher.collectTimeInfoEntries(\n\t\t\t\t\t\tfileTimestamps,\n\t\t\t\t\t\tdirectoryTimestamps\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tfileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\tdirectoryTimestamps.set(this.path, {\n\t\t\t\tsafeTime\n\t\t\t});\n\t\t} else {\n\t\t\tfor (const dir of this.directories.keys()) {\n\t\t\t\t// No additional info about this directory\n\t\t\t\t// but maybe another DirectoryWatcher has info\n\t\t\t\tfileTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\t\tif (!directoryTimestamps.has(dir))\n\t\t\t\t\tdirectoryTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\t}\n\t\t\tfileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\tdirectoryTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t}\n\t\tif (!this.initialScan) {\n\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\tconst path = watcher.path;\n\t\t\t\t\tif (!fileTimestamps.has(path)) {\n\t\t\t\t\t\tfileTimestamps.set(path, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn safeTime;\n\t}\n\n\tclose() {\n\t\tthis.closed = true;\n\t\tthis.initialScan = false;\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tw.close();\n\t\t\t}\n\t\t\tthis.directories.clear();\n\t\t}\n\t\tif (this.parentWatcher) {\n\t\t\tthis.parentWatcher.close();\n\t\t\tthis.parentWatcher = null;\n\t\t}\n\t\tthis.emit(\"closed\");\n\t}\n}\n\nmodule.exports = DirectoryWatcher;\nmodule.exports.EXISTANCE_ONLY_TIME_ENTRY = EXISTANCE_ONLY_TIME_ENTRY;\n\nfunction fixupEntryAccuracy(entry) {\n\tif (entry.accuracy > FS_ACCURACY) {\n\t\tentry.safeTime = entry.safeTime - entry.accuracy + FS_ACCURACY;\n\t\tentry.accuracy = FS_ACCURACY;\n\t}\n}\n\nfunction ensureFsAccuracy(mtime) {\n\tif (!mtime) return;\n\tif (FS_ACCURACY > 1 && mtime % 1 !== 0) FS_ACCURACY = 1;\n\telse if (FS_ACCURACY > 10 && mtime % 10 !== 0) FS_ACCURACY = 10;\n\telse if (FS_ACCURACY > 100 && mtime % 100 !== 0) FS_ACCURACY = 100;\n\telse if (FS_ACCURACY > 1000 && mtime % 1000 !== 0) FS_ACCURACY = 1000;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}