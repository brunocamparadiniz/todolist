{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"tapable\"),\n  SyncWaterfallHook = _require.SyncWaterfallHook;\nvar Compilation = require(\"../Compilation\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar RuntimeModule = require(\"../RuntimeModule\");\nvar Template = require(\"../Template\");\nvar chunkHasJs = require(\"../javascript/JavascriptModulesPlugin\").chunkHasJs;\nvar _require2 = require(\"../javascript/StartupHelpers\"),\n  getInitialChunkIds = _require2.getInitialChunkIds;\nvar compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\nvar compilationHooksMap = new WeakMap();\nvar JsonpChunkLoadingRuntimeModule = /*#__PURE__*/function (_RuntimeModule) {\n  _inherits(JsonpChunkLoadingRuntimeModule, _RuntimeModule);\n  var _super = _createSuper(JsonpChunkLoadingRuntimeModule);\n  function JsonpChunkLoadingRuntimeModule(runtimeRequirements) {\n    var _this;\n    _classCallCheck(this, JsonpChunkLoadingRuntimeModule);\n    _this = _super.call(this, \"jsonp chunk loading\", RuntimeModule.STAGE_ATTACH);\n    _this._runtimeRequirements = runtimeRequirements;\n    return _this;\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @returns {string} generated code\n   */\n  _createClass(JsonpChunkLoadingRuntimeModule, [{\n    key: \"_generateBaseUri\",\n    value: function _generateBaseUri(chunk) {\n      var options = chunk.getEntryOptions();\n      if (options && options.baseUri) {\n        return \"\".concat(RuntimeGlobals.baseURI, \" = \").concat(JSON.stringify(options.baseUri), \";\");\n      } else {\n        return \"\".concat(RuntimeGlobals.baseURI, \" = document.baseURI || self.location.href;\");\n      }\n    }\n\n    /**\n     * @returns {string} runtime code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      var chunkGraph = this.chunkGraph,\n        compilation = this.compilation,\n        chunk = this.chunk;\n      var runtimeTemplate = compilation.runtimeTemplate,\n        _compilation$outputOp = compilation.outputOptions,\n        chunkLoadingGlobal = _compilation$outputOp.chunkLoadingGlobal,\n        hotUpdateGlobal = _compilation$outputOp.hotUpdateGlobal,\n        crossOriginLoading = _compilation$outputOp.crossOriginLoading,\n        scriptType = _compilation$outputOp.scriptType;\n      var globalObject = runtimeTemplate.globalObject;\n      var _JsonpChunkLoadingRun = JsonpChunkLoadingRuntimeModule.getCompilationHooks(compilation),\n        linkPreload = _JsonpChunkLoadingRun.linkPreload,\n        linkPrefetch = _JsonpChunkLoadingRun.linkPrefetch;\n      var fn = RuntimeGlobals.ensureChunkHandlers;\n      var withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n      var withLoading = this._runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n      var withCallback = this._runtimeRequirements.has(RuntimeGlobals.chunkCallback);\n      var withOnChunkLoad = this._runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n      var withHmr = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n      var withHmrManifest = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n      var withPrefetch = this._runtimeRequirements.has(RuntimeGlobals.prefetchChunkHandlers);\n      var withPreload = this._runtimeRequirements.has(RuntimeGlobals.preloadChunkHandlers);\n      var chunkLoadingGlobalExpr = \"\".concat(globalObject, \"[\").concat(JSON.stringify(chunkLoadingGlobal), \"]\");\n      var conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n      var hasJsMatcher = compileBooleanMatcher(conditionMap);\n      var initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n      var stateExpression = withHmr ? \"\".concat(RuntimeGlobals.hmrRuntimeStatePrefix, \"_jsonp\") : undefined;\n      return Template.asString([withBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\", \"\", \"// object to store loaded and loading chunks\", \"// undefined = chunk not loaded, null = chunk preloaded/prefetched\", \"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\", \"var installedChunks = \".concat(stateExpression ? \"\".concat(stateExpression, \" = \").concat(stateExpression, \" || \") : \"\", \"{\"), Template.indent(Array.from(initialChunkIds, function (id) {\n        return \"\".concat(JSON.stringify(id), \": 0\");\n      }).join(\",\\n\")), \"};\", \"\", withLoading ? Template.asString([\"\".concat(fn, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? Template.indent([\"// JSONP chunk loading for javascript\", \"var installedChunkData = \".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\"), 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent([\"\", '// a Promise means \"currently loading\".', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : \"if(\".concat(hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"// setup Promise in chunk cache\", \"var promise = new Promise(\".concat(runtimeTemplate.expressionFunction(\"installedChunkData = installedChunks[chunkId] = [resolve, reject]\", \"resolve, reject\"), \");\"), \"promises.push(installedChunkData[2] = promise);\", \"\", \"// start chunk loading\", \"var url = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\"), \"// create error before stack unwound to get useful stacktrace later\", \"var error = new Error();\", \"var loadingEnded = \".concat(runtimeTemplate.basicFunction(\"event\", [\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId)) {\"), Template.indent([\"installedChunkData = installedChunks[chunkId];\", \"if(installedChunkData !== 0) installedChunks[chunkId] = undefined;\", \"if(installedChunkData) {\", Template.indent([\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"error.name = 'ChunkLoadError';\", \"error.type = errorType;\", \"error.request = realSrc;\", \"installedChunkData[1](error);\"]), \"}\"]), \"}\"]), \";\"), \"\".concat(RuntimeGlobals.loadScript, \"(url, loadingEnded, \\\"chunk-\\\" + chunkId, chunkId);\")]), \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"])), \";\")]) : \"// no chunk on demand loading\", \"\", withPrefetch && hasJsMatcher !== false ? \"\".concat(RuntimeGlobals.prefetchChunkHandlers, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId\", [\"if((!\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && \").concat(hasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"installedChunks[chunkId] = null;\", linkPrefetch.call(Template.asString([\"var link = document.createElement('link');\", crossOriginLoading ? \"link.crossOrigin = \".concat(JSON.stringify(crossOriginLoading), \";\") : \"\", \"if (\".concat(RuntimeGlobals.scriptNonce, \") {\"), Template.indent(\"link.setAttribute(\\\"nonce\\\", \".concat(RuntimeGlobals.scriptNonce, \");\")), \"}\", 'link.rel = \"prefetch\";', 'link.as = \"script\";', \"link.href = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\")]), chunk), \"document.head.appendChild(link);\"]), \"}\"]), \";\") : \"// no prefetching\", \"\", withPreload && hasJsMatcher !== false ? \"\".concat(RuntimeGlobals.preloadChunkHandlers, \".j = \").concat(runtimeTemplate.basicFunction(\"chunkId\", [\"if((!\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && \").concat(hasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\"), \") {\"), Template.indent([\"installedChunks[chunkId] = null;\", linkPreload.call(Template.asString([\"var link = document.createElement('link');\", scriptType ? \"link.type = \".concat(JSON.stringify(scriptType), \";\") : \"\", \"link.charset = 'utf-8';\", \"if (\".concat(RuntimeGlobals.scriptNonce, \") {\"), Template.indent(\"link.setAttribute(\\\"nonce\\\", \".concat(RuntimeGlobals.scriptNonce, \");\")), \"}\", 'link.rel = \"preload\";', 'link.as = \"script\";', \"link.href = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId);\"), crossOriginLoading ? crossOriginLoading === \"use-credentials\" ? 'link.crossOrigin = \"use-credentials\";' : Template.asString([\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\", Template.indent(\"link.crossOrigin = \".concat(JSON.stringify(crossOriginLoading), \";\")), \"}\"]) : \"\"]), chunk), \"document.head.appendChild(link);\"]), \"}\"]), \";\") : \"// no preloaded\", \"\", withHmr ? Template.asString([\"var currentUpdatedModulesList;\", \"var waitingUpdateResolves = {};\", \"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"currentUpdatedModulesList = updatedModulesList;\", \"return new Promise(\".concat(runtimeTemplate.basicFunction(\"resolve, reject\", [\"waitingUpdateResolves[chunkId] = resolve;\", \"// start update chunk loading\", \"var url = \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkUpdateScriptFilename, \"(chunkId);\"), \"// create error before stack unwound to get useful stacktrace later\", \"var error = new Error();\", \"var loadingEnded = \".concat(runtimeTemplate.basicFunction(\"event\", [\"if(waitingUpdateResolves[chunkId]) {\", Template.indent([\"waitingUpdateResolves[chunkId] = undefined\", \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"error.message = 'Loading hot update chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"error.name = 'ChunkLoadError';\", \"error.type = errorType;\", \"error.request = realSrc;\", \"reject(error);\"]), \"}\"]), \";\"), \"\".concat(RuntimeGlobals.loadScript, \"(url, loadingEnded);\")]), \");\")]), \"}\", \"\", \"\".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateGlobal), \"] = \").concat(runtimeTemplate.basicFunction(\"chunkId, moreModules, runtime\", [\"for(var moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent([\"currentUpdate[moduleId] = moreModules[moduleId];\", \"if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"if(waitingUpdateResolves[chunkId]) {\", Template.indent([\"waitingUpdateResolves[chunkId]();\", \"waitingUpdateResolves[chunkId] = undefined;\"]), \"}\"]), \";\"), \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"jsonp\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([\"\".concat(RuntimeGlobals.hmrDownloadManifest, \" = \").concat(runtimeTemplate.basicFunction(\"\", ['if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");', \"return fetch(\".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getUpdateManifestFilename, \"()).then(\").concat(runtimeTemplate.basicFunction(\"response\", [\"if(response.status === 404) return; // no update available\", 'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);', \"return response.json();\"]), \");\")]), \";\")]) : \"// no HMR manifest\", \"\", withOnChunkLoad ? \"\".concat(RuntimeGlobals.onChunksLoaded, \".j = \").concat(runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\"), \";\") : \"// no on chunks loaded\", \"\", withCallback || withLoading ? Template.asString([\"// install a JSONP callback for chunk loading\", \"var webpackJsonpCallback = \".concat(runtimeTemplate.basicFunction(\"parentChunkLoadingFunction, data\", [runtimeTemplate.destructureArray([\"chunkIds\", \"moreModules\", \"runtime\"], \"data\"), '// add \"moreModules\" to the modules object,', '// then flag all \"chunkIds\" as loaded and fire callback', \"var moduleId, chunkId, i = 0;\", \"if(chunkIds.some(\".concat(runtimeTemplate.returningFunction(\"installedChunks[id] !== 0\", \"id\"), \")) {\"), Template.indent([\"for(moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent(\"\".concat(RuntimeGlobals.moduleFactories, \"[moduleId] = moreModules[moduleId];\")), \"}\"]), \"}\", \"if(runtime) var result = runtime(__webpack_require__);\"]), \"}\", \"if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\", \"for(;i < chunkIds.length; i++) {\", Template.indent([\"chunkId = chunkIds[i];\", \"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(installedChunks, chunkId) && installedChunks[chunkId]) {\"), Template.indent(\"installedChunks[chunkId][0]();\"), \"}\", \"installedChunks[chunkId] = 0;\"]), \"}\", withOnChunkLoad ? \"return \".concat(RuntimeGlobals.onChunksLoaded, \"(result);\") : \"\"])), \"\", \"var chunkLoadingGlobal = \".concat(chunkLoadingGlobalExpr, \" = \").concat(chunkLoadingGlobalExpr, \" || [];\"), \"chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\", \"chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\"]) : \"// no jsonp function\"]);\n    }\n  }], [{\n    key: \"getCompilationHooks\",\n    value:\n    /**\n     * @param {Compilation} compilation the compilation\n     * @returns {JsonpCompilationPluginHooks} hooks\n     */\n    function getCompilationHooks(compilation) {\n      if (!(compilation instanceof Compilation)) {\n        throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n      }\n      var hooks = compilationHooksMap.get(compilation);\n      if (hooks === undefined) {\n        hooks = {\n          linkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n          linkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n        };\n        compilationHooksMap.set(compilation, hooks);\n      }\n      return hooks;\n    }\n  }]);\n  return JsonpChunkLoadingRuntimeModule;\n}(RuntimeModule);\nmodule.exports = JsonpChunkLoadingRuntimeModule;","map":{"version":3,"names":["require","SyncWaterfallHook","Compilation","RuntimeGlobals","RuntimeModule","Template","chunkHasJs","getInitialChunkIds","compileBooleanMatcher","compilationHooksMap","WeakMap","JsonpChunkLoadingRuntimeModule","runtimeRequirements","STAGE_ATTACH","_runtimeRequirements","chunk","options","getEntryOptions","baseUri","baseURI","JSON","stringify","chunkGraph","compilation","runtimeTemplate","outputOptions","chunkLoadingGlobal","hotUpdateGlobal","crossOriginLoading","scriptType","globalObject","getCompilationHooks","linkPreload","linkPrefetch","fn","ensureChunkHandlers","withBaseURI","has","withLoading","withCallback","chunkCallback","withOnChunkLoad","onChunksLoaded","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","withPrefetch","prefetchChunkHandlers","withPreload","preloadChunkHandlers","chunkLoadingGlobalExpr","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","stateExpression","hmrRuntimeStatePrefix","undefined","asString","_generateBaseUri","indent","Array","from","id","join","basicFunction","hasOwnProperty","expressionFunction","publicPath","getChunkScriptFilename","loadScript","call","scriptNonce","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","moduleFactories","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","returningFunction","destructureArray","TypeError","hooks","get","set","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/web/JsonpChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst { SyncWaterfallHook } = require(\"tapable\");\nconst Compilation = require(\"../Compilation\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst chunkHasJs = require(\"../javascript/JavascriptModulesPlugin\").chunkHasJs;\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass JsonpChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {JsonpCompilationPluginHooks} hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tlinkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\t\tlinkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"jsonp chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis._runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t} else {\n\t\t\treturn `${RuntimeGlobals.baseURI} = document.baseURI || self.location.href;`;\n\t\t}\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, compilation, chunk } = this;\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\toutputOptions: {\n\t\t\t\tchunkLoadingGlobal,\n\t\t\t\thotUpdateGlobal,\n\t\t\t\tcrossOriginLoading,\n\t\t\t\tscriptType\n\t\t\t}\n\t\t} = compilation;\n\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\tconst { linkPreload, linkPrefetch } =\n\t\t\tJsonpChunkLoadingRuntimeModule.getCompilationHooks(compilation);\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withLoading = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withCallback = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.chunkCallback\n\t\t);\n\t\tconst withOnChunkLoad = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withHmr = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst withPrefetch = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.prefetchChunkHandlers\n\t\t);\n\t\tconst withPreload = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.preloadChunkHandlers\n\t\t);\n\t\tconst chunkLoadingGlobalExpr = `${globalObject}[${JSON.stringify(\n\t\t\tchunkLoadingGlobal\n\t\t)}]`;\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_jsonp`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded and loading chunks\",\n\t\t\t\"// undefined = chunk not loaded, null = chunk preloaded/prefetched\",\n\t\t\t\"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\",\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${fn}.j = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\t\"// JSONP chunk loading for javascript\",\n\t\t\t\t\t\t\t\t\t\t`var installedChunkData = ${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;`,\n\t\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t'// a Promise means \"currently loading\".',\n\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2]);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// setup Promise in chunk cache\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var promise = new Promise(${runtimeTemplate.expressionFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`installedChunkData = installedChunks[chunkId] = [resolve, reject]`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"resolve, reject\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)});`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// start chunk loading\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var url = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// create error before stack unwound to get useful stacktrace later\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"var error = new Error();\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var loadingEnded = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"event\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId)) {`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData !== 0) installedChunks[chunkId] = undefined;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.name = 'ChunkLoadError';\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.type = errorType;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"error.request = realSrc;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData[1](error);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.loadScript}(url, loadingEnded, \"chunk-\" + chunkId, chunkId);`\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"])\n\t\t\t\t\t\t)};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk on demand loading\",\n\t\t\t\"\",\n\t\t\twithPrefetch && hasJsMatcher !== false\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.prefetchChunkHandlers\n\t\t\t\t  }.j = ${runtimeTemplate.basicFunction(\"chunkId\", [\n\t\t\t\t\t\t`if((!${\n\t\t\t\t\t\t\tRuntimeGlobals.hasOwnProperty\n\t\t\t\t\t\t}(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && ${\n\t\t\t\t\t\t\thasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\")\n\t\t\t\t\t\t}) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\tlinkPrefetch.call(\n\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t? `link.crossOrigin = ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t  )};`\n\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\t\t`if (${RuntimeGlobals.scriptNonce}) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t'link.rel = \"prefetch\";',\n\t\t\t\t\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\t\t\t\t`link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no prefetching\",\n\t\t\t\"\",\n\t\t\twithPreload && hasJsMatcher !== false\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.preloadChunkHandlers\n\t\t\t\t  }.j = ${runtimeTemplate.basicFunction(\"chunkId\", [\n\t\t\t\t\t\t`if((!${\n\t\t\t\t\t\t\tRuntimeGlobals.hasOwnProperty\n\t\t\t\t\t\t}(installedChunks, chunkId) || installedChunks[chunkId] === undefined) && ${\n\t\t\t\t\t\t\thasJsMatcher === true ? \"true\" : hasJsMatcher(\"chunkId\")\n\t\t\t\t\t\t}) {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"installedChunks[chunkId] = null;\",\n\t\t\t\t\t\t\tlinkPreload.call(\n\t\t\t\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\t\t\t\"var link = document.createElement('link');\",\n\t\t\t\t\t\t\t\t\tscriptType\n\t\t\t\t\t\t\t\t\t\t? `link.type = ${JSON.stringify(scriptType)};`\n\t\t\t\t\t\t\t\t\t\t: \"\",\n\t\t\t\t\t\t\t\t\t\"link.charset = 'utf-8';\",\n\t\t\t\t\t\t\t\t\t`if (${RuntimeGlobals.scriptNonce}) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t'link.rel = \"preload\";',\n\t\t\t\t\t\t\t\t\t'link.as = \"script\";',\n\t\t\t\t\t\t\t\t\t`link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t? crossOriginLoading === \"use-credentials\"\n\t\t\t\t\t\t\t\t\t\t\t? 'link.crossOrigin = \"use-credentials\";'\n\t\t\t\t\t\t\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`link.crossOrigin = ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcrossOriginLoading\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)};`\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"document.head.appendChild(link);\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no preloaded\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"var currentUpdatedModulesList;\",\n\t\t\t\t\t\t\"var waitingUpdateResolves = {};\",\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"currentUpdatedModulesList = updatedModulesList;\",\n\t\t\t\t\t\t\t`return new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\t\"resolve, reject\",\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = resolve;\",\n\t\t\t\t\t\t\t\t\t\"// start update chunk loading\",\n\t\t\t\t\t\t\t\t\t`var url = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId);`,\n\t\t\t\t\t\t\t\t\t\"// create error before stack unwound to get useful stacktrace later\",\n\t\t\t\t\t\t\t\t\t\"var error = new Error();\",\n\t\t\t\t\t\t\t\t\t`var loadingEnded = ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t\t\t\t\t\t\"if(waitingUpdateResolves[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = undefined\",\n\t\t\t\t\t\t\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\t\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.message = 'Loading hot update chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.name = 'ChunkLoadError';\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.type = errorType;\",\n\t\t\t\t\t\t\t\t\t\t\t\"error.request = realSrc;\",\n\t\t\t\t\t\t\t\t\t\t\t\"reject(error);\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t])};`,\n\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.loadScript}(url, loadingEnded);`\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\thotUpdateGlobal\n\t\t\t\t\t\t)}] = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, moreModules, runtime\",\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"currentUpdate[moduleId] = moreModules[moduleId];\",\n\t\t\t\t\t\t\t\t\t\t\"if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\"if(waitingUpdateResolves[chunkId]) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId]();\",\n\t\t\t\t\t\t\t\t\t\"waitingUpdateResolves[chunkId] = undefined;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"jsonp\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${\n\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t\t\t\t\t} = ${runtimeTemplate.basicFunction(\"\", [\n\t\t\t\t\t\t\t'if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");',\n\t\t\t\t\t\t\t`return fetch(${RuntimeGlobals.publicPath} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t}()).then(${runtimeTemplate.basicFunction(\"response\", [\n\t\t\t\t\t\t\t\t\"if(response.status === 404) return; // no update available\",\n\t\t\t\t\t\t\t\t'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);',\n\t\t\t\t\t\t\t\t\"return response.json();\"\n\t\t\t\t\t\t\t])});`\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.j = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithCallback || withLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// install a JSONP callback for chunk loading\",\n\t\t\t\t\t\t`var webpackJsonpCallback = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"parentChunkLoadingFunction, data\",\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\truntimeTemplate.destructureArray(\n\t\t\t\t\t\t\t\t\t[\"chunkIds\", \"moreModules\", \"runtime\"],\n\t\t\t\t\t\t\t\t\t\"data\"\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t'// add \"moreModules\" to the modules object,',\n\t\t\t\t\t\t\t\t'// then flag all \"chunkIds\" as loaded and fire callback',\n\t\t\t\t\t\t\t\t\"var moduleId, chunkId, i = 0;\",\n\t\t\t\t\t\t\t\t`if(chunkIds.some(${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\"installedChunks[id] !== 0\",\n\t\t\t\t\t\t\t\t\t\"id\"\n\t\t\t\t\t\t\t\t)})) {`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"for(moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"if(runtime) var result = runtime(__webpack_require__);\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\",\n\t\t\t\t\t\t\t\t\"for(;i < chunkIds.length; i++) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"chunkId = chunkIds[i];\",\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) && installedChunks[chunkId]) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkId][0]();\"),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\twithOnChunkLoad\n\t\t\t\t\t\t\t\t\t? `return ${RuntimeGlobals.onChunksLoaded}(result);`\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)}`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`var chunkLoadingGlobal = ${chunkLoadingGlobalExpr} = ${chunkLoadingGlobalExpr} || [];`,\n\t\t\t\t\t\t\"chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\",\n\t\t\t\t\t\t\"chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no jsonp function\"\n\t\t]);\n\t}\n}\n\nmodule.exports = JsonpChunkLoadingRuntimeModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}