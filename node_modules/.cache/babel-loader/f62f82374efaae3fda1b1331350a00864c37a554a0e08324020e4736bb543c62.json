{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * intersect creates Set containing the intersection of elements between all sets\n * @template T\n * @param {Set<T>[]} sets an array of sets being checked for shared elements\n * @returns {Set<T>} returns a new Set containing the intersecting items\n */\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar intersect = function intersect(sets) {\n  if (sets.length === 0) return new Set();\n  if (sets.length === 1) return new Set(sets[0]);\n  var minSize = Infinity;\n  var minIndex = -1;\n  for (var i = 0; i < sets.length; i++) {\n    var size = sets[i].size;\n    if (size < minSize) {\n      minIndex = i;\n      minSize = size;\n    }\n  }\n  var current = new Set(sets[minIndex]);\n  for (var _i = 0; _i < sets.length; _i++) {\n    if (_i === minIndex) continue;\n    var set = sets[_i];\n    var _iterator = _createForOfIteratorHelper(current),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (!set.has(item)) {\n          current.delete(item);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return current;\n};\n\n/**\n * Checks if a set is the subset of another set\n * @template T\n * @param {Set<T>} bigSet a Set which contains the original elements to compare against\n * @param {Set<T>} smallSet the set whose elements might be contained inside of bigSet\n * @returns {boolean} returns true if smallSet contains all elements inside of the bigSet\n */\nvar isSubset = function isSubset(bigSet, smallSet) {\n  if (bigSet.size < smallSet.size) return false;\n  var _iterator2 = _createForOfIteratorHelper(smallSet),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var item = _step2.value;\n      if (!bigSet.has(item)) return false;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return true;\n};\n\n/**\n * @template T\n * @param {Set<T>} set a set\n * @param {function(T): boolean} fn selector function\n * @returns {T | undefined} found item\n */\nvar find = function find(set, fn) {\n  var _iterator3 = _createForOfIteratorHelper(set),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var item = _step3.value;\n      if (fn(item)) return item;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n};\n\n/**\n * @template T\n * @param {Set<T>} set a set\n * @returns {T | undefined} first item\n */\nvar first = function first(set) {\n  var entry = set.values().next();\n  return entry.done ? undefined : entry.value;\n};\n\n/**\n * @template T\n * @param {Set<T>} a first\n * @param {Set<T>} b second\n * @returns {Set<T>} combined set, may be identical to a or b\n */\nvar combine = function combine(a, b) {\n  if (b.size === 0) return a;\n  if (a.size === 0) return b;\n  var set = new Set(a);\n  var _iterator4 = _createForOfIteratorHelper(b),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var item = _step4.value;\n      set.add(item);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return set;\n};\nexports.intersect = intersect;\nexports.isSubset = isSubset;\nexports.find = find;\nexports.first = first;\nexports.combine = combine;","map":{"version":3,"names":["intersect","sets","length","Set","minSize","Infinity","minIndex","i","size","current","set","item","has","delete","isSubset","bigSet","smallSet","find","fn","first","entry","values","next","done","undefined","value","combine","a","b","add","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/util/SetHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * intersect creates Set containing the intersection of elements between all sets\n * @template T\n * @param {Set<T>[]} sets an array of sets being checked for shared elements\n * @returns {Set<T>} returns a new Set containing the intersecting items\n */\nconst intersect = sets => {\n\tif (sets.length === 0) return new Set();\n\tif (sets.length === 1) return new Set(sets[0]);\n\tlet minSize = Infinity;\n\tlet minIndex = -1;\n\tfor (let i = 0; i < sets.length; i++) {\n\t\tconst size = sets[i].size;\n\t\tif (size < minSize) {\n\t\t\tminIndex = i;\n\t\t\tminSize = size;\n\t\t}\n\t}\n\tconst current = new Set(sets[minIndex]);\n\tfor (let i = 0; i < sets.length; i++) {\n\t\tif (i === minIndex) continue;\n\t\tconst set = sets[i];\n\t\tfor (const item of current) {\n\t\t\tif (!set.has(item)) {\n\t\t\t\tcurrent.delete(item);\n\t\t\t}\n\t\t}\n\t}\n\treturn current;\n};\n\n/**\n * Checks if a set is the subset of another set\n * @template T\n * @param {Set<T>} bigSet a Set which contains the original elements to compare against\n * @param {Set<T>} smallSet the set whose elements might be contained inside of bigSet\n * @returns {boolean} returns true if smallSet contains all elements inside of the bigSet\n */\nconst isSubset = (bigSet, smallSet) => {\n\tif (bigSet.size < smallSet.size) return false;\n\tfor (const item of smallSet) {\n\t\tif (!bigSet.has(item)) return false;\n\t}\n\treturn true;\n};\n\n/**\n * @template T\n * @param {Set<T>} set a set\n * @param {function(T): boolean} fn selector function\n * @returns {T | undefined} found item\n */\nconst find = (set, fn) => {\n\tfor (const item of set) {\n\t\tif (fn(item)) return item;\n\t}\n};\n\n/**\n * @template T\n * @param {Set<T>} set a set\n * @returns {T | undefined} first item\n */\nconst first = set => {\n\tconst entry = set.values().next();\n\treturn entry.done ? undefined : entry.value;\n};\n\n/**\n * @template T\n * @param {Set<T>} a first\n * @param {Set<T>} b second\n * @returns {Set<T>} combined set, may be identical to a or b\n */\nconst combine = (a, b) => {\n\tif (b.size === 0) return a;\n\tif (a.size === 0) return b;\n\tconst set = new Set(a);\n\tfor (const item of b) set.add(item);\n\treturn set;\n};\n\nexports.intersect = intersect;\nexports.isSubset = isSubset;\nexports.find = find;\nexports.first = first;\nexports.combine = combine;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}