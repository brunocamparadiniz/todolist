{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../util/comparators\"),\n  compareModulesByPreOrderIndexOrIdentifier = _require.compareModulesByPreOrderIndexOrIdentifier;\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar createHash = require(\"../util/createHash\");\nvar _require2 = require(\"./IdHelpers\"),\n  getUsedModuleIdsAndModules = _require2.getUsedModuleIdsAndModules,\n  getFullModuleName = _require2.getFullModuleName;\n\n/** @typedef {import(\"../../declarations/plugins/HashedModuleIdsPlugin\").HashedModuleIdsPluginOptions} HashedModuleIdsPluginOptions */\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/HashedModuleIdsPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/HashedModuleIdsPlugin.json\");\n}, {\n  name: \"Hashed Module Ids Plugin\",\n  baseDataPath: \"options\"\n});\nvar HashedModuleIdsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {HashedModuleIdsPluginOptions=} options options object\n   */\n  function HashedModuleIdsPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, HashedModuleIdsPlugin);\n    validate(options);\n\n    /** @type {HashedModuleIdsPluginOptions} */\n    this.options = _objectSpread({\n      context: null,\n      hashFunction: \"md4\",\n      hashDigest: \"base64\",\n      hashDigestLength: 4\n    }, options);\n  }\n  _createClass(HashedModuleIdsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"HashedModuleIdsPlugin\", function (compilation) {\n        compilation.hooks.moduleIds.tap(\"HashedModuleIdsPlugin\", function () {\n          var chunkGraph = compilation.chunkGraph;\n          var context = _this.options.context ? _this.options.context : compiler.context;\n          var _getUsedModuleIdsAndM = getUsedModuleIdsAndModules(compilation),\n            _getUsedModuleIdsAndM2 = _slicedToArray(_getUsedModuleIdsAndM, 2),\n            usedIds = _getUsedModuleIdsAndM2[0],\n            modules = _getUsedModuleIdsAndM2[1];\n          var modulesInNaturalOrder = modules.sort(compareModulesByPreOrderIndexOrIdentifier(compilation.moduleGraph));\n          var _iterator = _createForOfIteratorHelper(modulesInNaturalOrder),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n              var ident = getFullModuleName(_module, context, compiler.root);\n              var hash = createHash(options.hashFunction);\n              hash.update(ident || \"\");\n              var hashId = /** @type {string} */\n              hash.digest(options.hashDigest);\n              var len = options.hashDigestLength;\n              while (usedIds.has(hashId.slice(0, len))) len++;\n              var moduleId = hashId.slice(0, len);\n              chunkGraph.setModuleId(_module, moduleId);\n              usedIds.add(moduleId);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      });\n    }\n  }]);\n  return HashedModuleIdsPlugin;\n}();\nmodule.exports = HashedModuleIdsPlugin;","map":{"version":3,"names":["require","compareModulesByPreOrderIndexOrIdentifier","createSchemaValidation","createHash","getUsedModuleIdsAndModules","getFullModuleName","validate","name","baseDataPath","HashedModuleIdsPlugin","options","context","hashFunction","hashDigest","hashDigestLength","compiler","hooks","compilation","tap","moduleIds","chunkGraph","usedIds","modules","modulesInNaturalOrder","sort","moduleGraph","module","ident","root","hash","update","hashId","digest","len","has","slice","moduleId","setModuleId","add","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ids/HashedModuleIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tcompareModulesByPreOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst {\n\tgetUsedModuleIdsAndModules,\n\tgetFullModuleName\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../../declarations/plugins/HashedModuleIdsPlugin\").HashedModuleIdsPluginOptions} HashedModuleIdsPluginOptions */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/HashedModuleIdsPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/HashedModuleIdsPlugin.json\"),\n\t{\n\t\tname: \"Hashed Module Ids Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass HashedModuleIdsPlugin {\n\t/**\n\t * @param {HashedModuleIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\n\t\t/** @type {HashedModuleIdsPluginOptions} */\n\t\tthis.options = {\n\t\t\tcontext: null,\n\t\t\thashFunction: \"md4\",\n\t\t\thashDigest: \"base64\",\n\t\t\thashDigestLength: 4,\n\t\t\t...options\n\t\t};\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"HashedModuleIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.moduleIds.tap(\"HashedModuleIdsPlugin\", () => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\tconst context = this.options.context\n\t\t\t\t\t? this.options.context\n\t\t\t\t\t: compiler.context;\n\n\t\t\t\tconst [usedIds, modules] = getUsedModuleIdsAndModules(compilation);\n\t\t\t\tconst modulesInNaturalOrder = modules.sort(\n\t\t\t\t\tcompareModulesByPreOrderIndexOrIdentifier(compilation.moduleGraph)\n\t\t\t\t);\n\t\t\t\tfor (const module of modulesInNaturalOrder) {\n\t\t\t\t\tconst ident = getFullModuleName(module, context, compiler.root);\n\t\t\t\t\tconst hash = createHash(options.hashFunction);\n\t\t\t\t\thash.update(ident || \"\");\n\t\t\t\t\tconst hashId = /** @type {string} */ (\n\t\t\t\t\t\thash.digest(options.hashDigest)\n\t\t\t\t\t);\n\t\t\t\t\tlet len = options.hashDigestLength;\n\t\t\t\t\twhile (usedIds.has(hashId.slice(0, len))) len++;\n\t\t\t\t\tconst moduleId = hashId.slice(0, len);\n\t\t\t\t\tchunkGraph.setModuleId(module, moduleId);\n\t\t\t\t\tusedIds.add(moduleId);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = HashedModuleIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAEb,eAEIA,OAAO,CAAC,qBAAqB,CAAC;EADjCC,yCAAyC,YAAzCA,yCAAyC;AAE1C,IAAMC,sBAAsB,GAAGF,OAAO,CAAC,kCAAkC,CAAC;AAC1E,IAAMG,UAAU,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAChD,gBAGIA,OAAO,CAAC,aAAa,CAAC;EAFzBI,0BAA0B,aAA1BA,0BAA0B;EAC1BC,iBAAiB,aAAjBA,iBAAiB;;AAGlB;;AAEA,IAAMC,QAAQ,GAAGJ,sBAAsB,CACtCF,OAAO,CAAC,sDAAsD,CAAC,EAC/D;EAAA,OAAMA,OAAO,CAAC,kDAAkD,CAAC;AAAA,GACjE;EACCO,IAAI,EAAE,0BAA0B;EAChCC,YAAY,EAAE;AACf,CAAC,CACD;AAAC,IAEIC,qBAAqB;EAC1B;AACD;AACA;EACC,iCAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IACvBJ,QAAQ,CAACI,OAAO,CAAC;;IAEjB;IACA,IAAI,CAACA,OAAO;MACXC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAE,QAAQ;MACpBC,gBAAgB,EAAE;IAAC,GAChBJ,OAAO,CACV;EACF;EAAC;IAAA;IAAA,OAED,eAAMK,QAAQ,EAAE;MAAA;MACf,IAAML,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5BK,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,uBAAuB,EAAE,UAAAD,WAAW,EAAI;QACtEA,WAAW,CAACD,KAAK,CAACG,SAAS,CAACD,GAAG,CAAC,uBAAuB,EAAE,YAAM;UAC9D,IAAME,UAAU,GAAGH,WAAW,CAACG,UAAU;UACzC,IAAMT,OAAO,GAAG,KAAI,CAACD,OAAO,CAACC,OAAO,GACjC,KAAI,CAACD,OAAO,CAACC,OAAO,GACpBI,QAAQ,CAACJ,OAAO;UAEnB,4BAA2BP,0BAA0B,CAACa,WAAW,CAAC;YAAA;YAA3DI,OAAO;YAAEC,OAAO;UACvB,IAAMC,qBAAqB,GAAGD,OAAO,CAACE,IAAI,CACzCvB,yCAAyC,CAACgB,WAAW,CAACQ,WAAW,CAAC,CAClE;UAAC,2CACmBF,qBAAqB;YAAA;UAAA;YAA1C,oDAA4C;cAAA,IAAjCG,OAAM;cAChB,IAAMC,KAAK,GAAGtB,iBAAiB,CAACqB,OAAM,EAAEf,OAAO,EAAEI,QAAQ,CAACa,IAAI,CAAC;cAC/D,IAAMC,IAAI,GAAG1B,UAAU,CAACO,OAAO,CAACE,YAAY,CAAC;cAC7CiB,IAAI,CAACC,MAAM,CAACH,KAAK,IAAI,EAAE,CAAC;cACxB,IAAMI,MAAM,GAAG;cACdF,IAAI,CAACG,MAAM,CAACtB,OAAO,CAACG,UAAU,CAC9B;cACD,IAAIoB,GAAG,GAAGvB,OAAO,CAACI,gBAAgB;cAClC,OAAOO,OAAO,CAACa,GAAG,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC,CAAC,EAAEA,GAAG,EAAE;cAC/C,IAAMG,QAAQ,GAAGL,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAC;cACrCb,UAAU,CAACiB,WAAW,CAACX,OAAM,EAAEU,QAAQ,CAAC;cACxCf,OAAO,CAACiB,GAAG,CAACF,QAAQ,CAAC;YACtB;UAAC;YAAA;UAAA;YAAA;UAAA;QACF,CAAC,CAAC;MACH,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFV,MAAM,CAACa,OAAO,GAAG9B,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}