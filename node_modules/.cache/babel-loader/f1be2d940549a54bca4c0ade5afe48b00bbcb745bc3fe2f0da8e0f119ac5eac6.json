{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\n\nvar validate = createSchemaValidation(require(\"../schemas/plugins/IgnorePlugin.check.js\"), function () {\n  return require(\"../schemas/plugins/IgnorePlugin.json\");\n}, {\n  name: \"Ignore Plugin\",\n  baseDataPath: \"options\"\n});\nvar IgnorePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {IgnorePluginOptions} options IgnorePlugin options\n   */\n  function IgnorePlugin(options) {\n    _classCallCheck(this, IgnorePlugin);\n    validate(options);\n    this.options = options;\n\n    /** @private @type {Function} */\n    this.checkIgnore = this.checkIgnore.bind(this);\n  }\n\n  /**\n   * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\n   * and \"contextRegExp\" have to match.\n   *\n   * @param {ResolveData} resolveData resolve data\n   * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\n   */\n  _createClass(IgnorePlugin, [{\n    key: \"checkIgnore\",\n    value: function checkIgnore(resolveData) {\n      if (\"checkResource\" in this.options && this.options.checkResource && this.options.checkResource(resolveData.request, resolveData.context)) {\n        return false;\n      }\n      if (\"resourceRegExp\" in this.options && this.options.resourceRegExp && this.options.resourceRegExp.test(resolveData.request)) {\n        if (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n          // if \"contextRegExp\" is given,\n          // both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n          if (this.options.contextRegExp.test(resolveData.context)) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n  }, {\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", function (nmf) {\n        nmf.hooks.beforeResolve.tap(\"IgnorePlugin\", _this.checkIgnore);\n      });\n      compiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", function (cmf) {\n        cmf.hooks.beforeResolve.tap(\"IgnorePlugin\", _this.checkIgnore);\n      });\n    }\n  }]);\n  return IgnorePlugin;\n}();\nmodule.exports = IgnorePlugin;","map":{"version":3,"names":["createSchemaValidation","require","validate","name","baseDataPath","IgnorePlugin","options","checkIgnore","bind","resolveData","checkResource","request","context","resourceRegExp","test","contextRegExp","compiler","hooks","normalModuleFactory","tap","nmf","beforeResolve","contextModuleFactory","cmf","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/IgnorePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/IgnorePlugin\").IgnorePluginOptions} IgnorePluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./NormalModuleFactory\").ResolveData} ResolveData */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/IgnorePlugin.check.js\"),\n\t() => require(\"../schemas/plugins/IgnorePlugin.json\"),\n\t{\n\t\tname: \"Ignore Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass IgnorePlugin {\n\t/**\n\t * @param {IgnorePluginOptions} options IgnorePlugin options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis.options = options;\n\n\t\t/** @private @type {Function} */\n\t\tthis.checkIgnore = this.checkIgnore.bind(this);\n\t}\n\n\t/**\n\t * Note that if \"contextRegExp\" is given, both the \"resourceRegExp\"\n\t * and \"contextRegExp\" have to match.\n\t *\n\t * @param {ResolveData} resolveData resolve data\n\t * @returns {false|undefined} returns false when the request should be ignored, otherwise undefined\n\t */\n\tcheckIgnore(resolveData) {\n\t\tif (\n\t\t\t\"checkResource\" in this.options &&\n\t\t\tthis.options.checkResource &&\n\t\t\tthis.options.checkResource(resolveData.request, resolveData.context)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\t\"resourceRegExp\" in this.options &&\n\t\t\tthis.options.resourceRegExp &&\n\t\t\tthis.options.resourceRegExp.test(resolveData.request)\n\t\t) {\n\t\t\tif (\"contextRegExp\" in this.options && this.options.contextRegExp) {\n\t\t\t\t// if \"contextRegExp\" is given,\n\t\t\t\t// both the \"resourceRegExp\" and \"contextRegExp\" have to match.\n\t\t\t\tif (this.options.contextRegExp.test(resolveData.context)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.normalModuleFactory.tap(\"IgnorePlugin\", nmf => {\n\t\t\tnmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t\tcompiler.hooks.contextModuleFactory.tap(\"IgnorePlugin\", cmf => {\n\t\t\tcmf.hooks.beforeResolve.tap(\"IgnorePlugin\", this.checkIgnore);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnorePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,iCAAiC,CAAC;;AAEzE;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAGF,sBAAsB,CACtCC,OAAO,CAAC,0CAA0C,CAAC,EACnD;EAAA,OAAMA,OAAO,CAAC,sCAAsC,CAAC;AAAA,GACrD;EACCE,IAAI,EAAE,eAAe;EACrBC,YAAY,EAAE;AACf,CAAC,CACD;AAAC,IAEIC,YAAY;EACjB;AACD;AACA;EACC,sBAAYC,OAAO,EAAE;IAAA;IACpBJ,QAAQ,CAACI,OAAO,CAAC;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;;IAEtB;IACA,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC/C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAA;IAAA,OAOA,qBAAYC,WAAW,EAAE;MACxB,IACC,eAAe,IAAI,IAAI,CAACH,OAAO,IAC/B,IAAI,CAACA,OAAO,CAACI,aAAa,IAC1B,IAAI,CAACJ,OAAO,CAACI,aAAa,CAACD,WAAW,CAACE,OAAO,EAAEF,WAAW,CAACG,OAAO,CAAC,EACnE;QACD,OAAO,KAAK;MACb;MAEA,IACC,gBAAgB,IAAI,IAAI,CAACN,OAAO,IAChC,IAAI,CAACA,OAAO,CAACO,cAAc,IAC3B,IAAI,CAACP,OAAO,CAACO,cAAc,CAACC,IAAI,CAACL,WAAW,CAACE,OAAO,CAAC,EACpD;QACD,IAAI,eAAe,IAAI,IAAI,CAACL,OAAO,IAAI,IAAI,CAACA,OAAO,CAACS,aAAa,EAAE;UAClE;UACA;UACA,IAAI,IAAI,CAACT,OAAO,CAACS,aAAa,CAACD,IAAI,CAACL,WAAW,CAACG,OAAO,CAAC,EAAE;YACzD,OAAO,KAAK;UACb;QACD,CAAC,MAAM;UACN,OAAO,KAAK;QACb;MACD;IACD;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMI,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,mBAAmB,CAACC,GAAG,CAAC,cAAc,EAAE,UAAAC,GAAG,EAAI;QAC7DA,GAAG,CAACH,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAE,KAAI,CAACZ,WAAW,CAAC;MAC9D,CAAC,CAAC;MACFS,QAAQ,CAACC,KAAK,CAACK,oBAAoB,CAACH,GAAG,CAAC,cAAc,EAAE,UAAAI,GAAG,EAAI;QAC9DA,GAAG,CAACN,KAAK,CAACI,aAAa,CAACF,GAAG,CAAC,cAAc,EAAE,KAAI,CAACZ,WAAW,CAAC;MAC9D,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFiB,MAAM,CAACC,OAAO,GAAGpB,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}