{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar forEachBail = require(\"./forEachBail\");\nvar getPaths = require(\"./getPaths\");\nvar _require = require(\"./util/path\"),\n  getType = _require.getType,\n  PathType = _require.PathType;\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  function SymlinkPlugin(source, target) {\n    _classCallCheck(this, SymlinkPlugin);\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(SymlinkPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      var fs = resolver.fileSystem;\n      resolver.getHook(this.source).tapAsync(\"SymlinkPlugin\", function (request, resolveContext, callback) {\n        if (request.ignoreSymlinks) return callback();\n        var pathsResult = getPaths(request.path);\n        var pathSegments = pathsResult.segments;\n        var paths = pathsResult.paths;\n        var containsSymlink = false;\n        var idx = -1;\n        forEachBail(paths, function (path, callback) {\n          idx++;\n          if (resolveContext.fileDependencies) resolveContext.fileDependencies.add(path);\n          fs.readlink(path, function (err, result) {\n            if (!err && result) {\n              pathSegments[idx] = result;\n              containsSymlink = true;\n              // Shortcut when absolute symlink found\n              var resultType = getType(result.toString());\n              if (resultType === PathType.AbsoluteWin || resultType === PathType.AbsolutePosix) {\n                return callback(null, idx);\n              }\n            }\n            callback();\n          });\n        }, function (err, idx) {\n          if (!containsSymlink) return callback();\n          var resultSegments = typeof idx === \"number\" ? pathSegments.slice(0, idx + 1) : pathSegments.slice();\n          var result = resultSegments.reduceRight(function (a, b) {\n            return resolver.join(a, b);\n          });\n          var obj = _objectSpread(_objectSpread({}, request), {}, {\n            path: result\n          });\n          resolver.doResolve(target, obj, \"resolved symlink to \" + result, resolveContext, callback);\n        });\n      });\n    }\n  }]);\n  return SymlinkPlugin;\n}();","map":{"version":3,"names":["forEachBail","require","getPaths","getType","PathType","module","exports","source","target","resolver","ensureHook","fs","fileSystem","getHook","tapAsync","request","resolveContext","callback","ignoreSymlinks","pathsResult","path","pathSegments","segments","paths","containsSymlink","idx","fileDependencies","add","readlink","err","result","resultType","toString","AbsoluteWin","AbsolutePosix","resultSegments","slice","reduceRight","a","b","join","obj","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/SymlinkPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\nconst { getType, PathType } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class SymlinkPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst fs = resolver.fileSystem;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"SymlinkPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.ignoreSymlinks) return callback();\n\t\t\t\tconst pathsResult = getPaths(request.path);\n\t\t\t\tconst pathSegments = pathsResult.segments;\n\t\t\t\tconst paths = pathsResult.paths;\n\n\t\t\t\tlet containsSymlink = false;\n\t\t\t\tlet idx = -1;\n\t\t\t\tforEachBail(\n\t\t\t\t\tpaths,\n\t\t\t\t\t(path, callback) => {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\t\tresolveContext.fileDependencies.add(path);\n\t\t\t\t\t\tfs.readlink(path, (err, result) => {\n\t\t\t\t\t\t\tif (!err && result) {\n\t\t\t\t\t\t\t\tpathSegments[idx] = result;\n\t\t\t\t\t\t\t\tcontainsSymlink = true;\n\t\t\t\t\t\t\t\t// Shortcut when absolute symlink found\n\t\t\t\t\t\t\t\tconst resultType = getType(result.toString());\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tresultType === PathType.AbsoluteWin ||\n\t\t\t\t\t\t\t\t\tresultType === PathType.AbsolutePosix\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn callback(null, idx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\t(err, idx) => {\n\t\t\t\t\t\tif (!containsSymlink) return callback();\n\t\t\t\t\t\tconst resultSegments =\n\t\t\t\t\t\t\ttypeof idx === \"number\"\n\t\t\t\t\t\t\t\t? pathSegments.slice(0, idx + 1)\n\t\t\t\t\t\t\t\t: pathSegments.slice();\n\t\t\t\t\t\tconst result = resultSegments.reduceRight((a, b) => {\n\t\t\t\t\t\t\treturn resolver.join(a, b);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\tpath: result\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\"resolved symlink to \" + result,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}