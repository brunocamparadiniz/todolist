{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar asyncLib = require(\"neo-async\");\nvar _require = require(\"tapable\"),\n  SyncBailHook = _require.SyncBailHook;\nvar Compilation = require(\"../lib/Compilation\");\nvar createSchemaValidation = require(\"./util/create-schema-validation\");\nvar _require2 = require(\"./util/fs\"),\n  join = _require2.join;\nvar processAsyncTree = require(\"./util/processAsyncTree\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").CleanOptions} CleanOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./logging/Logger\").Logger} Logger */\n/** @typedef {import(\"./util/fs\").OutputFileSystem} OutputFileSystem */\n/** @typedef {import(\"./util/fs\").StatsCallback} StatsCallback */\n\n/** @typedef {(function(string):boolean)|RegExp} IgnoreItem */\n/** @typedef {Map<string, number>} Assets */\n/** @typedef {function(IgnoreItem): void} AddToIgnoreCallback */\n\n/**\n * @typedef {Object} CleanPluginCompilationHooks\n * @property {SyncBailHook<[string], boolean>} keep when returning true the file/directory will be kept during cleaning, returning false will clean it and ignore the following plugins and config\n */\n\nvar validate = createSchemaValidation(undefined, function () {\n  var _require3 = require(\"../schemas/WebpackOptions.json\"),\n    definitions = _require3.definitions;\n  return {\n    definitions: definitions,\n    oneOf: [{\n      $ref: \"#/definitions/CleanOptions\"\n    }]\n  };\n}, {\n  name: \"Clean Plugin\",\n  baseDataPath: \"options\"\n});\nvar _10sec = 10 * 1000;\n\n/**\n * marge assets map 2 into map 1\n * @param {Assets} as1 assets\n * @param {Assets} as2 assets\n * @returns {void}\n */\nvar mergeAssets = function mergeAssets(as1, as2) {\n  var _iterator = _createForOfIteratorHelper(as2),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        key = _step$value[0],\n        value1 = _step$value[1];\n      var value2 = as1.get(key);\n      if (!value2 || value1 > value2) as1.set(key, value1);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} outputPath output path\n * @param {Map<string, number>} currentAssets filename of the current assets (must not start with .. or ., must only use / as path separator)\n * @param {function((Error | null)=, Set<string>=): void} callback returns the filenames of the assets that shouldn't be there\n * @returns {void}\n */\nvar getDiffToFs = function getDiffToFs(fs, outputPath, currentAssets, callback) {\n  var directories = new Set();\n  // get directories of assets\n  var _iterator2 = _createForOfIteratorHelper(currentAssets),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 1),\n        asset = _step2$value[0];\n      directories.add(asset.replace(/(^|\\/)[^/]*$/, \"\"));\n    }\n    // and all parent directories\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  var _iterator3 = _createForOfIteratorHelper(directories),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var directory = _step3.value;\n      directories.add(directory.replace(/(^|\\/)[^/]*$/, \"\"));\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var diff = new Set();\n  asyncLib.forEachLimit(directories, 10, function (directory, callback) {\n    fs.readdir(join(fs, outputPath, directory), function (err, entries) {\n      if (err) {\n        if (err.code === \"ENOENT\") return callback();\n        if (err.code === \"ENOTDIR\") {\n          diff.add(directory);\n          return callback();\n        }\n        return callback(err);\n      }\n      var _iterator4 = _createForOfIteratorHelper(entries),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var entry = _step4.value;\n          var file = /** @type {string} */entry;\n          var filename = directory ? \"\".concat(directory, \"/\").concat(file) : file;\n          if (!directories.has(filename) && !currentAssets.has(filename)) {\n            diff.add(filename);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      callback();\n    });\n  }, function (err) {\n    if (err) return callback(err);\n    callback(null, diff);\n  });\n};\n\n/**\n * @param {Assets} currentAssets assets list\n * @param {Assets} oldAssets old assets list\n * @returns {Set<string>} diff\n */\nvar getDiffToOldAssets = function getDiffToOldAssets(currentAssets, oldAssets) {\n  var diff = new Set();\n  var now = Date.now();\n  var _iterator5 = _createForOfIteratorHelper(oldAssets),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var _step5$value = _slicedToArray(_step5.value, 2),\n        asset = _step5$value[0],\n        ts = _step5$value[1];\n      if (ts >= now) continue;\n      if (!currentAssets.has(asset)) diff.add(asset);\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return diff;\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} filename path to file\n * @param {StatsCallback} callback callback for provided filename\n * @returns {void}\n */\nvar doStat = function doStat(fs, filename, callback) {\n  if (\"lstat\" in fs) {\n    fs.lstat(filename, callback);\n  } else {\n    fs.stat(filename, callback);\n  }\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} outputPath output path\n * @param {boolean} dry only log instead of fs modification\n * @param {Logger} logger logger\n * @param {Set<string>} diff filenames of the assets that shouldn't be there\n * @param {function(string): boolean} isKept check if the entry is ignored\n * @param {function(Error=, Assets=): void} callback callback\n * @returns {void}\n */\nvar applyDiff = function applyDiff(fs, outputPath, dry, logger, diff, isKept, callback) {\n  var log = function log(msg) {\n    if (dry) {\n      logger.info(msg);\n    } else {\n      logger.log(msg);\n    }\n  };\n  /** @typedef {{ type: \"check\" | \"unlink\" | \"rmdir\", filename: string, parent: { remaining: number, job: Job } | undefined }} Job */\n  /** @type {Job[]} */\n  var jobs = Array.from(diff.keys(), function (filename) {\n    return {\n      type: \"check\",\n      filename: filename,\n      parent: undefined\n    };\n  });\n  /** @type {Assets} */\n  var keptAssets = new Map();\n  processAsyncTree(jobs, 10, function (_ref, push, callback) {\n    var type = _ref.type,\n      filename = _ref.filename,\n      parent = _ref.parent;\n    var handleError = function handleError(err) {\n      if (err.code === \"ENOENT\") {\n        log(\"\".concat(filename, \" was removed during cleaning by something else\"));\n        handleParent();\n        return callback();\n      }\n      return callback(err);\n    };\n    var handleParent = function handleParent() {\n      if (parent && --parent.remaining === 0) push(parent.job);\n    };\n    var path = join(fs, outputPath, filename);\n    switch (type) {\n      case \"check\":\n        if (isKept(filename)) {\n          keptAssets.set(filename, 0);\n          // do not decrement parent entry as we don't want to delete the parent\n          log(\"\".concat(filename, \" will be kept\"));\n          return process.nextTick(callback);\n        }\n        doStat(fs, path, function (err, stats) {\n          if (err) return handleError(err);\n          if (!stats.isDirectory()) {\n            push({\n              type: \"unlink\",\n              filename: filename,\n              parent: parent\n            });\n            return callback();\n          }\n          fs.readdir(path, function (err, entries) {\n            if (err) return handleError(err);\n            /** @type {Job} */\n            var deleteJob = {\n              type: \"rmdir\",\n              filename: filename,\n              parent: parent\n            };\n            if (entries.length === 0) {\n              push(deleteJob);\n            } else {\n              var parentToken = {\n                remaining: entries.length,\n                job: deleteJob\n              };\n              var _iterator6 = _createForOfIteratorHelper(entries),\n                _step6;\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var entry = _step6.value;\n                  var file = /** @type {string} */entry;\n                  if (file.startsWith(\".\")) {\n                    log(\"\".concat(filename, \" will be kept (dot-files will never be removed)\"));\n                    continue;\n                  }\n                  push({\n                    type: \"check\",\n                    filename: \"\".concat(filename, \"/\").concat(file),\n                    parent: parentToken\n                  });\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n            }\n            return callback();\n          });\n        });\n        break;\n      case \"rmdir\":\n        log(\"\".concat(filename, \" will be removed\"));\n        if (dry) {\n          handleParent();\n          return process.nextTick(callback);\n        }\n        if (!fs.rmdir) {\n          logger.warn(\"\".concat(filename, \" can't be removed because output file system doesn't support removing directories (rmdir)\"));\n          return process.nextTick(callback);\n        }\n        fs.rmdir(path, function (err) {\n          if (err) return handleError(err);\n          handleParent();\n          callback();\n        });\n        break;\n      case \"unlink\":\n        log(\"\".concat(filename, \" will be removed\"));\n        if (dry) {\n          handleParent();\n          return process.nextTick(callback);\n        }\n        if (!fs.unlink) {\n          logger.warn(\"\".concat(filename, \" can't be removed because output file system doesn't support removing files (rmdir)\"));\n          return process.nextTick(callback);\n        }\n        fs.unlink(path, function (err) {\n          if (err) return handleError(err);\n          handleParent();\n          callback();\n        });\n        break;\n    }\n  }, function (err) {\n    if (err) return callback(err);\n    callback(undefined, keptAssets);\n  });\n};\n\n/** @type {WeakMap<Compilation, CleanPluginCompilationHooks>} */\nvar compilationHooksMap = new WeakMap();\nvar CleanPlugin = /*#__PURE__*/function () {\n  /** @param {CleanOptions} options options */\n  function CleanPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, CleanPlugin);\n    validate(options);\n    this.options = _objectSpread({\n      dry: false\n    }, options);\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(CleanPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this$options = this.options,\n        dry = _this$options.dry,\n        keep = _this$options.keep;\n      var keepFn = typeof keep === \"function\" ? keep : typeof keep === \"string\" ? function (path) {\n        return path.startsWith(keep);\n      } : typeof keep === \"object\" && keep.test ? function (path) {\n        return keep.test(path);\n      } : function () {\n        return false;\n      };\n\n      // We assume that no external modification happens while the compiler is active\n      // So we can store the old assets and only diff to them to avoid fs access on\n      // incremental builds\n      /** @type {undefined|Assets} */\n      var oldAssets;\n      compiler.hooks.emit.tapAsync({\n        name: \"CleanPlugin\",\n        stage: 100\n      }, function (compilation, callback) {\n        var hooks = CleanPlugin.getCompilationHooks(compilation);\n        var logger = compilation.getLogger(\"webpack.CleanPlugin\");\n        var fs = compiler.outputFileSystem;\n        if (!fs.readdir) {\n          return callback(new Error(\"CleanPlugin: Output filesystem doesn't support listing directories (readdir)\"));\n        }\n\n        /** @type {Assets} */\n        var currentAssets = new Map();\n        var now = Date.now();\n        for (var _i = 0, _Object$keys = Object.keys(compilation.assets); _i < _Object$keys.length; _i++) {\n          var asset = _Object$keys[_i];\n          if (/^[A-Za-z]:\\\\|^\\/|^\\\\\\\\/.test(asset)) continue;\n          var normalizedAsset = void 0;\n          var newNormalizedAsset = asset.replace(/\\\\/g, \"/\");\n          do {\n            normalizedAsset = newNormalizedAsset;\n            newNormalizedAsset = normalizedAsset.replace(/(^|\\/)(?!\\.\\.)[^/]+\\/\\.\\.\\//g, \"$1\");\n          } while (newNormalizedAsset !== normalizedAsset);\n          if (normalizedAsset.startsWith(\"../\")) continue;\n          var assetInfo = compilation.assetsInfo.get(asset);\n          if (assetInfo && assetInfo.hotModuleReplacement) {\n            currentAssets.set(normalizedAsset, now + _10sec);\n          } else {\n            currentAssets.set(normalizedAsset, 0);\n          }\n        }\n        var outputPath = compilation.getPath(compiler.outputPath, {});\n        var isKept = function isKept(path) {\n          var result = hooks.keep.call(path);\n          if (result !== undefined) return result;\n          return keepFn(path);\n        };\n\n        /**\n         * @param {Error=} err err\n         * @param {Set<string>=} diff diff\n         */\n        var diffCallback = function diffCallback(err, diff) {\n          if (err) {\n            oldAssets = undefined;\n            callback(err);\n            return;\n          }\n          applyDiff(fs, outputPath, dry, logger, diff, isKept, function (err, keptAssets) {\n            if (err) {\n              oldAssets = undefined;\n            } else {\n              if (oldAssets) mergeAssets(currentAssets, oldAssets);\n              oldAssets = currentAssets;\n              if (keptAssets) mergeAssets(oldAssets, keptAssets);\n            }\n            callback(err);\n          });\n        };\n        if (oldAssets) {\n          diffCallback(null, getDiffToOldAssets(currentAssets, oldAssets));\n        } else {\n          getDiffToFs(fs, outputPath, currentAssets, diffCallback);\n        }\n      });\n    }\n  }], [{\n    key: \"getCompilationHooks\",\n    value:\n    /**\n     * @param {Compilation} compilation the compilation\n     * @returns {CleanPluginCompilationHooks} the attached hooks\n     */\n    function getCompilationHooks(compilation) {\n      if (!(compilation instanceof Compilation)) {\n        throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n      }\n      var hooks = compilationHooksMap.get(compilation);\n      if (hooks === undefined) {\n        hooks = {\n          /** @type {SyncBailHook<[string], boolean>} */\n          keep: new SyncBailHook([\"ignore\"])\n        };\n        compilationHooksMap.set(compilation, hooks);\n      }\n      return hooks;\n    }\n  }]);\n  return CleanPlugin;\n}();\nmodule.exports = CleanPlugin;","map":{"version":3,"names":["asyncLib","require","SyncBailHook","Compilation","createSchemaValidation","join","processAsyncTree","validate","undefined","definitions","oneOf","$ref","name","baseDataPath","_10sec","mergeAssets","as1","as2","key","value1","value2","get","set","getDiffToFs","fs","outputPath","currentAssets","callback","directories","Set","asset","add","replace","directory","diff","forEachLimit","readdir","err","entries","code","entry","file","filename","has","getDiffToOldAssets","oldAssets","now","Date","ts","doStat","lstat","stat","applyDiff","dry","logger","isKept","log","msg","info","jobs","Array","from","keys","type","parent","keptAssets","Map","push","handleError","handleParent","remaining","job","path","process","nextTick","stats","isDirectory","deleteJob","length","parentToken","startsWith","rmdir","warn","unlink","compilationHooksMap","WeakMap","CleanPlugin","options","compiler","keep","keepFn","test","hooks","emit","tapAsync","stage","compilation","getCompilationHooks","getLogger","outputFileSystem","Error","Object","assets","normalizedAsset","newNormalizedAsset","assetInfo","assetsInfo","hotModuleReplacement","getPath","result","call","diffCallback","TypeError","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/CleanPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst { SyncBailHook } = require(\"tapable\");\nconst Compilation = require(\"../lib/Compilation\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\nconst { join } = require(\"./util/fs\");\nconst processAsyncTree = require(\"./util/processAsyncTree\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").CleanOptions} CleanOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./logging/Logger\").Logger} Logger */\n/** @typedef {import(\"./util/fs\").OutputFileSystem} OutputFileSystem */\n/** @typedef {import(\"./util/fs\").StatsCallback} StatsCallback */\n\n/** @typedef {(function(string):boolean)|RegExp} IgnoreItem */\n/** @typedef {Map<string, number>} Assets */\n/** @typedef {function(IgnoreItem): void} AddToIgnoreCallback */\n\n/**\n * @typedef {Object} CleanPluginCompilationHooks\n * @property {SyncBailHook<[string], boolean>} keep when returning true the file/directory will be kept during cleaning, returning false will clean it and ignore the following plugins and config\n */\n\nconst validate = createSchemaValidation(\n\tundefined,\n\t() => {\n\t\tconst { definitions } = require(\"../schemas/WebpackOptions.json\");\n\t\treturn {\n\t\t\tdefinitions,\n\t\t\toneOf: [{ $ref: \"#/definitions/CleanOptions\" }]\n\t\t};\n\t},\n\t{\n\t\tname: \"Clean Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nconst _10sec = 10 * 1000;\n\n/**\n * marge assets map 2 into map 1\n * @param {Assets} as1 assets\n * @param {Assets} as2 assets\n * @returns {void}\n */\nconst mergeAssets = (as1, as2) => {\n\tfor (const [key, value1] of as2) {\n\t\tconst value2 = as1.get(key);\n\t\tif (!value2 || value1 > value2) as1.set(key, value1);\n\t}\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} outputPath output path\n * @param {Map<string, number>} currentAssets filename of the current assets (must not start with .. or ., must only use / as path separator)\n * @param {function((Error | null)=, Set<string>=): void} callback returns the filenames of the assets that shouldn't be there\n * @returns {void}\n */\nconst getDiffToFs = (fs, outputPath, currentAssets, callback) => {\n\tconst directories = new Set();\n\t// get directories of assets\n\tfor (const [asset] of currentAssets) {\n\t\tdirectories.add(asset.replace(/(^|\\/)[^/]*$/, \"\"));\n\t}\n\t// and all parent directories\n\tfor (const directory of directories) {\n\t\tdirectories.add(directory.replace(/(^|\\/)[^/]*$/, \"\"));\n\t}\n\tconst diff = new Set();\n\tasyncLib.forEachLimit(\n\t\tdirectories,\n\t\t10,\n\t\t(directory, callback) => {\n\t\t\tfs.readdir(join(fs, outputPath, directory), (err, entries) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === \"ENOENT\") return callback();\n\t\t\t\t\tif (err.code === \"ENOTDIR\") {\n\t\t\t\t\t\tdiff.add(directory);\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tconst file = /** @type {string} */ (entry);\n\t\t\t\t\tconst filename = directory ? `${directory}/${file}` : file;\n\t\t\t\t\tif (!directories.has(filename) && !currentAssets.has(filename)) {\n\t\t\t\t\t\tdiff.add(filename);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcallback();\n\t\t\t});\n\t\t},\n\t\terr => {\n\t\t\tif (err) return callback(err);\n\n\t\t\tcallback(null, diff);\n\t\t}\n\t);\n};\n\n/**\n * @param {Assets} currentAssets assets list\n * @param {Assets} oldAssets old assets list\n * @returns {Set<string>} diff\n */\nconst getDiffToOldAssets = (currentAssets, oldAssets) => {\n\tconst diff = new Set();\n\tconst now = Date.now();\n\tfor (const [asset, ts] of oldAssets) {\n\t\tif (ts >= now) continue;\n\t\tif (!currentAssets.has(asset)) diff.add(asset);\n\t}\n\treturn diff;\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} filename path to file\n * @param {StatsCallback} callback callback for provided filename\n * @returns {void}\n */\nconst doStat = (fs, filename, callback) => {\n\tif (\"lstat\" in fs) {\n\t\tfs.lstat(filename, callback);\n\t} else {\n\t\tfs.stat(filename, callback);\n\t}\n};\n\n/**\n * @param {OutputFileSystem} fs filesystem\n * @param {string} outputPath output path\n * @param {boolean} dry only log instead of fs modification\n * @param {Logger} logger logger\n * @param {Set<string>} diff filenames of the assets that shouldn't be there\n * @param {function(string): boolean} isKept check if the entry is ignored\n * @param {function(Error=, Assets=): void} callback callback\n * @returns {void}\n */\nconst applyDiff = (fs, outputPath, dry, logger, diff, isKept, callback) => {\n\tconst log = msg => {\n\t\tif (dry) {\n\t\t\tlogger.info(msg);\n\t\t} else {\n\t\t\tlogger.log(msg);\n\t\t}\n\t};\n\t/** @typedef {{ type: \"check\" | \"unlink\" | \"rmdir\", filename: string, parent: { remaining: number, job: Job } | undefined }} Job */\n\t/** @type {Job[]} */\n\tconst jobs = Array.from(diff.keys(), filename => ({\n\t\ttype: \"check\",\n\t\tfilename,\n\t\tparent: undefined\n\t}));\n\t/** @type {Assets} */\n\tconst keptAssets = new Map();\n\tprocessAsyncTree(\n\t\tjobs,\n\t\t10,\n\t\t({ type, filename, parent }, push, callback) => {\n\t\t\tconst handleError = err => {\n\t\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\t\tlog(`${filename} was removed during cleaning by something else`);\n\t\t\t\t\thandleParent();\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\treturn callback(err);\n\t\t\t};\n\t\t\tconst handleParent = () => {\n\t\t\t\tif (parent && --parent.remaining === 0) push(parent.job);\n\t\t\t};\n\t\t\tconst path = join(fs, outputPath, filename);\n\t\t\tswitch (type) {\n\t\t\t\tcase \"check\":\n\t\t\t\t\tif (isKept(filename)) {\n\t\t\t\t\t\tkeptAssets.set(filename, 0);\n\t\t\t\t\t\t// do not decrement parent entry as we don't want to delete the parent\n\t\t\t\t\t\tlog(`${filename} will be kept`);\n\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t}\n\t\t\t\t\tdoStat(fs, path, (err, stats) => {\n\t\t\t\t\t\tif (err) return handleError(err);\n\t\t\t\t\t\tif (!stats.isDirectory()) {\n\t\t\t\t\t\t\tpush({\n\t\t\t\t\t\t\t\ttype: \"unlink\",\n\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\tparent\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfs.readdir(path, (err, entries) => {\n\t\t\t\t\t\t\tif (err) return handleError(err);\n\t\t\t\t\t\t\t/** @type {Job} */\n\t\t\t\t\t\t\tconst deleteJob = {\n\t\t\t\t\t\t\t\ttype: \"rmdir\",\n\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\tparent\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (entries.length === 0) {\n\t\t\t\t\t\t\t\tpush(deleteJob);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst parentToken = {\n\t\t\t\t\t\t\t\t\tremaining: entries.length,\n\t\t\t\t\t\t\t\t\tjob: deleteJob\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\t\t\t\t\tconst file = /** @type {string} */ (entry);\n\t\t\t\t\t\t\t\t\tif (file.startsWith(\".\")) {\n\t\t\t\t\t\t\t\t\t\tlog(\n\t\t\t\t\t\t\t\t\t\t\t`${filename} will be kept (dot-files will never be removed)`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpush({\n\t\t\t\t\t\t\t\t\t\ttype: \"check\",\n\t\t\t\t\t\t\t\t\t\tfilename: `${filename}/${file}`,\n\t\t\t\t\t\t\t\t\t\tparent: parentToken\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"rmdir\":\n\t\t\t\t\tlog(`${filename} will be removed`);\n\t\t\t\t\tif (dry) {\n\t\t\t\t\t\thandleParent();\n\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t}\n\t\t\t\t\tif (!fs.rmdir) {\n\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t`${filename} can't be removed because output file system doesn't support removing directories (rmdir)`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t}\n\t\t\t\t\tfs.rmdir(path, err => {\n\t\t\t\t\t\tif (err) return handleError(err);\n\t\t\t\t\t\thandleParent();\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unlink\":\n\t\t\t\t\tlog(`${filename} will be removed`);\n\t\t\t\t\tif (dry) {\n\t\t\t\t\t\thandleParent();\n\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t}\n\t\t\t\t\tif (!fs.unlink) {\n\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t`${filename} can't be removed because output file system doesn't support removing files (rmdir)`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn process.nextTick(callback);\n\t\t\t\t\t}\n\t\t\t\t\tfs.unlink(path, err => {\n\t\t\t\t\t\tif (err) return handleError(err);\n\t\t\t\t\t\thandleParent();\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\terr => {\n\t\t\tif (err) return callback(err);\n\t\t\tcallback(undefined, keptAssets);\n\t\t}\n\t);\n};\n\n/** @type {WeakMap<Compilation, CleanPluginCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass CleanPlugin {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {CleanPluginCompilationHooks} the attached hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\t/** @type {SyncBailHook<[string], boolean>} */\n\t\t\t\tkeep: new SyncBailHook([\"ignore\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\t/** @param {CleanOptions} options options */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\t\tthis.options = { dry: false, ...options };\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { dry, keep } = this.options;\n\n\t\tconst keepFn =\n\t\t\ttypeof keep === \"function\"\n\t\t\t\t? keep\n\t\t\t\t: typeof keep === \"string\"\n\t\t\t\t? path => path.startsWith(keep)\n\t\t\t\t: typeof keep === \"object\" && keep.test\n\t\t\t\t? path => keep.test(path)\n\t\t\t\t: () => false;\n\n\t\t// We assume that no external modification happens while the compiler is active\n\t\t// So we can store the old assets and only diff to them to avoid fs access on\n\t\t// incremental builds\n\t\t/** @type {undefined|Assets} */\n\t\tlet oldAssets;\n\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t{\n\t\t\t\tname: \"CleanPlugin\",\n\t\t\t\tstage: 100\n\t\t\t},\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst hooks = CleanPlugin.getCompilationHooks(compilation);\n\t\t\t\tconst logger = compilation.getLogger(\"webpack.CleanPlugin\");\n\t\t\t\tconst fs = compiler.outputFileSystem;\n\n\t\t\t\tif (!fs.readdir) {\n\t\t\t\t\treturn callback(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"CleanPlugin: Output filesystem doesn't support listing directories (readdir)\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t/** @type {Assets} */\n\t\t\t\tconst currentAssets = new Map();\n\t\t\t\tconst now = Date.now();\n\t\t\t\tfor (const asset of Object.keys(compilation.assets)) {\n\t\t\t\t\tif (/^[A-Za-z]:\\\\|^\\/|^\\\\\\\\/.test(asset)) continue;\n\t\t\t\t\tlet normalizedAsset;\n\t\t\t\t\tlet newNormalizedAsset = asset.replace(/\\\\/g, \"/\");\n\t\t\t\t\tdo {\n\t\t\t\t\t\tnormalizedAsset = newNormalizedAsset;\n\t\t\t\t\t\tnewNormalizedAsset = normalizedAsset.replace(\n\t\t\t\t\t\t\t/(^|\\/)(?!\\.\\.)[^/]+\\/\\.\\.\\//g,\n\t\t\t\t\t\t\t\"$1\"\n\t\t\t\t\t\t);\n\t\t\t\t\t} while (newNormalizedAsset !== normalizedAsset);\n\t\t\t\t\tif (normalizedAsset.startsWith(\"../\")) continue;\n\t\t\t\t\tconst assetInfo = compilation.assetsInfo.get(asset);\n\t\t\t\t\tif (assetInfo && assetInfo.hotModuleReplacement) {\n\t\t\t\t\t\tcurrentAssets.set(normalizedAsset, now + _10sec);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcurrentAssets.set(normalizedAsset, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst outputPath = compilation.getPath(compiler.outputPath, {});\n\n\t\t\t\tconst isKept = path => {\n\t\t\t\t\tconst result = hooks.keep.call(path);\n\t\t\t\t\tif (result !== undefined) return result;\n\t\t\t\t\treturn keepFn(path);\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @param {Error=} err err\n\t\t\t\t * @param {Set<string>=} diff diff\n\t\t\t\t */\n\t\t\t\tconst diffCallback = (err, diff) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\toldAssets = undefined;\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tapplyDiff(\n\t\t\t\t\t\tfs,\n\t\t\t\t\t\toutputPath,\n\t\t\t\t\t\tdry,\n\t\t\t\t\t\tlogger,\n\t\t\t\t\t\tdiff,\n\t\t\t\t\t\tisKept,\n\t\t\t\t\t\t(err, keptAssets) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\toldAssets = undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (oldAssets) mergeAssets(currentAssets, oldAssets);\n\t\t\t\t\t\t\t\toldAssets = currentAssets;\n\t\t\t\t\t\t\t\tif (keptAssets) mergeAssets(oldAssets, keptAssets);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tif (oldAssets) {\n\t\t\t\t\tdiffCallback(null, getDiffToOldAssets(currentAssets, oldAssets));\n\t\t\t\t} else {\n\t\t\t\t\tgetDiffToFs(fs, outputPath, currentAssets, diffCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = CleanPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}