{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar Template = require(\"../Template\");\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nvar MANGLED_MODULE = \"a\";\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nvar getUsedDependencies = function getUsedDependencies(moduleGraph, module, mangle) {\n  /** @type {UsedWasmDependency[]} */\n  var array = [];\n  var importIndex = 0;\n  var _iterator = _createForOfIteratorHelper(module.dependencies),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var dep = _step.value;\n      if (dep instanceof WebAssemblyImportDependency) {\n        if (dep.description.type === \"GlobalType\" || moduleGraph.getModule(dep) === null) {\n          continue;\n        }\n        var exportName = dep.name;\n        // TODO add the following 3 lines when removing of ModuleExport is possible\n        // const importedModule = moduleGraph.getModule(dep);\n        // const usedName = importedModule && moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n        // if (usedName !== false) {\n        if (mangle) {\n          array.push({\n            dependency: dep,\n            name: Template.numberToIdentifier(importIndex++),\n            module: MANGLED_MODULE\n          });\n        } else {\n          array.push({\n            dependency: dep,\n            name: exportName,\n            module: dep.request\n          });\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return array;\n};\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;","map":{"version":3,"names":["Template","require","WebAssemblyImportDependency","MANGLED_MODULE","getUsedDependencies","moduleGraph","module","mangle","array","importIndex","dependencies","dep","description","type","getModule","exportName","name","push","dependency","numberToIdentifier","request","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/wasm-sync/WebAssemblyUtils.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nconst MANGLED_MODULE = \"a\";\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nconst getUsedDependencies = (moduleGraph, module, mangle) => {\n\t/** @type {UsedWasmDependency[]} */\n\tconst array = [];\n\tlet importIndex = 0;\n\tfor (const dep of module.dependencies) {\n\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\tif (\n\t\t\t\tdep.description.type === \"GlobalType\" ||\n\t\t\t\tmoduleGraph.getModule(dep) === null\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst exportName = dep.name;\n\t\t\t// TODO add the following 3 lines when removing of ModuleExport is possible\n\t\t\t// const importedModule = moduleGraph.getModule(dep);\n\t\t\t// const usedName = importedModule && moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n\t\t\t// if (usedName !== false) {\n\t\t\tif (mangle) {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: Template.numberToIdentifier(importIndex++),\n\t\t\t\t\tmodule: MANGLED_MODULE\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: exportName,\n\t\t\t\t\tmodule: dep.request\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n};\n\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAEb,IAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAMC,2BAA2B,GAAGD,OAAO,CAAC,6CAA6C,CAAC;;AAE1F;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAME,cAAc,GAAG,GAAG;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,WAAW,EAAEC,MAAM,EAAEC,MAAM,EAAK;EAC5D;EACA,IAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,WAAW,GAAG,CAAC;EAAC,2CACFH,MAAM,CAACI,YAAY;IAAA;EAAA;IAArC,oDAAuC;MAAA,IAA5BC,GAAG;MACb,IAAIA,GAAG,YAAYT,2BAA2B,EAAE;QAC/C,IACCS,GAAG,CAACC,WAAW,CAACC,IAAI,KAAK,YAAY,IACrCR,WAAW,CAACS,SAAS,CAACH,GAAG,CAAC,KAAK,IAAI,EAClC;UACD;QACD;QAEA,IAAMI,UAAU,GAAGJ,GAAG,CAACK,IAAI;QAC3B;QACA;QACA;QACA;QACA,IAAIT,MAAM,EAAE;UACXC,KAAK,CAACS,IAAI,CAAC;YACVC,UAAU,EAAEP,GAAG;YACfK,IAAI,EAAEhB,QAAQ,CAACmB,kBAAkB,CAACV,WAAW,EAAE,CAAC;YAChDH,MAAM,EAAEH;UACT,CAAC,CAAC;QACH,CAAC,MAAM;UACNK,KAAK,CAACS,IAAI,CAAC;YACVC,UAAU,EAAEP,GAAG;YACfK,IAAI,EAAED,UAAU;YAChBT,MAAM,EAAEK,GAAG,CAACS;UACb,CAAC,CAAC;QACH;MACD;IACD;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,OAAOZ,KAAK;AACb,CAAC;AAEDa,OAAO,CAACjB,mBAAmB,GAAGA,mBAAmB;AACjDiB,OAAO,CAAClB,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}