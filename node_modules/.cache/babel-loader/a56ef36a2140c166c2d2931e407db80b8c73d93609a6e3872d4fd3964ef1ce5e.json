{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"estree\").Node} EsTreeNode */\n/** @typedef {import(\"./JavascriptParser\").VariableInfoInterface} VariableInfoInterface */\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar TypeUnknown = 0;\nvar TypeUndefined = 1;\nvar TypeNull = 2;\nvar TypeString = 3;\nvar TypeNumber = 4;\nvar TypeBoolean = 5;\nvar TypeRegExp = 6;\nvar TypeConditional = 7;\nvar TypeArray = 8;\nvar TypeConstArray = 9;\nvar TypeIdentifier = 10;\nvar TypeWrapped = 11;\nvar TypeTemplateString = 12;\nvar TypeBigInt = 13;\nvar BasicEvaluatedExpression = /*#__PURE__*/function () {\n  function BasicEvaluatedExpression() {\n    _classCallCheck(this, BasicEvaluatedExpression);\n    this.type = TypeUnknown;\n    /** @type {[number, number]} */\n    this.range = undefined;\n    /** @type {boolean} */\n    this.falsy = false;\n    /** @type {boolean} */\n    this.truthy = false;\n    /** @type {boolean | undefined} */\n    this.nullish = undefined;\n    /** @type {boolean} */\n    this.sideEffects = true;\n    /** @type {boolean | undefined} */\n    this.bool = undefined;\n    /** @type {number | undefined} */\n    this.number = undefined;\n    /** @type {bigint | undefined} */\n    this.bigint = undefined;\n    /** @type {RegExp | undefined} */\n    this.regExp = undefined;\n    /** @type {string | undefined} */\n    this.string = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.quasis = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.parts = undefined;\n    /** @type {any[] | undefined} */\n    this.array = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.items = undefined;\n    /** @type {BasicEvaluatedExpression[] | undefined} */\n    this.options = undefined;\n    /** @type {BasicEvaluatedExpression | undefined} */\n    this.prefix = undefined;\n    /** @type {BasicEvaluatedExpression | undefined} */\n    this.postfix = undefined;\n    this.wrappedInnerExpressions = undefined;\n    /** @type {string | VariableInfoInterface | undefined} */\n    this.identifier = undefined;\n    /** @type {VariableInfoInterface} */\n    this.rootInfo = undefined;\n    /** @type {() => string[]} */\n    this.getMembers = undefined;\n    /** @type {() => boolean[]} */\n    this.getMembersOptionals = undefined;\n    /** @type {EsTreeNode} */\n    this.expression = undefined;\n  }\n  _createClass(BasicEvaluatedExpression, [{\n    key: \"isUnknown\",\n    value: function isUnknown() {\n      return this.type === TypeUnknown;\n    }\n  }, {\n    key: \"isNull\",\n    value: function isNull() {\n      return this.type === TypeNull;\n    }\n  }, {\n    key: \"isUndefined\",\n    value: function isUndefined() {\n      return this.type === TypeUndefined;\n    }\n  }, {\n    key: \"isString\",\n    value: function isString() {\n      return this.type === TypeString;\n    }\n  }, {\n    key: \"isNumber\",\n    value: function isNumber() {\n      return this.type === TypeNumber;\n    }\n  }, {\n    key: \"isBigInt\",\n    value: function isBigInt() {\n      return this.type === TypeBigInt;\n    }\n  }, {\n    key: \"isBoolean\",\n    value: function isBoolean() {\n      return this.type === TypeBoolean;\n    }\n  }, {\n    key: \"isRegExp\",\n    value: function isRegExp() {\n      return this.type === TypeRegExp;\n    }\n  }, {\n    key: \"isConditional\",\n    value: function isConditional() {\n      return this.type === TypeConditional;\n    }\n  }, {\n    key: \"isArray\",\n    value: function isArray() {\n      return this.type === TypeArray;\n    }\n  }, {\n    key: \"isConstArray\",\n    value: function isConstArray() {\n      return this.type === TypeConstArray;\n    }\n  }, {\n    key: \"isIdentifier\",\n    value: function isIdentifier() {\n      return this.type === TypeIdentifier;\n    }\n  }, {\n    key: \"isWrapped\",\n    value: function isWrapped() {\n      return this.type === TypeWrapped;\n    }\n  }, {\n    key: \"isTemplateString\",\n    value: function isTemplateString() {\n      return this.type === TypeTemplateString;\n    }\n\n    /**\n     * Is expression a primitive or an object type value?\n     * @returns {boolean | undefined} true: primitive type, false: object type, undefined: unknown/runtime-defined\n     */\n  }, {\n    key: \"isPrimitiveType\",\n    value: function isPrimitiveType() {\n      switch (this.type) {\n        case TypeUndefined:\n        case TypeNull:\n        case TypeString:\n        case TypeNumber:\n        case TypeBoolean:\n        case TypeBigInt:\n        case TypeWrapped:\n        case TypeTemplateString:\n          return true;\n        case TypeRegExp:\n        case TypeArray:\n        case TypeConstArray:\n          return false;\n        default:\n          return undefined;\n      }\n    }\n\n    /**\n     * Is expression a runtime or compile-time value?\n     * @returns {boolean} true: compile time value, false: runtime value\n     */\n  }, {\n    key: \"isCompileTimeValue\",\n    value: function isCompileTimeValue() {\n      switch (this.type) {\n        case TypeUndefined:\n        case TypeNull:\n        case TypeString:\n        case TypeNumber:\n        case TypeBoolean:\n        case TypeRegExp:\n        case TypeConstArray:\n        case TypeBigInt:\n          return true;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Gets the compile-time value of the expression\n     * @returns {any} the javascript value\n     */\n  }, {\n    key: \"asCompileTimeValue\",\n    value: function asCompileTimeValue() {\n      switch (this.type) {\n        case TypeUndefined:\n          return undefined;\n        case TypeNull:\n          return null;\n        case TypeString:\n          return this.string;\n        case TypeNumber:\n          return this.number;\n        case TypeBoolean:\n          return this.bool;\n        case TypeRegExp:\n          return this.regExp;\n        case TypeConstArray:\n          return this.array;\n        case TypeBigInt:\n          return this.bigint;\n        default:\n          throw new Error(\"asCompileTimeValue must only be called for compile-time values\");\n      }\n    }\n  }, {\n    key: \"isTruthy\",\n    value: function isTruthy() {\n      return this.truthy;\n    }\n  }, {\n    key: \"isFalsy\",\n    value: function isFalsy() {\n      return this.falsy;\n    }\n  }, {\n    key: \"isNullish\",\n    value: function isNullish() {\n      return this.nullish;\n    }\n\n    /**\n     * Can this expression have side effects?\n     * @returns {boolean} false: never has side effects\n     */\n  }, {\n    key: \"couldHaveSideEffects\",\n    value: function couldHaveSideEffects() {\n      return this.sideEffects;\n    }\n  }, {\n    key: \"asBool\",\n    value: function asBool() {\n      if (this.truthy) return true;\n      if (this.falsy || this.nullish) return false;\n      if (this.isBoolean()) return this.bool;\n      if (this.isNull()) return false;\n      if (this.isUndefined()) return false;\n      if (this.isString()) return this.string !== \"\";\n      if (this.isNumber()) return this.number !== 0;\n      if (this.isBigInt()) return this.bigint !== BigInt(0);\n      if (this.isRegExp()) return true;\n      if (this.isArray()) return true;\n      if (this.isConstArray()) return true;\n      if (this.isWrapped()) {\n        return this.prefix && this.prefix.asBool() || this.postfix && this.postfix.asBool() ? true : undefined;\n      }\n      if (this.isTemplateString()) {\n        var str = this.asString();\n        if (typeof str === \"string\") return str !== \"\";\n      }\n      return undefined;\n    }\n  }, {\n    key: \"asNullish\",\n    value: function asNullish() {\n      var nullish = this.isNullish();\n      if (nullish === true || this.isNull() || this.isUndefined()) return true;\n      if (nullish === false) return false;\n      if (this.isTruthy()) return false;\n      if (this.isBoolean()) return false;\n      if (this.isString()) return false;\n      if (this.isNumber()) return false;\n      if (this.isBigInt()) return false;\n      if (this.isRegExp()) return false;\n      if (this.isArray()) return false;\n      if (this.isConstArray()) return false;\n      if (this.isTemplateString()) return false;\n      if (this.isRegExp()) return false;\n      return undefined;\n    }\n  }, {\n    key: \"asString\",\n    value: function asString() {\n      if (this.isBoolean()) return \"\".concat(this.bool);\n      if (this.isNull()) return \"null\";\n      if (this.isUndefined()) return \"undefined\";\n      if (this.isString()) return this.string;\n      if (this.isNumber()) return \"\".concat(this.number);\n      if (this.isBigInt()) return \"\".concat(this.bigint);\n      if (this.isRegExp()) return \"\".concat(this.regExp);\n      if (this.isArray()) {\n        var array = [];\n        var _iterator = _createForOfIteratorHelper(this.items),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var itemStr = item.asString();\n            if (itemStr === undefined) return undefined;\n            array.push(itemStr);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return \"\".concat(array);\n      }\n      if (this.isConstArray()) return \"\".concat(this.array);\n      if (this.isTemplateString()) {\n        var str = \"\";\n        var _iterator2 = _createForOfIteratorHelper(this.parts),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var part = _step2.value;\n            var partStr = part.asString();\n            if (partStr === undefined) return undefined;\n            str += partStr;\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return str;\n      }\n      return undefined;\n    }\n  }, {\n    key: \"setString\",\n    value: function setString(string) {\n      this.type = TypeString;\n      this.string = string;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setUndefined\",\n    value: function setUndefined() {\n      this.type = TypeUndefined;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setNull\",\n    value: function setNull() {\n      this.type = TypeNull;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setNumber\",\n    value: function setNumber(number) {\n      this.type = TypeNumber;\n      this.number = number;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setBigInt\",\n    value: function setBigInt(bigint) {\n      this.type = TypeBigInt;\n      this.bigint = bigint;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setBoolean\",\n    value: function setBoolean(bool) {\n      this.type = TypeBoolean;\n      this.bool = bool;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setRegExp\",\n    value: function setRegExp(regExp) {\n      this.type = TypeRegExp;\n      this.regExp = regExp;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setIdentifier\",\n    value: function setIdentifier(identifier, rootInfo, getMembers, getMembersOptionals) {\n      this.type = TypeIdentifier;\n      this.identifier = identifier;\n      this.rootInfo = rootInfo;\n      this.getMembers = getMembers;\n      this.getMembersOptionals = getMembersOptionals;\n      this.sideEffects = true;\n      return this;\n    }\n  }, {\n    key: \"setWrapped\",\n    value: function setWrapped(prefix, postfix, innerExpressions) {\n      this.type = TypeWrapped;\n      this.prefix = prefix;\n      this.postfix = postfix;\n      this.wrappedInnerExpressions = innerExpressions;\n      this.sideEffects = true;\n      return this;\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.type = TypeConditional;\n      this.options = options;\n      this.sideEffects = true;\n      return this;\n    }\n  }, {\n    key: \"addOptions\",\n    value: function addOptions(options) {\n      if (!this.options) {\n        this.type = TypeConditional;\n        this.options = [];\n        this.sideEffects = true;\n      }\n      var _iterator3 = _createForOfIteratorHelper(options),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var item = _step3.value;\n          this.options.push(item);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return this;\n    }\n  }, {\n    key: \"setItems\",\n    value: function setItems(items) {\n      this.type = TypeArray;\n      this.items = items;\n      this.sideEffects = items.some(function (i) {\n        return i.couldHaveSideEffects();\n      });\n      return this;\n    }\n  }, {\n    key: \"setArray\",\n    value: function setArray(array) {\n      this.type = TypeConstArray;\n      this.array = array;\n      this.sideEffects = false;\n      return this;\n    }\n  }, {\n    key: \"setTemplateString\",\n    value: function setTemplateString(quasis, parts, kind) {\n      this.type = TypeTemplateString;\n      this.quasis = quasis;\n      this.parts = parts;\n      this.templateStringKind = kind;\n      this.sideEffects = parts.some(function (p) {\n        return p.sideEffects;\n      });\n      return this;\n    }\n  }, {\n    key: \"setTruthy\",\n    value: function setTruthy() {\n      this.falsy = false;\n      this.truthy = true;\n      this.nullish = false;\n      return this;\n    }\n  }, {\n    key: \"setFalsy\",\n    value: function setFalsy() {\n      this.falsy = true;\n      this.truthy = false;\n      return this;\n    }\n  }, {\n    key: \"setNullish\",\n    value: function setNullish(value) {\n      this.nullish = value;\n      if (value) return this.setFalsy();\n      return this;\n    }\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n      return this;\n    }\n  }, {\n    key: \"setSideEffects\",\n    value: function setSideEffects() {\n      var sideEffects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.sideEffects = sideEffects;\n      return this;\n    }\n  }, {\n    key: \"setExpression\",\n    value: function setExpression(expression) {\n      this.expression = expression;\n      return this;\n    }\n  }]);\n  return BasicEvaluatedExpression;\n}();\n/**\n * @param {string} flags regexp flags\n * @returns {boolean} is valid flags\n */\nBasicEvaluatedExpression.isValidRegExpFlags = function (flags) {\n  var len = flags.length;\n  if (len === 0) return true;\n  if (len > 4) return false;\n\n  // cspell:word gimy\n  var remaining = 0; // bit per RegExp flag: gimy\n\n  for (var i = 0; i < len; i++) switch (flags.charCodeAt(i)) {\n    case 103 /* g */:\n      if (remaining & 8) return false;\n      remaining |= 8;\n      break;\n    case 105 /* i */:\n      if (remaining & 4) return false;\n      remaining |= 4;\n      break;\n    case 109 /* m */:\n      if (remaining & 2) return false;\n      remaining |= 2;\n      break;\n    case 121 /* y */:\n      if (remaining & 1) return false;\n      remaining |= 1;\n      break;\n    default:\n      return false;\n  }\n  return true;\n};\nmodule.exports = BasicEvaluatedExpression;","map":{"version":3,"names":["TypeUnknown","TypeUndefined","TypeNull","TypeString","TypeNumber","TypeBoolean","TypeRegExp","TypeConditional","TypeArray","TypeConstArray","TypeIdentifier","TypeWrapped","TypeTemplateString","TypeBigInt","BasicEvaluatedExpression","type","range","undefined","falsy","truthy","nullish","sideEffects","bool","number","bigint","regExp","string","quasis","parts","array","items","options","prefix","postfix","wrappedInnerExpressions","identifier","rootInfo","getMembers","getMembersOptionals","expression","Error","isBoolean","isNull","isUndefined","isString","isNumber","isBigInt","BigInt","isRegExp","isArray","isConstArray","isWrapped","asBool","isTemplateString","str","asString","isNullish","isTruthy","item","itemStr","push","part","partStr","innerExpressions","some","i","couldHaveSideEffects","kind","templateStringKind","p","value","setFalsy","isValidRegExpFlags","flags","len","length","remaining","charCodeAt","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/javascript/BasicEvaluatedExpression.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"estree\").Node} EsTreeNode */\n/** @typedef {import(\"./JavascriptParser\").VariableInfoInterface} VariableInfoInterface */\n\nconst TypeUnknown = 0;\nconst TypeUndefined = 1;\nconst TypeNull = 2;\nconst TypeString = 3;\nconst TypeNumber = 4;\nconst TypeBoolean = 5;\nconst TypeRegExp = 6;\nconst TypeConditional = 7;\nconst TypeArray = 8;\nconst TypeConstArray = 9;\nconst TypeIdentifier = 10;\nconst TypeWrapped = 11;\nconst TypeTemplateString = 12;\nconst TypeBigInt = 13;\n\nclass BasicEvaluatedExpression {\n\tconstructor() {\n\t\tthis.type = TypeUnknown;\n\t\t/** @type {[number, number]} */\n\t\tthis.range = undefined;\n\t\t/** @type {boolean} */\n\t\tthis.falsy = false;\n\t\t/** @type {boolean} */\n\t\tthis.truthy = false;\n\t\t/** @type {boolean | undefined} */\n\t\tthis.nullish = undefined;\n\t\t/** @type {boolean} */\n\t\tthis.sideEffects = true;\n\t\t/** @type {boolean | undefined} */\n\t\tthis.bool = undefined;\n\t\t/** @type {number | undefined} */\n\t\tthis.number = undefined;\n\t\t/** @type {bigint | undefined} */\n\t\tthis.bigint = undefined;\n\t\t/** @type {RegExp | undefined} */\n\t\tthis.regExp = undefined;\n\t\t/** @type {string | undefined} */\n\t\tthis.string = undefined;\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\n\t\tthis.quasis = undefined;\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\n\t\tthis.parts = undefined;\n\t\t/** @type {any[] | undefined} */\n\t\tthis.array = undefined;\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\n\t\tthis.items = undefined;\n\t\t/** @type {BasicEvaluatedExpression[] | undefined} */\n\t\tthis.options = undefined;\n\t\t/** @type {BasicEvaluatedExpression | undefined} */\n\t\tthis.prefix = undefined;\n\t\t/** @type {BasicEvaluatedExpression | undefined} */\n\t\tthis.postfix = undefined;\n\t\tthis.wrappedInnerExpressions = undefined;\n\t\t/** @type {string | VariableInfoInterface | undefined} */\n\t\tthis.identifier = undefined;\n\t\t/** @type {VariableInfoInterface} */\n\t\tthis.rootInfo = undefined;\n\t\t/** @type {() => string[]} */\n\t\tthis.getMembers = undefined;\n\t\t/** @type {() => boolean[]} */\n\t\tthis.getMembersOptionals = undefined;\n\t\t/** @type {EsTreeNode} */\n\t\tthis.expression = undefined;\n\t}\n\n\tisUnknown() {\n\t\treturn this.type === TypeUnknown;\n\t}\n\n\tisNull() {\n\t\treturn this.type === TypeNull;\n\t}\n\n\tisUndefined() {\n\t\treturn this.type === TypeUndefined;\n\t}\n\n\tisString() {\n\t\treturn this.type === TypeString;\n\t}\n\n\tisNumber() {\n\t\treturn this.type === TypeNumber;\n\t}\n\n\tisBigInt() {\n\t\treturn this.type === TypeBigInt;\n\t}\n\n\tisBoolean() {\n\t\treturn this.type === TypeBoolean;\n\t}\n\n\tisRegExp() {\n\t\treturn this.type === TypeRegExp;\n\t}\n\n\tisConditional() {\n\t\treturn this.type === TypeConditional;\n\t}\n\n\tisArray() {\n\t\treturn this.type === TypeArray;\n\t}\n\n\tisConstArray() {\n\t\treturn this.type === TypeConstArray;\n\t}\n\n\tisIdentifier() {\n\t\treturn this.type === TypeIdentifier;\n\t}\n\n\tisWrapped() {\n\t\treturn this.type === TypeWrapped;\n\t}\n\n\tisTemplateString() {\n\t\treturn this.type === TypeTemplateString;\n\t}\n\n\t/**\n\t * Is expression a primitive or an object type value?\n\t * @returns {boolean | undefined} true: primitive type, false: object type, undefined: unknown/runtime-defined\n\t */\n\tisPrimitiveType() {\n\t\tswitch (this.type) {\n\t\t\tcase TypeUndefined:\n\t\t\tcase TypeNull:\n\t\t\tcase TypeString:\n\t\t\tcase TypeNumber:\n\t\t\tcase TypeBoolean:\n\t\t\tcase TypeBigInt:\n\t\t\tcase TypeWrapped:\n\t\t\tcase TypeTemplateString:\n\t\t\t\treturn true;\n\t\t\tcase TypeRegExp:\n\t\t\tcase TypeArray:\n\t\t\tcase TypeConstArray:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Is expression a runtime or compile-time value?\n\t * @returns {boolean} true: compile time value, false: runtime value\n\t */\n\tisCompileTimeValue() {\n\t\tswitch (this.type) {\n\t\t\tcase TypeUndefined:\n\t\t\tcase TypeNull:\n\t\t\tcase TypeString:\n\t\t\tcase TypeNumber:\n\t\t\tcase TypeBoolean:\n\t\t\tcase TypeRegExp:\n\t\t\tcase TypeConstArray:\n\t\t\tcase TypeBigInt:\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the compile-time value of the expression\n\t * @returns {any} the javascript value\n\t */\n\tasCompileTimeValue() {\n\t\tswitch (this.type) {\n\t\t\tcase TypeUndefined:\n\t\t\t\treturn undefined;\n\t\t\tcase TypeNull:\n\t\t\t\treturn null;\n\t\t\tcase TypeString:\n\t\t\t\treturn this.string;\n\t\t\tcase TypeNumber:\n\t\t\t\treturn this.number;\n\t\t\tcase TypeBoolean:\n\t\t\t\treturn this.bool;\n\t\t\tcase TypeRegExp:\n\t\t\t\treturn this.regExp;\n\t\t\tcase TypeConstArray:\n\t\t\t\treturn this.array;\n\t\t\tcase TypeBigInt:\n\t\t\t\treturn this.bigint;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"asCompileTimeValue must only be called for compile-time values\"\n\t\t\t\t);\n\t\t}\n\t}\n\n\tisTruthy() {\n\t\treturn this.truthy;\n\t}\n\n\tisFalsy() {\n\t\treturn this.falsy;\n\t}\n\n\tisNullish() {\n\t\treturn this.nullish;\n\t}\n\n\t/**\n\t * Can this expression have side effects?\n\t * @returns {boolean} false: never has side effects\n\t */\n\tcouldHaveSideEffects() {\n\t\treturn this.sideEffects;\n\t}\n\n\tasBool() {\n\t\tif (this.truthy) return true;\n\t\tif (this.falsy || this.nullish) return false;\n\t\tif (this.isBoolean()) return this.bool;\n\t\tif (this.isNull()) return false;\n\t\tif (this.isUndefined()) return false;\n\t\tif (this.isString()) return this.string !== \"\";\n\t\tif (this.isNumber()) return this.number !== 0;\n\t\tif (this.isBigInt()) return this.bigint !== BigInt(0);\n\t\tif (this.isRegExp()) return true;\n\t\tif (this.isArray()) return true;\n\t\tif (this.isConstArray()) return true;\n\t\tif (this.isWrapped()) {\n\t\t\treturn (this.prefix && this.prefix.asBool()) ||\n\t\t\t\t(this.postfix && this.postfix.asBool())\n\t\t\t\t? true\n\t\t\t\t: undefined;\n\t\t}\n\t\tif (this.isTemplateString()) {\n\t\t\tconst str = this.asString();\n\t\t\tif (typeof str === \"string\") return str !== \"\";\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasNullish() {\n\t\tconst nullish = this.isNullish();\n\n\t\tif (nullish === true || this.isNull() || this.isUndefined()) return true;\n\n\t\tif (nullish === false) return false;\n\t\tif (this.isTruthy()) return false;\n\t\tif (this.isBoolean()) return false;\n\t\tif (this.isString()) return false;\n\t\tif (this.isNumber()) return false;\n\t\tif (this.isBigInt()) return false;\n\t\tif (this.isRegExp()) return false;\n\t\tif (this.isArray()) return false;\n\t\tif (this.isConstArray()) return false;\n\t\tif (this.isTemplateString()) return false;\n\t\tif (this.isRegExp()) return false;\n\n\t\treturn undefined;\n\t}\n\n\tasString() {\n\t\tif (this.isBoolean()) return `${this.bool}`;\n\t\tif (this.isNull()) return \"null\";\n\t\tif (this.isUndefined()) return \"undefined\";\n\t\tif (this.isString()) return this.string;\n\t\tif (this.isNumber()) return `${this.number}`;\n\t\tif (this.isBigInt()) return `${this.bigint}`;\n\t\tif (this.isRegExp()) return `${this.regExp}`;\n\t\tif (this.isArray()) {\n\t\t\tlet array = [];\n\t\t\tfor (const item of this.items) {\n\t\t\t\tconst itemStr = item.asString();\n\t\t\t\tif (itemStr === undefined) return undefined;\n\t\t\t\tarray.push(itemStr);\n\t\t\t}\n\t\t\treturn `${array}`;\n\t\t}\n\t\tif (this.isConstArray()) return `${this.array}`;\n\t\tif (this.isTemplateString()) {\n\t\t\tlet str = \"\";\n\t\t\tfor (const part of this.parts) {\n\t\t\t\tconst partStr = part.asString();\n\t\t\t\tif (partStr === undefined) return undefined;\n\t\t\t\tstr += partStr;\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tsetString(string) {\n\t\tthis.type = TypeString;\n\t\tthis.string = string;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetUndefined() {\n\t\tthis.type = TypeUndefined;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetNull() {\n\t\tthis.type = TypeNull;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetNumber(number) {\n\t\tthis.type = TypeNumber;\n\t\tthis.number = number;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetBigInt(bigint) {\n\t\tthis.type = TypeBigInt;\n\t\tthis.bigint = bigint;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetBoolean(bool) {\n\t\tthis.type = TypeBoolean;\n\t\tthis.bool = bool;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetRegExp(regExp) {\n\t\tthis.type = TypeRegExp;\n\t\tthis.regExp = regExp;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetIdentifier(identifier, rootInfo, getMembers, getMembersOptionals) {\n\t\tthis.type = TypeIdentifier;\n\t\tthis.identifier = identifier;\n\t\tthis.rootInfo = rootInfo;\n\t\tthis.getMembers = getMembers;\n\t\tthis.getMembersOptionals = getMembersOptionals;\n\t\tthis.sideEffects = true;\n\t\treturn this;\n\t}\n\n\tsetWrapped(prefix, postfix, innerExpressions) {\n\t\tthis.type = TypeWrapped;\n\t\tthis.prefix = prefix;\n\t\tthis.postfix = postfix;\n\t\tthis.wrappedInnerExpressions = innerExpressions;\n\t\tthis.sideEffects = true;\n\t\treturn this;\n\t}\n\n\tsetOptions(options) {\n\t\tthis.type = TypeConditional;\n\t\tthis.options = options;\n\t\tthis.sideEffects = true;\n\t\treturn this;\n\t}\n\n\taddOptions(options) {\n\t\tif (!this.options) {\n\t\t\tthis.type = TypeConditional;\n\t\t\tthis.options = [];\n\t\t\tthis.sideEffects = true;\n\t\t}\n\t\tfor (const item of options) {\n\t\t\tthis.options.push(item);\n\t\t}\n\t\treturn this;\n\t}\n\n\tsetItems(items) {\n\t\tthis.type = TypeArray;\n\t\tthis.items = items;\n\t\tthis.sideEffects = items.some(i => i.couldHaveSideEffects());\n\t\treturn this;\n\t}\n\n\tsetArray(array) {\n\t\tthis.type = TypeConstArray;\n\t\tthis.array = array;\n\t\tthis.sideEffects = false;\n\t\treturn this;\n\t}\n\n\tsetTemplateString(quasis, parts, kind) {\n\t\tthis.type = TypeTemplateString;\n\t\tthis.quasis = quasis;\n\t\tthis.parts = parts;\n\t\tthis.templateStringKind = kind;\n\t\tthis.sideEffects = parts.some(p => p.sideEffects);\n\t\treturn this;\n\t}\n\n\tsetTruthy() {\n\t\tthis.falsy = false;\n\t\tthis.truthy = true;\n\t\tthis.nullish = false;\n\t\treturn this;\n\t}\n\n\tsetFalsy() {\n\t\tthis.falsy = true;\n\t\tthis.truthy = false;\n\t\treturn this;\n\t}\n\n\tsetNullish(value) {\n\t\tthis.nullish = value;\n\n\t\tif (value) return this.setFalsy();\n\n\t\treturn this;\n\t}\n\n\tsetRange(range) {\n\t\tthis.range = range;\n\t\treturn this;\n\t}\n\n\tsetSideEffects(sideEffects = true) {\n\t\tthis.sideEffects = sideEffects;\n\t\treturn this;\n\t}\n\n\tsetExpression(expression) {\n\t\tthis.expression = expression;\n\t\treturn this;\n\t}\n}\n\n/**\n * @param {string} flags regexp flags\n * @returns {boolean} is valid flags\n */\nBasicEvaluatedExpression.isValidRegExpFlags = flags => {\n\tconst len = flags.length;\n\n\tif (len === 0) return true;\n\tif (len > 4) return false;\n\n\t// cspell:word gimy\n\tlet remaining = 0b0000; // bit per RegExp flag: gimy\n\n\tfor (let i = 0; i < len; i++)\n\t\tswitch (flags.charCodeAt(i)) {\n\t\t\tcase 103 /* g */:\n\t\t\t\tif (remaining & 0b1000) return false;\n\t\t\t\tremaining |= 0b1000;\n\t\t\t\tbreak;\n\t\t\tcase 105 /* i */:\n\t\t\t\tif (remaining & 0b0100) return false;\n\t\t\t\tremaining |= 0b0100;\n\t\t\t\tbreak;\n\t\t\tcase 109 /* m */:\n\t\t\t\tif (remaining & 0b0010) return false;\n\t\t\t\tremaining |= 0b0010;\n\t\t\t\tbreak;\n\t\t\tcase 121 /* y */:\n\t\t\t\tif (remaining & 0b0001) return false;\n\t\t\t\tremaining |= 0b0001;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\n\treturn true;\n};\n\nmodule.exports = BasicEvaluatedExpression;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}