{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string} message message\n   * @param {string | ResolveStepHook} target target\n   */\n  function TryNextPlugin(source, message, target) {\n    _classCallCheck(this, TryNextPlugin);\n    this.source = source;\n    this.message = message;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(TryNextPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"TryNextPlugin\", function (request, resolveContext, callback) {\n        resolver.doResolve(target, request, _this.message, resolveContext, callback);\n      });\n    }\n  }]);\n  return TryNextPlugin;\n}();","map":{"version":3,"names":["module","exports","source","message","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/TryNextPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class TryNextPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} message message\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, message, target) {\n\t\tthis.source = source;\n\t\tthis.message = message;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"TryNextPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\trequest,\n\t\t\t\t\tthis.message,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAAA;AAAA;AAEAA,MAAM,CAACC,OAAO;EACb;AACD;AACA;AACA;AACA;EACC,uBAAYC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IAAA;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MAAA;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC;MAC/CC,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACL,MAAM,CAAC,CACpBM,QAAQ,CAAC,eAAe,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACjEN,QAAQ,CAACO,SAAS,CACjBR,MAAM,EACNK,OAAO,EACP,KAAI,CAACN,OAAO,EACZO,cAAc,EACdC,QAAQ,CACR;MACF,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}