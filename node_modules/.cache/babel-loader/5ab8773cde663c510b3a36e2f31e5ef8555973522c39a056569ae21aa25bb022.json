{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./ConcatenationScope\")} ConcatenationScope */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} GenerateContext\n * @property {DependencyTemplates} dependencyTemplates mapping from dependencies to templates\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {Set<string>} runtimeRequirements the requirements for runtime\n * @property {RuntimeSpec} runtime the runtime\n * @property {ConcatenationScope=} concatenationScope when in concatenated module, information about other concatenated modules\n * @property {CodeGenerationResults=} codeGenerationResults code generation results of other modules (need to have a codeGenerationDependency to use that)\n * @property {string} type which kind of code should be generated\n * @property {function(): Map<string, any>=} getData get access to the code generation data\n */\n\n/**\n * @typedef {Object} UpdateHashContext\n * @property {NormalModule} module the module\n * @property {ChunkGraph} chunkGraph\n * @property {RuntimeSpec} runtime\n * @property {RuntimeTemplate=} runtimeTemplate\n */\n\n/**\n *\n */\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Generator = /*#__PURE__*/function () {\n  function Generator() {\n    _classCallCheck(this, Generator);\n  }\n  _createClass(Generator, [{\n    key: \"getTypes\",\n    value: /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {NormalModule} module fresh module\n     * @returns {Set<string>} available types (do not mutate)\n     */\n    function getTypes(module) {\n      var AbstractMethodError = require(\"./AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {NormalModule} module the module\n     * @param {string=} type source type\n     * @returns {number} estimate size of the module\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize(module, type) {\n      var AbstractMethodError = require(\"./AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {GenerateContext} generateContext context for generate\n     * @returns {Source} generated code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate(module, _ref) {\n      var dependencyTemplates = _ref.dependencyTemplates,\n        runtimeTemplate = _ref.runtimeTemplate,\n        moduleGraph = _ref.moduleGraph,\n        type = _ref.type;\n      var AbstractMethodError = require(\"./AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n\n    /**\n     * @param {NormalModule} module module for which the bailout reason should be determined\n     * @param {ConcatenationBailoutReasonContext} context context\n     * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n     */\n  }, {\n    key: \"getConcatenationBailoutReason\",\n    value: function getConcatenationBailoutReason(module, context) {\n      return \"Module Concatenation is not implemented for \".concat(this.constructor.name);\n    }\n\n    /**\n     * @param {Hash} hash hash that will be modified\n     * @param {UpdateHashContext} updateHashContext context for updating hash\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, _ref2) {\n      var module = _ref2.module,\n        runtime = _ref2.runtime;\n    } // no nothing\n  }], [{\n    key: \"byType\",\n    value: function byType(map) {\n      return new ByTypeGenerator(map);\n    }\n  }]);\n  return Generator;\n}();\nvar ByTypeGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(ByTypeGenerator, _Generator);\n  var _super = _createSuper(ByTypeGenerator);\n  function ByTypeGenerator(map) {\n    var _this;\n    _classCallCheck(this, ByTypeGenerator);\n    _this = _super.call(this);\n    _this.map = map;\n    _this._types = new Set(Object.keys(map));\n    return _this;\n  }\n\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {Set<string>} available types (do not mutate)\n   */\n  _createClass(ByTypeGenerator, [{\n    key: \"getTypes\",\n    value: function getTypes(module) {\n      return this._types;\n    }\n\n    /**\n     * @param {NormalModule} module the module\n     * @param {string=} type source type\n     * @returns {number} estimate size of the module\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize(module, type) {\n      var t = type || \"javascript\";\n      var generator = this.map[t];\n      return generator ? generator.getSize(module, t) : 0;\n    }\n\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {GenerateContext} generateContext context for generate\n     * @returns {Source} generated code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate(module, generateContext) {\n      var type = generateContext.type;\n      var generator = this.map[type];\n      if (!generator) {\n        throw new Error(\"Generator.byType: no generator specified for \".concat(type));\n      }\n      return generator.generate(module, generateContext);\n    }\n  }]);\n  return ByTypeGenerator;\n}(Generator);\nmodule.exports = Generator;","map":{"version":3,"names":["Generator","module","AbstractMethodError","require","type","dependencyTemplates","runtimeTemplate","moduleGraph","context","constructor","name","hash","runtime","map","ByTypeGenerator","_types","Set","Object","keys","t","generator","getSize","generateContext","Error","generate","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/Generator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./CodeGenerationResults\")} CodeGenerationResults */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./ConcatenationScope\")} ConcatenationScope */\n/** @typedef {import(\"./DependencyTemplate\")} DependencyTemplate */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} GenerateContext\n * @property {DependencyTemplates} dependencyTemplates mapping from dependencies to templates\n * @property {RuntimeTemplate} runtimeTemplate the runtime template\n * @property {ModuleGraph} moduleGraph the module graph\n * @property {ChunkGraph} chunkGraph the chunk graph\n * @property {Set<string>} runtimeRequirements the requirements for runtime\n * @property {RuntimeSpec} runtime the runtime\n * @property {ConcatenationScope=} concatenationScope when in concatenated module, information about other concatenated modules\n * @property {CodeGenerationResults=} codeGenerationResults code generation results of other modules (need to have a codeGenerationDependency to use that)\n * @property {string} type which kind of code should be generated\n * @property {function(): Map<string, any>=} getData get access to the code generation data\n */\n\n/**\n * @typedef {Object} UpdateHashContext\n * @property {NormalModule} module the module\n * @property {ChunkGraph} chunkGraph\n * @property {RuntimeSpec} runtime\n * @property {RuntimeTemplate=} runtimeTemplate\n */\n\n/**\n *\n */\nclass Generator {\n\tstatic byType(map) {\n\t\treturn new ByTypeGenerator(map);\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(\n\t\tmodule,\n\t\t{ dependencyTemplates, runtimeTemplate, moduleGraph, type }\n\t) {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the bailout reason should be determined\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(module, context) {\n\t\treturn `Module Concatenation is not implemented for ${this.constructor.name}`;\n\t}\n\n\t/**\n\t * @param {Hash} hash hash that will be modified\n\t * @param {UpdateHashContext} updateHashContext context for updating hash\n\t */\n\tupdateHash(hash, { module, runtime }) {\n\t\t// no nothing\n\t}\n}\n\nclass ByTypeGenerator extends Generator {\n\tconstructor(map) {\n\t\tsuper();\n\t\tthis.map = map;\n\t\tthis._types = new Set(Object.keys(map));\n\t}\n\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn this._types;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst t = type || \"javascript\";\n\t\tconst generator = this.map[t];\n\t\treturn generator ? generator.getSize(module, t) : 0;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst type = generateContext.type;\n\t\tconst generator = this.map[type];\n\t\tif (!generator) {\n\t\t\tthrow new Error(`Generator.byType: no generator specified for ${type}`);\n\t\t}\n\t\treturn generator.generate(module, generateContext);\n\t}\n}\n\nmodule.exports = Generator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}