{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\nvar DependenciesBlock = /*#__PURE__*/function () {\n  function DependenciesBlock() {\n    _classCallCheck(this, DependenciesBlock);\n    /** @type {Dependency[]} */\n    this.dependencies = [];\n    /** @type {AsyncDependenciesBlock[]} */\n    this.blocks = [];\n    /** @type {DependenciesBlock} */\n    this.parent = undefined;\n  }\n  _createClass(DependenciesBlock, [{\n    key: \"getRootBlock\",\n    value: function getRootBlock() {\n      /** @type {DependenciesBlock} */\n      var current = this;\n      while (current.parent) current = current.parent;\n      return current;\n    }\n\n    /**\n     * Adds a DependencyBlock to DependencyBlock relationship.\n     * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)\n     *\n     * @param {AsyncDependenciesBlock} block block being added\n     * @returns {void}\n     */\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(block) {\n      this.blocks.push(block);\n      block.parent = this;\n    }\n\n    /**\n     * @param {Dependency} dependency dependency being tied to block.\n     * This is an \"edge\" pointing to another \"node\" on module graph.\n     * @returns {void}\n     */\n  }, {\n    key: \"addDependency\",\n    value: function addDependency(dependency) {\n      this.dependencies.push(dependency);\n    }\n\n    /**\n     * @param {Dependency} dependency dependency being removed\n     * @returns {void}\n     */\n  }, {\n    key: \"removeDependency\",\n    value: function removeDependency(dependency) {\n      var idx = this.dependencies.indexOf(dependency);\n      if (idx >= 0) {\n        this.dependencies.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Removes all dependencies and blocks\n     * @returns {void}\n     */\n  }, {\n    key: \"clearDependenciesAndBlocks\",\n    value: function clearDependenciesAndBlocks() {\n      this.dependencies.length = 0;\n      this.blocks.length = 0;\n    }\n\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @param {UpdateHashContext} context context\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, context) {\n      var _iterator = _createForOfIteratorHelper(this.dependencies),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          dep.updateHash(hash, context);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(this.blocks),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var block = _step2.value;\n          block.updateHash(hash, context);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(_ref) {\n      var write = _ref.write;\n      write(this.dependencies);\n      write(this.blocks);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(_ref2) {\n      var read = _ref2.read;\n      this.dependencies = read();\n      this.blocks = read();\n      var _iterator3 = _createForOfIteratorHelper(this.blocks),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var block = _step3.value;\n          block.parent = this;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n  return DependenciesBlock;\n}();\nmakeSerializable(DependenciesBlock, \"webpack/lib/DependenciesBlock\");\nmodule.exports = DependenciesBlock;","map":{"version":3,"names":["makeSerializable","require","DependenciesBlock","dependencies","blocks","parent","undefined","current","block","push","dependency","idx","indexOf","splice","length","hash","context","dep","updateHash","write","read","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/DependenciesBlock.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n\nclass DependenciesBlock {\n\tconstructor() {\n\t\t/** @type {Dependency[]} */\n\t\tthis.dependencies = [];\n\t\t/** @type {AsyncDependenciesBlock[]} */\n\t\tthis.blocks = [];\n\t\t/** @type {DependenciesBlock} */\n\t\tthis.parent = undefined;\n\t}\n\n\tgetRootBlock() {\n\t\t/** @type {DependenciesBlock} */\n\t\tlet current = this;\n\t\twhile (current.parent) current = current.parent;\n\t\treturn current;\n\t}\n\n\t/**\n\t * Adds a DependencyBlock to DependencyBlock relationship.\n\t * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)\n\t *\n\t * @param {AsyncDependenciesBlock} block block being added\n\t * @returns {void}\n\t */\n\taddBlock(block) {\n\t\tthis.blocks.push(block);\n\t\tblock.parent = this;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being tied to block.\n\t * This is an \"edge\" pointing to another \"node\" on module graph.\n\t * @returns {void}\n\t */\n\taddDependency(dependency) {\n\t\tthis.dependencies.push(dependency);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being removed\n\t * @returns {void}\n\t */\n\tremoveDependency(dependency) {\n\t\tconst idx = this.dependencies.indexOf(dependency);\n\t\tif (idx >= 0) {\n\t\t\tthis.dependencies.splice(idx, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all dependencies and blocks\n\t * @returns {void}\n\t */\n\tclearDependenciesAndBlocks() {\n\t\tthis.dependencies.length = 0;\n\t\tthis.blocks.length = 0;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tfor (const dep of this.dependencies) {\n\t\t\tdep.updateHash(hash, context);\n\t\t}\n\t\tfor (const block of this.blocks) {\n\t\t\tblock.updateHash(hash, context);\n\t\t}\n\t}\n\n\tserialize({ write }) {\n\t\twrite(this.dependencies);\n\t\twrite(this.blocks);\n\t}\n\n\tdeserialize({ read }) {\n\t\tthis.dependencies = read();\n\t\tthis.blocks = read();\n\t\tfor (const block of this.blocks) {\n\t\t\tblock.parent = this;\n\t\t}\n\t}\n}\n\nmakeSerializable(DependenciesBlock, \"webpack/lib/DependenciesBlock\");\n\nmodule.exports = DependenciesBlock;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAEMC,iBAAiB;EACtB,6BAAc;IAAA;IACb;IACA,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB;IACA,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB;IACA,IAAI,CAACC,MAAM,GAAGC,SAAS;EACxB;EAAC;IAAA;IAAA,OAED,wBAAe;MACd;MACA,IAAIC,OAAO,GAAG,IAAI;MAClB,OAAOA,OAAO,CAACF,MAAM,EAAEE,OAAO,GAAGA,OAAO,CAACF,MAAM;MAC/C,OAAOE,OAAO;IACf;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAA;IAAA,OAOA,kBAASC,KAAK,EAAE;MACf,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACD,KAAK,CAAC;MACvBA,KAAK,CAACH,MAAM,GAAG,IAAI;IACpB;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,uBAAcK,UAAU,EAAE;MACzB,IAAI,CAACP,YAAY,CAACM,IAAI,CAACC,UAAU,CAAC;IACnC;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,0BAAiBA,UAAU,EAAE;MAC5B,IAAMC,GAAG,GAAG,IAAI,CAACR,YAAY,CAACS,OAAO,CAACF,UAAU,CAAC;MACjD,IAAIC,GAAG,IAAI,CAAC,EAAE;QACb,IAAI,CAACR,YAAY,CAACU,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;MACjC;IACD;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,sCAA6B;MAC5B,IAAI,CAACR,YAAY,CAACW,MAAM,GAAG,CAAC;MAC5B,IAAI,CAACV,MAAM,CAACU,MAAM,GAAG,CAAC;IACvB;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,oBAAWC,IAAI,EAAEC,OAAO,EAAE;MAAA,2CACP,IAAI,CAACb,YAAY;QAAA;MAAA;QAAnC,oDAAqC;UAAA,IAA1Bc,GAAG;UACbA,GAAG,CAACC,UAAU,CAACH,IAAI,EAAEC,OAAO,CAAC;QAC9B;MAAC;QAAA;MAAA;QAAA;MAAA;MAAA,4CACmB,IAAI,CAACZ,MAAM;QAAA;MAAA;QAA/B,uDAAiC;UAAA,IAAtBI,KAAK;UACfA,KAAK,CAACU,UAAU,CAACH,IAAI,EAAEC,OAAO,CAAC;QAChC;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,yBAAqB;MAAA,IAATG,KAAK,QAALA,KAAK;MAChBA,KAAK,CAAC,IAAI,CAAChB,YAAY,CAAC;MACxBgB,KAAK,CAAC,IAAI,CAACf,MAAM,CAAC;IACnB;EAAC;IAAA;IAAA,OAED,4BAAsB;MAAA,IAARgB,IAAI,SAAJA,IAAI;MACjB,IAAI,CAACjB,YAAY,GAAGiB,IAAI,EAAE;MAC1B,IAAI,CAAChB,MAAM,GAAGgB,IAAI,EAAE;MAAC,4CACD,IAAI,CAAChB,MAAM;QAAA;MAAA;QAA/B,uDAAiC;UAAA,IAAtBI,KAAK;UACfA,KAAK,CAACH,MAAM,GAAG,IAAI;QACpB;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;EAAA;AAAA;AAGFL,gBAAgB,CAACE,iBAAiB,EAAE,+BAA+B,CAAC;AAEpEmB,MAAM,CAACC,OAAO,GAAGpB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}