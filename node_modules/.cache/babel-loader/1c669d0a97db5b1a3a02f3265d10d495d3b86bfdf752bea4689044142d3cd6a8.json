{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  function LogInfoPlugin(source) {\n    _classCallCheck(this, LogInfoPlugin);\n    this.source = source;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(LogInfoPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var source = this.source;\n      resolver.getHook(this.source).tapAsync(\"LogInfoPlugin\", function (request, resolveContext, callback) {\n        if (!resolveContext.log) return callback();\n        var log = resolveContext.log;\n        var prefix = \"[\" + source + \"] \";\n        if (request.path) log(prefix + \"Resolving in directory: \" + request.path);\n        if (request.request) log(prefix + \"Resolving request: \" + request.request);\n        if (request.module) log(prefix + \"Request is an module request.\");\n        if (request.directory) log(prefix + \"Request is a directory request.\");\n        if (request.query) log(prefix + \"Resolving request query: \" + request.query);\n        if (request.fragment) log(prefix + \"Resolving request fragment: \" + request.fragment);\n        if (request.descriptionFilePath) log(prefix + \"Has description data from \" + request.descriptionFilePath);\n        if (request.relativePath) log(prefix + \"Relative path from description file is: \" + request.relativePath);\n        callback();\n      });\n    }\n  }]);\n  return LogInfoPlugin;\n}();","map":{"version":3,"names":["module","exports","source","resolver","getHook","tapAsync","request","resolveContext","callback","log","prefix","path","directory","query","fragment","descriptionFilePath","relativePath"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/LogInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = class LogInfoPlugin {\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst source = this.source;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!resolveContext.log) return callback();\n\t\t\t\tconst log = resolveContext.log;\n\t\t\t\tconst prefix = \"[\" + source + \"] \";\n\t\t\t\tif (request.path)\n\t\t\t\t\tlog(prefix + \"Resolving in directory: \" + request.path);\n\t\t\t\tif (request.request)\n\t\t\t\t\tlog(prefix + \"Resolving request: \" + request.request);\n\t\t\t\tif (request.module) log(prefix + \"Request is an module request.\");\n\t\t\t\tif (request.directory) log(prefix + \"Request is a directory request.\");\n\t\t\t\tif (request.query)\n\t\t\t\t\tlog(prefix + \"Resolving request query: \" + request.query);\n\t\t\t\tif (request.fragment)\n\t\t\t\t\tlog(prefix + \"Resolving request fragment: \" + request.fragment);\n\t\t\t\tif (request.descriptionFilePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix + \"Has description data from \" + request.descriptionFilePath\n\t\t\t\t\t);\n\t\t\t\tif (request.relativePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\t\"Relative path from description file is: \" +\n\t\t\t\t\t\t\trequest.relativePath\n\t\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAAA;AAAA;AAEAA,MAAM,CAACC,OAAO;EACb,uBAAYC,MAAM,EAAE;IAAA;IACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MACf,IAAMD,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1BC,QAAQ,CACNC,OAAO,CAAC,IAAI,CAACF,MAAM,CAAC,CACpBG,QAAQ,CAAC,eAAe,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACjE,IAAI,CAACD,cAAc,CAACE,GAAG,EAAE,OAAOD,QAAQ,EAAE;QAC1C,IAAMC,GAAG,GAAGF,cAAc,CAACE,GAAG;QAC9B,IAAMC,MAAM,GAAG,GAAG,GAAGR,MAAM,GAAG,IAAI;QAClC,IAAII,OAAO,CAACK,IAAI,EACfF,GAAG,CAACC,MAAM,GAAG,0BAA0B,GAAGJ,OAAO,CAACK,IAAI,CAAC;QACxD,IAAIL,OAAO,CAACA,OAAO,EAClBG,GAAG,CAACC,MAAM,GAAG,qBAAqB,GAAGJ,OAAO,CAACA,OAAO,CAAC;QACtD,IAAIA,OAAO,CAACN,MAAM,EAAES,GAAG,CAACC,MAAM,GAAG,+BAA+B,CAAC;QACjE,IAAIJ,OAAO,CAACM,SAAS,EAAEH,GAAG,CAACC,MAAM,GAAG,iCAAiC,CAAC;QACtE,IAAIJ,OAAO,CAACO,KAAK,EAChBJ,GAAG,CAACC,MAAM,GAAG,2BAA2B,GAAGJ,OAAO,CAACO,KAAK,CAAC;QAC1D,IAAIP,OAAO,CAACQ,QAAQ,EACnBL,GAAG,CAACC,MAAM,GAAG,8BAA8B,GAAGJ,OAAO,CAACQ,QAAQ,CAAC;QAChE,IAAIR,OAAO,CAACS,mBAAmB,EAC9BN,GAAG,CACFC,MAAM,GAAG,4BAA4B,GAAGJ,OAAO,CAACS,mBAAmB,CACnE;QACF,IAAIT,OAAO,CAACU,YAAY,EACvBP,GAAG,CACFC,MAAM,GACL,0CAA0C,GAC1CJ,OAAO,CAACU,YAAY,CACrB;QACFR,QAAQ,EAAE;MACX,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}