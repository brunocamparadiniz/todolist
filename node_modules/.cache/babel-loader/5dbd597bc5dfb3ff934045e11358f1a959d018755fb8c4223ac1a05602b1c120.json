{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar formatLocation = require(\"../formatLocation\");\nvar _require = require(\"../javascript/JavascriptParserHelpers\"),\n  evaluateToString = _require.evaluateToString;\nvar propertyAccess = require(\"../util/propertyAccess\");\nvar CommonJsExportRequireDependency = require(\"./CommonJsExportRequireDependency\");\nvar CommonJsExportsDependency = require(\"./CommonJsExportsDependency\");\nvar CommonJsSelfReferenceDependency = require(\"./CommonJsSelfReferenceDependency\");\nvar DynamicExports = require(\"./DynamicExports\");\nvar HarmonyExports = require(\"./HarmonyExports\");\nvar ModuleDecoratorDependency = require(\"./ModuleDecoratorDependency\");\n\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\nvar getValueOfPropertyDescription = function getValueOfPropertyDescription(expr) {\n  if (expr.type !== \"ObjectExpression\") return;\n  var _iterator = _createForOfIteratorHelper(expr.properties),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var property = _step.value;\n      if (property.computed) continue;\n      var key = property.key;\n      if (key.type !== \"Identifier\" || key.name !== \"value\") continue;\n      return property.value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\nvar isTruthyLiteral = function isTruthyLiteral(expr) {\n  switch (expr.type) {\n    case \"Literal\":\n      return !!expr.value;\n    case \"UnaryExpression\":\n      if (expr.operator === \"!\") return isFalsyLiteral(expr.argument);\n  }\n  return false;\n};\nvar isFalsyLiteral = function isFalsyLiteral(expr) {\n  switch (expr.type) {\n    case \"Literal\":\n      return !expr.value;\n    case \"UnaryExpression\":\n      if (expr.operator === \"!\") return isTruthyLiteral(expr.argument);\n  }\n  return false;\n};\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {ExpressionNode} expr expression\n * @returns {{ argument: BasicEvaluatedExpression, ids: string[] } | undefined} parsed call\n */\nvar parseRequireCall = function parseRequireCall(parser, expr) {\n  var ids = [];\n  while (expr.type === \"MemberExpression\") {\n    if (expr.object.type === \"Super\") return;\n    if (!expr.property) return;\n    var prop = expr.property;\n    if (expr.computed) {\n      if (prop.type !== \"Literal\") return;\n      ids.push(\"\".concat(prop.value));\n    } else {\n      if (prop.type !== \"Identifier\") return;\n      ids.push(prop.name);\n    }\n    expr = expr.object;\n  }\n  if (expr.type !== \"CallExpression\" || expr.arguments.length !== 1) return;\n  var callee = expr.callee;\n  if (callee.type !== \"Identifier\" || parser.getVariableInfo(callee.name) !== \"require\") {\n    return;\n  }\n  var arg = expr.arguments[0];\n  if (arg.type === \"SpreadElement\") return;\n  var argValue = parser.evaluateExpression(arg);\n  return {\n    argument: argValue,\n    ids: ids.reverse()\n  };\n};\nvar CommonJsExportsParserPlugin = /*#__PURE__*/function () {\n  function CommonJsExportsParserPlugin(moduleGraph) {\n    _classCallCheck(this, CommonJsExportsParserPlugin);\n    this.moduleGraph = moduleGraph;\n  }\n\n  /**\n   * @param {JavascriptParser} parser the parser\n   */\n  _createClass(CommonJsExportsParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n      var enableStructuredExports = function enableStructuredExports() {\n        DynamicExports.enable(parser.state);\n      };\n      var checkNamespace = function checkNamespace(topLevel, members, valueExpr) {\n        if (!DynamicExports.isEnabled(parser.state)) return;\n        if (members.length > 0 && members[0] === \"__esModule\") {\n          if (valueExpr && isTruthyLiteral(valueExpr) && topLevel) {\n            DynamicExports.setFlagged(parser.state);\n          } else {\n            DynamicExports.setDynamic(parser.state);\n          }\n        }\n      };\n      var bailout = function bailout(reason) {\n        DynamicExports.bailout(parser.state);\n        if (reason) bailoutHint(reason);\n      };\n      var bailoutHint = function bailoutHint(reason) {\n        _this.moduleGraph.getOptimizationBailout(parser.state.module).push(\"CommonJS bailout: \".concat(reason));\n      };\n\n      // metadata //\n      parser.hooks.evaluateTypeof.for(\"module\").tap(\"CommonJsExportsParserPlugin\", evaluateToString(\"object\"));\n      parser.hooks.evaluateTypeof.for(\"exports\").tap(\"CommonJsPlugin\", evaluateToString(\"object\"));\n\n      // exporting //\n      var handleAssignExport = function handleAssignExport(expr, base, members) {\n        if (HarmonyExports.isEnabled(parser.state)) return;\n        // Handle reexporting\n        var requireCall = parseRequireCall(parser, expr.right);\n        if (requireCall && requireCall.argument.isString() && (members.length === 0 || members[0] !== \"__esModule\")) {\n          enableStructuredExports();\n          // It's possible to reexport __esModule, so we must convert to a dynamic module\n          if (members.length === 0) DynamicExports.setDynamic(parser.state);\n          var _dep = new CommonJsExportRequireDependency(expr.range, null, base, members, requireCall.argument.string, requireCall.ids, !parser.isStatementLevelExpression(expr));\n          _dep.loc = expr.loc;\n          _dep.optional = !!parser.scope.inTry;\n          parser.state.module.addDependency(_dep);\n          return true;\n        }\n        if (members.length === 0) return;\n        enableStructuredExports();\n        var remainingMembers = members;\n        checkNamespace(parser.statementPath.length === 1 && parser.isStatementLevelExpression(expr), remainingMembers, expr.right);\n        var dep = new CommonJsExportsDependency(expr.left.range, null, base, remainingMembers);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        parser.walkExpression(expr.right);\n        return true;\n      };\n      parser.hooks.assignMemberChain.for(\"exports\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        return handleAssignExport(expr, \"exports\", members);\n      });\n      parser.hooks.assignMemberChain.for(\"this\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (!parser.scope.topLevelScope) return;\n        return handleAssignExport(expr, \"this\", members);\n      });\n      parser.hooks.assignMemberChain.for(\"module\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (members[0] !== \"exports\") return;\n        return handleAssignExport(expr, \"module.exports\", members.slice(1));\n      });\n      parser.hooks.call.for(\"Object.defineProperty\").tap(\"CommonJsExportsParserPlugin\", function (expression) {\n        var expr = /** @type {import(\"estree\").CallExpression} */\n        expression;\n        if (!parser.isStatementLevelExpression(expr)) return;\n        if (expr.arguments.length !== 3) return;\n        if (expr.arguments[0].type === \"SpreadElement\") return;\n        if (expr.arguments[1].type === \"SpreadElement\") return;\n        if (expr.arguments[2].type === \"SpreadElement\") return;\n        var exportsArg = parser.evaluateExpression(expr.arguments[0]);\n        if (!exportsArg.isIdentifier()) return;\n        if (exportsArg.identifier !== \"exports\" && exportsArg.identifier !== \"module.exports\" && (exportsArg.identifier !== \"this\" || !parser.scope.topLevelScope)) {\n          return;\n        }\n        var propertyArg = parser.evaluateExpression(expr.arguments[1]);\n        var property = propertyArg.asString();\n        if (typeof property !== \"string\") return;\n        enableStructuredExports();\n        var descArg = expr.arguments[2];\n        checkNamespace(parser.statementPath.length === 1, [property], getValueOfPropertyDescription(descArg));\n        var dep = new CommonJsExportsDependency(expr.range, expr.arguments[2].range, \"Object.defineProperty(\".concat(exportsArg.identifier, \")\"), [property]);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        parser.walkExpression(expr.arguments[2]);\n        return true;\n      });\n\n      // Self reference //\n      var handleAccessExport = function handleAccessExport(expr, base, members) {\n        var call = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n        if (HarmonyExports.isEnabled(parser.state)) return;\n        if (members.length === 0) {\n          bailout(\"\".concat(base, \" is used directly at \").concat(formatLocation(expr.loc)));\n        }\n        if (call && members.length === 1) {\n          bailoutHint(\"\".concat(base).concat(propertyAccess(members), \"(...) prevents optimization as \").concat(base, \" is passed as call context at \").concat(formatLocation(expr.loc)));\n        }\n        var dep = new CommonJsSelfReferenceDependency(expr.range, base, members, !!call);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        if (call) {\n          parser.walkExpressions(call.arguments);\n        }\n        return true;\n      };\n      parser.hooks.callMemberChain.for(\"exports\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        return handleAccessExport(expr.callee, \"exports\", members, expr);\n      });\n      parser.hooks.expressionMemberChain.for(\"exports\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        return handleAccessExport(expr, \"exports\", members);\n      });\n      parser.hooks.expression.for(\"exports\").tap(\"CommonJsExportsParserPlugin\", function (expr) {\n        return handleAccessExport(expr, \"exports\", []);\n      });\n      parser.hooks.callMemberChain.for(\"module\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (members[0] !== \"exports\") return;\n        return handleAccessExport(expr.callee, \"module.exports\", members.slice(1), expr);\n      });\n      parser.hooks.expressionMemberChain.for(\"module\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (members[0] !== \"exports\") return;\n        return handleAccessExport(expr, \"module.exports\", members.slice(1));\n      });\n      parser.hooks.expression.for(\"module.exports\").tap(\"CommonJsExportsParserPlugin\", function (expr) {\n        return handleAccessExport(expr, \"module.exports\", []);\n      });\n      parser.hooks.callMemberChain.for(\"this\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (!parser.scope.topLevelScope) return;\n        return handleAccessExport(expr.callee, \"this\", members, expr);\n      });\n      parser.hooks.expressionMemberChain.for(\"this\").tap(\"CommonJsExportsParserPlugin\", function (expr, members) {\n        if (!parser.scope.topLevelScope) return;\n        return handleAccessExport(expr, \"this\", members);\n      });\n      parser.hooks.expression.for(\"this\").tap(\"CommonJsExportsParserPlugin\", function (expr) {\n        if (!parser.scope.topLevelScope) return;\n        return handleAccessExport(expr, \"this\", []);\n      });\n\n      // Bailouts //\n      parser.hooks.expression.for(\"module\").tap(\"CommonJsPlugin\", function (expr) {\n        bailout();\n        var isHarmony = HarmonyExports.isEnabled(parser.state);\n        var dep = new ModuleDecoratorDependency(isHarmony ? RuntimeGlobals.harmonyModuleDecorator : RuntimeGlobals.nodeModuleDecorator, !isHarmony);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n  return CommonJsExportsParserPlugin;\n}();\nmodule.exports = CommonJsExportsParserPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","formatLocation","evaluateToString","propertyAccess","CommonJsExportRequireDependency","CommonJsExportsDependency","CommonJsSelfReferenceDependency","DynamicExports","HarmonyExports","ModuleDecoratorDependency","getValueOfPropertyDescription","expr","type","properties","property","computed","key","name","value","isTruthyLiteral","operator","isFalsyLiteral","argument","parseRequireCall","parser","ids","object","prop","push","arguments","length","callee","getVariableInfo","arg","argValue","evaluateExpression","reverse","CommonJsExportsParserPlugin","moduleGraph","enableStructuredExports","enable","state","checkNamespace","topLevel","members","valueExpr","isEnabled","setFlagged","setDynamic","bailout","reason","bailoutHint","getOptimizationBailout","module","hooks","evaluateTypeof","for","tap","handleAssignExport","base","requireCall","right","isString","dep","range","string","isStatementLevelExpression","loc","optional","scope","inTry","addDependency","remainingMembers","statementPath","left","walkExpression","assignMemberChain","topLevelScope","slice","call","expression","exportsArg","isIdentifier","identifier","propertyArg","asString","descArg","handleAccessExport","undefined","walkExpressions","callMemberChain","expressionMemberChain","isHarmony","harmonyModuleDecorator","nodeModuleDecorator","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/CommonJsExportsParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst formatLocation = require(\"../formatLocation\");\nconst { evaluateToString } = require(\"../javascript/JavascriptParserHelpers\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst CommonJsExportRequireDependency = require(\"./CommonJsExportRequireDependency\");\nconst CommonJsExportsDependency = require(\"./CommonJsExportsDependency\");\nconst CommonJsSelfReferenceDependency = require(\"./CommonJsSelfReferenceDependency\");\nconst DynamicExports = require(\"./DynamicExports\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst ModuleDecoratorDependency = require(\"./ModuleDecoratorDependency\");\n\n/** @typedef {import(\"estree\").Expression} ExpressionNode */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\nconst getValueOfPropertyDescription = expr => {\n\tif (expr.type !== \"ObjectExpression\") return;\n\tfor (const property of expr.properties) {\n\t\tif (property.computed) continue;\n\t\tconst key = property.key;\n\t\tif (key.type !== \"Identifier\" || key.name !== \"value\") continue;\n\t\treturn property.value;\n\t}\n};\n\nconst isTruthyLiteral = expr => {\n\tswitch (expr.type) {\n\t\tcase \"Literal\":\n\t\t\treturn !!expr.value;\n\t\tcase \"UnaryExpression\":\n\t\t\tif (expr.operator === \"!\") return isFalsyLiteral(expr.argument);\n\t}\n\treturn false;\n};\n\nconst isFalsyLiteral = expr => {\n\tswitch (expr.type) {\n\t\tcase \"Literal\":\n\t\t\treturn !expr.value;\n\t\tcase \"UnaryExpression\":\n\t\t\tif (expr.operator === \"!\") return isTruthyLiteral(expr.argument);\n\t}\n\treturn false;\n};\n\n/**\n * @param {JavascriptParser} parser the parser\n * @param {ExpressionNode} expr expression\n * @returns {{ argument: BasicEvaluatedExpression, ids: string[] } | undefined} parsed call\n */\nconst parseRequireCall = (parser, expr) => {\n\tconst ids = [];\n\twhile (expr.type === \"MemberExpression\") {\n\t\tif (expr.object.type === \"Super\") return;\n\t\tif (!expr.property) return;\n\t\tconst prop = expr.property;\n\t\tif (expr.computed) {\n\t\t\tif (prop.type !== \"Literal\") return;\n\t\t\tids.push(`${prop.value}`);\n\t\t} else {\n\t\t\tif (prop.type !== \"Identifier\") return;\n\t\t\tids.push(prop.name);\n\t\t}\n\t\texpr = expr.object;\n\t}\n\tif (expr.type !== \"CallExpression\" || expr.arguments.length !== 1) return;\n\tconst callee = expr.callee;\n\tif (\n\t\tcallee.type !== \"Identifier\" ||\n\t\tparser.getVariableInfo(callee.name) !== \"require\"\n\t) {\n\t\treturn;\n\t}\n\tconst arg = expr.arguments[0];\n\tif (arg.type === \"SpreadElement\") return;\n\tconst argValue = parser.evaluateExpression(arg);\n\treturn { argument: argValue, ids: ids.reverse() };\n};\n\nclass CommonJsExportsParserPlugin {\n\tconstructor(moduleGraph) {\n\t\tthis.moduleGraph = moduleGraph;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t */\n\tapply(parser) {\n\t\tconst enableStructuredExports = () => {\n\t\t\tDynamicExports.enable(parser.state);\n\t\t};\n\t\tconst checkNamespace = (topLevel, members, valueExpr) => {\n\t\t\tif (!DynamicExports.isEnabled(parser.state)) return;\n\t\t\tif (members.length > 0 && members[0] === \"__esModule\") {\n\t\t\t\tif (valueExpr && isTruthyLiteral(valueExpr) && topLevel) {\n\t\t\t\t\tDynamicExports.setFlagged(parser.state);\n\t\t\t\t} else {\n\t\t\t\t\tDynamicExports.setDynamic(parser.state);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst bailout = reason => {\n\t\t\tDynamicExports.bailout(parser.state);\n\t\t\tif (reason) bailoutHint(reason);\n\t\t};\n\t\tconst bailoutHint = reason => {\n\t\t\tthis.moduleGraph\n\t\t\t\t.getOptimizationBailout(parser.state.module)\n\t\t\t\t.push(`CommonJS bailout: ${reason}`);\n\t\t};\n\n\t\t// metadata //\n\t\tparser.hooks.evaluateTypeof\n\t\t\t.for(\"module\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", evaluateToString(\"object\"));\n\t\tparser.hooks.evaluateTypeof\n\t\t\t.for(\"exports\")\n\t\t\t.tap(\"CommonJsPlugin\", evaluateToString(\"object\"));\n\n\t\t// exporting //\n\t\tconst handleAssignExport = (expr, base, members) => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) return;\n\t\t\t// Handle reexporting\n\t\t\tconst requireCall = parseRequireCall(parser, expr.right);\n\t\t\tif (\n\t\t\t\trequireCall &&\n\t\t\t\trequireCall.argument.isString() &&\n\t\t\t\t(members.length === 0 || members[0] !== \"__esModule\")\n\t\t\t) {\n\t\t\t\tenableStructuredExports();\n\t\t\t\t// It's possible to reexport __esModule, so we must convert to a dynamic module\n\t\t\t\tif (members.length === 0) DynamicExports.setDynamic(parser.state);\n\t\t\t\tconst dep = new CommonJsExportRequireDependency(\n\t\t\t\t\texpr.range,\n\t\t\t\t\tnull,\n\t\t\t\t\tbase,\n\t\t\t\t\tmembers,\n\t\t\t\t\trequireCall.argument.string,\n\t\t\t\t\trequireCall.ids,\n\t\t\t\t\t!parser.isStatementLevelExpression(expr)\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (members.length === 0) return;\n\t\t\tenableStructuredExports();\n\t\t\tconst remainingMembers = members;\n\t\t\tcheckNamespace(\n\t\t\t\tparser.statementPath.length === 1 &&\n\t\t\t\t\tparser.isStatementLevelExpression(expr),\n\t\t\t\tremainingMembers,\n\t\t\t\texpr.right\n\t\t\t);\n\t\t\tconst dep = new CommonJsExportsDependency(\n\t\t\t\texpr.left.range,\n\t\t\t\tnull,\n\t\t\t\tbase,\n\t\t\t\tremainingMembers\n\t\t\t);\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addDependency(dep);\n\t\t\tparser.walkExpression(expr.right);\n\t\t\treturn true;\n\t\t};\n\t\tparser.hooks.assignMemberChain\n\t\t\t.for(\"exports\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\treturn handleAssignExport(expr, \"exports\", members);\n\t\t\t});\n\t\tparser.hooks.assignMemberChain\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\treturn handleAssignExport(expr, \"this\", members);\n\t\t\t});\n\t\tparser.hooks.assignMemberChain\n\t\t\t.for(\"module\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (members[0] !== \"exports\") return;\n\t\t\t\treturn handleAssignExport(expr, \"module.exports\", members.slice(1));\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"Object.defineProperty\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {import(\"estree\").CallExpression} */ (\n\t\t\t\t\texpression\n\t\t\t\t);\n\t\t\t\tif (!parser.isStatementLevelExpression(expr)) return;\n\t\t\t\tif (expr.arguments.length !== 3) return;\n\t\t\t\tif (expr.arguments[0].type === \"SpreadElement\") return;\n\t\t\t\tif (expr.arguments[1].type === \"SpreadElement\") return;\n\t\t\t\tif (expr.arguments[2].type === \"SpreadElement\") return;\n\t\t\t\tconst exportsArg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\tif (!exportsArg.isIdentifier()) return;\n\t\t\t\tif (\n\t\t\t\t\texportsArg.identifier !== \"exports\" &&\n\t\t\t\t\texportsArg.identifier !== \"module.exports\" &&\n\t\t\t\t\t(exportsArg.identifier !== \"this\" || !parser.scope.topLevelScope)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst propertyArg = parser.evaluateExpression(expr.arguments[1]);\n\t\t\t\tconst property = propertyArg.asString();\n\t\t\t\tif (typeof property !== \"string\") return;\n\t\t\t\tenableStructuredExports();\n\t\t\t\tconst descArg = expr.arguments[2];\n\t\t\t\tcheckNamespace(\n\t\t\t\t\tparser.statementPath.length === 1,\n\t\t\t\t\t[property],\n\t\t\t\t\tgetValueOfPropertyDescription(descArg)\n\t\t\t\t);\n\t\t\t\tconst dep = new CommonJsExportsDependency(\n\t\t\t\t\texpr.range,\n\t\t\t\t\texpr.arguments[2].range,\n\t\t\t\t\t`Object.defineProperty(${exportsArg.identifier})`,\n\t\t\t\t\t[property]\n\t\t\t\t);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\n\t\t\t\tparser.walkExpression(expr.arguments[2]);\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t// Self reference //\n\t\tconst handleAccessExport = (expr, base, members, call = undefined) => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) return;\n\t\t\tif (members.length === 0) {\n\t\t\t\tbailout(`${base} is used directly at ${formatLocation(expr.loc)}`);\n\t\t\t}\n\t\t\tif (call && members.length === 1) {\n\t\t\t\tbailoutHint(\n\t\t\t\t\t`${base}${propertyAccess(\n\t\t\t\t\t\tmembers\n\t\t\t\t\t)}(...) prevents optimization as ${base} is passed as call context at ${formatLocation(\n\t\t\t\t\t\texpr.loc\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst dep = new CommonJsSelfReferenceDependency(\n\t\t\t\texpr.range,\n\t\t\t\tbase,\n\t\t\t\tmembers,\n\t\t\t\t!!call\n\t\t\t);\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addDependency(dep);\n\t\t\tif (call) {\n\t\t\t\tparser.walkExpressions(call.arguments);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(\"exports\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\treturn handleAccessExport(expr.callee, \"exports\", members, expr);\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(\"exports\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\treturn handleAccessExport(expr, \"exports\", members);\n\t\t\t});\n\t\tparser.hooks.expression\n\t\t\t.for(\"exports\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", expr => {\n\t\t\t\treturn handleAccessExport(expr, \"exports\", []);\n\t\t\t});\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(\"module\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (members[0] !== \"exports\") return;\n\t\t\t\treturn handleAccessExport(\n\t\t\t\t\texpr.callee,\n\t\t\t\t\t\"module.exports\",\n\t\t\t\t\tmembers.slice(1),\n\t\t\t\t\texpr\n\t\t\t\t);\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(\"module\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (members[0] !== \"exports\") return;\n\t\t\t\treturn handleAccessExport(expr, \"module.exports\", members.slice(1));\n\t\t\t});\n\t\tparser.hooks.expression\n\t\t\t.for(\"module.exports\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", expr => {\n\t\t\t\treturn handleAccessExport(expr, \"module.exports\", []);\n\t\t\t});\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\treturn handleAccessExport(expr.callee, \"this\", members, expr);\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", (expr, members) => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\treturn handleAccessExport(expr, \"this\", members);\n\t\t\t});\n\t\tparser.hooks.expression\n\t\t\t.for(\"this\")\n\t\t\t.tap(\"CommonJsExportsParserPlugin\", expr => {\n\t\t\t\tif (!parser.scope.topLevelScope) return;\n\t\t\t\treturn handleAccessExport(expr, \"this\", []);\n\t\t\t});\n\n\t\t// Bailouts //\n\t\tparser.hooks.expression.for(\"module\").tap(\"CommonJsPlugin\", expr => {\n\t\t\tbailout();\n\t\t\tconst isHarmony = HarmonyExports.isEnabled(parser.state);\n\t\t\tconst dep = new ModuleDecoratorDependency(\n\t\t\t\tisHarmony\n\t\t\t\t\t? RuntimeGlobals.harmonyModuleDecorator\n\t\t\t\t\t: RuntimeGlobals.nodeModuleDecorator,\n\t\t\t\t!isHarmony\n\t\t\t);\n\t\t\tdep.loc = expr.loc;\n\t\t\tparser.state.module.addDependency(dep);\n\t\t\treturn true;\n\t\t});\n\t}\n}\nmodule.exports = CommonJsExportsParserPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}