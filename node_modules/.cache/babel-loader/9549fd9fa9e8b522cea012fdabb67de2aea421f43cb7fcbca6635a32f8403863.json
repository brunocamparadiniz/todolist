{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource,\n  PrefixSource = _require.PrefixSource,\n  RawSource = _require.RawSource;\nvar _require2 = require(\"..\"),\n  RuntimeGlobals = _require2.RuntimeGlobals;\nvar HotUpdateChunk = require(\"../HotUpdateChunk\");\nvar Template = require(\"../Template\");\nvar _require3 = require(\"./JavascriptModulesPlugin\"),\n  getCompilationHooks = _require3.getCompilationHooks;\nvar _require4 = require(\"./StartupHelpers\"),\n  generateEntryStartup = _require4.generateEntryStartup,\n  updateHashForEntryStartup = _require4.updateHashForEntryStartup;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar ArrayPushCallbackChunkFormatPlugin = /*#__PURE__*/function () {\n  function ArrayPushCallbackChunkFormatPlugin() {\n    _classCallCheck(this, ArrayPushCallbackChunkFormatPlugin);\n  }\n  _createClass(ArrayPushCallbackChunkFormatPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.thisCompilation.tap(\"ArrayPushCallbackChunkFormatPlugin\", function (compilation) {\n        compilation.hooks.additionalChunkRuntimeRequirements.tap(\"ArrayPushCallbackChunkFormatPlugin\", function (chunk, set, _ref) {\n          var chunkGraph = _ref.chunkGraph;\n          if (chunk.hasRuntime()) return;\n          if (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n            set.add(RuntimeGlobals.onChunksLoaded);\n            set.add(RuntimeGlobals.require);\n          }\n          set.add(RuntimeGlobals.chunkCallback);\n        });\n        var hooks = getCompilationHooks(compilation);\n        hooks.renderChunk.tap(\"ArrayPushCallbackChunkFormatPlugin\", function (modules, renderContext) {\n          var chunk = renderContext.chunk,\n            chunkGraph = renderContext.chunkGraph,\n            runtimeTemplate = renderContext.runtimeTemplate;\n          var hotUpdateChunk = chunk instanceof HotUpdateChunk ? chunk : null;\n          var globalObject = runtimeTemplate.globalObject;\n          var source = new ConcatSource();\n          var runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n          if (hotUpdateChunk) {\n            var hotUpdateGlobal = runtimeTemplate.outputOptions.hotUpdateGlobal;\n            source.add(\"\".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateGlobal), \"](\"));\n            source.add(\"\".concat(JSON.stringify(chunk.id), \",\"));\n            source.add(modules);\n            if (runtimeModules.length > 0) {\n              source.add(\",\\n\");\n              var runtimePart = Template.renderChunkRuntimeModules(runtimeModules, renderContext);\n              source.add(runtimePart);\n            }\n            source.add(\")\");\n          } else {\n            var chunkLoadingGlobal = runtimeTemplate.outputOptions.chunkLoadingGlobal;\n            source.add(\"(\".concat(globalObject, \"[\").concat(JSON.stringify(chunkLoadingGlobal), \"] = \").concat(globalObject, \"[\").concat(JSON.stringify(chunkLoadingGlobal), \"] || []).push([\"));\n            source.add(\"\".concat(JSON.stringify(chunk.ids), \",\"));\n            source.add(modules);\n            var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n            if (runtimeModules.length > 0 || entries.length > 0) {\n              var runtime = new ConcatSource((runtimeTemplate.supportsArrowFunction() ? \"__webpack_require__ =>\" : \"function(__webpack_require__)\") + \" { // webpackRuntimeModules\\n\");\n              if (runtimeModules.length > 0) {\n                runtime.add(Template.renderRuntimeModules(runtimeModules, _objectSpread(_objectSpread({}, renderContext), {}, {\n                  codeGenerationResults: compilation.codeGenerationResults\n                })));\n              }\n              if (entries.length > 0) {\n                var startupSource = new RawSource(generateEntryStartup(chunkGraph, runtimeTemplate, entries, chunk, true));\n                runtime.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], _objectSpread(_objectSpread({}, renderContext), {}, {\n                  inlined: false\n                })));\n                if (chunkGraph.getChunkRuntimeRequirements(chunk).has(RuntimeGlobals.returnExportsFromRuntime)) {\n                  runtime.add(\"return __webpack_exports__;\\n\");\n                }\n              }\n              runtime.add(\"}\\n\");\n              source.add(\",\\n\");\n              source.add(new PrefixSource(\"/******/ \", runtime));\n            }\n            source.add(\"])\");\n          }\n          return source;\n        });\n        hooks.chunkHash.tap(\"ArrayPushCallbackChunkFormatPlugin\", function (chunk, hash, _ref2) {\n          var chunkGraph = _ref2.chunkGraph,\n            runtimeTemplate = _ref2.runtimeTemplate;\n          if (chunk.hasRuntime()) return;\n          hash.update(\"ArrayPushCallbackChunkFormatPlugin1\".concat(runtimeTemplate.outputOptions.chunkLoadingGlobal).concat(runtimeTemplate.outputOptions.hotUpdateGlobal).concat(runtimeTemplate.globalObject));\n          var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n          updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n        });\n      });\n    }\n  }]);\n  return ArrayPushCallbackChunkFormatPlugin;\n}();\nmodule.exports = ArrayPushCallbackChunkFormatPlugin;","map":{"version":3,"names":["require","ConcatSource","PrefixSource","RawSource","RuntimeGlobals","HotUpdateChunk","Template","getCompilationHooks","generateEntryStartup","updateHashForEntryStartup","ArrayPushCallbackChunkFormatPlugin","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","chunkGraph","hasRuntime","getNumberOfEntryModules","add","onChunksLoaded","chunkCallback","renderChunk","modules","renderContext","runtimeTemplate","hotUpdateChunk","globalObject","source","runtimeModules","getChunkRuntimeModulesInOrder","hotUpdateGlobal","outputOptions","JSON","stringify","id","length","runtimePart","renderChunkRuntimeModules","chunkLoadingGlobal","ids","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtime","supportsArrowFunction","renderRuntimeModules","codeGenerationResults","startupSource","renderStartup","call","inlined","getChunkRuntimeRequirements","has","returnExportsFromRuntime","chunkHash","hash","update","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/javascript/ArrayPushCallbackChunkFormatPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, PrefixSource, RawSource } = require(\"webpack-sources\");\nconst { RuntimeGlobals } = require(\"..\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst Template = require(\"../Template\");\nconst { getCompilationHooks } = require(\"./JavascriptModulesPlugin\");\nconst {\n\tgenerateEntryStartup,\n\tupdateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ArrayPushCallbackChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.onChunksLoaded);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset.add(RuntimeGlobals.chunkCallback);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst hotUpdateChunk =\n\t\t\t\t\t\t\tchunk instanceof HotUpdateChunk ? chunk : null;\n\t\t\t\t\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\tif (hotUpdateChunk) {\n\t\t\t\t\t\t\tconst hotUpdateGlobal =\n\t\t\t\t\t\t\t\truntimeTemplate.outputOptions.hotUpdateGlobal;\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t`${globalObject}[${JSON.stringify(hotUpdateGlobal)}](`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsource.add(`${JSON.stringify(chunk.id)},`);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t\t\t\t\tconst runtimePart = Template.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsource.add(runtimePart);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(\")\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst chunkLoadingGlobal =\n\t\t\t\t\t\t\t\truntimeTemplate.outputOptions.chunkLoadingGlobal;\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t`(${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkLoadingGlobal\n\t\t\t\t\t\t\t\t)}] = ${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\t\tchunkLoadingGlobal\n\t\t\t\t\t\t\t\t)}] || []).push([`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsource.add(`${JSON.stringify(chunk.ids)},`);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0 || entries.length > 0) {\n\t\t\t\t\t\t\t\tconst runtime = new ConcatSource(\n\t\t\t\t\t\t\t\t\t(runtimeTemplate.supportsArrowFunction()\n\t\t\t\t\t\t\t\t\t\t? \"__webpack_require__ =>\"\n\t\t\t\t\t\t\t\t\t\t: \"function(__webpack_require__)\") +\n\t\t\t\t\t\t\t\t\t\t\" { // webpackRuntimeModules\\n\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\t\truntime.add(\n\t\t\t\t\t\t\t\t\t\tTemplate.renderRuntimeModules(runtimeModules, {\n\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\tcodeGenerationResults: compilation.codeGenerationResults\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\t\t\tconst startupSource = new RawSource(\n\t\t\t\t\t\t\t\t\t\tgenerateEntryStartup(\n\t\t\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\truntime.add(\n\t\t\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tchunkGraph\n\t\t\t\t\t\t\t\t\t\t\t.getChunkRuntimeRequirements(chunk)\n\t\t\t\t\t\t\t\t\t\t\t.has(RuntimeGlobals.returnExportsFromRuntime)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\truntime.add(\"return __webpack_exports__;\\n\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\truntime.add(\"}\\n\");\n\t\t\t\t\t\t\t\tsource.add(\",\\n\");\n\t\t\t\t\t\t\t\tsource.add(new PrefixSource(\"/******/ \", runtime));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsource.add(\"])\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"ArrayPushCallbackChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph, runtimeTemplate }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\n\t\t\t\t\t\t\t`ArrayPushCallbackChunkFormatPlugin1${runtimeTemplate.outputOptions.chunkLoadingGlobal}${runtimeTemplate.outputOptions.hotUpdateGlobal}${runtimeTemplate.globalObject}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ArrayPushCallbackChunkFormatPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}