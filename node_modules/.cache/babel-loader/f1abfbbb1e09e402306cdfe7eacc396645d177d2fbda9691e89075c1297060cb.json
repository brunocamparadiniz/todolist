{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar _require = require(\"../javascript/JavascriptParserHelpers\"),\n  approve = _require.approve,\n  evaluateToIdentifier = _require.evaluateToIdentifier,\n  evaluateToString = _require.evaluateToString,\n  toConstantDependency = _require.toConstantDependency;\nvar AMDDefineDependency = require(\"./AMDDefineDependency\");\nvar AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\nvar AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nvar AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nvar AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nvar AMDRequireDependency = require(\"./AMDRequireDependency\");\nvar AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nvar _require2 = require(\"./AMDRuntimeModules\"),\n  AMDDefineRuntimeModule = _require2.AMDDefineRuntimeModule,\n  AMDOptionsRuntimeModule = _require2.AMDOptionsRuntimeModule;\nvar ConstDependency = require(\"./ConstDependency\");\nvar LocalModuleDependency = require(\"./LocalModuleDependency\");\nvar UnsupportedDependency = require(\"./UnsupportedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar AMDPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Record<string, any>} amdOptions the AMD options\n   */\n  function AMDPlugin(amdOptions) {\n    _classCallCheck(this, AMDPlugin);\n    this.amdOptions = amdOptions;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(AMDPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var amdOptions = this.amdOptions;\n      compiler.hooks.compilation.tap(\"AMDPlugin\", function (compilation, _ref) {\n        var contextModuleFactory = _ref.contextModuleFactory,\n          normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyTemplates.set(AMDRequireDependency, new AMDRequireDependency.Template());\n        compilation.dependencyFactories.set(AMDRequireItemDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(AMDRequireItemDependency, new AMDRequireItemDependency.Template());\n        compilation.dependencyTemplates.set(AMDRequireArrayDependency, new AMDRequireArrayDependency.Template());\n        compilation.dependencyFactories.set(AMDRequireContextDependency, contextModuleFactory);\n        compilation.dependencyTemplates.set(AMDRequireContextDependency, new AMDRequireContextDependency.Template());\n        compilation.dependencyTemplates.set(AMDDefineDependency, new AMDDefineDependency.Template());\n        compilation.dependencyTemplates.set(UnsupportedDependency, new UnsupportedDependency.Template());\n        compilation.dependencyTemplates.set(LocalModuleDependency, new LocalModuleDependency.Template());\n        compilation.hooks.runtimeRequirementInModule.for(RuntimeGlobals.amdDefine).tap(\"AMDPlugin\", function (module, set) {\n          set.add(RuntimeGlobals.require);\n        });\n        compilation.hooks.runtimeRequirementInModule.for(RuntimeGlobals.amdOptions).tap(\"AMDPlugin\", function (module, set) {\n          set.add(RuntimeGlobals.requireScope);\n        });\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.amdDefine).tap(\"AMDPlugin\", function (chunk, set) {\n          compilation.addRuntimeModule(chunk, new AMDDefineRuntimeModule());\n        });\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.amdOptions).tap(\"AMDPlugin\", function (chunk, set) {\n          compilation.addRuntimeModule(chunk, new AMDOptionsRuntimeModule(amdOptions));\n        });\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.amd !== undefined && !parserOptions.amd) return;\n          var tapOptionsHooks = function tapOptionsHooks(optionExpr, rootName, getMembers) {\n            parser.hooks.expression.for(optionExpr).tap(\"AMDPlugin\", toConstantDependency(parser, RuntimeGlobals.amdOptions, [RuntimeGlobals.amdOptions]));\n            parser.hooks.evaluateIdentifier.for(optionExpr).tap(\"AMDPlugin\", evaluateToIdentifier(optionExpr, rootName, getMembers, true));\n            parser.hooks.evaluateTypeof.for(optionExpr).tap(\"AMDPlugin\", evaluateToString(\"object\"));\n            parser.hooks.typeof.for(optionExpr).tap(\"AMDPlugin\", toConstantDependency(parser, JSON.stringify(\"object\")));\n          };\n          new AMDRequireDependenciesBlockParserPlugin(parserOptions).apply(parser);\n          new AMDDefineDependencyParserPlugin(parserOptions).apply(parser);\n          tapOptionsHooks(\"define.amd\", \"define\", function () {\n            return \"amd\";\n          });\n          tapOptionsHooks(\"require.amd\", \"require\", function () {\n            return [\"amd\"];\n          });\n          tapOptionsHooks(\"__webpack_amd_options__\", \"__webpack_amd_options__\", function () {\n            return [];\n          });\n          parser.hooks.expression.for(\"define\").tap(\"AMDPlugin\", function (expr) {\n            var dep = new ConstDependency(RuntimeGlobals.amdDefine, expr.range, [RuntimeGlobals.amdDefine]);\n            dep.loc = expr.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          parser.hooks.typeof.for(\"define\").tap(\"AMDPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n          parser.hooks.evaluateTypeof.for(\"define\").tap(\"AMDPlugin\", evaluateToString(\"function\"));\n          parser.hooks.canRename.for(\"define\").tap(\"AMDPlugin\", approve);\n          parser.hooks.rename.for(\"define\").tap(\"AMDPlugin\", function (expr) {\n            var dep = new ConstDependency(RuntimeGlobals.amdDefine, expr.range, [RuntimeGlobals.amdDefine]);\n            dep.loc = expr.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return false;\n          });\n          parser.hooks.typeof.for(\"require\").tap(\"AMDPlugin\", toConstantDependency(parser, JSON.stringify(\"function\")));\n          parser.hooks.evaluateTypeof.for(\"require\").tap(\"AMDPlugin\", evaluateToString(\"function\"));\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"AMDPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"AMDPlugin\", handler);\n      });\n    }\n  }]);\n  return AMDPlugin;\n}();\nmodule.exports = AMDPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","approve","evaluateToIdentifier","evaluateToString","toConstantDependency","AMDDefineDependency","AMDDefineDependencyParserPlugin","AMDRequireArrayDependency","AMDRequireContextDependency","AMDRequireDependenciesBlockParserPlugin","AMDRequireDependency","AMDRequireItemDependency","AMDDefineRuntimeModule","AMDOptionsRuntimeModule","ConstDependency","LocalModuleDependency","UnsupportedDependency","AMDPlugin","amdOptions","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","runtimeRequirementInModule","for","amdDefine","module","add","requireScope","runtimeRequirementInTree","chunk","addRuntimeModule","handler","parser","parserOptions","amd","undefined","tapOptionsHooks","optionExpr","rootName","getMembers","expression","evaluateIdentifier","evaluateTypeof","typeof","JSON","stringify","apply","expr","dep","range","loc","state","addPresentationalDependency","canRename","rename","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/AMDPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst {\n\tapprove,\n\tevaluateToIdentifier,\n\tevaluateToString,\n\ttoConstantDependency\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst AMDDefineDependency = require(\"./AMDDefineDependency\");\nconst AMDDefineDependencyParserPlugin = require(\"./AMDDefineDependencyParserPlugin\");\nconst AMDRequireArrayDependency = require(\"./AMDRequireArrayDependency\");\nconst AMDRequireContextDependency = require(\"./AMDRequireContextDependency\");\nconst AMDRequireDependenciesBlockParserPlugin = require(\"./AMDRequireDependenciesBlockParserPlugin\");\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\nconst AMDRequireItemDependency = require(\"./AMDRequireItemDependency\");\nconst {\n\tAMDDefineRuntimeModule,\n\tAMDOptionsRuntimeModule\n} = require(\"./AMDRuntimeModules\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst LocalModuleDependency = require(\"./LocalModuleDependency\");\nconst UnsupportedDependency = require(\"./UnsupportedDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass AMDPlugin {\n\t/**\n\t * @param {Record<string, any>} amdOptions the AMD options\n\t */\n\tconstructor(amdOptions) {\n\t\tthis.amdOptions = amdOptions;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst amdOptions = this.amdOptions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AMDPlugin\",\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireDependency,\n\t\t\t\t\tnew AMDRequireDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireItemDependency,\n\t\t\t\t\tnew AMDRequireItemDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireArrayDependency,\n\t\t\t\t\tnew AMDRequireArrayDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDRequireContextDependency,\n\t\t\t\t\tnew AMDRequireContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tAMDDefineDependency,\n\t\t\t\t\tnew AMDDefineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tUnsupportedDependency,\n\t\t\t\t\tnew UnsupportedDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tLocalModuleDependency,\n\t\t\t\t\tnew LocalModuleDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(RuntimeGlobals.amdDefine)\n\t\t\t\t\t.tap(\"AMDPlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInModule\n\t\t\t\t\t.for(RuntimeGlobals.amdOptions)\n\t\t\t\t\t.tap(\"AMDPlugin\", (module, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.requireScope);\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.amdDefine)\n\t\t\t\t\t.tap(\"AMDPlugin\", (chunk, set) => {\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new AMDDefineRuntimeModule());\n\t\t\t\t\t});\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.amdOptions)\n\t\t\t\t\t.tap(\"AMDPlugin\", (chunk, set) => {\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew AMDOptionsRuntimeModule(amdOptions)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.amd !== undefined && !parserOptions.amd) return;\n\n\t\t\t\t\tconst tapOptionsHooks = (optionExpr, rootName, getMembers) => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\t\ttoConstantDependency(parser, RuntimeGlobals.amdOptions, [\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.amdOptions\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\t\tevaluateToIdentifier(optionExpr, rootName, getMembers, true)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\"AMDPlugin\", evaluateToString(\"object\"));\n\t\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t\t.for(optionExpr)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t};\n\n\t\t\t\t\tnew AMDRequireDependenciesBlockParserPlugin(parserOptions).apply(\n\t\t\t\t\t\tparser\n\t\t\t\t\t);\n\t\t\t\t\tnew AMDDefineDependencyParserPlugin(parserOptions).apply(parser);\n\n\t\t\t\t\ttapOptionsHooks(\"define.amd\", \"define\", () => \"amd\");\n\t\t\t\t\ttapOptionsHooks(\"require.amd\", \"require\", () => [\"amd\"]);\n\t\t\t\t\ttapOptionsHooks(\n\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t\"__webpack_amd_options__\",\n\t\t\t\t\t\t() => []\n\t\t\t\t\t);\n\n\t\t\t\t\tparser.hooks.expression.for(\"define\").tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\tRuntimeGlobals.amdDefine,\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\t[RuntimeGlobals.amdDefine]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"define\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", evaluateToString(\"function\"));\n\t\t\t\t\tparser.hooks.canRename.for(\"define\").tap(\"AMDPlugin\", approve);\n\t\t\t\t\tparser.hooks.rename.for(\"define\").tap(\"AMDPlugin\", expr => {\n\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\tRuntimeGlobals.amdDefine,\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\t[RuntimeGlobals.amdDefine]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\"AMDPlugin\",\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"function\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"require\")\n\t\t\t\t\t\t.tap(\"AMDPlugin\", evaluateToString(\"function\"));\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"AMDPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AMDPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}