{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../OptimizationStages\"),\n  STAGE_ADVANCED = _require.STAGE_ADVANCED;\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar AggressiveMergingPlugin = /*#__PURE__*/function () {\n  function AggressiveMergingPlugin(options) {\n    _classCallCheck(this, AggressiveMergingPlugin);\n    if (options !== undefined && typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\");\n    }\n    this.options = options || {};\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(AggressiveMergingPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      var minSizeReduce = options.minSizeReduce || 1.5;\n      compiler.hooks.thisCompilation.tap(\"AggressiveMergingPlugin\", function (compilation) {\n        compilation.hooks.optimizeChunks.tap({\n          name: \"AggressiveMergingPlugin\",\n          stage: STAGE_ADVANCED\n        }, function (chunks) {\n          var chunkGraph = compilation.chunkGraph;\n          /** @type {{a: Chunk, b: Chunk, improvement: number}[]} */\n          var combinations = [];\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var a = _step.value;\n              if (a.canBeInitial()) continue;\n              var _iterator2 = _createForOfIteratorHelper(chunks),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var b = _step2.value;\n                  if (b.canBeInitial()) continue;\n                  if (b === a) break;\n                  if (!chunkGraph.canChunksBeIntegrated(a, b)) {\n                    continue;\n                  }\n                  var aSize = chunkGraph.getChunkSize(b, {\n                    chunkOverhead: 0\n                  });\n                  var bSize = chunkGraph.getChunkSize(a, {\n                    chunkOverhead: 0\n                  });\n                  var abSize = chunkGraph.getIntegratedChunksSize(b, a, {\n                    chunkOverhead: 0\n                  });\n                  var improvement = (aSize + bSize) / abSize;\n                  combinations.push({\n                    a: a,\n                    b: b,\n                    improvement: improvement\n                  });\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          combinations.sort(function (a, b) {\n            return b.improvement - a.improvement;\n          });\n          var pair = combinations[0];\n          if (!pair) return;\n          if (pair.improvement < minSizeReduce) return;\n          chunkGraph.integrateChunks(pair.b, pair.a);\n          compilation.chunks.delete(pair.a);\n          return true;\n        });\n      });\n    }\n  }]);\n  return AggressiveMergingPlugin;\n}();\nmodule.exports = AggressiveMergingPlugin;","map":{"version":3,"names":["require","STAGE_ADVANCED","AggressiveMergingPlugin","options","undefined","Array","isArray","Error","compiler","minSizeReduce","hooks","thisCompilation","tap","compilation","optimizeChunks","name","stage","chunks","chunkGraph","combinations","a","canBeInitial","b","canChunksBeIntegrated","aSize","getChunkSize","chunkOverhead","bSize","abSize","getIntegratedChunksSize","improvement","push","sort","pair","integrateChunks","delete","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/optimize/AggressiveMergingPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { STAGE_ADVANCED } = require(\"../OptimizationStages\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass AggressiveMergingPlugin {\n\tconstructor(options) {\n\t\tif (\n\t\t\t(options !== undefined && typeof options !== \"object\") ||\n\t\t\tArray.isArray(options)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Argument should be an options object. To use defaults, pass in nothing.\\nFor more info on options, see https://webpack.js.org/plugins/\"\n\t\t\t);\n\t\t}\n\t\tthis.options = options || {};\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minSizeReduce = options.minSizeReduce || 1.5;\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"AggressiveMergingPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunks.tap(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"AggressiveMergingPlugin\",\n\t\t\t\t\t\tstage: STAGE_ADVANCED\n\t\t\t\t\t},\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t\t/** @type {{a: Chunk, b: Chunk, improvement: number}[]} */\n\t\t\t\t\t\tlet combinations = [];\n\t\t\t\t\t\tfor (const a of chunks) {\n\t\t\t\t\t\t\tif (a.canBeInitial()) continue;\n\t\t\t\t\t\t\tfor (const b of chunks) {\n\t\t\t\t\t\t\t\tif (b.canBeInitial()) continue;\n\t\t\t\t\t\t\t\tif (b === a) break;\n\t\t\t\t\t\t\t\tif (!chunkGraph.canChunksBeIntegrated(a, b)) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst aSize = chunkGraph.getChunkSize(b, {\n\t\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst bSize = chunkGraph.getChunkSize(a, {\n\t\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst abSize = chunkGraph.getIntegratedChunksSize(b, a, {\n\t\t\t\t\t\t\t\t\tchunkOverhead: 0\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst improvement = (aSize + bSize) / abSize;\n\t\t\t\t\t\t\t\tcombinations.push({\n\t\t\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\timprovement\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcombinations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.improvement - a.improvement;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst pair = combinations[0];\n\n\t\t\t\t\t\tif (!pair) return;\n\t\t\t\t\t\tif (pair.improvement < minSizeReduce) return;\n\n\t\t\t\t\t\tchunkGraph.integrateChunks(pair.b, pair.a);\n\t\t\t\t\t\tcompilation.chunks.delete(pair.a);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = AggressiveMergingPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}