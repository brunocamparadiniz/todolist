{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NormalModule = require(\"../NormalModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n// data URL scheme: \"data:text/javascript;charset=utf-8;base64,some-string\"\n// http://www.ietf.org/rfc/rfc2397.txt\nvar URIRegEx = /^data:([^;,]+)?((?:;[^;,]+)*?)(?:;(base64))?,(.*)$/i;\nvar decodeDataURI = function decodeDataURI(uri) {\n  var match = URIRegEx.exec(uri);\n  if (!match) return null;\n  var isBase64 = match[3];\n  var body = match[4];\n  return isBase64 ? Buffer.from(body, \"base64\") : Buffer.from(decodeURIComponent(body), \"ascii\");\n};\nvar DataUriPlugin = /*#__PURE__*/function () {\n  function DataUriPlugin() {\n    _classCallCheck(this, DataUriPlugin);\n  }\n  _createClass(DataUriPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"DataUriPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        normalModuleFactory.hooks.resolveForScheme.for(\"data\").tap(\"DataUriPlugin\", function (resourceData) {\n          var match = URIRegEx.exec(resourceData.resource);\n          if (match) {\n            resourceData.data.mimetype = match[1] || \"\";\n            resourceData.data.parameters = match[2] || \"\";\n            resourceData.data.encoding = match[3] || false;\n            resourceData.data.encodedContent = match[4] || \"\";\n          }\n        });\n        NormalModule.getCompilationHooks(compilation).readResourceForScheme.for(\"data\").tap(\"DataUriPlugin\", function (resource) {\n          return decodeDataURI(resource);\n        });\n      });\n    }\n  }]);\n  return DataUriPlugin;\n}();\nmodule.exports = DataUriPlugin;","map":{"version":3,"names":["NormalModule","require","URIRegEx","decodeDataURI","uri","match","exec","isBase64","body","Buffer","from","decodeURIComponent","DataUriPlugin","compiler","hooks","compilation","tap","normalModuleFactory","resolveForScheme","for","resourceData","resource","data","mimetype","parameters","encoding","encodedContent","getCompilationHooks","readResourceForScheme","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/schemes/DataUriPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst NormalModule = require(\"../NormalModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n// data URL scheme: \"data:text/javascript;charset=utf-8;base64,some-string\"\n// http://www.ietf.org/rfc/rfc2397.txt\nconst URIRegEx = /^data:([^;,]+)?((?:;[^;,]+)*?)(?:;(base64))?,(.*)$/i;\n\nconst decodeDataURI = uri => {\n\tconst match = URIRegEx.exec(uri);\n\tif (!match) return null;\n\n\tconst isBase64 = match[3];\n\tconst body = match[4];\n\treturn isBase64\n\t\t? Buffer.from(body, \"base64\")\n\t\t: Buffer.from(decodeURIComponent(body), \"ascii\");\n};\n\nclass DataUriPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DataUriPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.resolveForScheme\n\t\t\t\t\t.for(\"data\")\n\t\t\t\t\t.tap(\"DataUriPlugin\", resourceData => {\n\t\t\t\t\t\tconst match = URIRegEx.exec(resourceData.resource);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tresourceData.data.mimetype = match[1] || \"\";\n\t\t\t\t\t\t\tresourceData.data.parameters = match[2] || \"\";\n\t\t\t\t\t\t\tresourceData.data.encoding = match[3] || false;\n\t\t\t\t\t\t\tresourceData.data.encodedContent = match[4] || \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tNormalModule.getCompilationHooks(compilation)\n\t\t\t\t\t.readResourceForScheme.for(\"data\")\n\t\t\t\t\t.tap(\"DataUriPlugin\", resource => decodeDataURI(resource));\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = DataUriPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE/C;;AAEA;AACA;AACA,IAAMC,QAAQ,GAAG,qDAAqD;AAEtE,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,GAAG,EAAI;EAC5B,IAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACF,GAAG,CAAC;EAChC,IAAI,CAACC,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAME,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;EACzB,IAAMG,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;EACrB,OAAOE,QAAQ,GACZE,MAAM,CAACC,IAAI,CAACF,IAAI,EAAE,QAAQ,CAAC,GAC3BC,MAAM,CAACC,IAAI,CAACC,kBAAkB,CAACH,IAAI,CAAC,EAAE,OAAO,CAAC;AAClD,CAAC;AAAC,IAEII,aAAa;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAClB;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,eAAe,EACf,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCA,mBAAmB,CAACH,KAAK,CAACI,gBAAgB,CACxCC,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,eAAe,EAAE,UAAAI,YAAY,EAAI;UACrC,IAAMf,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACc,YAAY,CAACC,QAAQ,CAAC;UAClD,IAAIhB,KAAK,EAAE;YACVe,YAAY,CAACE,IAAI,CAACC,QAAQ,GAAGlB,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;YAC3Ce,YAAY,CAACE,IAAI,CAACE,UAAU,GAAGnB,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;YAC7Ce,YAAY,CAACE,IAAI,CAACG,QAAQ,GAAGpB,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK;YAC9Ce,YAAY,CAACE,IAAI,CAACI,cAAc,GAAGrB,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;UAClD;QACD,CAAC,CAAC;QACHL,YAAY,CAAC2B,mBAAmB,CAACZ,WAAW,CAAC,CAC3Ca,qBAAqB,CAACT,GAAG,CAAC,MAAM,CAAC,CACjCH,GAAG,CAAC,eAAe,EAAE,UAAAK,QAAQ;UAAA,OAAIlB,aAAa,CAACkB,QAAQ,CAAC;QAAA,EAAC;MAC5D,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFQ,MAAM,CAACC,OAAO,GAAGlB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}