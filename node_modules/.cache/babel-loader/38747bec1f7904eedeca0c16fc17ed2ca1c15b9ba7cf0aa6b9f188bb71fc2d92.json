{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../util/comparators\"),\n  compareModulesByPreOrderIndexOrIdentifier = _require.compareModulesByPreOrderIndexOrIdentifier;\nvar _require2 = require(\"./IdHelpers\"),\n  getUsedModuleIdsAndModules = _require2.getUsedModuleIdsAndModules,\n  getFullModuleName = _require2.getFullModuleName,\n  assignDeterministicIds = _require2.assignDeterministicIds;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\nvar DeterministicModuleIdsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options options\n   * @param {string=} options.context context relative to which module identifiers are computed\n   * @param {function(Module): boolean=} options.test selector function for modules\n   * @param {number=} options.maxLength maximum id length in digits (used as starting point)\n   * @param {number=} options.salt hash salt for ids\n   * @param {boolean=} options.fixedLength do not increase the maxLength to find an optimal id space size\n   * @param {boolean=} options.failOnConflict throw an error when id conflicts occur (instead of rehashing)\n   */\n  function DeterministicModuleIdsPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, DeterministicModuleIdsPlugin);\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(DeterministicModuleIdsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"DeterministicModuleIdsPlugin\", function (compilation) {\n        compilation.hooks.moduleIds.tap(\"DeterministicModuleIdsPlugin\", function () {\n          var chunkGraph = compilation.chunkGraph;\n          var context = _this.options.context ? _this.options.context : compiler.context;\n          var maxLength = _this.options.maxLength || 3;\n          var failOnConflict = _this.options.failOnConflict || false;\n          var fixedLength = _this.options.fixedLength || false;\n          var salt = _this.options.salt || 0;\n          var conflicts = 0;\n          var _getUsedModuleIdsAndM = getUsedModuleIdsAndModules(compilation, _this.options.test),\n            _getUsedModuleIdsAndM2 = _slicedToArray(_getUsedModuleIdsAndM, 2),\n            usedIds = _getUsedModuleIdsAndM2[0],\n            modules = _getUsedModuleIdsAndM2[1];\n          assignDeterministicIds(modules, function (module) {\n            return getFullModuleName(module, context, compiler.root);\n          }, failOnConflict ? function () {\n            return 0;\n          } : compareModulesByPreOrderIndexOrIdentifier(compilation.moduleGraph), function (module, id) {\n            var size = usedIds.size;\n            usedIds.add(\"\".concat(id));\n            if (size === usedIds.size) {\n              conflicts++;\n              return false;\n            }\n            chunkGraph.setModuleId(module, id);\n            return true;\n          }, [Math.pow(10, maxLength)], fixedLength ? 0 : 10, usedIds.size, salt);\n          if (failOnConflict && conflicts) throw new Error(\"Assigning deterministic module ids has lead to \".concat(conflicts, \" conflict\").concat(conflicts > 1 ? \"s\" : \"\", \".\\nIncrease the 'maxLength' to increase the id space and make conflicts less likely (recommended when there are many conflicts or application is expected to grow), or add an 'salt' number to try another hash starting value in the same id space (recommended when there is only a single conflict).\"));\n        });\n      });\n    }\n  }]);\n  return DeterministicModuleIdsPlugin;\n}();\nmodule.exports = DeterministicModuleIdsPlugin;","map":{"version":3,"names":["require","compareModulesByPreOrderIndexOrIdentifier","getUsedModuleIdsAndModules","getFullModuleName","assignDeterministicIds","DeterministicModuleIdsPlugin","options","compiler","hooks","compilation","tap","moduleIds","chunkGraph","context","maxLength","failOnConflict","fixedLength","salt","conflicts","test","usedIds","modules","module","root","moduleGraph","id","size","add","setModuleId","Math","pow","Error","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ids/DeterministicModuleIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst {\n\tcompareModulesByPreOrderIndexOrIdentifier\n} = require(\"../util/comparators\");\nconst {\n\tgetUsedModuleIdsAndModules,\n\tgetFullModuleName,\n\tassignDeterministicIds\n} = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass DeterministicModuleIdsPlugin {\n\t/**\n\t * @param {Object} options options\n\t * @param {string=} options.context context relative to which module identifiers are computed\n\t * @param {function(Module): boolean=} options.test selector function for modules\n\t * @param {number=} options.maxLength maximum id length in digits (used as starting point)\n\t * @param {number=} options.salt hash salt for ids\n\t * @param {boolean=} options.fixedLength do not increase the maxLength to find an optimal id space size\n\t * @param {boolean=} options.failOnConflict throw an error when id conflicts occur (instead of rehashing)\n\t */\n\tconstructor(options = {}) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"DeterministicModuleIdsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.moduleIds.tap(\"DeterministicModuleIdsPlugin\", () => {\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\tconst context = this.options.context\n\t\t\t\t\t\t? this.options.context\n\t\t\t\t\t\t: compiler.context;\n\t\t\t\t\tconst maxLength = this.options.maxLength || 3;\n\t\t\t\t\tconst failOnConflict = this.options.failOnConflict || false;\n\t\t\t\t\tconst fixedLength = this.options.fixedLength || false;\n\t\t\t\t\tconst salt = this.options.salt || 0;\n\t\t\t\t\tlet conflicts = 0;\n\n\t\t\t\t\tconst [usedIds, modules] = getUsedModuleIdsAndModules(\n\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\tthis.options.test\n\t\t\t\t\t);\n\t\t\t\t\tassignDeterministicIds(\n\t\t\t\t\t\tmodules,\n\t\t\t\t\t\tmodule => getFullModuleName(module, context, compiler.root),\n\t\t\t\t\t\tfailOnConflict\n\t\t\t\t\t\t\t? () => 0\n\t\t\t\t\t\t\t: compareModulesByPreOrderIndexOrIdentifier(\n\t\t\t\t\t\t\t\t\tcompilation.moduleGraph\n\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t(module, id) => {\n\t\t\t\t\t\t\tconst size = usedIds.size;\n\t\t\t\t\t\t\tusedIds.add(`${id}`);\n\t\t\t\t\t\t\tif (size === usedIds.size) {\n\t\t\t\t\t\t\t\tconflicts++;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkGraph.setModuleId(module, id);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[Math.pow(10, maxLength)],\n\t\t\t\t\t\tfixedLength ? 0 : 10,\n\t\t\t\t\t\tusedIds.size,\n\t\t\t\t\t\tsalt\n\t\t\t\t\t);\n\t\t\t\t\tif (failOnConflict && conflicts)\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Assigning deterministic module ids has lead to ${conflicts} conflict${\n\t\t\t\t\t\t\t\tconflicts > 1 ? \"s\" : \"\"\n\t\t\t\t\t\t\t}.\\nIncrease the 'maxLength' to increase the id space and make conflicts less likely (recommended when there are many conflicts or application is expected to grow), or add an 'salt' number to try another hash starting value in the same id space (recommended when there is only a single conflict).`\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = DeterministicModuleIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,eAEIA,OAAO,CAAC,qBAAqB,CAAC;EADjCC,yCAAyC,YAAzCA,yCAAyC;AAE1C,gBAIID,OAAO,CAAC,aAAa,CAAC;EAHzBE,0BAA0B,aAA1BA,0BAA0B;EAC1BC,iBAAiB,aAAjBA,iBAAiB;EACjBC,sBAAsB,aAAtBA,sBAAsB;;AAGvB;AACA;AAAA,IAEMC,4BAA4B;EACjC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,wCAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IACvB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,8BAA8B,EAC9B,UAAAD,WAAW,EAAI;QACdA,WAAW,CAACD,KAAK,CAACG,SAAS,CAACD,GAAG,CAAC,8BAA8B,EAAE,YAAM;UACrE,IAAME,UAAU,GAAGH,WAAW,CAACG,UAAU;UACzC,IAAMC,OAAO,GAAG,KAAI,CAACP,OAAO,CAACO,OAAO,GACjC,KAAI,CAACP,OAAO,CAACO,OAAO,GACpBN,QAAQ,CAACM,OAAO;UACnB,IAAMC,SAAS,GAAG,KAAI,CAACR,OAAO,CAACQ,SAAS,IAAI,CAAC;UAC7C,IAAMC,cAAc,GAAG,KAAI,CAACT,OAAO,CAACS,cAAc,IAAI,KAAK;UAC3D,IAAMC,WAAW,GAAG,KAAI,CAACV,OAAO,CAACU,WAAW,IAAI,KAAK;UACrD,IAAMC,IAAI,GAAG,KAAI,CAACX,OAAO,CAACW,IAAI,IAAI,CAAC;UACnC,IAAIC,SAAS,GAAG,CAAC;UAEjB,4BAA2BhB,0BAA0B,CACpDO,WAAW,EACX,KAAI,CAACH,OAAO,CAACa,IAAI,CACjB;YAAA;YAHMC,OAAO;YAAEC,OAAO;UAIvBjB,sBAAsB,CACrBiB,OAAO,EACP,UAAAC,MAAM;YAAA,OAAInB,iBAAiB,CAACmB,MAAM,EAAET,OAAO,EAAEN,QAAQ,CAACgB,IAAI,CAAC;UAAA,GAC3DR,cAAc,GACX;YAAA,OAAM,CAAC;UAAA,IACPd,yCAAyC,CACzCQ,WAAW,CAACe,WAAW,CACtB,EACJ,UAACF,MAAM,EAAEG,EAAE,EAAK;YACf,IAAMC,IAAI,GAAGN,OAAO,CAACM,IAAI;YACzBN,OAAO,CAACO,GAAG,WAAIF,EAAE,EAAG;YACpB,IAAIC,IAAI,KAAKN,OAAO,CAACM,IAAI,EAAE;cAC1BR,SAAS,EAAE;cACX,OAAO,KAAK;YACb;YACAN,UAAU,CAACgB,WAAW,CAACN,MAAM,EAAEG,EAAE,CAAC;YAClC,OAAO,IAAI;UACZ,CAAC,EACD,CAACI,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEhB,SAAS,CAAC,CAAC,EACzBE,WAAW,GAAG,CAAC,GAAG,EAAE,EACpBI,OAAO,CAACM,IAAI,EACZT,IAAI,CACJ;UACD,IAAIF,cAAc,IAAIG,SAAS,EAC9B,MAAM,IAAIa,KAAK,0DACoCb,SAAS,sBAC1DA,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,6SAEzB;QACH,CAAC,CAAC;MACH,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFI,MAAM,CAACU,OAAO,GAAG3B,4BAA4B"},"metadata":{},"sourceType":"script","externalDependencies":[]}