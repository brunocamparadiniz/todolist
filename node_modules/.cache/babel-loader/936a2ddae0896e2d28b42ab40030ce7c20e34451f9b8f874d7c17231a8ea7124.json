{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nvar InnerGraph = require(\"../optimize/InnerGraph\");\nvar ConstDependency = require(\"./ConstDependency\");\nvar HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nvar HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nvar HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nvar HarmonyExports = require(\"./HarmonyExports\");\nvar _require = require(\"./HarmonyImportDependency\"),\n  ExportPresenceModes = _require.ExportPresenceModes;\nvar HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nvar HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nvar harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\nfunction getAssertions(node) {\n  // TODO remove cast when @types/estree has been updated to import assertions\n  var assertions = /** @type {{ assertions?: ImportAttributeNode[] }} */node.assertions;\n  if (assertions === undefined) {\n    return undefined;\n  }\n  var result = {};\n  var _iterator = _createForOfIteratorHelper(assertions),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var assertion = _step.value;\n      var key = assertion.key.type === \"Identifier\" ? assertion.key.name : assertion.key.value;\n      result[key] = assertion.value.value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {JavascriptParserOptions} options options\n   */\n  function HarmonyImportDependencyParserPlugin(options) {\n    _classCallCheck(this, HarmonyImportDependencyParserPlugin);\n    this.exportPresenceMode = options.importExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.importExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n    this.strictThisContextOnImports = options.strictThisContextOnImports;\n  }\n\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @returns {void}\n   */\n  _createClass(HarmonyImportDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n      var exportPresenceMode = this.exportPresenceMode;\n      function getNonOptionalPart(members, membersOptionals) {\n        var i = 0;\n        while (i < members.length && membersOptionals[i] === false) i++;\n        return i !== members.length ? members.slice(0, i) : members;\n      }\n      function getNonOptionalMemberChain(node, count) {\n        while (count--) node = node.object;\n        return node;\n      }\n      parser.hooks.isPure.for(\"Identifier\").tap(\"HarmonyImportDependencyParserPlugin\", function (expression) {\n        var expr = /** @type {Identifier} */expression;\n        if (parser.isVariableDefined(expr.name) || parser.getTagData(expr.name, harmonySpecifierTag)) {\n          return true;\n        }\n      });\n      parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", function (statement, source) {\n        parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n        var clearDep = new ConstDependency(parser.isAsiPosition(statement.range[0]) ? \";\" : \"\", statement.range);\n        clearDep.loc = statement.loc;\n        parser.state.module.addPresentationalDependency(clearDep);\n        parser.unsetAsiPosition(statement.range[1]);\n        var assertions = getAssertions(statement);\n        var sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.lastHarmonyImportOrder, assertions);\n        sideEffectDep.loc = statement.loc;\n        parser.state.module.addDependency(sideEffectDep);\n        return true;\n      });\n      parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", function (statement, source, id, name) {\n        var ids = id === null ? [] : [id];\n        parser.tagVariable(name, harmonySpecifierTag, {\n          name: name,\n          source: source,\n          ids: ids,\n          sourceOrder: parser.state.lastHarmonyImportOrder,\n          assertions: getAssertions(statement)\n        });\n        return true;\n      });\n      parser.hooks.binaryExpression.tap(\"HarmonyImportDependencyParserPlugin\", function (expression) {\n        if (expression.operator !== \"in\") return;\n        var leftPartEvaluated = parser.evaluateExpression(expression.left);\n        if (leftPartEvaluated.couldHaveSideEffects()) return;\n        var leftPart = leftPartEvaluated.asString();\n        if (!leftPart) return;\n        var rightPart = parser.evaluateExpression(expression.right);\n        if (!rightPart.isIdentifier()) return;\n        var rootInfo = rightPart.rootInfo;\n        if (!rootInfo || !rootInfo.tagInfo || rootInfo.tagInfo.tag !== harmonySpecifierTag) return;\n        var settings = rootInfo.tagInfo.data;\n        var members = rightPart.getMembers();\n        var dep = new HarmonyEvaluatedImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids.concat(members).concat([leftPart]), settings.name, expression.range, settings.assertions, \"in\");\n        dep.directImport = members.length === 0;\n        dep.asiSafe = !parser.isAsiPosition(expression.range[0]);\n        dep.loc = expression.loc;\n        parser.state.module.addDependency(dep);\n        InnerGraph.onUsage(parser.state, function (e) {\n          return dep.usedByExports = e;\n        });\n        return true;\n      });\n      parser.hooks.expression.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", function (expr) {\n        var settings = /** @type {HarmonySettings} */parser.currentTagData;\n        var dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n        dep.shorthand = parser.scope.inShorthand;\n        dep.directImport = true;\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        InnerGraph.onUsage(parser.state, function (e) {\n          return dep.usedByExports = e;\n        });\n        return true;\n      });\n      parser.hooks.expressionMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", function (expression, members, membersOptionals) {\n        var settings = /** @type {HarmonySettings} */\n        parser.currentTagData;\n        var nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n        var expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(expression, members.length - nonOptionalMembers.length) : expression;\n        var ids = settings.ids.concat(nonOptionalMembers);\n        var dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        InnerGraph.onUsage(parser.state, function (e) {\n          return dep.usedByExports = e;\n        });\n        return true;\n      });\n      parser.hooks.callMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", function (expression, members, membersOptionals) {\n        var args = expression.arguments,\n          callee = expression.callee;\n        var settings = /** @type {HarmonySettings} */\n        parser.currentTagData;\n        var nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n        var expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(callee, members.length - nonOptionalMembers.length) : callee;\n        var ids = settings.ids.concat(nonOptionalMembers);\n        var dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, expr.range, exportPresenceMode, settings.assertions);\n        dep.directImport = members.length === 0;\n        dep.call = true;\n        dep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n        // only in case when we strictly follow the spec we need a special case here\n        dep.namespaceObjectAsContext = members.length > 0 && _this.strictThisContextOnImports;\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        if (args) parser.walkExpressions(args);\n        InnerGraph.onUsage(parser.state, function (e) {\n          return dep.usedByExports = e;\n        });\n        return true;\n      });\n      var _HotModuleReplacement = HotModuleReplacementPlugin.getParserHooks(parser),\n        hotAcceptCallback = _HotModuleReplacement.hotAcceptCallback,\n        hotAcceptWithoutCallback = _HotModuleReplacement.hotAcceptWithoutCallback;\n      hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", function (expr, requests) {\n        if (!HarmonyExports.isEnabled(parser.state)) {\n          // This is not a harmony module, skip it\n          return;\n        }\n        var dependencies = requests.map(function (request) {\n          var dep = new HarmonyAcceptImportDependency(request);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n          return dep;\n        });\n        if (dependencies.length > 0) {\n          var dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n        }\n      });\n      hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", function (expr, requests) {\n        if (!HarmonyExports.isEnabled(parser.state)) {\n          // This is not a harmony module, skip it\n          return;\n        }\n        var dependencies = requests.map(function (request) {\n          var dep = new HarmonyAcceptImportDependency(request);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n          return dep;\n        });\n        if (dependencies.length > 0) {\n          var dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\n          dep.loc = expr.loc;\n          parser.state.module.addDependency(dep);\n        }\n      });\n    }\n  }]);\n  return HarmonyImportDependencyParserPlugin;\n}();\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;","map":{"version":3,"names":["HotModuleReplacementPlugin","require","InnerGraph","ConstDependency","HarmonyAcceptDependency","HarmonyAcceptImportDependency","HarmonyEvaluatedImportSpecifierDependency","HarmonyExports","ExportPresenceModes","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","harmonySpecifierTag","Symbol","getAssertions","node","assertions","undefined","result","assertion","key","type","name","value","module","exports","options","exportPresenceMode","importExportsPresence","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","strictThisContextOnImports","parser","getNonOptionalPart","members","membersOptionals","i","length","slice","getNonOptionalMemberChain","count","object","hooks","isPure","for","tap","expression","expr","isVariableDefined","getTagData","import","statement","source","state","lastHarmonyImportOrder","clearDep","isAsiPosition","range","loc","addPresentationalDependency","unsetAsiPosition","sideEffectDep","addDependency","importSpecifier","id","ids","tagVariable","sourceOrder","binaryExpression","operator","leftPartEvaluated","evaluateExpression","left","couldHaveSideEffects","leftPart","asString","rightPart","right","isIdentifier","rootInfo","tagInfo","tag","settings","data","getMembers","dep","concat","directImport","asiSafe","onUsage","e","usedByExports","currentTagData","shorthand","scope","inShorthand","expressionMemberChain","nonOptionalMembers","callMemberChain","args","arguments","callee","call","namespaceObjectAsContext","walkExpressions","getParserHooks","hotAcceptCallback","hotAcceptWithoutCallback","requests","isEnabled","dependencies","map","request"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {Object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | ImportExpression} node node with assertions\n * @returns {Record<string, any> | undefined} assertions\n */\nfunction getAssertions(node) {\n\t// TODO remove cast when @types/estree has been updated to import assertions\n\tconst assertions = /** @type {{ assertions?: ImportAttributeNode[] }} */ (\n\t\tnode\n\t).assertions;\n\tif (assertions === undefined) {\n\t\treturn undefined;\n\t}\n\tconst result = {};\n\tfor (const assertion of assertions) {\n\t\tconst key =\n\t\t\tassertion.key.type === \"Identifier\"\n\t\t\t\t? assertion.key.name\n\t\t\t\t: assertion.key.value;\n\t\tresult[key] = assertion.value.value;\n\t}\n\treturn result;\n}\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options options\n\t */\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.importExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.importExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t: options.strictExportPresence\n\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t: ExportPresenceModes.AUTO;\n\t\tthis.strictThisContextOnImports = options.strictThisContextOnImports;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @returns {void}\n\t */\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\n\t\tfunction getNonOptionalPart(members, membersOptionals) {\n\t\t\tlet i = 0;\n\t\t\twhile (i < members.length && membersOptionals[i] === false) i++;\n\t\t\treturn i !== members.length ? members.slice(0, i) : members;\n\t\t}\n\n\t\tfunction getNonOptionalMemberChain(node, count) {\n\t\t\twhile (count--) node = node.object;\n\t\t\treturn node;\n\t\t}\n\n\t\tparser.hooks.isPure\n\t\t\t.for(\"Identifier\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {Identifier} */ (expression);\n\t\t\t\tif (\n\t\t\t\t\tparser.isVariableDefined(expr.name) ||\n\t\t\t\t\tparser.getTagData(expr.name, harmonySpecifierTag)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(statement.range[0]) ? \";\" : \"\",\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tclearDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(statement.range[1]);\n\t\t\t\tconst assertions = getAssertions(statement);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = statement.loc;\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tconst ids = id === null ? [] : [id];\n\t\t\t\tparser.tagVariable(name, harmonySpecifierTag, {\n\t\t\t\t\tname,\n\t\t\t\t\tsource,\n\t\t\t\t\tids,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions: getAssertions(statement)\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.binaryExpression.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\texpression => {\n\t\t\t\tif (expression.operator !== \"in\") return;\n\n\t\t\t\tconst leftPartEvaluated = parser.evaluateExpression(expression.left);\n\t\t\t\tif (leftPartEvaluated.couldHaveSideEffects()) return;\n\t\t\t\tconst leftPart = leftPartEvaluated.asString();\n\t\t\t\tif (!leftPart) return;\n\n\t\t\t\tconst rightPart = parser.evaluateExpression(expression.right);\n\t\t\t\tif (!rightPart.isIdentifier()) return;\n\n\t\t\t\tconst rootInfo = rightPart.rootInfo;\n\t\t\t\tif (\n\t\t\t\t\t!rootInfo ||\n\t\t\t\t\t!rootInfo.tagInfo ||\n\t\t\t\t\trootInfo.tagInfo.tag !== harmonySpecifierTag\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst settings = rootInfo.tagInfo.data;\n\t\t\t\tconst members = rightPart.getMembers();\n\t\t\t\tconst dep = new HarmonyEvaluatedImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids.concat(members).concat([leftPart]),\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpression.range,\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\"in\"\n\t\t\t\t);\n\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expression.range[0]);\n\t\t\t\tdep.loc = expression.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\texpr.range,\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions\n\t\t\t\t);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals) => {\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: expression;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals) => {\n\t\t\t\t\tconst { arguments: args, callee } = expression;\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\tcallee,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: callee;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\t\tdep.call = true;\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(expr.range[0]);\n\t\t\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\t\t\tdep.namespaceObjectAsContext =\n\t\t\t\t\t\tmembers.length > 0 && this.strictThisContextOnImports;\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tconst { hotAcceptCallback, hotAcceptWithoutCallback } =\n\t\t\tHotModuleReplacementPlugin.getParserHooks(parser);\n\t\thotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\thotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\nmodule.exports.getAssertions = getAssertions;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}