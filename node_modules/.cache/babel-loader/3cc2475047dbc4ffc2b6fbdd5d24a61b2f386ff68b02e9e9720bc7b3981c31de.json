{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar IgnoreWarningsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n   */\n  function IgnoreWarningsPlugin(ignoreWarnings) {\n    _classCallCheck(this, IgnoreWarningsPlugin);\n    this._ignoreWarnings = ignoreWarnings;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(IgnoreWarningsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", function (compilation) {\n        compilation.hooks.processWarnings.tap(\"IgnoreWarningsPlugin\", function (warnings) {\n          return warnings.filter(function (warning) {\n            return !_this._ignoreWarnings.some(function (ignore) {\n              return ignore(warning, compilation);\n            });\n          });\n        });\n      });\n    }\n  }]);\n  return IgnoreWarningsPlugin;\n}();\nmodule.exports = IgnoreWarningsPlugin;","map":{"version":3,"names":["IgnoreWarningsPlugin","ignoreWarnings","_ignoreWarnings","compiler","hooks","compilation","tap","processWarnings","warnings","filter","warning","some","ignore","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/IgnoreWarningsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../declarations/WebpackOptions\").IgnoreWarningsNormalized} IgnoreWarningsNormalized */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass IgnoreWarningsPlugin {\n\t/**\n\t * @param {IgnoreWarningsNormalized} ignoreWarnings conditions to ignore warnings\n\t */\n\tconstructor(ignoreWarnings) {\n\t\tthis._ignoreWarnings = ignoreWarnings;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"IgnoreWarningsPlugin\", compilation => {\n\t\t\tcompilation.hooks.processWarnings.tap(\n\t\t\t\t\"IgnoreWarningsPlugin\",\n\t\t\t\twarnings => {\n\t\t\t\t\treturn warnings.filter(warning => {\n\t\t\t\t\t\treturn !this._ignoreWarnings.some(ignore =>\n\t\t\t\t\t\t\tignore(warning, compilation)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = IgnoreWarningsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAAA;AAAA;AAAA,IAEMA,oBAAoB;EACzB;AACD;AACA;EACC,8BAAYC,cAAc,EAAE;IAAA;IAC3B,IAAI,CAACC,eAAe,GAAGD,cAAc;EACtC;EACA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAME,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,sBAAsB,EAAE,UAAAD,WAAW,EAAI;QACrEA,WAAW,CAACD,KAAK,CAACG,eAAe,CAACD,GAAG,CACpC,sBAAsB,EACtB,UAAAE,QAAQ,EAAI;UACX,OAAOA,QAAQ,CAACC,MAAM,CAAC,UAAAC,OAAO,EAAI;YACjC,OAAO,CAAC,KAAI,CAACR,eAAe,CAACS,IAAI,CAAC,UAAAC,MAAM;cAAA,OACvCA,MAAM,CAACF,OAAO,EAAEL,WAAW,CAAC;YAAA,EAC5B;UACF,CAAC,CAAC;QACH,CAAC,CACD;MACF,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFQ,MAAM,CAACC,OAAO,GAAGd,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}