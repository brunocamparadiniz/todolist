{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} JsonpLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {Object} JsonpLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {JsonpLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<JsonpLibraryPluginParsed>}\n */\nvar JsonpLibraryPlugin = /*#__PURE__*/function (_AbstractLibraryPlugi) {\n  _inherits(JsonpLibraryPlugin, _AbstractLibraryPlugi);\n  var _super = _createSuper(JsonpLibraryPlugin);\n  /**\n   * @param {JsonpLibraryPluginOptions} options the plugin options\n   */\n  function JsonpLibraryPlugin(options) {\n    _classCallCheck(this, JsonpLibraryPlugin);\n    return _super.call(this, {\n      pluginName: \"JsonpLibraryPlugin\",\n      type: options.type\n    });\n  }\n\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n  _createClass(JsonpLibraryPlugin, [{\n    key: \"parseOptions\",\n    value: function parseOptions(library) {\n      var name = library.name;\n      if (typeof name !== \"string\") {\n        throw new Error(\"Jsonp library name must be a simple string. \".concat(AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE));\n      }\n      return {\n        name: /** @type {string} */name\n      };\n    }\n\n    /**\n     * @param {Source} source source\n     * @param {RenderContext} renderContext render context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {Source} source with library export\n     */\n  }, {\n    key: \"render\",\n    value: function render(source, _ref, _ref2) {\n      var chunk = _ref.chunk;\n      var options = _ref2.options,\n        compilation = _ref2.compilation;\n      var name = compilation.getPath(options.name, {\n        chunk: chunk\n      });\n      return new ConcatSource(\"\".concat(name, \"(\"), source, \")\");\n    }\n\n    /**\n     * @param {Chunk} chunk the chunk\n     * @param {Hash} hash hash\n     * @param {ChunkHashContext} chunkHashContext chunk hash context\n     * @param {LibraryContext<T>} libraryContext context\n     * @returns {void}\n     */\n  }, {\n    key: \"chunkHash\",\n    value: function chunkHash(chunk, hash, chunkHashContext, _ref3) {\n      var options = _ref3.options,\n        compilation = _ref3.compilation;\n      hash.update(\"JsonpLibraryPlugin\");\n      hash.update(compilation.getPath(options.name, {\n        chunk: chunk\n      }));\n    }\n  }]);\n  return JsonpLibraryPlugin;\n}(AbstractLibraryPlugin);\nmodule.exports = JsonpLibraryPlugin;","map":{"version":3,"names":["require","ConcatSource","AbstractLibraryPlugin","JsonpLibraryPlugin","options","pluginName","type","library","name","Error","COMMON_LIBRARY_NAME_MESSAGE","source","chunk","compilation","getPath","hash","chunkHashContext","update","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/library/JsonpLibraryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").RenderContext} RenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {Object} JsonpLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {Object} JsonpLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {JsonpLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<JsonpLibraryPluginParsed>}\n */\nclass JsonpLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * @param {JsonpLibraryPluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tpluginName: \"JsonpLibraryPlugin\",\n\t\t\ttype: options.type\n\t\t});\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\tconst { name } = library;\n\t\tif (typeof name !== \"string\") {\n\t\t\tthrow new Error(\n\t\t\t\t`Jsonp library name must be a simple string. ${AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE}`\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tname: /** @type {string} */ (name)\n\t\t};\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {RenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trender(source, { chunk }, { options, compilation }) {\n\t\tconst name = compilation.getPath(options.name, {\n\t\t\tchunk\n\t\t});\n\t\treturn new ConcatSource(`${name}(`, source, \")\");\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk\n\t * @param {Hash} hash hash\n\t * @param {ChunkHashContext} chunkHashContext chunk hash context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {void}\n\t */\n\tchunkHash(chunk, hash, chunkHashContext, { options, compilation }) {\n\t\thash.update(\"JsonpLibraryPlugin\");\n\t\thash.update(compilation.getPath(options.name, { chunk }));\n\t}\n}\n\nmodule.exports = JsonpLibraryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,eAAyBA,OAAO,CAAC,iBAAiB,CAAC;EAA3CC,YAAY,YAAZA,YAAY;AACpB,IAAMC,qBAAqB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA,IAIMG,kBAAkB;EAAA;EAAA;EACvB;AACD;AACA;EACC,4BAAYC,OAAO,EAAE;IAAA;IAAA,yBACd;MACLC,UAAU,EAAE,oBAAoB;MAChCC,IAAI,EAAEF,OAAO,CAACE;IACf,CAAC;EACF;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,sBAAaC,OAAO,EAAE;MACrB,IAAQC,IAAI,GAAKD,OAAO,CAAhBC,IAAI;MACZ,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC7B,MAAM,IAAIC,KAAK,uDACiCP,qBAAqB,CAACQ,2BAA2B,EAChG;MACF;MACA,OAAO;QACNF,IAAI,EAAE,qBAAuBA;MAC9B,CAAC;IACF;;IAEA;AACD;AACA;AACA;AACA;AACA;EALC;IAAA;IAAA,OAMA,gBAAOG,MAAM,eAAuC;MAAA,IAAnCC,KAAK,QAALA,KAAK;MAAA,IAAMR,OAAO,SAAPA,OAAO;QAAES,WAAW,SAAXA,WAAW;MAC/C,IAAML,IAAI,GAAGK,WAAW,CAACC,OAAO,CAACV,OAAO,CAACI,IAAI,EAAE;QAC9CI,KAAK,EAALA;MACD,CAAC,CAAC;MACF,OAAO,IAAIX,YAAY,WAAIO,IAAI,QAAKG,MAAM,EAAE,GAAG,CAAC;IACjD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;EANC;IAAA;IAAA,OAOA,mBAAUC,KAAK,EAAEG,IAAI,EAAEC,gBAAgB,SAA4B;MAAA,IAAxBZ,OAAO,SAAPA,OAAO;QAAES,WAAW,SAAXA,WAAW;MAC9DE,IAAI,CAACE,MAAM,CAAC,oBAAoB,CAAC;MACjCF,IAAI,CAACE,MAAM,CAACJ,WAAW,CAACC,OAAO,CAACV,OAAO,CAACI,IAAI,EAAE;QAAEI,KAAK,EAALA;MAAM,CAAC,CAAC,CAAC;IAC1D;EAAC;EAAA;AAAA,EAlD+BV,qBAAqB;AAqDtDgB,MAAM,CAACC,OAAO,GAAGhB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}