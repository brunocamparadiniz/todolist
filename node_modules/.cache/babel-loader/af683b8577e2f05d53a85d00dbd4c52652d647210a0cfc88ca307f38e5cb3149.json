{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar EventEmitter = require(\"events\");\nvar _require = require(\"path\"),\n  extname = _require.extname,\n  basename = _require.basename;\nvar _require2 = require(\"url\"),\n  URL = _require2.URL;\nvar _require3 = require(\"zlib\"),\n  createGunzip = _require3.createGunzip,\n  createBrotliDecompress = _require3.createBrotliDecompress,\n  createInflate = _require3.createInflate;\nvar NormalModule = require(\"../NormalModule\");\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar createHash = require(\"../util/createHash\");\nvar _require4 = require(\"../util/fs\"),\n  mkdirp = _require4.mkdirp,\n  dirname = _require4.dirname,\n  join = _require4.join;\nvar memoize = require(\"../util/memoize\");\n\n/** @typedef {import(\"../../declarations/plugins/schemes/HttpUriPlugin\").HttpUriPluginOptions} HttpUriPluginOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nvar getHttp = memoize(function () {\n  return require(\"http\");\n});\nvar getHttps = memoize(function () {\n  return require(\"https\");\n});\nvar proxyFetch = function proxyFetch(request, proxy) {\n  return function (url, options, callback) {\n    var eventEmitter = new EventEmitter();\n    var doRequest = function doRequest(socket) {\n      return request.get(url, _objectSpread(_objectSpread({}, options), socket && {\n        socket: socket\n      }), callback).on(\"error\", eventEmitter.emit.bind(eventEmitter, \"error\"));\n    };\n    if (proxy) {\n      var _URL = new URL(proxy),\n        host = _URL.hostname,\n        port = _URL.port;\n      getHttp().request({\n        host: host,\n        // IP address of proxy server\n        port: port,\n        // port of proxy server\n        method: \"CONNECT\",\n        path: url.host\n      }).on(\"connect\", function (res, socket) {\n        if (res.statusCode === 200) {\n          // connected to proxy server\n          doRequest(socket);\n        }\n      }).on(\"error\", function (err) {\n        eventEmitter.emit(\"error\", new Error(\"Failed to connect to proxy server \\\"\".concat(proxy, \"\\\": \").concat(err.message)));\n      }).end();\n    } else {\n      doRequest();\n    }\n    return eventEmitter;\n  };\n};\n\n/** @type {(() => void)[] | undefined} */\nvar inProgressWrite = undefined;\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/schemes/HttpUriPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/schemes/HttpUriPlugin.json\");\n}, {\n  name: \"Http Uri Plugin\",\n  baseDataPath: \"options\"\n});\nvar toSafePath = function toSafePath(str) {\n  return str.replace(/^[^a-zA-Z0-9]+|[^a-zA-Z0-9]+$/g, \"\").replace(/[^a-zA-Z0-9._-]+/g, \"_\");\n};\nvar computeIntegrity = function computeIntegrity(content) {\n  var hash = createHash(\"sha512\");\n  hash.update(content);\n  var integrity = \"sha512-\" + hash.digest(\"base64\");\n  return integrity;\n};\nvar verifyIntegrity = function verifyIntegrity(content, integrity) {\n  if (integrity === \"ignore\") return true;\n  return computeIntegrity(content) === integrity;\n};\n\n/**\n * @param {string} str input\n * @returns {Record<string, string>} parsed\n */\nvar parseKeyValuePairs = function parseKeyValuePairs(str) {\n  /** @type {Record<string, string>} */\n  var result = {};\n  var _iterator = _createForOfIteratorHelper(str.split(\",\")),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      var i = item.indexOf(\"=\");\n      if (i >= 0) {\n        var key = item.slice(0, i).trim();\n        var value = item.slice(i + 1).trim();\n        result[key] = value;\n      } else {\n        var _key = item.trim();\n        if (!_key) continue;\n        result[_key] = _key;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n};\nvar parseCacheControl = function parseCacheControl(cacheControl, requestTime) {\n  // When false resource is not stored in cache\n  var storeCache = true;\n  // When false resource is not stored in lockfile cache\n  var storeLock = true;\n  // Resource is only revalidated, after that timestamp and when upgrade is chosen\n  var validUntil = 0;\n  if (cacheControl) {\n    var parsed = parseKeyValuePairs(cacheControl);\n    if (parsed[\"no-cache\"]) storeCache = storeLock = false;\n    if (parsed[\"max-age\"] && !isNaN(+parsed[\"max-age\"])) {\n      validUntil = requestTime + +parsed[\"max-age\"] * 1000;\n    }\n    if (parsed[\"must-revalidate\"]) validUntil = 0;\n  }\n  return {\n    storeLock: storeLock,\n    storeCache: storeCache,\n    validUntil: validUntil\n  };\n};\n\n/**\n * @typedef {Object} LockfileEntry\n * @property {string} resolved\n * @property {string} integrity\n * @property {string} contentType\n */\n\nvar areLockfileEntriesEqual = function areLockfileEntriesEqual(a, b) {\n  return a.resolved === b.resolved && a.integrity === b.integrity && a.contentType === b.contentType;\n};\nvar entryToString = function entryToString(entry) {\n  return \"resolved: \".concat(entry.resolved, \", integrity: \").concat(entry.integrity, \", contentType: \").concat(entry.contentType);\n};\nvar Lockfile = /*#__PURE__*/function () {\n  function Lockfile() {\n    _classCallCheck(this, Lockfile);\n    this.version = 1;\n    /** @type {Map<string, LockfileEntry | \"ignore\" | \"no-cache\">} */\n    this.entries = new Map();\n  }\n  _createClass(Lockfile, [{\n    key: \"toString\",\n    value: function toString() {\n      var str = \"{\\n\";\n      var entries = Array.from(this.entries).sort(function (_ref, _ref2) {\n        var _ref3 = _slicedToArray(_ref, 1),\n          a = _ref3[0];\n        var _ref4 = _slicedToArray(_ref2, 1),\n          b = _ref4[0];\n        return a < b ? -1 : 1;\n      });\n      var _iterator2 = _createForOfIteratorHelper(entries),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            key = _step2$value[0],\n            entry = _step2$value[1];\n          if (typeof entry === \"string\") {\n            str += \"  \".concat(JSON.stringify(key), \": \").concat(JSON.stringify(entry), \",\\n\");\n          } else {\n            str += \"  \".concat(JSON.stringify(key), \": { \");\n            if (entry.resolved !== key) str += \"\\\"resolved\\\": \".concat(JSON.stringify(entry.resolved), \", \");\n            str += \"\\\"integrity\\\": \".concat(JSON.stringify(entry.integrity), \", \\\"contentType\\\": \").concat(JSON.stringify(entry.contentType), \" },\\n\");\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      str += \"  \\\"version\\\": \".concat(this.version, \"\\n}\\n\");\n      return str;\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(content) {\n      // TODO handle merge conflicts\n      var data = JSON.parse(content);\n      if (data.version !== 1) throw new Error(\"Unsupported lockfile version \".concat(data.version));\n      var lockfile = new Lockfile();\n      for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n        var key = _Object$keys[_i];\n        if (key === \"version\") continue;\n        var entry = data[key];\n        lockfile.entries.set(key, typeof entry === \"string\" ? entry : _objectSpread({\n          resolved: key\n        }, entry));\n      }\n      return lockfile;\n    }\n  }]);\n  return Lockfile;\n}();\n/**\n * @template R\n * @param {function(function(Error=, R=): void): void} fn function\n * @returns {function(function((Error | null)=, R=): void): void} cached function\n */\nvar cachedWithoutKey = function cachedWithoutKey(fn) {\n  var inFlight = false;\n  /** @type {Error | undefined} */\n  var cachedError = undefined;\n  /** @type {R | undefined} */\n  var cachedResult = undefined;\n  /** @type {(function(Error=, R=): void)[] | undefined} */\n  var cachedCallbacks = undefined;\n  return function (callback) {\n    if (inFlight) {\n      if (cachedResult !== undefined) return callback(null, cachedResult);\n      if (cachedError !== undefined) return callback(cachedError);\n      if (cachedCallbacks === undefined) cachedCallbacks = [callback];else cachedCallbacks.push(callback);\n      return;\n    }\n    inFlight = true;\n    fn(function (err, result) {\n      if (err) cachedError = err;else cachedResult = result;\n      var callbacks = cachedCallbacks;\n      cachedCallbacks = undefined;\n      callback(err, result);\n      if (callbacks !== undefined) {\n        var _iterator3 = _createForOfIteratorHelper(callbacks),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var cb = _step3.value;\n            cb(err, result);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    });\n  };\n};\n\n/**\n * @template T\n * @template R\n * @param {function(T, function(Error=, R=): void): void} fn function\n * @param {function(T, function(Error=, R=): void): void=} forceFn function for the second try\n * @returns {(function(T, function((Error | null)=, R=): void): void) & { force: function(T, function((Error | null)=, R=): void): void }} cached function\n */\nvar cachedWithKey = function cachedWithKey(fn) {\n  var forceFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : fn;\n  /** @typedef {{ result?: R, error?: Error, callbacks?: (function((Error | null)=, R=): void)[], force?: true }} CacheEntry */\n  /** @type {Map<T, CacheEntry>} */\n  var cache = new Map();\n  var resultFn = function resultFn(arg, callback) {\n    var cacheEntry = cache.get(arg);\n    if (cacheEntry !== undefined) {\n      if (cacheEntry.result !== undefined) return callback(null, cacheEntry.result);\n      if (cacheEntry.error !== undefined) return callback(cacheEntry.error);\n      if (cacheEntry.callbacks === undefined) cacheEntry.callbacks = [callback];else cacheEntry.callbacks.push(callback);\n      return;\n    }\n    /** @type {CacheEntry} */\n    var newCacheEntry = {\n      result: undefined,\n      error: undefined,\n      callbacks: undefined\n    };\n    cache.set(arg, newCacheEntry);\n    fn(arg, function (err, result) {\n      if (err) newCacheEntry.error = err;else newCacheEntry.result = result;\n      var callbacks = newCacheEntry.callbacks;\n      newCacheEntry.callbacks = undefined;\n      callback(err, result);\n      if (callbacks !== undefined) {\n        var _iterator4 = _createForOfIteratorHelper(callbacks),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var cb = _step4.value;\n            cb(err, result);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n    });\n  };\n  resultFn.force = function (arg, callback) {\n    var cacheEntry = cache.get(arg);\n    if (cacheEntry !== undefined && cacheEntry.force) {\n      if (cacheEntry.result !== undefined) return callback(null, cacheEntry.result);\n      if (cacheEntry.error !== undefined) return callback(cacheEntry.error);\n      if (cacheEntry.callbacks === undefined) cacheEntry.callbacks = [callback];else cacheEntry.callbacks.push(callback);\n      return;\n    }\n    /** @type {CacheEntry} */\n    var newCacheEntry = {\n      result: undefined,\n      error: undefined,\n      callbacks: undefined,\n      force: true\n    };\n    cache.set(arg, newCacheEntry);\n    forceFn(arg, function (err, result) {\n      if (err) newCacheEntry.error = err;else newCacheEntry.result = result;\n      var callbacks = newCacheEntry.callbacks;\n      newCacheEntry.callbacks = undefined;\n      callback(err, result);\n      if (callbacks !== undefined) {\n        var _iterator5 = _createForOfIteratorHelper(callbacks),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var cb = _step5.value;\n            cb(err, result);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    });\n  };\n  return resultFn;\n};\nvar HttpUriPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {HttpUriPluginOptions} options options\n   */\n  function HttpUriPlugin(options) {\n    _classCallCheck(this, HttpUriPlugin);\n    validate(options);\n    this._lockfileLocation = options.lockfileLocation;\n    this._cacheLocation = options.cacheLocation;\n    this._upgrade = options.upgrade;\n    this._frozen = options.frozen;\n    this._allowedUris = options.allowedUris;\n    this._proxy = options.proxy;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(HttpUriPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      var proxy = this._proxy || process.env[\"http_proxy\"] || process.env[\"HTTP_PROXY\"];\n      var schemes = [{\n        scheme: \"http\",\n        fetch: proxyFetch(getHttp(), proxy)\n      }, {\n        scheme: \"https\",\n        fetch: proxyFetch(getHttps(), proxy)\n      }];\n      var lockfileCache;\n      compiler.hooks.compilation.tap(\"HttpUriPlugin\", function (compilation, _ref5) {\n        var normalModuleFactory = _ref5.normalModuleFactory;\n        var intermediateFs = compiler.intermediateFileSystem;\n        var fs = compilation.inputFileSystem;\n        var cache = compilation.getCache(\"webpack.HttpUriPlugin\");\n        var logger = compilation.getLogger(\"webpack.HttpUriPlugin\");\n        var lockfileLocation = _this._lockfileLocation || join(intermediateFs, compiler.context, compiler.name ? \"\".concat(toSafePath(compiler.name), \".webpack.lock\") : \"webpack.lock\");\n        var cacheLocation = _this._cacheLocation !== undefined ? _this._cacheLocation : lockfileLocation + \".data\";\n        var upgrade = _this._upgrade || false;\n        var frozen = _this._frozen || false;\n        var hashFunction = \"sha512\";\n        var hashDigest = \"hex\";\n        var hashDigestLength = 20;\n        var allowedUris = _this._allowedUris;\n        var warnedAboutEol = false;\n        var cacheKeyCache = new Map();\n        /**\n         * @param {string} url the url\n         * @returns {string} the key\n         */\n        var getCacheKey = function getCacheKey(url) {\n          var cachedResult = cacheKeyCache.get(url);\n          if (cachedResult !== undefined) return cachedResult;\n          var result = _getCacheKey(url);\n          cacheKeyCache.set(url, result);\n          return result;\n        };\n\n        /**\n         * @param {string} url the url\n         * @returns {string} the key\n         */\n        var _getCacheKey = function _getCacheKey(url) {\n          var parsedUrl = new URL(url);\n          var folder = toSafePath(parsedUrl.origin);\n          var name = toSafePath(parsedUrl.pathname);\n          var query = toSafePath(parsedUrl.search);\n          var ext = extname(name);\n          if (ext.length > 20) ext = \"\";\n          var basename = ext ? name.slice(0, -ext.length) : name;\n          var hash = createHash(hashFunction);\n          hash.update(url);\n          var digest = hash.digest(hashDigest).slice(0, hashDigestLength);\n          return \"\".concat(folder.slice(-50), \"/\").concat(\"\".concat(basename).concat(query ? \"_\".concat(query) : \"\").slice(0, 150), \"_\").concat(digest).concat(ext);\n        };\n        var getLockfile = cachedWithoutKey(\n        /**\n         * @param {function((Error | null)=, Lockfile=): void} callback callback\n         * @returns {void}\n         */\n        function (callback) {\n          var readLockfile = function readLockfile() {\n            intermediateFs.readFile(lockfileLocation, function (err, buffer) {\n              if (err && err.code !== \"ENOENT\") {\n                compilation.missingDependencies.add(lockfileLocation);\n                return callback(err);\n              }\n              compilation.fileDependencies.add(lockfileLocation);\n              compilation.fileSystemInfo.createSnapshot(compiler.fsStartTime, buffer ? [lockfileLocation] : [], [], buffer ? [] : [lockfileLocation], {\n                timestamp: true\n              }, function (err, snapshot) {\n                if (err) return callback(err);\n                var lockfile = buffer ? Lockfile.parse(buffer.toString(\"utf-8\")) : new Lockfile();\n                lockfileCache = {\n                  lockfile: lockfile,\n                  snapshot: snapshot\n                };\n                callback(null, lockfile);\n              });\n            });\n          };\n          if (lockfileCache) {\n            compilation.fileSystemInfo.checkSnapshotValid(lockfileCache.snapshot, function (err, valid) {\n              if (err) return callback(err);\n              if (!valid) return readLockfile();\n              callback(null, lockfileCache.lockfile);\n            });\n          } else {\n            readLockfile();\n          }\n        });\n\n        /** @type {Map<string, LockfileEntry | \"ignore\" | \"no-cache\"> | undefined} */\n        var lockfileUpdates = undefined;\n        var storeLockEntry = function storeLockEntry(lockfile, url, entry) {\n          var oldEntry = lockfile.entries.get(url);\n          if (lockfileUpdates === undefined) lockfileUpdates = new Map();\n          lockfileUpdates.set(url, entry);\n          lockfile.entries.set(url, entry);\n          if (!oldEntry) {\n            logger.log(\"\".concat(url, \" added to lockfile\"));\n          } else if (typeof oldEntry === \"string\") {\n            if (typeof entry === \"string\") {\n              logger.log(\"\".concat(url, \" updated in lockfile: \").concat(oldEntry, \" -> \").concat(entry));\n            } else {\n              logger.log(\"\".concat(url, \" updated in lockfile: \").concat(oldEntry, \" -> \").concat(entry.resolved));\n            }\n          } else if (typeof entry === \"string\") {\n            logger.log(\"\".concat(url, \" updated in lockfile: \").concat(oldEntry.resolved, \" -> \").concat(entry));\n          } else if (oldEntry.resolved !== entry.resolved) {\n            logger.log(\"\".concat(url, \" updated in lockfile: \").concat(oldEntry.resolved, \" -> \").concat(entry.resolved));\n          } else if (oldEntry.integrity !== entry.integrity) {\n            logger.log(\"\".concat(url, \" updated in lockfile: content changed\"));\n          } else if (oldEntry.contentType !== entry.contentType) {\n            logger.log(\"\".concat(url, \" updated in lockfile: \").concat(oldEntry.contentType, \" -> \").concat(entry.contentType));\n          } else {\n            logger.log(\"\".concat(url, \" updated in lockfile\"));\n          }\n        };\n        var storeResult = function storeResult(lockfile, url, result, callback) {\n          if (result.storeLock) {\n            storeLockEntry(lockfile, url, result.entry);\n            if (!cacheLocation || !result.content) return callback(null, result);\n            var key = getCacheKey(result.entry.resolved);\n            var filePath = join(intermediateFs, cacheLocation, key);\n            mkdirp(intermediateFs, dirname(intermediateFs, filePath), function (err) {\n              if (err) return callback(err);\n              intermediateFs.writeFile(filePath, result.content, function (err) {\n                if (err) return callback(err);\n                callback(null, result);\n              });\n            });\n          } else {\n            storeLockEntry(lockfile, url, \"no-cache\");\n            callback(null, result);\n          }\n        };\n        var _loop = function _loop() {\n          var _schemes$_i = _schemes[_i2],\n            scheme = _schemes$_i.scheme,\n            fetch = _schemes$_i.fetch;\n          /**\n           *\n           * @param {string} url URL\n           * @param {string} integrity integrity\n           * @param {function((Error | null)=, { entry: LockfileEntry, content: Buffer, storeLock: boolean }=): void} callback callback\n           */\n          var resolveContent = function resolveContent(url, integrity, callback) {\n            var handleResult = function handleResult(err, result) {\n              if (err) return callback(err);\n              if (\"location\" in result) {\n                return resolveContent(result.location, integrity, function (err, innerResult) {\n                  if (err) return callback(err);\n                  callback(null, {\n                    entry: innerResult.entry,\n                    content: innerResult.content,\n                    storeLock: innerResult.storeLock && result.storeLock\n                  });\n                });\n              } else {\n                if (!result.fresh && integrity && result.entry.integrity !== integrity && !verifyIntegrity(result.content, integrity)) {\n                  return fetchContent.force(url, handleResult);\n                }\n                return callback(null, {\n                  entry: result.entry,\n                  content: result.content,\n                  storeLock: result.storeLock\n                });\n              }\n            };\n            fetchContent(url, handleResult);\n          };\n\n          /** @typedef {{ storeCache: boolean, storeLock: boolean, validUntil: number, etag: string | undefined, fresh: boolean }} FetchResultMeta */\n          /** @typedef {FetchResultMeta & { location: string }} RedirectFetchResult */\n          /** @typedef {FetchResultMeta & { entry: LockfileEntry, content: Buffer }} ContentFetchResult */\n          /** @typedef {RedirectFetchResult | ContentFetchResult} FetchResult */\n\n          /**\n           * @param {string} url URL\n           * @param {FetchResult | RedirectFetchResult} cachedResult result from cache\n           * @param {function((Error | null)=, FetchResult=): void} callback callback\n           * @returns {void}\n           */\n          var fetchContentRaw = function fetchContentRaw(url, cachedResult, callback) {\n            var requestTime = Date.now();\n            fetch(new URL(url), {\n              headers: {\n                \"accept-encoding\": \"gzip, deflate, br\",\n                \"user-agent\": \"webpack\",\n                \"if-none-match\": cachedResult ? cachedResult.etag || null : null\n              }\n            }, function (res) {\n              var etag = res.headers[\"etag\"];\n              var location = res.headers[\"location\"];\n              var cacheControl = res.headers[\"cache-control\"];\n              var _parseCacheControl = parseCacheControl(cacheControl, requestTime),\n                storeLock = _parseCacheControl.storeLock,\n                storeCache = _parseCacheControl.storeCache,\n                validUntil = _parseCacheControl.validUntil;\n              /**\n               * @param {Partial<Pick<FetchResultMeta, \"fresh\">> & (Pick<RedirectFetchResult, \"location\"> | Pick<ContentFetchResult, \"content\" | \"entry\">)} partialResult result\n               * @returns {void}\n               */\n              var finishWith = function finishWith(partialResult) {\n                if (\"location\" in partialResult) {\n                  logger.debug(\"GET \".concat(url, \" [\").concat(res.statusCode, \"] -> \").concat(partialResult.location));\n                } else {\n                  logger.debug(\"GET \".concat(url, \" [\").concat(res.statusCode, \"] \").concat(Math.ceil(partialResult.content.length / 1024), \" kB\").concat(!storeLock ? \" no-cache\" : \"\"));\n                }\n                var result = _objectSpread(_objectSpread({}, partialResult), {}, {\n                  fresh: true,\n                  storeLock: storeLock,\n                  storeCache: storeCache,\n                  validUntil: validUntil,\n                  etag: etag\n                });\n                if (!storeCache) {\n                  logger.log(\"\".concat(url, \" can't be stored in cache, due to Cache-Control header: \").concat(cacheControl));\n                  return callback(null, result);\n                }\n                cache.store(url, null, _objectSpread(_objectSpread({}, result), {}, {\n                  fresh: false\n                }), function (err) {\n                  if (err) {\n                    logger.warn(\"\".concat(url, \" can't be stored in cache: \").concat(err.message));\n                    logger.debug(err.stack);\n                  }\n                  callback(null, result);\n                });\n              };\n              if (res.statusCode === 304) {\n                if (cachedResult.validUntil < validUntil || cachedResult.storeLock !== storeLock || cachedResult.storeCache !== storeCache || cachedResult.etag !== etag) {\n                  return finishWith(cachedResult);\n                } else {\n                  logger.debug(\"GET \".concat(url, \" [\").concat(res.statusCode, \"] (unchanged)\"));\n                  return callback(null, _objectSpread(_objectSpread({}, cachedResult), {}, {\n                    fresh: true\n                  }));\n                }\n              }\n              if (location && res.statusCode >= 301 && res.statusCode <= 308) {\n                var result = {\n                  location: new URL(location, url).href\n                };\n                if (!cachedResult || !(\"location\" in cachedResult) || cachedResult.location !== result.location || cachedResult.validUntil < validUntil || cachedResult.storeLock !== storeLock || cachedResult.storeCache !== storeCache || cachedResult.etag !== etag) {\n                  return finishWith(result);\n                } else {\n                  logger.debug(\"GET \".concat(url, \" [\").concat(res.statusCode, \"] (unchanged)\"));\n                  return callback(null, _objectSpread(_objectSpread({}, result), {}, {\n                    fresh: true,\n                    storeLock: storeLock,\n                    storeCache: storeCache,\n                    validUntil: validUntil,\n                    etag: etag\n                  }));\n                }\n              }\n              var contentType = res.headers[\"content-type\"] || \"\";\n              var bufferArr = [];\n              var contentEncoding = res.headers[\"content-encoding\"];\n              var stream = res;\n              if (contentEncoding === \"gzip\") {\n                stream = stream.pipe(createGunzip());\n              } else if (contentEncoding === \"br\") {\n                stream = stream.pipe(createBrotliDecompress());\n              } else if (contentEncoding === \"deflate\") {\n                stream = stream.pipe(createInflate());\n              }\n              stream.on(\"data\", function (chunk) {\n                bufferArr.push(chunk);\n              });\n              stream.on(\"end\", function () {\n                if (!res.complete) {\n                  logger.log(\"GET \".concat(url, \" [\").concat(res.statusCode, \"] (terminated)\"));\n                  return callback(new Error(\"\".concat(url, \" request was terminated\")));\n                }\n                var content = Buffer.concat(bufferArr);\n                if (res.statusCode !== 200) {\n                  logger.log(\"GET \".concat(url, \" [\").concat(res.statusCode, \"]\"));\n                  return callback(new Error(\"\".concat(url, \" request status code = \").concat(res.statusCode, \"\\n\").concat(content.toString(\"utf-8\"))));\n                }\n                var integrity = computeIntegrity(content);\n                var entry = {\n                  resolved: url,\n                  integrity: integrity,\n                  contentType: contentType\n                };\n                finishWith({\n                  entry: entry,\n                  content: content\n                });\n              });\n            }).on(\"error\", function (err) {\n              logger.log(\"GET \".concat(url, \" (error)\"));\n              err.message += \"\\nwhile fetching \".concat(url);\n              callback(err);\n            });\n          };\n          var fetchContent = cachedWithKey(\n          /**\n           * @param {string} url URL\n           * @param {function((Error | null)=, { validUntil: number, etag?: string, entry: LockfileEntry, content: Buffer, fresh: boolean } | { validUntil: number, etag?: string, location: string, fresh: boolean }=): void} callback callback\n           * @returns {void}\n           */\n          function (url, callback) {\n            cache.get(url, null, function (err, cachedResult) {\n              if (err) return callback(err);\n              if (cachedResult) {\n                var isValid = cachedResult.validUntil >= Date.now();\n                if (isValid) return callback(null, cachedResult);\n              }\n              fetchContentRaw(url, cachedResult, callback);\n            });\n          }, function (url, callback) {\n            return fetchContentRaw(url, undefined, callback);\n          });\n          var isAllowed = function isAllowed(uri) {\n            var _iterator6 = _createForOfIteratorHelper(allowedUris),\n              _step6;\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var allowed = _step6.value;\n                if (typeof allowed === \"string\") {\n                  if (uri.startsWith(allowed)) return true;\n                } else if (typeof allowed === \"function\") {\n                  if (allowed(uri)) return true;\n                } else {\n                  if (allowed.test(uri)) return true;\n                }\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n            return false;\n          };\n          var getInfo = cachedWithKey(\n          /**\n           * @param {string} url the url\n           * @param {function((Error | null)=, { entry: LockfileEntry, content: Buffer }=): void} callback callback\n           * @returns {void}\n           */\n          function (url, callback) {\n            if (!isAllowed(url)) {\n              return callback(new Error(\"\".concat(url, \" doesn't match the allowedUris policy. These URIs are allowed:\\n\").concat(allowedUris.map(function (uri) {\n                return \" - \".concat(uri);\n              }).join(\"\\n\"))));\n            }\n            getLockfile(function (err, lockfile) {\n              if (err) return callback(err);\n              var entryOrString = lockfile.entries.get(url);\n              if (!entryOrString) {\n                if (frozen) {\n                  return callback(new Error(\"\".concat(url, \" has no lockfile entry and lockfile is frozen\")));\n                }\n                resolveContent(url, null, function (err, result) {\n                  if (err) return callback(err);\n                  storeResult(lockfile, url, result, callback);\n                });\n                return;\n              }\n              if (typeof entryOrString === \"string\") {\n                var entryTag = entryOrString;\n                resolveContent(url, null, function (err, result) {\n                  if (err) return callback(err);\n                  if (!result.storeLock || entryTag === \"ignore\") return callback(null, result);\n                  if (frozen) {\n                    return callback(new Error(\"\".concat(url, \" used to have \").concat(entryTag, \" lockfile entry and has content now, but lockfile is frozen\")));\n                  }\n                  if (!upgrade) {\n                    return callback(new Error(\"\".concat(url, \" used to have \").concat(entryTag, \" lockfile entry and has content now.\\nThis should be reflected in the lockfile, so this lockfile entry must be upgraded, but upgrading is not enabled.\\nRemove this line from the lockfile to force upgrading.\")));\n                  }\n                  storeResult(lockfile, url, result, callback);\n                });\n                return;\n              }\n              var entry = entryOrString;\n              var doFetch = function doFetch(lockedContent) {\n                resolveContent(url, entry.integrity, function (err, result) {\n                  if (err) {\n                    if (lockedContent) {\n                      logger.warn(\"Upgrade request to \".concat(url, \" failed: \").concat(err.message));\n                      logger.debug(err.stack);\n                      return callback(null, {\n                        entry: entry,\n                        content: lockedContent\n                      });\n                    }\n                    return callback(err);\n                  }\n                  if (!result.storeLock) {\n                    // When the lockfile entry should be no-cache\n                    // we need to update the lockfile\n                    if (frozen) {\n                      return callback(new Error(\"\".concat(url, \" has a lockfile entry and is no-cache now, but lockfile is frozen\\nLockfile: \").concat(entryToString(entry))));\n                    }\n                    storeResult(lockfile, url, result, callback);\n                    return;\n                  }\n                  if (!areLockfileEntriesEqual(result.entry, entry)) {\n                    // When the lockfile entry is outdated\n                    // we need to update the lockfile\n                    if (frozen) {\n                      return callback(new Error(\"\".concat(url, \" has an outdated lockfile entry, but lockfile is frozen\\nLockfile: \").concat(entryToString(entry), \"\\nExpected: \").concat(entryToString(result.entry))));\n                    }\n                    storeResult(lockfile, url, result, callback);\n                    return;\n                  }\n                  if (!lockedContent && cacheLocation) {\n                    // When the lockfile cache content is missing\n                    // we need to update the lockfile\n                    if (frozen) {\n                      return callback(new Error(\"\".concat(url, \" is missing content in the lockfile cache, but lockfile is frozen\\nLockfile: \").concat(entryToString(entry))));\n                    }\n                    storeResult(lockfile, url, result, callback);\n                    return;\n                  }\n                  return callback(null, result);\n                });\n              };\n              if (cacheLocation) {\n                // When there is a lockfile cache\n                // we read the content from there\n                var key = getCacheKey(entry.resolved);\n                var filePath = join(intermediateFs, cacheLocation, key);\n                fs.readFile(filePath, function (err, result) {\n                  var content = /** @type {Buffer} */result;\n                  if (err) {\n                    if (err.code === \"ENOENT\") return doFetch();\n                    return callback(err);\n                  }\n                  var continueWithCachedContent = function continueWithCachedContent(result) {\n                    if (!upgrade) {\n                      // When not in upgrade mode, we accept the result from the lockfile cache\n                      return callback(null, {\n                        entry: entry,\n                        content: content\n                      });\n                    }\n                    return doFetch(content);\n                  };\n                  if (!verifyIntegrity(content, entry.integrity)) {\n                    var contentWithChangedEol;\n                    var isEolChanged = false;\n                    try {\n                      contentWithChangedEol = Buffer.from(content.toString(\"utf-8\").replace(/\\r\\n/g, \"\\n\"));\n                      isEolChanged = verifyIntegrity(contentWithChangedEol, entry.integrity);\n                    } catch (e) {\n                      // ignore\n                    }\n                    if (isEolChanged) {\n                      if (!warnedAboutEol) {\n                        var explainer = \"Incorrect end of line sequence was detected in the lockfile cache.\\nThe lockfile cache is protected by integrity checks, so any external modification will lead to a corrupted lockfile cache.\\nWhen using git make sure to configure .gitattributes correctly for the lockfile cache:\\n  **/*webpack.lock.data/** -text\\nThis will avoid that the end of line sequence is changed by git on Windows.\";\n                        if (frozen) {\n                          logger.error(explainer);\n                        } else {\n                          logger.warn(explainer);\n                          logger.info(\"Lockfile cache will be automatically fixed now, but when lockfile is frozen this would result in an error.\");\n                        }\n                        warnedAboutEol = true;\n                      }\n                      if (!frozen) {\n                        // \"fix\" the end of line sequence of the lockfile content\n                        logger.log(\"\".concat(filePath, \" fixed end of line sequence (\\\\r\\\\n instead of \\\\n).\"));\n                        intermediateFs.writeFile(filePath, contentWithChangedEol, function (err) {\n                          if (err) return callback(err);\n                          continueWithCachedContent(contentWithChangedEol);\n                        });\n                        return;\n                      }\n                    }\n                    if (frozen) {\n                      return callback(new Error(\"\".concat(entry.resolved, \" integrity mismatch, expected content with integrity \").concat(entry.integrity, \" but got \").concat(computeIntegrity(content), \".\\nLockfile corrupted (\").concat(isEolChanged ? \"end of line sequence was unexpectedly changed\" : \"incorrectly merged? changed by other tools?\", \").\\nRun build with un-frozen lockfile to automatically fix lockfile.\")));\n                    } else {\n                      // \"fix\" the lockfile entry to the correct integrity\n                      // the content has priority over the integrity value\n                      entry = _objectSpread(_objectSpread({}, entry), {}, {\n                        integrity: computeIntegrity(content)\n                      });\n                      storeLockEntry(lockfile, url, entry);\n                    }\n                  }\n                  continueWithCachedContent(result);\n                });\n              } else {\n                doFetch();\n              }\n            });\n          });\n          var respondWithUrlModule = function respondWithUrlModule(url, resourceData, callback) {\n            getInfo(url.href, function (err, result) {\n              if (err) return callback(err);\n              resourceData.resource = url.href;\n              resourceData.path = url.origin + url.pathname;\n              resourceData.query = url.search;\n              resourceData.fragment = url.hash;\n              resourceData.context = new URL(\".\", result.entry.resolved).href.slice(0, -1);\n              resourceData.data.mimetype = result.entry.contentType;\n              callback(null, true);\n            });\n          };\n          normalModuleFactory.hooks.resolveForScheme.for(scheme).tapAsync(\"HttpUriPlugin\", function (resourceData, resolveData, callback) {\n            respondWithUrlModule(new URL(resourceData.resource), resourceData, callback);\n          });\n          normalModuleFactory.hooks.resolveInScheme.for(scheme).tapAsync(\"HttpUriPlugin\", function (resourceData, data, callback) {\n            // Only handle relative urls (./xxx, ../xxx, /xxx, //xxx)\n            if (data.dependencyType !== \"url\" && !/^\\.{0,2}\\//.test(resourceData.resource)) {\n              return callback();\n            }\n            respondWithUrlModule(new URL(resourceData.resource, data.context + \"/\"), resourceData, callback);\n          });\n          var hooks = NormalModule.getCompilationHooks(compilation);\n          hooks.readResourceForScheme.for(scheme).tapAsync(\"HttpUriPlugin\", function (resource, module, callback) {\n            return getInfo(resource, function (err, result) {\n              if (err) return callback(err);\n              module.buildInfo.resourceIntegrity = result.entry.integrity;\n              callback(null, result.content);\n            });\n          });\n          hooks.needBuild.tapAsync(\"HttpUriPlugin\", function (module, context, callback) {\n            if (module.resource && module.resource.startsWith(\"\".concat(scheme, \"://\"))) {\n              getInfo(module.resource, function (err, result) {\n                if (err) return callback(err);\n                if (result.entry.integrity !== module.buildInfo.resourceIntegrity) {\n                  return callback(null, true);\n                }\n                callback();\n              });\n            } else {\n              return callback();\n            }\n          });\n        };\n        for (var _i2 = 0, _schemes = schemes; _i2 < _schemes.length; _i2++) {\n          _loop();\n        }\n        compilation.hooks.finishModules.tapAsync(\"HttpUriPlugin\", function (modules, callback) {\n          if (!lockfileUpdates) return callback();\n          var ext = extname(lockfileLocation);\n          var tempFile = join(intermediateFs, dirname(intermediateFs, lockfileLocation), \".\".concat(basename(lockfileLocation, ext), \".\").concat(Math.random() * 10000 | 0).concat(ext));\n          var writeDone = function writeDone() {\n            var nextOperation = inProgressWrite.shift();\n            if (nextOperation) {\n              nextOperation();\n            } else {\n              inProgressWrite = undefined;\n            }\n          };\n          var runWrite = function runWrite() {\n            intermediateFs.readFile(lockfileLocation, function (err, buffer) {\n              if (err && err.code !== \"ENOENT\") {\n                writeDone();\n                return callback(err);\n              }\n              var lockfile = buffer ? Lockfile.parse(buffer.toString(\"utf-8\")) : new Lockfile();\n              var _iterator7 = _createForOfIteratorHelper(lockfileUpdates),\n                _step7;\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var _step7$value = _slicedToArray(_step7.value, 2),\n                    key = _step7$value[0],\n                    value = _step7$value[1];\n                  lockfile.entries.set(key, value);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n              intermediateFs.writeFile(tempFile, lockfile.toString(), function (err) {\n                if (err) {\n                  writeDone();\n                  return intermediateFs.unlink(tempFile, function () {\n                    return callback(err);\n                  });\n                }\n                intermediateFs.rename(tempFile, lockfileLocation, function (err) {\n                  if (err) {\n                    writeDone();\n                    return intermediateFs.unlink(tempFile, function () {\n                      return callback(err);\n                    });\n                  }\n                  writeDone();\n                  callback();\n                });\n              });\n            });\n          };\n          if (inProgressWrite) {\n            inProgressWrite.push(runWrite);\n          } else {\n            inProgressWrite = [];\n            runWrite();\n          }\n        });\n      });\n    }\n  }]);\n  return HttpUriPlugin;\n}();\nmodule.exports = HttpUriPlugin;","map":{"version":3,"names":["EventEmitter","require","extname","basename","URL","createGunzip","createBrotliDecompress","createInflate","NormalModule","createSchemaValidation","createHash","mkdirp","dirname","join","memoize","getHttp","getHttps","proxyFetch","request","proxy","url","options","callback","eventEmitter","doRequest","socket","get","on","emit","bind","host","hostname","port","method","path","res","statusCode","err","Error","message","end","inProgressWrite","undefined","validate","name","baseDataPath","toSafePath","str","replace","computeIntegrity","content","hash","update","integrity","digest","verifyIntegrity","parseKeyValuePairs","result","split","item","i","indexOf","key","slice","trim","value","parseCacheControl","cacheControl","requestTime","storeCache","storeLock","validUntil","parsed","isNaN","areLockfileEntriesEqual","a","b","resolved","contentType","entryToString","entry","Lockfile","version","entries","Map","Array","from","sort","JSON","stringify","data","parse","lockfile","Object","keys","set","cachedWithoutKey","fn","inFlight","cachedError","cachedResult","cachedCallbacks","push","callbacks","cb","cachedWithKey","forceFn","cache","resultFn","arg","cacheEntry","error","newCacheEntry","force","HttpUriPlugin","_lockfileLocation","lockfileLocation","_cacheLocation","cacheLocation","_upgrade","upgrade","_frozen","frozen","_allowedUris","allowedUris","_proxy","compiler","process","env","schemes","scheme","fetch","lockfileCache","hooks","compilation","tap","normalModuleFactory","intermediateFs","intermediateFileSystem","fs","inputFileSystem","getCache","logger","getLogger","context","hashFunction","hashDigest","hashDigestLength","warnedAboutEol","cacheKeyCache","getCacheKey","_getCacheKey","parsedUrl","folder","origin","pathname","query","search","ext","length","getLockfile","readLockfile","readFile","buffer","code","missingDependencies","add","fileDependencies","fileSystemInfo","createSnapshot","fsStartTime","timestamp","snapshot","toString","checkSnapshotValid","valid","lockfileUpdates","storeLockEntry","oldEntry","log","storeResult","filePath","writeFile","resolveContent","handleResult","location","innerResult","fresh","fetchContent","fetchContentRaw","Date","now","headers","etag","finishWith","partialResult","debug","Math","ceil","store","warn","stack","href","bufferArr","contentEncoding","stream","pipe","chunk","complete","Buffer","concat","isValid","isAllowed","uri","allowed","startsWith","test","getInfo","map","entryOrString","entryTag","doFetch","lockedContent","continueWithCachedContent","contentWithChangedEol","isEolChanged","e","explainer","info","respondWithUrlModule","resourceData","resource","fragment","mimetype","resolveForScheme","for","tapAsync","resolveData","resolveInScheme","dependencyType","getCompilationHooks","readResourceForScheme","module","buildInfo","resourceIntegrity","needBuild","finishModules","modules","tempFile","random","writeDone","nextOperation","shift","runWrite","unlink","rename","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/schemes/HttpUriPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst EventEmitter = require(\"events\");\nconst { extname, basename } = require(\"path\");\nconst { URL } = require(\"url\");\nconst { createGunzip, createBrotliDecompress, createInflate } = require(\"zlib\");\nconst NormalModule = require(\"../NormalModule\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst { mkdirp, dirname, join } = require(\"../util/fs\");\nconst memoize = require(\"../util/memoize\");\n\n/** @typedef {import(\"../../declarations/plugins/schemes/HttpUriPlugin\").HttpUriPluginOptions} HttpUriPluginOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst getHttp = memoize(() => require(\"http\"));\nconst getHttps = memoize(() => require(\"https\"));\nconst proxyFetch = (request, proxy) => (url, options, callback) => {\n\tconst eventEmitter = new EventEmitter();\n\tconst doRequest = socket =>\n\t\trequest\n\t\t\t.get(url, { ...options, ...(socket && { socket }) }, callback)\n\t\t\t.on(\"error\", eventEmitter.emit.bind(eventEmitter, \"error\"));\n\n\tif (proxy) {\n\t\tconst { hostname: host, port } = new URL(proxy);\n\n\t\tgetHttp()\n\t\t\t.request({\n\t\t\t\thost, // IP address of proxy server\n\t\t\t\tport, // port of proxy server\n\t\t\t\tmethod: \"CONNECT\",\n\t\t\t\tpath: url.host\n\t\t\t})\n\t\t\t.on(\"connect\", (res, socket) => {\n\t\t\t\tif (res.statusCode === 200) {\n\t\t\t\t\t// connected to proxy server\n\t\t\t\t\tdoRequest(socket);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"error\", err => {\n\t\t\t\teventEmitter.emit(\n\t\t\t\t\t\"error\",\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Failed to connect to proxy server \"${proxy}\": ${err.message}`\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.end();\n\t} else {\n\t\tdoRequest();\n\t}\n\n\treturn eventEmitter;\n};\n\n/** @type {(() => void)[] | undefined} */\nlet inProgressWrite = undefined;\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/schemes/HttpUriPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/schemes/HttpUriPlugin.json\"),\n\t{\n\t\tname: \"Http Uri Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nconst toSafePath = str =>\n\tstr\n\t\t.replace(/^[^a-zA-Z0-9]+|[^a-zA-Z0-9]+$/g, \"\")\n\t\t.replace(/[^a-zA-Z0-9._-]+/g, \"_\");\n\nconst computeIntegrity = content => {\n\tconst hash = createHash(\"sha512\");\n\thash.update(content);\n\tconst integrity = \"sha512-\" + hash.digest(\"base64\");\n\treturn integrity;\n};\n\nconst verifyIntegrity = (content, integrity) => {\n\tif (integrity === \"ignore\") return true;\n\treturn computeIntegrity(content) === integrity;\n};\n\n/**\n * @param {string} str input\n * @returns {Record<string, string>} parsed\n */\nconst parseKeyValuePairs = str => {\n\t/** @type {Record<string, string>} */\n\tconst result = {};\n\tfor (const item of str.split(\",\")) {\n\t\tconst i = item.indexOf(\"=\");\n\t\tif (i >= 0) {\n\t\t\tconst key = item.slice(0, i).trim();\n\t\t\tconst value = item.slice(i + 1).trim();\n\t\t\tresult[key] = value;\n\t\t} else {\n\t\t\tconst key = item.trim();\n\t\t\tif (!key) continue;\n\t\t\tresult[key] = key;\n\t\t}\n\t}\n\treturn result;\n};\n\nconst parseCacheControl = (cacheControl, requestTime) => {\n\t// When false resource is not stored in cache\n\tlet storeCache = true;\n\t// When false resource is not stored in lockfile cache\n\tlet storeLock = true;\n\t// Resource is only revalidated, after that timestamp and when upgrade is chosen\n\tlet validUntil = 0;\n\tif (cacheControl) {\n\t\tconst parsed = parseKeyValuePairs(cacheControl);\n\t\tif (parsed[\"no-cache\"]) storeCache = storeLock = false;\n\t\tif (parsed[\"max-age\"] && !isNaN(+parsed[\"max-age\"])) {\n\t\t\tvalidUntil = requestTime + +parsed[\"max-age\"] * 1000;\n\t\t}\n\t\tif (parsed[\"must-revalidate\"]) validUntil = 0;\n\t}\n\treturn {\n\t\tstoreLock,\n\t\tstoreCache,\n\t\tvalidUntil\n\t};\n};\n\n/**\n * @typedef {Object} LockfileEntry\n * @property {string} resolved\n * @property {string} integrity\n * @property {string} contentType\n */\n\nconst areLockfileEntriesEqual = (a, b) => {\n\treturn (\n\t\ta.resolved === b.resolved &&\n\t\ta.integrity === b.integrity &&\n\t\ta.contentType === b.contentType\n\t);\n};\n\nconst entryToString = entry => {\n\treturn `resolved: ${entry.resolved}, integrity: ${entry.integrity}, contentType: ${entry.contentType}`;\n};\n\nclass Lockfile {\n\tconstructor() {\n\t\tthis.version = 1;\n\t\t/** @type {Map<string, LockfileEntry | \"ignore\" | \"no-cache\">} */\n\t\tthis.entries = new Map();\n\t}\n\n\tstatic parse(content) {\n\t\t// TODO handle merge conflicts\n\t\tconst data = JSON.parse(content);\n\t\tif (data.version !== 1)\n\t\t\tthrow new Error(`Unsupported lockfile version ${data.version}`);\n\t\tconst lockfile = new Lockfile();\n\t\tfor (const key of Object.keys(data)) {\n\t\t\tif (key === \"version\") continue;\n\t\t\tconst entry = data[key];\n\t\t\tlockfile.entries.set(\n\t\t\t\tkey,\n\t\t\t\ttypeof entry === \"string\"\n\t\t\t\t\t? entry\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tresolved: key,\n\t\t\t\t\t\t\t...entry\n\t\t\t\t\t  }\n\t\t\t);\n\t\t}\n\t\treturn lockfile;\n\t}\n\n\ttoString() {\n\t\tlet str = \"{\\n\";\n\t\tconst entries = Array.from(this.entries).sort(([a], [b]) =>\n\t\t\ta < b ? -1 : 1\n\t\t);\n\t\tfor (const [key, entry] of entries) {\n\t\t\tif (typeof entry === \"string\") {\n\t\t\t\tstr += `  ${JSON.stringify(key)}: ${JSON.stringify(entry)},\\n`;\n\t\t\t} else {\n\t\t\t\tstr += `  ${JSON.stringify(key)}: { `;\n\t\t\t\tif (entry.resolved !== key)\n\t\t\t\t\tstr += `\"resolved\": ${JSON.stringify(entry.resolved)}, `;\n\t\t\t\tstr += `\"integrity\": ${JSON.stringify(\n\t\t\t\t\tentry.integrity\n\t\t\t\t)}, \"contentType\": ${JSON.stringify(entry.contentType)} },\\n`;\n\t\t\t}\n\t\t}\n\t\tstr += `  \"version\": ${this.version}\\n}\\n`;\n\t\treturn str;\n\t}\n}\n\n/**\n * @template R\n * @param {function(function(Error=, R=): void): void} fn function\n * @returns {function(function((Error | null)=, R=): void): void} cached function\n */\nconst cachedWithoutKey = fn => {\n\tlet inFlight = false;\n\t/** @type {Error | undefined} */\n\tlet cachedError = undefined;\n\t/** @type {R | undefined} */\n\tlet cachedResult = undefined;\n\t/** @type {(function(Error=, R=): void)[] | undefined} */\n\tlet cachedCallbacks = undefined;\n\treturn callback => {\n\t\tif (inFlight) {\n\t\t\tif (cachedResult !== undefined) return callback(null, cachedResult);\n\t\t\tif (cachedError !== undefined) return callback(cachedError);\n\t\t\tif (cachedCallbacks === undefined) cachedCallbacks = [callback];\n\t\t\telse cachedCallbacks.push(callback);\n\t\t\treturn;\n\t\t}\n\t\tinFlight = true;\n\t\tfn((err, result) => {\n\t\t\tif (err) cachedError = err;\n\t\t\telse cachedResult = result;\n\t\t\tconst callbacks = cachedCallbacks;\n\t\t\tcachedCallbacks = undefined;\n\t\t\tcallback(err, result);\n\t\t\tif (callbacks !== undefined) for (const cb of callbacks) cb(err, result);\n\t\t});\n\t};\n};\n\n/**\n * @template T\n * @template R\n * @param {function(T, function(Error=, R=): void): void} fn function\n * @param {function(T, function(Error=, R=): void): void=} forceFn function for the second try\n * @returns {(function(T, function((Error | null)=, R=): void): void) & { force: function(T, function((Error | null)=, R=): void): void }} cached function\n */\nconst cachedWithKey = (fn, forceFn = fn) => {\n\t/** @typedef {{ result?: R, error?: Error, callbacks?: (function((Error | null)=, R=): void)[], force?: true }} CacheEntry */\n\t/** @type {Map<T, CacheEntry>} */\n\tconst cache = new Map();\n\tconst resultFn = (arg, callback) => {\n\t\tconst cacheEntry = cache.get(arg);\n\t\tif (cacheEntry !== undefined) {\n\t\t\tif (cacheEntry.result !== undefined)\n\t\t\t\treturn callback(null, cacheEntry.result);\n\t\t\tif (cacheEntry.error !== undefined) return callback(cacheEntry.error);\n\t\t\tif (cacheEntry.callbacks === undefined) cacheEntry.callbacks = [callback];\n\t\t\telse cacheEntry.callbacks.push(callback);\n\t\t\treturn;\n\t\t}\n\t\t/** @type {CacheEntry} */\n\t\tconst newCacheEntry = {\n\t\t\tresult: undefined,\n\t\t\terror: undefined,\n\t\t\tcallbacks: undefined\n\t\t};\n\t\tcache.set(arg, newCacheEntry);\n\t\tfn(arg, (err, result) => {\n\t\t\tif (err) newCacheEntry.error = err;\n\t\t\telse newCacheEntry.result = result;\n\t\t\tconst callbacks = newCacheEntry.callbacks;\n\t\t\tnewCacheEntry.callbacks = undefined;\n\t\t\tcallback(err, result);\n\t\t\tif (callbacks !== undefined) for (const cb of callbacks) cb(err, result);\n\t\t});\n\t};\n\tresultFn.force = (arg, callback) => {\n\t\tconst cacheEntry = cache.get(arg);\n\t\tif (cacheEntry !== undefined && cacheEntry.force) {\n\t\t\tif (cacheEntry.result !== undefined)\n\t\t\t\treturn callback(null, cacheEntry.result);\n\t\t\tif (cacheEntry.error !== undefined) return callback(cacheEntry.error);\n\t\t\tif (cacheEntry.callbacks === undefined) cacheEntry.callbacks = [callback];\n\t\t\telse cacheEntry.callbacks.push(callback);\n\t\t\treturn;\n\t\t}\n\t\t/** @type {CacheEntry} */\n\t\tconst newCacheEntry = {\n\t\t\tresult: undefined,\n\t\t\terror: undefined,\n\t\t\tcallbacks: undefined,\n\t\t\tforce: true\n\t\t};\n\t\tcache.set(arg, newCacheEntry);\n\t\tforceFn(arg, (err, result) => {\n\t\t\tif (err) newCacheEntry.error = err;\n\t\t\telse newCacheEntry.result = result;\n\t\t\tconst callbacks = newCacheEntry.callbacks;\n\t\t\tnewCacheEntry.callbacks = undefined;\n\t\t\tcallback(err, result);\n\t\t\tif (callbacks !== undefined) for (const cb of callbacks) cb(err, result);\n\t\t});\n\t};\n\treturn resultFn;\n};\n\nclass HttpUriPlugin {\n\t/**\n\t * @param {HttpUriPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis._lockfileLocation = options.lockfileLocation;\n\t\tthis._cacheLocation = options.cacheLocation;\n\t\tthis._upgrade = options.upgrade;\n\t\tthis._frozen = options.frozen;\n\t\tthis._allowedUris = options.allowedUris;\n\t\tthis._proxy = options.proxy;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst proxy =\n\t\t\tthis._proxy || process.env[\"http_proxy\"] || process.env[\"HTTP_PROXY\"];\n\t\tconst schemes = [\n\t\t\t{\n\t\t\t\tscheme: \"http\",\n\t\t\t\tfetch: proxyFetch(getHttp(), proxy)\n\t\t\t},\n\t\t\t{\n\t\t\t\tscheme: \"https\",\n\t\t\t\tfetch: proxyFetch(getHttps(), proxy)\n\t\t\t}\n\t\t];\n\t\tlet lockfileCache;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HttpUriPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst intermediateFs = compiler.intermediateFileSystem;\n\t\t\t\tconst fs = compilation.inputFileSystem;\n\t\t\t\tconst cache = compilation.getCache(\"webpack.HttpUriPlugin\");\n\t\t\t\tconst logger = compilation.getLogger(\"webpack.HttpUriPlugin\");\n\t\t\t\tconst lockfileLocation =\n\t\t\t\t\tthis._lockfileLocation ||\n\t\t\t\t\tjoin(\n\t\t\t\t\t\tintermediateFs,\n\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\tcompiler.name\n\t\t\t\t\t\t\t? `${toSafePath(compiler.name)}.webpack.lock`\n\t\t\t\t\t\t\t: \"webpack.lock\"\n\t\t\t\t\t);\n\t\t\t\tconst cacheLocation =\n\t\t\t\t\tthis._cacheLocation !== undefined\n\t\t\t\t\t\t? this._cacheLocation\n\t\t\t\t\t\t: lockfileLocation + \".data\";\n\t\t\t\tconst upgrade = this._upgrade || false;\n\t\t\t\tconst frozen = this._frozen || false;\n\t\t\t\tconst hashFunction = \"sha512\";\n\t\t\t\tconst hashDigest = \"hex\";\n\t\t\t\tconst hashDigestLength = 20;\n\t\t\t\tconst allowedUris = this._allowedUris;\n\n\t\t\t\tlet warnedAboutEol = false;\n\n\t\t\t\tconst cacheKeyCache = new Map();\n\t\t\t\t/**\n\t\t\t\t * @param {string} url the url\n\t\t\t\t * @returns {string} the key\n\t\t\t\t */\n\t\t\t\tconst getCacheKey = url => {\n\t\t\t\t\tconst cachedResult = cacheKeyCache.get(url);\n\t\t\t\t\tif (cachedResult !== undefined) return cachedResult;\n\t\t\t\t\tconst result = _getCacheKey(url);\n\t\t\t\t\tcacheKeyCache.set(url, result);\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @param {string} url the url\n\t\t\t\t * @returns {string} the key\n\t\t\t\t */\n\t\t\t\tconst _getCacheKey = url => {\n\t\t\t\t\tconst parsedUrl = new URL(url);\n\t\t\t\t\tconst folder = toSafePath(parsedUrl.origin);\n\t\t\t\t\tconst name = toSafePath(parsedUrl.pathname);\n\t\t\t\t\tconst query = toSafePath(parsedUrl.search);\n\t\t\t\t\tlet ext = extname(name);\n\t\t\t\t\tif (ext.length > 20) ext = \"\";\n\t\t\t\t\tconst basename = ext ? name.slice(0, -ext.length) : name;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\thash.update(url);\n\t\t\t\t\tconst digest = hash.digest(hashDigest).slice(0, hashDigestLength);\n\t\t\t\t\treturn `${folder.slice(-50)}/${`${basename}${\n\t\t\t\t\t\tquery ? `_${query}` : \"\"\n\t\t\t\t\t}`.slice(0, 150)}_${digest}${ext}`;\n\t\t\t\t};\n\n\t\t\t\tconst getLockfile = cachedWithoutKey(\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {function((Error | null)=, Lockfile=): void} callback callback\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tcallback => {\n\t\t\t\t\t\tconst readLockfile = () => {\n\t\t\t\t\t\t\tintermediateFs.readFile(lockfileLocation, (err, buffer) => {\n\t\t\t\t\t\t\t\tif (err && err.code !== \"ENOENT\") {\n\t\t\t\t\t\t\t\t\tcompilation.missingDependencies.add(lockfileLocation);\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcompilation.fileDependencies.add(lockfileLocation);\n\t\t\t\t\t\t\t\tcompilation.fileSystemInfo.createSnapshot(\n\t\t\t\t\t\t\t\t\tcompiler.fsStartTime,\n\t\t\t\t\t\t\t\t\tbuffer ? [lockfileLocation] : [],\n\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t\tbuffer ? [] : [lockfileLocation],\n\t\t\t\t\t\t\t\t\t{ timestamp: true },\n\t\t\t\t\t\t\t\t\t(err, snapshot) => {\n\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\tconst lockfile = buffer\n\t\t\t\t\t\t\t\t\t\t\t? Lockfile.parse(buffer.toString(\"utf-8\"))\n\t\t\t\t\t\t\t\t\t\t\t: new Lockfile();\n\t\t\t\t\t\t\t\t\t\tlockfileCache = {\n\t\t\t\t\t\t\t\t\t\t\tlockfile,\n\t\t\t\t\t\t\t\t\t\t\tsnapshot\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tcallback(null, lockfile);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (lockfileCache) {\n\t\t\t\t\t\t\tcompilation.fileSystemInfo.checkSnapshotValid(\n\t\t\t\t\t\t\t\tlockfileCache.snapshot,\n\t\t\t\t\t\t\t\t(err, valid) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\tif (!valid) return readLockfile();\n\t\t\t\t\t\t\t\t\tcallback(null, lockfileCache.lockfile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treadLockfile();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t/** @type {Map<string, LockfileEntry | \"ignore\" | \"no-cache\"> | undefined} */\n\t\t\t\tlet lockfileUpdates = undefined;\n\t\t\t\tconst storeLockEntry = (lockfile, url, entry) => {\n\t\t\t\t\tconst oldEntry = lockfile.entries.get(url);\n\t\t\t\t\tif (lockfileUpdates === undefined) lockfileUpdates = new Map();\n\t\t\t\t\tlockfileUpdates.set(url, entry);\n\t\t\t\t\tlockfile.entries.set(url, entry);\n\t\t\t\t\tif (!oldEntry) {\n\t\t\t\t\t\tlogger.log(`${url} added to lockfile`);\n\t\t\t\t\t} else if (typeof oldEntry === \"string\") {\n\t\t\t\t\t\tif (typeof entry === \"string\") {\n\t\t\t\t\t\t\tlogger.log(`${url} updated in lockfile: ${oldEntry} -> ${entry}`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t\t`${url} updated in lockfile: ${oldEntry} -> ${entry.resolved}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (typeof entry === \"string\") {\n\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t`${url} updated in lockfile: ${oldEntry.resolved} -> ${entry}`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (oldEntry.resolved !== entry.resolved) {\n\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t`${url} updated in lockfile: ${oldEntry.resolved} -> ${entry.resolved}`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (oldEntry.integrity !== entry.integrity) {\n\t\t\t\t\t\tlogger.log(`${url} updated in lockfile: content changed`);\n\t\t\t\t\t} else if (oldEntry.contentType !== entry.contentType) {\n\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t`${url} updated in lockfile: ${oldEntry.contentType} -> ${entry.contentType}`\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.log(`${url} updated in lockfile`);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst storeResult = (lockfile, url, result, callback) => {\n\t\t\t\t\tif (result.storeLock) {\n\t\t\t\t\t\tstoreLockEntry(lockfile, url, result.entry);\n\t\t\t\t\t\tif (!cacheLocation || !result.content)\n\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\tconst key = getCacheKey(result.entry.resolved);\n\t\t\t\t\t\tconst filePath = join(intermediateFs, cacheLocation, key);\n\t\t\t\t\t\tmkdirp(intermediateFs, dirname(intermediateFs, filePath), err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tintermediateFs.writeFile(filePath, result.content, err => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstoreLockEntry(lockfile, url, \"no-cache\");\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfor (const { scheme, fetch } of schemes) {\n\t\t\t\t\t/**\n\t\t\t\t\t *\n\t\t\t\t\t * @param {string} url URL\n\t\t\t\t\t * @param {string} integrity integrity\n\t\t\t\t\t * @param {function((Error | null)=, { entry: LockfileEntry, content: Buffer, storeLock: boolean }=): void} callback callback\n\t\t\t\t\t */\n\t\t\t\t\tconst resolveContent = (url, integrity, callback) => {\n\t\t\t\t\t\tconst handleResult = (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tif (\"location\" in result) {\n\t\t\t\t\t\t\t\treturn resolveContent(\n\t\t\t\t\t\t\t\t\tresult.location,\n\t\t\t\t\t\t\t\t\tintegrity,\n\t\t\t\t\t\t\t\t\t(err, innerResult) => {\n\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\tcallback(null, {\n\t\t\t\t\t\t\t\t\t\t\tentry: innerResult.entry,\n\t\t\t\t\t\t\t\t\t\t\tcontent: innerResult.content,\n\t\t\t\t\t\t\t\t\t\t\tstoreLock: innerResult.storeLock && result.storeLock\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t!result.fresh &&\n\t\t\t\t\t\t\t\t\tintegrity &&\n\t\t\t\t\t\t\t\t\tresult.entry.integrity !== integrity &&\n\t\t\t\t\t\t\t\t\t!verifyIntegrity(result.content, integrity)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn fetchContent.force(url, handleResult);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback(null, {\n\t\t\t\t\t\t\t\t\tentry: result.entry,\n\t\t\t\t\t\t\t\t\tcontent: result.content,\n\t\t\t\t\t\t\t\t\tstoreLock: result.storeLock\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfetchContent(url, handleResult);\n\t\t\t\t\t};\n\n\t\t\t\t\t/** @typedef {{ storeCache: boolean, storeLock: boolean, validUntil: number, etag: string | undefined, fresh: boolean }} FetchResultMeta */\n\t\t\t\t\t/** @typedef {FetchResultMeta & { location: string }} RedirectFetchResult */\n\t\t\t\t\t/** @typedef {FetchResultMeta & { entry: LockfileEntry, content: Buffer }} ContentFetchResult */\n\t\t\t\t\t/** @typedef {RedirectFetchResult | ContentFetchResult} FetchResult */\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} url URL\n\t\t\t\t\t * @param {FetchResult | RedirectFetchResult} cachedResult result from cache\n\t\t\t\t\t * @param {function((Error | null)=, FetchResult=): void} callback callback\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst fetchContentRaw = (url, cachedResult, callback) => {\n\t\t\t\t\t\tconst requestTime = Date.now();\n\t\t\t\t\t\tfetch(\n\t\t\t\t\t\t\tnew URL(url),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\"accept-encoding\": \"gzip, deflate, br\",\n\t\t\t\t\t\t\t\t\t\"user-agent\": \"webpack\",\n\t\t\t\t\t\t\t\t\t\"if-none-match\": cachedResult\n\t\t\t\t\t\t\t\t\t\t? cachedResult.etag || null\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tres => {\n\t\t\t\t\t\t\t\tconst etag = res.headers[\"etag\"];\n\t\t\t\t\t\t\t\tconst location = res.headers[\"location\"];\n\t\t\t\t\t\t\t\tconst cacheControl = res.headers[\"cache-control\"];\n\t\t\t\t\t\t\t\tconst { storeLock, storeCache, validUntil } = parseCacheControl(\n\t\t\t\t\t\t\t\t\tcacheControl,\n\t\t\t\t\t\t\t\t\trequestTime\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * @param {Partial<Pick<FetchResultMeta, \"fresh\">> & (Pick<RedirectFetchResult, \"location\"> | Pick<ContentFetchResult, \"content\" | \"entry\">)} partialResult result\n\t\t\t\t\t\t\t\t * @returns {void}\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tconst finishWith = partialResult => {\n\t\t\t\t\t\t\t\t\tif (\"location\" in partialResult) {\n\t\t\t\t\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t\t\t\t\t`GET ${url} [${res.statusCode}] -> ${partialResult.location}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogger.debug(\n\t\t\t\t\t\t\t\t\t\t\t`GET ${url} [${res.statusCode}] ${Math.ceil(\n\t\t\t\t\t\t\t\t\t\t\t\tpartialResult.content.length / 1024\n\t\t\t\t\t\t\t\t\t\t\t)} kB${!storeLock ? \" no-cache\" : \"\"}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst result = {\n\t\t\t\t\t\t\t\t\t\t...partialResult,\n\t\t\t\t\t\t\t\t\t\tfresh: true,\n\t\t\t\t\t\t\t\t\t\tstoreLock,\n\t\t\t\t\t\t\t\t\t\tstoreCache,\n\t\t\t\t\t\t\t\t\t\tvalidUntil,\n\t\t\t\t\t\t\t\t\t\tetag\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (!storeCache) {\n\t\t\t\t\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t\t\t\t\t`${url} can't be stored in cache, due to Cache-Control header: ${cacheControl}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcache.store(\n\t\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\t\t\t\tfresh: false\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} can't be stored in cache: ${err.message}`\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tlogger.debug(err.stack);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (res.statusCode === 304) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tcachedResult.validUntil < validUntil ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.storeLock !== storeLock ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.storeCache !== storeCache ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.etag !== etag\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn finishWith(cachedResult);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogger.debug(`GET ${url} [${res.statusCode}] (unchanged)`);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, {\n\t\t\t\t\t\t\t\t\t\t\t...cachedResult,\n\t\t\t\t\t\t\t\t\t\t\tfresh: true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tlocation &&\n\t\t\t\t\t\t\t\t\tres.statusCode >= 301 &&\n\t\t\t\t\t\t\t\t\tres.statusCode <= 308\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst result = {\n\t\t\t\t\t\t\t\t\t\tlocation: new URL(location, url).href\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!cachedResult ||\n\t\t\t\t\t\t\t\t\t\t!(\"location\" in cachedResult) ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.location !== result.location ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.validUntil < validUntil ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.storeLock !== storeLock ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.storeCache !== storeCache ||\n\t\t\t\t\t\t\t\t\t\tcachedResult.etag !== etag\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn finishWith(result);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogger.debug(`GET ${url} [${res.statusCode}] (unchanged)`);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, {\n\t\t\t\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\t\t\t\tfresh: true,\n\t\t\t\t\t\t\t\t\t\t\tstoreLock,\n\t\t\t\t\t\t\t\t\t\t\tstoreCache,\n\t\t\t\t\t\t\t\t\t\t\tvalidUntil,\n\t\t\t\t\t\t\t\t\t\t\tetag\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst contentType = res.headers[\"content-type\"] || \"\";\n\t\t\t\t\t\t\t\tconst bufferArr = [];\n\n\t\t\t\t\t\t\t\tconst contentEncoding = res.headers[\"content-encoding\"];\n\t\t\t\t\t\t\t\tlet stream = res;\n\t\t\t\t\t\t\t\tif (contentEncoding === \"gzip\") {\n\t\t\t\t\t\t\t\t\tstream = stream.pipe(createGunzip());\n\t\t\t\t\t\t\t\t} else if (contentEncoding === \"br\") {\n\t\t\t\t\t\t\t\t\tstream = stream.pipe(createBrotliDecompress());\n\t\t\t\t\t\t\t\t} else if (contentEncoding === \"deflate\") {\n\t\t\t\t\t\t\t\t\tstream = stream.pipe(createInflate());\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tstream.on(\"data\", chunk => {\n\t\t\t\t\t\t\t\t\tbufferArr.push(chunk);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tstream.on(\"end\", () => {\n\t\t\t\t\t\t\t\t\tif (!res.complete) {\n\t\t\t\t\t\t\t\t\t\tlogger.log(`GET ${url} [${res.statusCode}] (terminated)`);\n\t\t\t\t\t\t\t\t\t\treturn callback(new Error(`${url} request was terminated`));\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst content = Buffer.concat(bufferArr);\n\n\t\t\t\t\t\t\t\t\tif (res.statusCode !== 200) {\n\t\t\t\t\t\t\t\t\t\tlogger.log(`GET ${url} [${res.statusCode}]`);\n\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`${url} request status code = ${\n\t\t\t\t\t\t\t\t\t\t\t\t\tres.statusCode\n\t\t\t\t\t\t\t\t\t\t\t\t}\\n${content.toString(\"utf-8\")}`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst integrity = computeIntegrity(content);\n\t\t\t\t\t\t\t\t\tconst entry = { resolved: url, integrity, contentType };\n\n\t\t\t\t\t\t\t\t\tfinishWith({\n\t\t\t\t\t\t\t\t\t\tentry,\n\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t).on(\"error\", err => {\n\t\t\t\t\t\t\tlogger.log(`GET ${url} (error)`);\n\t\t\t\t\t\t\terr.message += `\\nwhile fetching ${url}`;\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tconst fetchContent = cachedWithKey(\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} url URL\n\t\t\t\t\t\t * @param {function((Error | null)=, { validUntil: number, etag?: string, entry: LockfileEntry, content: Buffer, fresh: boolean } | { validUntil: number, etag?: string, location: string, fresh: boolean }=): void} callback callback\n\t\t\t\t\t\t * @returns {void}\n\t\t\t\t\t\t */ (url, callback) => {\n\t\t\t\t\t\t\tcache.get(url, null, (err, cachedResult) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tif (cachedResult) {\n\t\t\t\t\t\t\t\t\tconst isValid = cachedResult.validUntil >= Date.now();\n\t\t\t\t\t\t\t\t\tif (isValid) return callback(null, cachedResult);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfetchContentRaw(url, cachedResult, callback);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(url, callback) => fetchContentRaw(url, undefined, callback)\n\t\t\t\t\t);\n\n\t\t\t\t\tconst isAllowed = uri => {\n\t\t\t\t\t\tfor (const allowed of allowedUris) {\n\t\t\t\t\t\t\tif (typeof allowed === \"string\") {\n\t\t\t\t\t\t\t\tif (uri.startsWith(allowed)) return true;\n\t\t\t\t\t\t\t} else if (typeof allowed === \"function\") {\n\t\t\t\t\t\t\t\tif (allowed(uri)) return true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (allowed.test(uri)) return true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t};\n\n\t\t\t\t\tconst getInfo = cachedWithKey(\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} url the url\n\t\t\t\t\t\t * @param {function((Error | null)=, { entry: LockfileEntry, content: Buffer }=): void} callback callback\n\t\t\t\t\t\t * @returns {void}\n\t\t\t\t\t\t */\n\t\t\t\t\t\t(url, callback) => {\n\t\t\t\t\t\t\tif (!isAllowed(url)) {\n\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t`${url} doesn't match the allowedUris policy. These URIs are allowed:\\n${allowedUris\n\t\t\t\t\t\t\t\t\t\t\t.map(uri => ` - ${uri}`)\n\t\t\t\t\t\t\t\t\t\t\t.join(\"\\n\")}`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgetLockfile((err, lockfile) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tconst entryOrString = lockfile.entries.get(url);\n\t\t\t\t\t\t\t\tif (!entryOrString) {\n\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`${url} has no lockfile entry and lockfile is frozen`\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresolveContent(url, null, (err, result) => {\n\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\tstoreResult(lockfile, url, result, callback);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof entryOrString === \"string\") {\n\t\t\t\t\t\t\t\t\tconst entryTag = entryOrString;\n\t\t\t\t\t\t\t\t\tresolveContent(url, null, (err, result) => {\n\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\tif (!result.storeLock || entryTag === \"ignore\")\n\t\t\t\t\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} used to have ${entryTag} lockfile entry and has content now, but lockfile is frozen`\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!upgrade) {\n\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} used to have ${entryTag} lockfile entry and has content now.\nThis should be reflected in the lockfile, so this lockfile entry must be upgraded, but upgrading is not enabled.\nRemove this line from the lockfile to force upgrading.`\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstoreResult(lockfile, url, result, callback);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet entry = entryOrString;\n\t\t\t\t\t\t\t\tconst doFetch = lockedContent => {\n\t\t\t\t\t\t\t\t\tresolveContent(url, entry.integrity, (err, result) => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tif (lockedContent) {\n\t\t\t\t\t\t\t\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`Upgrade request to ${url} failed: ${err.message}`\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tlogger.debug(err.stack);\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(null, {\n\t\t\t\t\t\t\t\t\t\t\t\t\tentry,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent: lockedContent\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!result.storeLock) {\n\t\t\t\t\t\t\t\t\t\t\t// When the lockfile entry should be no-cache\n\t\t\t\t\t\t\t\t\t\t\t// we need to update the lockfile\n\t\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} has a lockfile entry and is no-cache now, but lockfile is frozen\\nLockfile: ${entryToString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstoreResult(lockfile, url, result, callback);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!areLockfileEntriesEqual(result.entry, entry)) {\n\t\t\t\t\t\t\t\t\t\t\t// When the lockfile entry is outdated\n\t\t\t\t\t\t\t\t\t\t\t// we need to update the lockfile\n\t\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} has an outdated lockfile entry, but lockfile is frozen\\nLockfile: ${entryToString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\\nExpected: ${entryToString(result.entry)}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstoreResult(lockfile, url, result, callback);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!lockedContent && cacheLocation) {\n\t\t\t\t\t\t\t\t\t\t\t// When the lockfile cache content is missing\n\t\t\t\t\t\t\t\t\t\t\t// we need to update the lockfile\n\t\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${url} is missing content in the lockfile cache, but lockfile is frozen\\nLockfile: ${entryToString(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tstoreResult(lockfile, url, result, callback);\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn callback(null, result);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif (cacheLocation) {\n\t\t\t\t\t\t\t\t\t// When there is a lockfile cache\n\t\t\t\t\t\t\t\t\t// we read the content from there\n\t\t\t\t\t\t\t\t\tconst key = getCacheKey(entry.resolved);\n\t\t\t\t\t\t\t\t\tconst filePath = join(intermediateFs, cacheLocation, key);\n\t\t\t\t\t\t\t\t\tfs.readFile(filePath, (err, result) => {\n\t\t\t\t\t\t\t\t\t\tconst content = /** @type {Buffer} */ (result);\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\tif (err.code === \"ENOENT\") return doFetch();\n\t\t\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tconst continueWithCachedContent = result => {\n\t\t\t\t\t\t\t\t\t\t\tif (!upgrade) {\n\t\t\t\t\t\t\t\t\t\t\t\t// When not in upgrade mode, we accept the result from the lockfile cache\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(null, { entry, content });\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn doFetch(content);\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tif (!verifyIntegrity(content, entry.integrity)) {\n\t\t\t\t\t\t\t\t\t\t\tlet contentWithChangedEol;\n\t\t\t\t\t\t\t\t\t\t\tlet isEolChanged = false;\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\tcontentWithChangedEol = Buffer.from(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontent.toString(\"utf-8\").replace(/\\r\\n/g, \"\\n\")\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tisEolChanged = verifyIntegrity(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontentWithChangedEol,\n\t\t\t\t\t\t\t\t\t\t\t\t\tentry.integrity\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (isEolChanged) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (!warnedAboutEol) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst explainer = `Incorrect end of line sequence was detected in the lockfile cache.\nThe lockfile cache is protected by integrity checks, so any external modification will lead to a corrupted lockfile cache.\nWhen using git make sure to configure .gitattributes correctly for the lockfile cache:\n  **/*webpack.lock.data/** -text\nThis will avoid that the end of line sequence is changed by git on Windows.`;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogger.error(explainer);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogger.warn(explainer);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Lockfile cache will be automatically fixed now, but when lockfile is frozen this would result in an error.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\twarnedAboutEol = true;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif (!frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \"fix\" the end of line sequence of the lockfile content\n\t\t\t\t\t\t\t\t\t\t\t\t\tlogger.log(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${filePath} fixed end of line sequence (\\\\r\\\\n instead of \\\\n).`\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tintermediateFs.writeFile(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontentWithChangedEol,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinueWithCachedContent(contentWithChangedEol);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (frozen) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn callback(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry.resolved\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} integrity mismatch, expected content with integrity ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry.integrity\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} but got ${computeIntegrity(content)}.\nLockfile corrupted (${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisEolChanged\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"end of line sequence was unexpectedly changed\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"incorrectly merged? changed by other tools?\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}).\nRun build with un-frozen lockfile to automatically fix lockfile.`\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t// \"fix\" the lockfile entry to the correct integrity\n\t\t\t\t\t\t\t\t\t\t\t\t// the content has priority over the integrity value\n\t\t\t\t\t\t\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\t\t\t\t\t\t\tintegrity: computeIntegrity(content)\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\tstoreLockEntry(lockfile, url, entry);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcontinueWithCachedContent(result);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdoFetch();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tconst respondWithUrlModule = (url, resourceData, callback) => {\n\t\t\t\t\t\tgetInfo(url.href, (err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tresourceData.resource = url.href;\n\t\t\t\t\t\t\tresourceData.path = url.origin + url.pathname;\n\t\t\t\t\t\t\tresourceData.query = url.search;\n\t\t\t\t\t\t\tresourceData.fragment = url.hash;\n\t\t\t\t\t\t\tresourceData.context = new URL(\n\t\t\t\t\t\t\t\t\".\",\n\t\t\t\t\t\t\t\tresult.entry.resolved\n\t\t\t\t\t\t\t).href.slice(0, -1);\n\t\t\t\t\t\t\tresourceData.data.mimetype = result.entry.contentType;\n\t\t\t\t\t\t\tcallback(null, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tnormalModuleFactory.hooks.resolveForScheme\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.tapAsync(\n\t\t\t\t\t\t\t\"HttpUriPlugin\",\n\t\t\t\t\t\t\t(resourceData, resolveData, callback) => {\n\t\t\t\t\t\t\t\trespondWithUrlModule(\n\t\t\t\t\t\t\t\t\tnew URL(resourceData.resource),\n\t\t\t\t\t\t\t\t\tresourceData,\n\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\tnormalModuleFactory.hooks.resolveInScheme\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.tapAsync(\"HttpUriPlugin\", (resourceData, data, callback) => {\n\t\t\t\t\t\t\t// Only handle relative urls (./xxx, ../xxx, /xxx, //xxx)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdata.dependencyType !== \"url\" &&\n\t\t\t\t\t\t\t\t!/^\\.{0,2}\\//.test(resourceData.resource)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trespondWithUrlModule(\n\t\t\t\t\t\t\t\tnew URL(resourceData.resource, data.context + \"/\"),\n\t\t\t\t\t\t\t\tresourceData,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\t\t\t\t\thooks.readResourceForScheme\n\t\t\t\t\t\t.for(scheme)\n\t\t\t\t\t\t.tapAsync(\"HttpUriPlugin\", (resource, module, callback) => {\n\t\t\t\t\t\t\treturn getInfo(resource, (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\tmodule.buildInfo.resourceIntegrity = result.entry.integrity;\n\t\t\t\t\t\t\t\tcallback(null, result.content);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\thooks.needBuild.tapAsync(\n\t\t\t\t\t\t\"HttpUriPlugin\",\n\t\t\t\t\t\t(module, context, callback) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.resource &&\n\t\t\t\t\t\t\t\tmodule.resource.startsWith(`${scheme}://`)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tgetInfo(module.resource, (err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tresult.entry.integrity !==\n\t\t\t\t\t\t\t\t\t\tmodule.buildInfo.resourceIntegrity\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn callback(null, true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcompilation.hooks.finishModules.tapAsync(\n\t\t\t\t\t\"HttpUriPlugin\",\n\t\t\t\t\t(modules, callback) => {\n\t\t\t\t\t\tif (!lockfileUpdates) return callback();\n\t\t\t\t\t\tconst ext = extname(lockfileLocation);\n\t\t\t\t\t\tconst tempFile = join(\n\t\t\t\t\t\t\tintermediateFs,\n\t\t\t\t\t\t\tdirname(intermediateFs, lockfileLocation),\n\t\t\t\t\t\t\t`.${basename(lockfileLocation, ext)}.${\n\t\t\t\t\t\t\t\t(Math.random() * 10000) | 0\n\t\t\t\t\t\t\t}${ext}`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst writeDone = () => {\n\t\t\t\t\t\t\tconst nextOperation = inProgressWrite.shift();\n\t\t\t\t\t\t\tif (nextOperation) {\n\t\t\t\t\t\t\t\tnextOperation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinProgressWrite = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst runWrite = () => {\n\t\t\t\t\t\t\tintermediateFs.readFile(lockfileLocation, (err, buffer) => {\n\t\t\t\t\t\t\t\tif (err && err.code !== \"ENOENT\") {\n\t\t\t\t\t\t\t\t\twriteDone();\n\t\t\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst lockfile = buffer\n\t\t\t\t\t\t\t\t\t? Lockfile.parse(buffer.toString(\"utf-8\"))\n\t\t\t\t\t\t\t\t\t: new Lockfile();\n\t\t\t\t\t\t\t\tfor (const [key, value] of lockfileUpdates) {\n\t\t\t\t\t\t\t\t\tlockfile.entries.set(key, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tintermediateFs.writeFile(tempFile, lockfile.toString(), err => {\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\twriteDone();\n\t\t\t\t\t\t\t\t\t\treturn intermediateFs.unlink(tempFile, () => callback(err));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tintermediateFs.rename(tempFile, lockfileLocation, err => {\n\t\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\t\twriteDone();\n\t\t\t\t\t\t\t\t\t\t\treturn intermediateFs.unlink(tempFile, () =>\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(err)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twriteDone();\n\t\t\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (inProgressWrite) {\n\t\t\t\t\t\t\tinProgressWrite.push(runWrite);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinProgressWrite = [];\n\t\t\t\t\t\t\trunWrite();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = HttpUriPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}