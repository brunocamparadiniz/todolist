{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource,\n  RawSource = _require.RawSource;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar Template = require(\"../Template\");\nvar _require2 = require(\"./JavascriptModulesPlugin\"),\n  getChunkFilenameTemplate = _require2.getChunkFilenameTemplate,\n  getCompilationHooks = _require2.getCompilationHooks;\nvar _require3 = require(\"./StartupHelpers\"),\n  generateEntryStartup = _require3.generateEntryStartup,\n  updateHashForEntryStartup = _require3.updateHashForEntryStartup;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar CommonJsChunkFormatPlugin = /*#__PURE__*/function () {\n  function CommonJsChunkFormatPlugin() {\n    _classCallCheck(this, CommonJsChunkFormatPlugin);\n  }\n  _createClass(CommonJsChunkFormatPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.thisCompilation.tap(\"CommonJsChunkFormatPlugin\", function (compilation) {\n        compilation.hooks.additionalChunkRuntimeRequirements.tap(\"CommonJsChunkLoadingPlugin\", function (chunk, set, _ref) {\n          var chunkGraph = _ref.chunkGraph;\n          if (chunk.hasRuntime()) return;\n          if (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n            set.add(RuntimeGlobals.require);\n            set.add(RuntimeGlobals.startupEntrypoint);\n            set.add(RuntimeGlobals.externalInstallChunk);\n          }\n        });\n        var hooks = getCompilationHooks(compilation);\n        hooks.renderChunk.tap(\"CommonJsChunkFormatPlugin\", function (modules, renderContext) {\n          var chunk = renderContext.chunk,\n            chunkGraph = renderContext.chunkGraph,\n            runtimeTemplate = renderContext.runtimeTemplate;\n          var source = new ConcatSource();\n          source.add(\"exports.id = \".concat(JSON.stringify(chunk.id), \";\\n\"));\n          source.add(\"exports.ids = \".concat(JSON.stringify(chunk.ids), \";\\n\"));\n          source.add(\"exports.modules = \");\n          source.add(modules);\n          source.add(\";\\n\");\n          var runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n          if (runtimeModules.length > 0) {\n            source.add(\"exports.runtime =\\n\");\n            source.add(Template.renderChunkRuntimeModules(runtimeModules, renderContext));\n          }\n          var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n          if (entries.length > 0) {\n            var runtimeChunk = entries[0][1].getRuntimeChunk();\n            var currentOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n              chunk: chunk,\n              contentHashType: \"javascript\"\n            }).split(\"/\");\n            var runtimeOutputName = compilation.getPath(getChunkFilenameTemplate(runtimeChunk, compilation.outputOptions), {\n              chunk: runtimeChunk,\n              contentHashType: \"javascript\"\n            }).split(\"/\");\n\n            // remove filename, we only need the directory\n            currentOutputName.pop();\n\n            // remove common parts\n            while (currentOutputName.length > 0 && runtimeOutputName.length > 0 && currentOutputName[0] === runtimeOutputName[0]) {\n              currentOutputName.shift();\n              runtimeOutputName.shift();\n            }\n\n            // create final path\n            var runtimePath = (currentOutputName.length > 0 ? \"../\".repeat(currentOutputName.length) : \"./\") + runtimeOutputName.join(\"/\");\n            var entrySource = new ConcatSource();\n            entrySource.add(\"(\".concat(runtimeTemplate.supportsArrowFunction() ? \"() => \" : \"function() \", \"{\\n\"));\n            entrySource.add(\"var exports = {};\\n\");\n            entrySource.add(source);\n            entrySource.add(\";\\n\\n// load runtime\\n\");\n            entrySource.add(\"var __webpack_require__ = require(\".concat(JSON.stringify(runtimePath), \");\\n\"));\n            entrySource.add(\"\".concat(RuntimeGlobals.externalInstallChunk, \"(exports);\\n\"));\n            var startupSource = new RawSource(generateEntryStartup(chunkGraph, runtimeTemplate, entries, chunk, false));\n            entrySource.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], _objectSpread(_objectSpread({}, renderContext), {}, {\n              inlined: false\n            })));\n            entrySource.add(\"\\n})()\");\n            return entrySource;\n          }\n          return source;\n        });\n        hooks.chunkHash.tap(\"CommonJsChunkFormatPlugin\", function (chunk, hash, _ref2) {\n          var chunkGraph = _ref2.chunkGraph;\n          if (chunk.hasRuntime()) return;\n          hash.update(\"CommonJsChunkFormatPlugin\");\n          hash.update(\"1\");\n          var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n          updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n        });\n      });\n    }\n  }]);\n  return CommonJsChunkFormatPlugin;\n}();\nmodule.exports = CommonJsChunkFormatPlugin;","map":{"version":3,"names":["require","ConcatSource","RawSource","RuntimeGlobals","Template","getChunkFilenameTemplate","getCompilationHooks","generateEntryStartup","updateHashForEntryStartup","CommonJsChunkFormatPlugin","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","chunkGraph","hasRuntime","getNumberOfEntryModules","add","startupEntrypoint","externalInstallChunk","renderChunk","modules","renderContext","runtimeTemplate","source","JSON","stringify","id","ids","runtimeModules","getChunkRuntimeModulesInOrder","length","renderChunkRuntimeModules","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtimeChunk","getRuntimeChunk","currentOutputName","getPath","outputOptions","contentHashType","split","runtimeOutputName","pop","shift","runtimePath","repeat","join","entrySource","supportsArrowFunction","startupSource","renderStartup","call","inlined","chunkHash","hash","update","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/javascript/CommonJsChunkFormatPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst {\n\tgetChunkFilenameTemplate,\n\tgetCompilationHooks\n} = require(\"./JavascriptModulesPlugin\");\nconst {\n\tgenerateEntryStartup,\n\tupdateHashForEntryStartup\n} = require(\"./StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass CommonJsChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"CommonJsChunkLoadingPlugin\",\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.startupEntrypoint);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.externalInstallChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tsource.add(`exports.id = ${JSON.stringify(chunk.id)};\\n`);\n\t\t\t\t\t\tsource.add(`exports.ids = ${JSON.stringify(chunk.ids)};\\n`);\n\t\t\t\t\t\tsource.add(`exports.modules = `);\n\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\tsource.add(\";\\n\");\n\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\tsource.add(\"exports.runtime =\\n\");\n\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\tTemplate.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\tconst runtimeChunk = entries[0][1].getRuntimeChunk();\n\t\t\t\t\t\t\tconst currentOutputName = compilation\n\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.split(\"/\");\n\t\t\t\t\t\t\tconst runtimeOutputName = compilation\n\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(\n\t\t\t\t\t\t\t\t\t\truntimeChunk,\n\t\t\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchunk: runtimeChunk,\n\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t// remove filename, we only need the directory\n\t\t\t\t\t\t\tcurrentOutputName.pop();\n\n\t\t\t\t\t\t\t// remove common parts\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\tcurrentOutputName.length > 0 &&\n\t\t\t\t\t\t\t\truntimeOutputName.length > 0 &&\n\t\t\t\t\t\t\t\tcurrentOutputName[0] === runtimeOutputName[0]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcurrentOutputName.shift();\n\t\t\t\t\t\t\t\truntimeOutputName.shift();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create final path\n\t\t\t\t\t\t\tconst runtimePath =\n\t\t\t\t\t\t\t\t(currentOutputName.length > 0\n\t\t\t\t\t\t\t\t\t? \"../\".repeat(currentOutputName.length)\n\t\t\t\t\t\t\t\t\t: \"./\") + runtimeOutputName.join(\"/\");\n\n\t\t\t\t\t\t\tconst entrySource = new ConcatSource();\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`(${\n\t\t\t\t\t\t\t\t\truntimeTemplate.supportsArrowFunction()\n\t\t\t\t\t\t\t\t\t\t? \"() => \"\n\t\t\t\t\t\t\t\t\t\t: \"function() \"\n\t\t\t\t\t\t\t\t}{\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\"var exports = {};\\n\");\n\t\t\t\t\t\t\tentrySource.add(source);\n\t\t\t\t\t\t\tentrySource.add(\";\\n\\n// load runtime\\n\");\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`var __webpack_require__ = require(${JSON.stringify(\n\t\t\t\t\t\t\t\t\truntimePath\n\t\t\t\t\t\t\t\t)});\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk}(exports);\\n`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst startupSource = new RawSource(\n\t\t\t\t\t\t\t\tgenerateEntryStartup(\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\truntimeTemplate,\n\t\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tentrySource.add(\"\\n})()\");\n\t\t\t\t\t\t\treturn entrySource;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"CommonJsChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\"CommonJsChunkFormatPlugin\");\n\t\t\t\t\t\thash.update(\"1\");\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = CommonJsChunkFormatPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}