{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../util/comparators\"),\n  compareChunksNatural = _require.compareChunksNatural;\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar _require2 = require(\"./IdHelpers\"),\n  assignAscendingChunkIds = _require2.assignAscendingChunkIds;\n\n/** @typedef {import(\"../../declarations/plugins/ids/OccurrenceChunkIdsPlugin\").OccurrenceChunkIdsPluginOptions} OccurrenceChunkIdsPluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.json\");\n}, {\n  name: \"Occurrence Order Chunk Ids Plugin\",\n  baseDataPath: \"options\"\n});\nvar OccurrenceChunkIdsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {OccurrenceChunkIdsPluginOptions=} options options object\n   */\n  function OccurrenceChunkIdsPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, OccurrenceChunkIdsPlugin);\n    validate(options);\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(OccurrenceChunkIdsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var prioritiseInitial = this.options.prioritiseInitial;\n      compiler.hooks.compilation.tap(\"OccurrenceChunkIdsPlugin\", function (compilation) {\n        compilation.hooks.chunkIds.tap(\"OccurrenceChunkIdsPlugin\", function (chunks) {\n          var chunkGraph = compilation.chunkGraph;\n\n          /** @type {Map<Chunk, number>} */\n          var occursInInitialChunksMap = new Map();\n          var compareNatural = compareChunksNatural(chunkGraph);\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var c = _step.value;\n              var occurs = 0;\n              var _iterator2 = _createForOfIteratorHelper(c.groupsIterable),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var chunkGroup = _step2.value;\n                  var _iterator3 = _createForOfIteratorHelper(chunkGroup.parentsIterable),\n                    _step3;\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var parent = _step3.value;\n                      if (parent.isInitial()) occurs++;\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              occursInInitialChunksMap.set(c, occurs);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var chunksInOccurrenceOrder = Array.from(chunks).sort(function (a, b) {\n            if (prioritiseInitial) {\n              var aEntryOccurs = occursInInitialChunksMap.get(a);\n              var bEntryOccurs = occursInInitialChunksMap.get(b);\n              if (aEntryOccurs > bEntryOccurs) return -1;\n              if (aEntryOccurs < bEntryOccurs) return 1;\n            }\n            var aOccurs = a.getNumberOfGroups();\n            var bOccurs = b.getNumberOfGroups();\n            if (aOccurs > bOccurs) return -1;\n            if (aOccurs < bOccurs) return 1;\n            return compareNatural(a, b);\n          });\n          assignAscendingChunkIds(chunksInOccurrenceOrder, compilation);\n        });\n      });\n    }\n  }]);\n  return OccurrenceChunkIdsPlugin;\n}();\nmodule.exports = OccurrenceChunkIdsPlugin;","map":{"version":3,"names":["require","compareChunksNatural","createSchemaValidation","assignAscendingChunkIds","validate","name","baseDataPath","OccurrenceChunkIdsPlugin","options","compiler","prioritiseInitial","hooks","compilation","tap","chunkIds","chunks","chunkGraph","occursInInitialChunksMap","Map","compareNatural","c","occurs","groupsIterable","chunkGroup","parentsIterable","parent","isInitial","set","chunksInOccurrenceOrder","Array","from","sort","a","b","aEntryOccurs","get","bEntryOccurs","aOccurs","getNumberOfGroups","bOccurs","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ids/OccurrenceChunkIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareChunksNatural } = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst { assignAscendingChunkIds } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../../declarations/plugins/ids/OccurrenceChunkIdsPlugin\").OccurrenceChunkIdsPluginOptions} OccurrenceChunkIdsPluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/ids/OccurrenceChunkIdsPlugin.json\"),\n\t{\n\t\tname: \"Occurrence Order Chunk Ids Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass OccurrenceChunkIdsPlugin {\n\t/**\n\t * @param {OccurrenceChunkIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\"OccurrenceChunkIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.chunkIds.tap(\"OccurrenceChunkIdsPlugin\", chunks => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\n\t\t\t\t/** @type {Map<Chunk, number>} */\n\t\t\t\tconst occursInInitialChunksMap = new Map();\n\n\t\t\t\tconst compareNatural = compareChunksNatural(chunkGraph);\n\n\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t}\n\n\t\t\t\tconst chunksInOccurrenceOrder = Array.from(chunks).sort((a, b) => {\n\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t}\n\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\treturn compareNatural(a, b);\n\t\t\t\t});\n\t\t\t\tassignAscendingChunkIds(chunksInOccurrenceOrder, compilation);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = OccurrenceChunkIdsPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}