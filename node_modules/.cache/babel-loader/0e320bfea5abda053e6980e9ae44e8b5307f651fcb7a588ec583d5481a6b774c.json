{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"tapable\"),\n  AsyncSeriesBailHook = _require.AsyncSeriesBailHook,\n  AsyncSeriesHook = _require.AsyncSeriesHook,\n  SyncHook = _require.SyncHook;\nvar createInnerContext = require(\"./createInnerContext\");\nvar _require2 = require(\"./util/identifier\"),\n  parseIdentifier = _require2.parseIdentifier;\nvar _require3 = require(\"./util/path\"),\n  _normalize = _require3.normalize,\n  _join = _require3.cachedJoin,\n  getType = _require3.getType,\n  PathType = _require3.PathType;\n\n/** @typedef {import(\"./ResolverFactory\").ResolveOptions} ResolveOptions */\n\n/**\n * @typedef {Object} FileSystemStats\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} FileSystemDirent\n * @property {Buffer | string} name\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} PossibleFileSystemError\n * @property {string=} code\n * @property {number=} errno\n * @property {string=} path\n * @property {string=} syscall\n */\n\n/**\n * @template T\n * @callback FileSystemCallback\n * @param {PossibleFileSystemError & Error | null | undefined} err\n * @param {T=} result\n */\n\n/**\n * @typedef {Object} FileSystem\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readFile\n * @property {(function(string, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void) & function(string, object, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void} readdir\n * @property {((function(string, FileSystemCallback<object>): void) & function(string, object, FileSystemCallback<object>): void)=} readJson\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readlink\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void=} lstat\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} stat\n */\n\n/**\n * @typedef {Object} SyncFileSystem\n * @property {function(string, object=): Buffer | string} readFileSync\n * @property {function(string, object=): (Buffer | string)[] | FileSystemDirent[]} readdirSync\n * @property {(function(string, object=): object)=} readJsonSync\n * @property {function(string, object=): Buffer | string} readlinkSync\n * @property {function(string, object=): FileSystemStats=} lstatSync\n * @property {function(string, object=): FileSystemStats} statSync\n */\n\n/**\n * @typedef {Object} ParsedIdentifier\n * @property {string} request\n * @property {string} query\n * @property {string} fragment\n * @property {boolean} directory\n * @property {boolean} module\n * @property {boolean} file\n * @property {boolean} internal\n */\n\n/**\n * @typedef {Object} BaseResolveRequest\n * @property {string | false} path\n * @property {string=} descriptionFilePath\n * @property {string=} descriptionFileRoot\n * @property {object=} descriptionFileData\n * @property {string=} relativePath\n * @property {boolean=} ignoreSymlinks\n * @property {boolean=} fullySpecified\n */\n\n/** @typedef {BaseResolveRequest & Partial<ParsedIdentifier>} ResolveRequest */\n\n/**\n * String with special formatting\n * @typedef {string} StackEntry\n */\n\n/** @template T @typedef {{ add: (T) => void }} WriteOnlySet */\n\n/**\n * Resolve context\n * @typedef {Object} ResolveContext\n * @property {WriteOnlySet<string>=} contextDependencies\n * @property {WriteOnlySet<string>=} fileDependencies files that was found on file system\n * @property {WriteOnlySet<string>=} missingDependencies dependencies that was not found on file system\n * @property {Set<StackEntry>=} stack set of hooks' calls. For instance, `resolve → parsedResolve → describedResolve`,\n * @property {(function(string): void)=} log log function\n * @property {(function (ResolveRequest): void)=} yield yield result, if provided plugins can return several results\n */\n\n/** @typedef {AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null>} ResolveStepHook */\n\n/**\n * @param {string} str input string\n * @returns {string} in camel case\n */\nfunction toCamelCase(str) {\n  return str.replace(/-([a-z])/g, function (str) {\n    return str.substr(1).toUpperCase();\n  });\n}\nvar Resolver = /*#__PURE__*/function () {\n  /**\n   * @param {FileSystem} fileSystem a filesystem\n   * @param {ResolveOptions} options options\n   */\n  function Resolver(fileSystem, options) {\n    _classCallCheck(this, Resolver);\n    this.fileSystem = fileSystem;\n    this.options = options;\n    this.hooks = {\n      /** @type {SyncHook<[ResolveStepHook, ResolveRequest], void>} */\n      resolveStep: new SyncHook([\"hook\", \"request\"], \"resolveStep\"),\n      /** @type {SyncHook<[ResolveRequest, Error]>} */\n      noResolve: new SyncHook([\"request\", \"error\"], \"noResolve\"),\n      /** @type {ResolveStepHook} */\n      resolve: new AsyncSeriesBailHook([\"request\", \"resolveContext\"], \"resolve\"),\n      /** @type {AsyncSeriesHook<[ResolveRequest, ResolveContext]>} */\n      result: new AsyncSeriesHook([\"result\", \"resolveContext\"], \"result\")\n    };\n  }\n\n  /**\n   * @param {string | ResolveStepHook} name hook name or hook itself\n   * @returns {ResolveStepHook} the hook\n   */\n  _createClass(Resolver, [{\n    key: \"ensureHook\",\n    value: function ensureHook(name) {\n      if (typeof name !== \"string\") {\n        return name;\n      }\n      name = toCamelCase(name);\n      if (/^before/.test(name)) {\n        return (/** @type {ResolveStepHook} */this.ensureHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n            stage: -10\n          })\n        );\n      }\n      if (/^after/.test(name)) {\n        return (/** @type {ResolveStepHook} */this.ensureHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n            stage: 10\n          })\n        );\n      }\n      var hook = this.hooks[name];\n      if (!hook) {\n        return this.hooks[name] = new AsyncSeriesBailHook([\"request\", \"resolveContext\"], name);\n      }\n      return hook;\n    }\n\n    /**\n     * @param {string | ResolveStepHook} name hook name or hook itself\n     * @returns {ResolveStepHook} the hook\n     */\n  }, {\n    key: \"getHook\",\n    value: function getHook(name) {\n      if (typeof name !== \"string\") {\n        return name;\n      }\n      name = toCamelCase(name);\n      if (/^before/.test(name)) {\n        return (/** @type {ResolveStepHook} */this.getHook(name[6].toLowerCase() + name.substr(7)).withOptions({\n            stage: -10\n          })\n        );\n      }\n      if (/^after/.test(name)) {\n        return (/** @type {ResolveStepHook} */this.getHook(name[5].toLowerCase() + name.substr(6)).withOptions({\n            stage: 10\n          })\n        );\n      }\n      var hook = this.hooks[name];\n      if (!hook) {\n        throw new Error(\"Hook \".concat(name, \" doesn't exist\"));\n      }\n      return hook;\n    }\n\n    /**\n     * @param {object} context context information object\n     * @param {string} path context path\n     * @param {string} request request string\n     * @returns {string | false} result\n     */\n  }, {\n    key: \"resolveSync\",\n    value: function resolveSync(context, path, request) {\n      /** @type {Error | null | undefined} */\n      var err = undefined;\n      /** @type {string | false | undefined} */\n      var result = undefined;\n      var sync = false;\n      this.resolve(context, path, request, {}, function (e, r) {\n        err = e;\n        result = r;\n        sync = true;\n      });\n      if (!sync) {\n        throw new Error(\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\");\n      }\n      if (err) throw err;\n      if (result === undefined) throw new Error(\"No result\");\n      return result;\n    }\n\n    /**\n     * @param {object} context context information object\n     * @param {string} path context path\n     * @param {string} request request string\n     * @param {ResolveContext} resolveContext resolve context\n     * @param {function(Error | null, (string|false)=, ResolveRequest=): void} callback callback function\n     * @returns {void}\n     */\n  }, {\n    key: \"resolve\",\n    value: function resolve(context, path, request, resolveContext, callback) {\n      var _this = this;\n      if (!context || typeof context !== \"object\") return callback(new Error(\"context argument is not an object\"));\n      if (typeof path !== \"string\") return callback(new Error(\"path argument is not a string\"));\n      if (typeof request !== \"string\") return callback(new Error(\"request argument is not a string\"));\n      if (!resolveContext) return callback(new Error(\"resolveContext argument is not set\"));\n      var obj = {\n        context: context,\n        path: path,\n        request: request\n      };\n      var yield_;\n      var yieldCalled = false;\n      var finishYield;\n      if (typeof resolveContext.yield === \"function\") {\n        var old = resolveContext.yield;\n        yield_ = function yield_(obj) {\n          old(obj);\n          yieldCalled = true;\n        };\n        finishYield = function finishYield(result) {\n          if (result) yield_(result);\n          callback(null);\n        };\n      }\n      var message = \"resolve '\".concat(request, \"' in '\").concat(path, \"'\");\n      var finishResolved = function finishResolved(result) {\n        return callback(null, result.path === false ? false : \"\".concat(result.path.replace(/#/g, \"\\0#\")).concat(result.query ? result.query.replace(/#/g, \"\\0#\") : \"\").concat(result.fragment || \"\"), result);\n      };\n      var finishWithoutResolve = function finishWithoutResolve(log) {\n        /**\n         * @type {Error & {details?: string}}\n         */\n        var error = new Error(\"Can't \" + message);\n        error.details = log.join(\"\\n\");\n        _this.hooks.noResolve.call(obj, error);\n        return callback(error);\n      };\n      if (resolveContext.log) {\n        // We need log anyway to capture it in case of an error\n        var parentLog = resolveContext.log;\n        var _log = [];\n        return this.doResolve(this.hooks.resolve, obj, message, {\n          log: function log(msg) {\n            parentLog(msg);\n            _log.push(msg);\n          },\n          yield: yield_,\n          fileDependencies: resolveContext.fileDependencies,\n          contextDependencies: resolveContext.contextDependencies,\n          missingDependencies: resolveContext.missingDependencies,\n          stack: resolveContext.stack\n        }, function (err, result) {\n          if (err) return callback(err);\n          if (yieldCalled || result && yield_) return finishYield(result);\n          if (result) return finishResolved(result);\n          return finishWithoutResolve(_log);\n        });\n      } else {\n        // Try to resolve assuming there is no error\n        // We don't log stuff in this case\n        return this.doResolve(this.hooks.resolve, obj, message, {\n          log: undefined,\n          yield: yield_,\n          fileDependencies: resolveContext.fileDependencies,\n          contextDependencies: resolveContext.contextDependencies,\n          missingDependencies: resolveContext.missingDependencies,\n          stack: resolveContext.stack\n        }, function (err, result) {\n          if (err) return callback(err);\n          if (yieldCalled || result && yield_) return finishYield(result);\n          if (result) return finishResolved(result);\n\n          // log is missing for the error details\n          // so we redo the resolving for the log info\n          // this is more expensive to the success case\n          // is assumed by default\n\n          var _log2 = [];\n          return _this.doResolve(_this.hooks.resolve, obj, message, {\n            log: function log(msg) {\n              return _log2.push(msg);\n            },\n            yield: yield_,\n            stack: resolveContext.stack\n          }, function (err, result) {\n            if (err) return callback(err);\n\n            // In a case that there is a race condition and yield will be called\n            if (yieldCalled || result && yield_) return finishYield(result);\n            return finishWithoutResolve(_log2);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"doResolve\",\n    value: function doResolve(hook, request, message, resolveContext, callback) {\n      var stackEntry = Resolver.createStackEntry(hook, request);\n      var newStack;\n      if (resolveContext.stack) {\n        newStack = new Set(resolveContext.stack);\n        if (resolveContext.stack.has(stackEntry)) {\n          /**\n           * Prevent recursion\n           * @type {Error & {recursion?: boolean}}\n           */\n          var recursionError = new Error(\"Recursion in resolving\\nStack:\\n  \" + Array.from(newStack).join(\"\\n  \"));\n          recursionError.recursion = true;\n          if (resolveContext.log) resolveContext.log(\"abort resolving because of recursion\");\n          return callback(recursionError);\n        }\n        newStack.add(stackEntry);\n      } else {\n        newStack = new Set([stackEntry]);\n      }\n      this.hooks.resolveStep.call(hook, request);\n      if (hook.isUsed()) {\n        var innerContext = createInnerContext({\n          log: resolveContext.log,\n          yield: resolveContext.yield,\n          fileDependencies: resolveContext.fileDependencies,\n          contextDependencies: resolveContext.contextDependencies,\n          missingDependencies: resolveContext.missingDependencies,\n          stack: newStack\n        }, message);\n        return hook.callAsync(request, innerContext, function (err, result) {\n          if (err) return callback(err);\n          if (result) return callback(null, result);\n          callback();\n        });\n      } else {\n        callback();\n      }\n    }\n\n    /**\n     * @param {string} identifier identifier\n     * @returns {ParsedIdentifier} parsed identifier\n     */\n  }, {\n    key: \"parse\",\n    value: function parse(identifier) {\n      var part = {\n        request: \"\",\n        query: \"\",\n        fragment: \"\",\n        module: false,\n        directory: false,\n        file: false,\n        internal: false\n      };\n      var parsedIdentifier = parseIdentifier(identifier);\n      if (!parsedIdentifier) return part;\n      var _parsedIdentifier = _slicedToArray(parsedIdentifier, 3);\n      part.request = _parsedIdentifier[0];\n      part.query = _parsedIdentifier[1];\n      part.fragment = _parsedIdentifier[2];\n      if (part.request.length > 0) {\n        part.internal = this.isPrivate(identifier);\n        part.module = this.isModule(part.request);\n        part.directory = this.isDirectory(part.request);\n        if (part.directory) {\n          part.request = part.request.substr(0, part.request.length - 1);\n        }\n      }\n      return part;\n    }\n  }, {\n    key: \"isModule\",\n    value: function isModule(path) {\n      return getType(path) === PathType.Normal;\n    }\n  }, {\n    key: \"isPrivate\",\n    value: function isPrivate(path) {\n      return getType(path) === PathType.Internal;\n    }\n\n    /**\n     * @param {string} path a path\n     * @returns {boolean} true, if the path is a directory path\n     */\n  }, {\n    key: \"isDirectory\",\n    value: function isDirectory(path) {\n      return path.endsWith(\"/\");\n    }\n  }, {\n    key: \"join\",\n    value: function join(path, request) {\n      return _join(path, request);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(path) {\n      return _normalize(path);\n    }\n  }], [{\n    key: \"createStackEntry\",\n    value:\n    /**\n     * @param {ResolveStepHook} hook hook\n     * @param {ResolveRequest} request request\n     * @returns {StackEntry} stack entry\n     */\n    function createStackEntry(hook, request) {\n      return hook.name + \": (\" + request.path + \") \" + (request.request || \"\") + (request.query || \"\") + (request.fragment || \"\") + (request.directory ? \" directory\" : \"\") + (request.module ? \" module\" : \"\");\n    }\n  }]);\n  return Resolver;\n}();\nmodule.exports = Resolver;","map":{"version":3,"names":["require","AsyncSeriesBailHook","AsyncSeriesHook","SyncHook","createInnerContext","parseIdentifier","normalize","join","cachedJoin","getType","PathType","toCamelCase","str","replace","substr","toUpperCase","Resolver","fileSystem","options","hooks","resolveStep","noResolve","resolve","result","name","test","ensureHook","toLowerCase","withOptions","stage","hook","getHook","Error","context","path","request","err","undefined","sync","e","r","resolveContext","callback","obj","yield_","yieldCalled","finishYield","yield","old","message","finishResolved","query","fragment","finishWithoutResolve","log","error","details","call","parentLog","doResolve","msg","push","fileDependencies","contextDependencies","missingDependencies","stack","stackEntry","createStackEntry","newStack","Set","has","recursionError","Array","from","recursion","add","isUsed","innerContext","callAsync","identifier","part","module","directory","file","internal","parsedIdentifier","length","isPrivate","isModule","isDirectory","Normal","Internal","endsWith","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/Resolver.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { AsyncSeriesBailHook, AsyncSeriesHook, SyncHook } = require(\"tapable\");\nconst createInnerContext = require(\"./createInnerContext\");\nconst { parseIdentifier } = require(\"./util/identifier\");\nconst {\n\tnormalize,\n\tcachedJoin: join,\n\tgetType,\n\tPathType\n} = require(\"./util/path\");\n\n/** @typedef {import(\"./ResolverFactory\").ResolveOptions} ResolveOptions */\n\n/**\n * @typedef {Object} FileSystemStats\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} FileSystemDirent\n * @property {Buffer | string} name\n * @property {function(): boolean} isDirectory\n * @property {function(): boolean} isFile\n */\n\n/**\n * @typedef {Object} PossibleFileSystemError\n * @property {string=} code\n * @property {number=} errno\n * @property {string=} path\n * @property {string=} syscall\n */\n\n/**\n * @template T\n * @callback FileSystemCallback\n * @param {PossibleFileSystemError & Error | null | undefined} err\n * @param {T=} result\n */\n\n/**\n * @typedef {Object} FileSystem\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readFile\n * @property {(function(string, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void) & function(string, object, FileSystemCallback<(Buffer | string)[] | FileSystemDirent[]>): void} readdir\n * @property {((function(string, FileSystemCallback<object>): void) & function(string, object, FileSystemCallback<object>): void)=} readJson\n * @property {(function(string, FileSystemCallback<Buffer | string>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} readlink\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void=} lstat\n * @property {(function(string, FileSystemCallback<FileSystemStats>): void) & function(string, object, FileSystemCallback<Buffer | string>): void} stat\n */\n\n/**\n * @typedef {Object} SyncFileSystem\n * @property {function(string, object=): Buffer | string} readFileSync\n * @property {function(string, object=): (Buffer | string)[] | FileSystemDirent[]} readdirSync\n * @property {(function(string, object=): object)=} readJsonSync\n * @property {function(string, object=): Buffer | string} readlinkSync\n * @property {function(string, object=): FileSystemStats=} lstatSync\n * @property {function(string, object=): FileSystemStats} statSync\n */\n\n/**\n * @typedef {Object} ParsedIdentifier\n * @property {string} request\n * @property {string} query\n * @property {string} fragment\n * @property {boolean} directory\n * @property {boolean} module\n * @property {boolean} file\n * @property {boolean} internal\n */\n\n/**\n * @typedef {Object} BaseResolveRequest\n * @property {string | false} path\n * @property {string=} descriptionFilePath\n * @property {string=} descriptionFileRoot\n * @property {object=} descriptionFileData\n * @property {string=} relativePath\n * @property {boolean=} ignoreSymlinks\n * @property {boolean=} fullySpecified\n */\n\n/** @typedef {BaseResolveRequest & Partial<ParsedIdentifier>} ResolveRequest */\n\n/**\n * String with special formatting\n * @typedef {string} StackEntry\n */\n\n/** @template T @typedef {{ add: (T) => void }} WriteOnlySet */\n\n/**\n * Resolve context\n * @typedef {Object} ResolveContext\n * @property {WriteOnlySet<string>=} contextDependencies\n * @property {WriteOnlySet<string>=} fileDependencies files that was found on file system\n * @property {WriteOnlySet<string>=} missingDependencies dependencies that was not found on file system\n * @property {Set<StackEntry>=} stack set of hooks' calls. For instance, `resolve → parsedResolve → describedResolve`,\n * @property {(function(string): void)=} log log function\n * @property {(function (ResolveRequest): void)=} yield yield result, if provided plugins can return several results\n */\n\n/** @typedef {AsyncSeriesBailHook<[ResolveRequest, ResolveContext], ResolveRequest | null>} ResolveStepHook */\n\n/**\n * @param {string} str input string\n * @returns {string} in camel case\n */\nfunction toCamelCase(str) {\n\treturn str.replace(/-([a-z])/g, str => str.substr(1).toUpperCase());\n}\n\nclass Resolver {\n\t/**\n\t * @param {ResolveStepHook} hook hook\n\t * @param {ResolveRequest} request request\n\t * @returns {StackEntry} stack entry\n\t */\n\tstatic createStackEntry(hook, request) {\n\t\treturn (\n\t\t\thook.name +\n\t\t\t\": (\" +\n\t\t\trequest.path +\n\t\t\t\") \" +\n\t\t\t(request.request || \"\") +\n\t\t\t(request.query || \"\") +\n\t\t\t(request.fragment || \"\") +\n\t\t\t(request.directory ? \" directory\" : \"\") +\n\t\t\t(request.module ? \" module\" : \"\")\n\t\t);\n\t}\n\n\t/**\n\t * @param {FileSystem} fileSystem a filesystem\n\t * @param {ResolveOptions} options options\n\t */\n\tconstructor(fileSystem, options) {\n\t\tthis.fileSystem = fileSystem;\n\t\tthis.options = options;\n\t\tthis.hooks = {\n\t\t\t/** @type {SyncHook<[ResolveStepHook, ResolveRequest], void>} */\n\t\t\tresolveStep: new SyncHook([\"hook\", \"request\"], \"resolveStep\"),\n\t\t\t/** @type {SyncHook<[ResolveRequest, Error]>} */\n\t\t\tnoResolve: new SyncHook([\"request\", \"error\"], \"noResolve\"),\n\t\t\t/** @type {ResolveStepHook} */\n\t\t\tresolve: new AsyncSeriesBailHook(\n\t\t\t\t[\"request\", \"resolveContext\"],\n\t\t\t\t\"resolve\"\n\t\t\t),\n\t\t\t/** @type {AsyncSeriesHook<[ResolveRequest, ResolveContext]>} */\n\t\t\tresult: new AsyncSeriesHook([\"result\", \"resolveContext\"], \"result\")\n\t\t};\n\t}\n\n\t/**\n\t * @param {string | ResolveStepHook} name hook name or hook itself\n\t * @returns {ResolveStepHook} the hook\n\t */\n\tensureHook(name) {\n\t\tif (typeof name !== \"string\") {\n\t\t\treturn name;\n\t\t}\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.ensureHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t}));\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.ensureHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t}));\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\treturn (this.hooks[name] = new AsyncSeriesBailHook(\n\t\t\t\t[\"request\", \"resolveContext\"],\n\t\t\t\tname\n\t\t\t));\n\t\t}\n\t\treturn hook;\n\t}\n\n\t/**\n\t * @param {string | ResolveStepHook} name hook name or hook itself\n\t * @returns {ResolveStepHook} the hook\n\t */\n\tgetHook(name) {\n\t\tif (typeof name !== \"string\") {\n\t\t\treturn name;\n\t\t}\n\t\tname = toCamelCase(name);\n\t\tif (/^before/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.getHook(\n\t\t\t\tname[6].toLowerCase() + name.substr(7)\n\t\t\t).withOptions({\n\t\t\t\tstage: -10\n\t\t\t}));\n\t\t}\n\t\tif (/^after/.test(name)) {\n\t\t\treturn /** @type {ResolveStepHook} */ (this.getHook(\n\t\t\t\tname[5].toLowerCase() + name.substr(6)\n\t\t\t).withOptions({\n\t\t\t\tstage: 10\n\t\t\t}));\n\t\t}\n\t\tconst hook = this.hooks[name];\n\t\tif (!hook) {\n\t\t\tthrow new Error(`Hook ${name} doesn't exist`);\n\t\t}\n\t\treturn hook;\n\t}\n\n\t/**\n\t * @param {object} context context information object\n\t * @param {string} path context path\n\t * @param {string} request request string\n\t * @returns {string | false} result\n\t */\n\tresolveSync(context, path, request) {\n\t\t/** @type {Error | null | undefined} */\n\t\tlet err = undefined;\n\t\t/** @type {string | false | undefined} */\n\t\tlet result = undefined;\n\t\tlet sync = false;\n\t\tthis.resolve(context, path, request, {}, (e, r) => {\n\t\t\terr = e;\n\t\t\tresult = r;\n\t\t\tsync = true;\n\t\t});\n\t\tif (!sync) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot 'resolveSync' because the fileSystem is not sync. Use 'resolve'!\"\n\t\t\t);\n\t\t}\n\t\tif (err) throw err;\n\t\tif (result === undefined) throw new Error(\"No result\");\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {object} context context information object\n\t * @param {string} path context path\n\t * @param {string} request request string\n\t * @param {ResolveContext} resolveContext resolve context\n\t * @param {function(Error | null, (string|false)=, ResolveRequest=): void} callback callback function\n\t * @returns {void}\n\t */\n\tresolve(context, path, request, resolveContext, callback) {\n\t\tif (!context || typeof context !== \"object\")\n\t\t\treturn callback(new Error(\"context argument is not an object\"));\n\t\tif (typeof path !== \"string\")\n\t\t\treturn callback(new Error(\"path argument is not a string\"));\n\t\tif (typeof request !== \"string\")\n\t\t\treturn callback(new Error(\"request argument is not a string\"));\n\t\tif (!resolveContext)\n\t\t\treturn callback(new Error(\"resolveContext argument is not set\"));\n\n\t\tconst obj = {\n\t\t\tcontext: context,\n\t\t\tpath: path,\n\t\t\trequest: request\n\t\t};\n\n\t\tlet yield_;\n\t\tlet yieldCalled = false;\n\t\tlet finishYield;\n\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\tconst old = resolveContext.yield;\n\t\t\tyield_ = obj => {\n\t\t\t\told(obj);\n\t\t\t\tyieldCalled = true;\n\t\t\t};\n\t\t\tfinishYield = result => {\n\t\t\t\tif (result) yield_(result);\n\t\t\t\tcallback(null);\n\t\t\t};\n\t\t}\n\n\t\tconst message = `resolve '${request}' in '${path}'`;\n\n\t\tconst finishResolved = result => {\n\t\t\treturn callback(\n\t\t\t\tnull,\n\t\t\t\tresult.path === false\n\t\t\t\t\t? false\n\t\t\t\t\t: `${result.path.replace(/#/g, \"\\0#\")}${\n\t\t\t\t\t\t\tresult.query ? result.query.replace(/#/g, \"\\0#\") : \"\"\n\t\t\t\t\t  }${result.fragment || \"\"}`,\n\t\t\t\tresult\n\t\t\t);\n\t\t};\n\n\t\tconst finishWithoutResolve = log => {\n\t\t\t/**\n\t\t\t * @type {Error & {details?: string}}\n\t\t\t */\n\t\t\tconst error = new Error(\"Can't \" + message);\n\t\t\terror.details = log.join(\"\\n\");\n\t\t\tthis.hooks.noResolve.call(obj, error);\n\t\t\treturn callback(error);\n\t\t};\n\n\t\tif (resolveContext.log) {\n\t\t\t// We need log anyway to capture it in case of an error\n\t\t\tconst parentLog = resolveContext.log;\n\t\t\tconst log = [];\n\t\t\treturn this.doResolve(\n\t\t\t\tthis.hooks.resolve,\n\t\t\t\tobj,\n\t\t\t\tmessage,\n\t\t\t\t{\n\t\t\t\t\tlog: msg => {\n\t\t\t\t\t\tparentLog(msg);\n\t\t\t\t\t\tlog.push(msg);\n\t\t\t\t\t},\n\t\t\t\t\tyield: yield_,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t},\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\t\t\t\t\tif (result) return finishResolved(result);\n\n\t\t\t\t\treturn finishWithoutResolve(log);\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\t// Try to resolve assuming there is no error\n\t\t\t// We don't log stuff in this case\n\t\t\treturn this.doResolve(\n\t\t\t\tthis.hooks.resolve,\n\t\t\t\tobj,\n\t\t\t\tmessage,\n\t\t\t\t{\n\t\t\t\t\tlog: undefined,\n\t\t\t\t\tyield: yield_,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t},\n\t\t\t\t(err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\t\t\t\t\tif (result) return finishResolved(result);\n\n\t\t\t\t\t// log is missing for the error details\n\t\t\t\t\t// so we redo the resolving for the log info\n\t\t\t\t\t// this is more expensive to the success case\n\t\t\t\t\t// is assumed by default\n\n\t\t\t\t\tconst log = [];\n\n\t\t\t\t\treturn this.doResolve(\n\t\t\t\t\t\tthis.hooks.resolve,\n\t\t\t\t\t\tobj,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog: msg => log.push(msg),\n\t\t\t\t\t\t\tyield: yield_,\n\t\t\t\t\t\t\tstack: resolveContext.stack\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t// In a case that there is a race condition and yield will be called\n\t\t\t\t\t\t\tif (yieldCalled || (result && yield_)) return finishYield(result);\n\n\t\t\t\t\t\t\treturn finishWithoutResolve(log);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tdoResolve(hook, request, message, resolveContext, callback) {\n\t\tconst stackEntry = Resolver.createStackEntry(hook, request);\n\n\t\tlet newStack;\n\t\tif (resolveContext.stack) {\n\t\t\tnewStack = new Set(resolveContext.stack);\n\t\t\tif (resolveContext.stack.has(stackEntry)) {\n\t\t\t\t/**\n\t\t\t\t * Prevent recursion\n\t\t\t\t * @type {Error & {recursion?: boolean}}\n\t\t\t\t */\n\t\t\t\tconst recursionError = new Error(\n\t\t\t\t\t\"Recursion in resolving\\nStack:\\n  \" +\n\t\t\t\t\t\tArray.from(newStack).join(\"\\n  \")\n\t\t\t\t);\n\t\t\t\trecursionError.recursion = true;\n\t\t\t\tif (resolveContext.log)\n\t\t\t\t\tresolveContext.log(\"abort resolving because of recursion\");\n\t\t\t\treturn callback(recursionError);\n\t\t\t}\n\t\t\tnewStack.add(stackEntry);\n\t\t} else {\n\t\t\tnewStack = new Set([stackEntry]);\n\t\t}\n\t\tthis.hooks.resolveStep.call(hook, request);\n\n\t\tif (hook.isUsed()) {\n\t\t\tconst innerContext = createInnerContext(\n\t\t\t\t{\n\t\t\t\t\tlog: resolveContext.log,\n\t\t\t\t\tyield: resolveContext.yield,\n\t\t\t\t\tfileDependencies: resolveContext.fileDependencies,\n\t\t\t\t\tcontextDependencies: resolveContext.contextDependencies,\n\t\t\t\t\tmissingDependencies: resolveContext.missingDependencies,\n\t\t\t\t\tstack: newStack\n\t\t\t\t},\n\t\t\t\tmessage\n\t\t\t);\n\t\t\treturn hook.callAsync(request, innerContext, (err, result) => {\n\t\t\t\tif (err) return callback(err);\n\t\t\t\tif (result) return callback(null, result);\n\t\t\t\tcallback();\n\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} identifier identifier\n\t * @returns {ParsedIdentifier} parsed identifier\n\t */\n\tparse(identifier) {\n\t\tconst part = {\n\t\t\trequest: \"\",\n\t\t\tquery: \"\",\n\t\t\tfragment: \"\",\n\t\t\tmodule: false,\n\t\t\tdirectory: false,\n\t\t\tfile: false,\n\t\t\tinternal: false\n\t\t};\n\n\t\tconst parsedIdentifier = parseIdentifier(identifier);\n\n\t\tif (!parsedIdentifier) return part;\n\n\t\t[part.request, part.query, part.fragment] = parsedIdentifier;\n\n\t\tif (part.request.length > 0) {\n\t\t\tpart.internal = this.isPrivate(identifier);\n\t\t\tpart.module = this.isModule(part.request);\n\t\t\tpart.directory = this.isDirectory(part.request);\n\t\t\tif (part.directory) {\n\t\t\t\tpart.request = part.request.substr(0, part.request.length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tisModule(path) {\n\t\treturn getType(path) === PathType.Normal;\n\t}\n\n\tisPrivate(path) {\n\t\treturn getType(path) === PathType.Internal;\n\t}\n\n\t/**\n\t * @param {string} path a path\n\t * @returns {boolean} true, if the path is a directory path\n\t */\n\tisDirectory(path) {\n\t\treturn path.endsWith(\"/\");\n\t}\n\n\tjoin(path, request) {\n\t\treturn join(path, request);\n\t}\n\n\tnormalize(path) {\n\t\treturn normalize(path);\n\t}\n}\n\nmodule.exports = Resolver;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}