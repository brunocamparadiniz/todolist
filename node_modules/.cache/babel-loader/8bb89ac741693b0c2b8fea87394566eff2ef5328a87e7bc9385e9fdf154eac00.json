{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar InnerGraph = require(\"./optimize/InnerGraph\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\nvar JavascriptMetaInfoPlugin = /*#__PURE__*/function () {\n  function JavascriptMetaInfoPlugin() {\n    _classCallCheck(this, JavascriptMetaInfoPlugin);\n  }\n  _createClass(JavascriptMetaInfoPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"JavascriptMetaInfoPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        /**\n         * @param {JavascriptParser} parser the parser\n         * @returns {void}\n         */\n        var handler = function handler(parser) {\n          parser.hooks.call.for(\"eval\").tap(\"JavascriptMetaInfoPlugin\", function () {\n            parser.state.module.buildInfo.moduleConcatenationBailout = \"eval()\";\n            parser.state.module.buildInfo.usingEval = true;\n            var currentSymbol = InnerGraph.getTopLevelSymbol(parser.state);\n            if (currentSymbol) {\n              InnerGraph.addUsage(parser.state, null, currentSymbol);\n            } else {\n              InnerGraph.bailout(parser.state);\n            }\n          });\n          parser.hooks.finish.tap(\"JavascriptMetaInfoPlugin\", function () {\n            var topLevelDeclarations = parser.state.module.buildInfo.topLevelDeclarations;\n            if (topLevelDeclarations === undefined) {\n              topLevelDeclarations = parser.state.module.buildInfo.topLevelDeclarations = new Set();\n            }\n            var _iterator = _createForOfIteratorHelper(parser.scope.definitions.asSet()),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var name = _step.value;\n                var freeInfo = parser.getFreeInfoFromVariable(name);\n                if (freeInfo === undefined) {\n                  topLevelDeclarations.add(name);\n                }\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"JavascriptMetaInfoPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"JavascriptMetaInfoPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"JavascriptMetaInfoPlugin\", handler);\n      });\n    }\n  }]);\n  return JavascriptMetaInfoPlugin;\n}();\nmodule.exports = JavascriptMetaInfoPlugin;","map":{"version":3,"names":["InnerGraph","require","JavascriptMetaInfoPlugin","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","call","for","state","module","buildInfo","moduleConcatenationBailout","usingEval","currentSymbol","getTopLevelSymbol","addUsage","bailout","finish","topLevelDeclarations","undefined","Set","scope","definitions","asSet","name","freeInfo","getFreeInfoFromVariable","add","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/JavascriptMetaInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst InnerGraph = require(\"./optimize/InnerGraph\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\nclass JavascriptMetaInfoPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptMetaInfoPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tparser.hooks.call.for(\"eval\").tap(\"JavascriptMetaInfoPlugin\", () => {\n\t\t\t\t\t\tparser.state.module.buildInfo.moduleConcatenationBailout = \"eval()\";\n\t\t\t\t\t\tparser.state.module.buildInfo.usingEval = true;\n\t\t\t\t\t\tconst currentSymbol = InnerGraph.getTopLevelSymbol(parser.state);\n\t\t\t\t\t\tif (currentSymbol) {\n\t\t\t\t\t\t\tInnerGraph.addUsage(parser.state, null, currentSymbol);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tInnerGraph.bailout(parser.state);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.finish.tap(\"JavascriptMetaInfoPlugin\", () => {\n\t\t\t\t\t\tlet topLevelDeclarations =\n\t\t\t\t\t\t\tparser.state.module.buildInfo.topLevelDeclarations;\n\t\t\t\t\t\tif (topLevelDeclarations === undefined) {\n\t\t\t\t\t\t\ttopLevelDeclarations =\n\t\t\t\t\t\t\t\tparser.state.module.buildInfo.topLevelDeclarations = new Set();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const name of parser.scope.definitions.asSet()) {\n\t\t\t\t\t\t\tconst freeInfo = parser.getFreeInfoFromVariable(name);\n\t\t\t\t\t\t\tif (freeInfo === undefined) {\n\t\t\t\t\t\t\t\ttopLevelDeclarations.add(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptMetaInfoPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JavascriptMetaInfoPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,UAAU,GAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAEnD;AACA;AAAA,IAEMC,wBAAwB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC7B;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,0BAA0B,EAC1B,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClC;AACJ;AACA;AACA;QACI,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,MAAM,EAAI;UACzBA,MAAM,CAACL,KAAK,CAACM,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAACL,GAAG,CAAC,0BAA0B,EAAE,YAAM;YACnEG,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,0BAA0B,GAAG,QAAQ;YACnEN,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,SAAS,CAACE,SAAS,GAAG,IAAI;YAC9C,IAAMC,aAAa,GAAGjB,UAAU,CAACkB,iBAAiB,CAACT,MAAM,CAACG,KAAK,CAAC;YAChE,IAAIK,aAAa,EAAE;cAClBjB,UAAU,CAACmB,QAAQ,CAACV,MAAM,CAACG,KAAK,EAAE,IAAI,EAAEK,aAAa,CAAC;YACvD,CAAC,MAAM;cACNjB,UAAU,CAACoB,OAAO,CAACX,MAAM,CAACG,KAAK,CAAC;YACjC;UACD,CAAC,CAAC;UACFH,MAAM,CAACL,KAAK,CAACiB,MAAM,CAACf,GAAG,CAAC,0BAA0B,EAAE,YAAM;YACzD,IAAIgB,oBAAoB,GACvBb,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,SAAS,CAACQ,oBAAoB;YACnD,IAAIA,oBAAoB,KAAKC,SAAS,EAAE;cACvCD,oBAAoB,GACnBb,MAAM,CAACG,KAAK,CAACC,MAAM,CAACC,SAAS,CAACQ,oBAAoB,GAAG,IAAIE,GAAG,EAAE;YAChE;YAAC,2CACkBf,MAAM,CAACgB,KAAK,CAACC,WAAW,CAACC,KAAK,EAAE;cAAA;YAAA;cAAnD,oDAAqD;gBAAA,IAA1CC,IAAI;gBACd,IAAMC,QAAQ,GAAGpB,MAAM,CAACqB,uBAAuB,CAACF,IAAI,CAAC;gBACrD,IAAIC,QAAQ,KAAKN,SAAS,EAAE;kBAC3BD,oBAAoB,CAACS,GAAG,CAACH,IAAI,CAAC;gBAC/B;cACD;YAAC;cAAA;YAAA;cAAA;YAAA;UACF,CAAC,CAAC;QACH,CAAC;QAEDrB,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BE,GAAG,CAAC,iBAAiB,CAAC,CACtBL,GAAG,CAAC,0BAA0B,EAAEE,OAAO,CAAC;QAC1CD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BE,GAAG,CAAC,oBAAoB,CAAC,CACzBL,GAAG,CAAC,0BAA0B,EAAEE,OAAO,CAAC;QAC1CD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BE,GAAG,CAAC,gBAAgB,CAAC,CACrBL,GAAG,CAAC,0BAA0B,EAAEE,OAAO,CAAC;MAC3C,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFK,MAAM,CAACmB,OAAO,GAAG9B,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}