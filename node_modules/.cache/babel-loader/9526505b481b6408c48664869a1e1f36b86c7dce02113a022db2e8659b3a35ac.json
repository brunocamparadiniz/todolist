{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _get = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"webpack-sources\"),\n  OriginalSource = _require.OriginalSource,\n  RawSource = _require.RawSource;\nvar ConcatenationScope = require(\"./ConcatenationScope\");\nvar _require2 = require(\"./ExportsInfo\"),\n  UsageState = _require2.UsageState;\nvar InitFragment = require(\"./InitFragment\");\nvar Module = require(\"./Module\");\nvar RuntimeGlobals = require(\"./RuntimeGlobals\");\nvar Template = require(\"./Template\");\nvar StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nvar createHash = require(\"./util/createHash\");\nvar extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nvar makeSerializable = require(\"./util/makeSerializable\");\nvar propertyAccess = require(\"./util/propertyAccess\");\nvar _require3 = require(\"./util/serialization\"),\n  register = _require3.register;\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\nvar TYPES = new Set([\"javascript\"]);\nvar CSS_TYPES = new Set([\"css-import\"]);\nvar RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nvar RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nvar RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([RuntimeGlobals.definePropertyGetters]);\nvar EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nvar getSourceForGlobalVariableExternal = function getSourceForGlobalVariableExternal(variableName, type) {\n  if (!Array.isArray(variableName)) {\n    // make it an array as the look up works the same basically\n    variableName = [variableName];\n  }\n\n  // needed for e.g. window[\"some\"][\"thing\"]\n  var objectLookup = variableName.map(function (r) {\n    return \"[\".concat(JSON.stringify(r), \"]\");\n  }).join(\"\");\n  return {\n    iife: type === \"this\",\n    expression: \"\".concat(type).concat(objectLookup)\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nvar getSourceForCommonJsExternal = function getSourceForCommonJsExternal(moduleAndSpecifiers) {\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"require(\".concat(JSON.stringify(moduleAndSpecifiers), \")\")\n    };\n  }\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"require(\".concat(JSON.stringify(moduleName), \")\").concat(propertyAccess(moduleAndSpecifiers, 1))\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nvar getSourceForCommonJsExternalInNodeModule = function getSourceForCommonJsExternalInNodeModule(moduleAndSpecifiers) {\n  var chunkInitFragments = [new InitFragment('import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n', InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module node-commonjs\")];\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"__WEBPACK_EXTERNAL_createRequire(import.meta.url)(\".concat(JSON.stringify(moduleAndSpecifiers), \")\"),\n      chunkInitFragments: chunkInitFragments\n    };\n  }\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"__WEBPACK_EXTERNAL_createRequire(import.meta.url)(\".concat(JSON.stringify(moduleName), \")\").concat(propertyAccess(moduleAndSpecifiers, 1)),\n    chunkInitFragments: chunkInitFragments\n  };\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nvar getSourceForImportExternal = function getSourceForImportExternal(moduleAndSpecifiers, runtimeTemplate) {\n  var importName = runtimeTemplate.outputOptions.importFunctionName;\n  if (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n    throw new Error(\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\");\n  }\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleAndSpecifiers), \");\")\n    };\n  }\n  if (moduleAndSpecifiers.length === 1) {\n    return {\n      expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleAndSpecifiers[0]), \");\")\n    };\n  }\n  var moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: \"\".concat(importName, \"(\").concat(JSON.stringify(moduleName), \").then(\").concat(runtimeTemplate.returningFunction(\"module\".concat(propertyAccess(moduleAndSpecifiers, 1)), \"module\"), \");\")\n  };\n};\nvar ModuleExternalInitFragment = /*#__PURE__*/function (_InitFragment) {\n  _inherits(ModuleExternalInitFragment, _InitFragment);\n  var _super = _createSuper(ModuleExternalInitFragment);\n  /**\n   * @param {string} request import source\n   * @param {string=} ident recomputed ident\n   * @param {string | HashConstructor=} hashFunction the hash function to use\n   */\n  function ModuleExternalInitFragment(request, ident) {\n    var _this;\n    var hashFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"md4\";\n    _classCallCheck(this, ModuleExternalInitFragment);\n    if (ident === undefined) {\n      ident = Template.toIdentifier(request);\n      if (ident !== request) {\n        ident += \"_\".concat(createHash(hashFunction).update(request).digest(\"hex\").slice(0, 8));\n      }\n    }\n    var identifier = \"__WEBPACK_EXTERNAL_MODULE_\".concat(ident, \"__\");\n    _this = _super.call(this, \"import * as \".concat(identifier, \" from \").concat(JSON.stringify(request), \";\\n\"), InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module import \".concat(ident));\n    _this._ident = ident;\n    _this._identifier = identifier;\n    _this._request = request;\n    return _this;\n  }\n  _createClass(ModuleExternalInitFragment, [{\n    key: \"getNamespaceIdentifier\",\n    value: function getNamespaceIdentifier() {\n      return this._identifier;\n    }\n  }]);\n  return ModuleExternalInitFragment;\n}(InitFragment);\nregister(ModuleExternalInitFragment, \"webpack/lib/ExternalModule\", \"ModuleExternalInitFragment\", {\n  serialize: function serialize(obj, _ref) {\n    var write = _ref.write;\n    write(obj._request);\n    write(obj._ident);\n  },\n  deserialize: function deserialize(_ref2) {\n    var read = _ref2.read;\n    return new ModuleExternalInitFragment(read(), read());\n  }\n});\nvar generateModuleRemapping = function generateModuleRemapping(input, exportsInfo, runtime) {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n    var properties = [];\n    var _iterator = _createForOfIteratorHelper(exportsInfo.orderedExports),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var exportInfo = _step.value;\n        var used = exportInfo.getUsedName(exportInfo.name, runtime);\n        if (!used) continue;\n        var nestedInfo = exportInfo.getNestedExportsInfo();\n        if (nestedInfo) {\n          var nestedExpr = generateModuleRemapping(\"\".concat(input).concat(propertyAccess([exportInfo.name])), nestedInfo);\n          if (nestedExpr) {\n            properties.push(\"[\".concat(JSON.stringify(used), \"]: y(\").concat(nestedExpr, \")\"));\n            continue;\n          }\n        }\n        properties.push(\"[\".concat(JSON.stringify(used), \"]: () => \").concat(input).concat(propertyAccess([exportInfo.name])));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return \"x({ \".concat(properties.join(\", \"), \" })\");\n  }\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\nvar getSourceForModuleExternal = function getSourceForModuleExternal(moduleAndSpecifiers, exportsInfo, runtime, hashFunction) {\n  if (!Array.isArray(moduleAndSpecifiers)) moduleAndSpecifiers = [moduleAndSpecifiers];\n  var initFragment = new ModuleExternalInitFragment(moduleAndSpecifiers[0], undefined, hashFunction);\n  var baseAccess = \"\".concat(initFragment.getNamespaceIdentifier()).concat(propertyAccess(moduleAndSpecifiers, 1));\n  var moduleRemapping = generateModuleRemapping(baseAccess, exportsInfo, runtime);\n  var expression = moduleRemapping || baseAccess;\n  return {\n    expression: expression,\n    init: \"var x = y => { var x = {}; \".concat(RuntimeGlobals.definePropertyGetters, \"(x, y); return x; }\\nvar y = x => () => x\"),\n    runtimeRequirements: moduleRemapping ? RUNTIME_REQUIREMENTS_FOR_MODULE : undefined,\n    chunkInitFragments: [initFragment]\n  };\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nvar getSourceForScriptExternal = function getSourceForScriptExternal(urlAndGlobal, runtimeTemplate) {\n  if (typeof urlAndGlobal === \"string\") {\n    urlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n  }\n  var url = urlAndGlobal[0];\n  var globalName = urlAndGlobal[1];\n  return {\n    init: \"var __webpack_error__ = new Error();\",\n    expression: \"new Promise(\".concat(runtimeTemplate.basicFunction(\"resolve, reject\", [\"if(typeof \".concat(globalName, \" !== \\\"undefined\\\") return resolve();\"), \"\".concat(RuntimeGlobals.loadScript, \"(\").concat(JSON.stringify(url), \", \").concat(runtimeTemplate.basicFunction(\"event\", [\"if(typeof \".concat(globalName, \" !== \\\"undefined\\\") return resolve();\"), \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"__webpack_error__.name = 'ScriptExternalLoadError';\", \"__webpack_error__.type = errorType;\", \"__webpack_error__.request = realSrc;\", \"reject(__webpack_error__);\"]), \", \").concat(JSON.stringify(globalName), \");\")]), \").then(\").concat(runtimeTemplate.returningFunction(\"\".concat(globalName).concat(propertyAccess(urlAndGlobal, 2))), \")\"),\n    runtimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n  };\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nvar checkExternalVariable = function checkExternalVariable(variableName, request, runtimeTemplate) {\n  return \"if(typeof \".concat(variableName, \" === 'undefined') { \").concat(runtimeTemplate.throwMissingModuleErrorBlock({\n    request: request\n  }), \" }\\n\");\n};\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nvar getSourceForAmdOrUmdExternal = function getSourceForAmdOrUmdExternal(id, optional, request, runtimeTemplate) {\n  var externalVariable = \"__WEBPACK_EXTERNAL_MODULE_\".concat(Template.toIdentifier(\"\".concat(id)), \"__\");\n  return {\n    init: optional ? checkExternalVariable(externalVariable, Array.isArray(request) ? request.join(\".\") : request, runtimeTemplate) : undefined,\n    expression: externalVariable\n  };\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nvar getSourceForDefaultCase = function getSourceForDefaultCase(optional, request, runtimeTemplate) {\n  if (!Array.isArray(request)) {\n    // make it an array as the look up works the same basically\n    request = [request];\n  }\n  var variableName = request[0];\n  var objectLookup = propertyAccess(request, 1);\n  return {\n    init: optional ? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate) : undefined,\n    expression: \"\".concat(variableName).concat(objectLookup)\n  };\n};\nvar ExternalModule = /*#__PURE__*/function (_Module) {\n  _inherits(ExternalModule, _Module);\n  var _super2 = _createSuper(ExternalModule);\n  function ExternalModule(request, type, userRequest) {\n    var _this2;\n    _classCallCheck(this, ExternalModule);\n    _this2 = _super2.call(this, \"javascript/dynamic\", null);\n\n    // Info from Factory\n    /** @type {string | string[] | Record<string, string | string[]>} */\n    _this2.request = request;\n    /** @type {string} */\n    _this2.externalType = type;\n    /** @type {string} */\n    _this2.userRequest = userRequest;\n    return _this2;\n  }\n\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n  _createClass(ExternalModule, [{\n    key: \"getSourceTypes\",\n    value: function getSourceTypes() {\n      return this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n    }\n\n    /**\n     * @param {LibIdentOptions} options options\n     * @returns {string | null} an identifier for library inclusion\n     */\n  }, {\n    key: \"libIdent\",\n    value: function libIdent(options) {\n      return this.userRequest;\n    }\n\n    /**\n     * @param {Chunk} chunk the chunk which condition should be checked\n     * @param {Compilation} compilation the compilation\n     * @returns {boolean} true, if the chunk is ok for the module\n     */\n  }, {\n    key: \"chunkCondition\",\n    value: function chunkCondition(chunk, _ref3) {\n      var chunkGraph = _ref3.chunkGraph;\n      return this.externalType === \"css-import\" ? true : chunkGraph.getNumberOfEntryModules(chunk) > 0;\n    }\n\n    /**\n     * @returns {string} a unique identifier of the module\n     */\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return \"external \".concat(this.externalType, \" \").concat(JSON.stringify(this.request));\n    }\n\n    /**\n     * @param {RequestShortener} requestShortener the request shortener\n     * @returns {string} a user readable identifier of the module\n     */\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier(requestShortener) {\n      return \"external \" + JSON.stringify(this.request);\n    }\n\n    /**\n     * @param {NeedBuildContext} context context info\n     * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n     * @returns {void}\n     */\n  }, {\n    key: \"needBuild\",\n    value: function needBuild(context, callback) {\n      return callback(null, !this.buildMeta);\n    }\n\n    /**\n     * @param {WebpackOptions} options webpack options\n     * @param {Compilation} compilation the compilation\n     * @param {ResolverWithOptions} resolver the resolver\n     * @param {InputFileSystem} fs the file system\n     * @param {function(WebpackError=): void} callback callback function\n     * @returns {void}\n     */\n  }, {\n    key: \"build\",\n    value: function build(options, compilation, resolver, fs, callback) {\n      this.buildMeta = {\n        async: false,\n        exportsType: undefined\n      };\n      this.buildInfo = {\n        strict: true,\n        topLevelDeclarations: new Set(),\n        module: compilation.outputOptions.module\n      };\n      var _this$_getRequestAndE = this._getRequestAndExternalType(),\n        request = _this$_getRequestAndE.request,\n        externalType = _this$_getRequestAndE.externalType;\n      this.buildMeta.exportsType = \"dynamic\";\n      var canMangle = false;\n      this.clearDependenciesAndBlocks();\n      switch (externalType) {\n        case \"this\":\n          this.buildInfo.strict = false;\n          break;\n        case \"system\":\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = true;\n          }\n          break;\n        case \"module\":\n          if (this.buildInfo.module) {\n            if (!Array.isArray(request) || request.length === 1) {\n              this.buildMeta.exportsType = \"namespace\";\n              canMangle = true;\n            }\n          } else {\n            this.buildMeta.async = true;\n            if (!Array.isArray(request) || request.length === 1) {\n              this.buildMeta.exportsType = \"namespace\";\n              canMangle = false;\n            }\n          }\n          break;\n        case \"script\":\n        case \"promise\":\n          this.buildMeta.async = true;\n          break;\n        case \"import\":\n          this.buildMeta.async = true;\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = false;\n          }\n          break;\n      }\n      this.addDependency(new StaticExportsDependency(true, canMangle));\n      callback();\n    }\n  }, {\n    key: \"restoreFromUnsafeCache\",\n    value: function restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n      this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n    }\n\n    /**\n     * @param {ConcatenationBailoutReasonContext} context context\n     * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n     */\n  }, {\n    key: \"getConcatenationBailoutReason\",\n    value: function getConcatenationBailoutReason(_ref4) {\n      var moduleGraph = _ref4.moduleGraph;\n      switch (this.externalType) {\n        case \"amd\":\n        case \"amd-require\":\n        case \"umd\":\n        case \"umd2\":\n        case \"system\":\n        case \"jsonp\":\n          return \"\".concat(this.externalType, \" externals can't be concatenated\");\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_getRequestAndExternalType\",\n    value: function _getRequestAndExternalType() {\n      var request = this.request,\n        externalType = this.externalType;\n      if (typeof request === \"object\" && !Array.isArray(request)) request = request[externalType];\n      return {\n        request: request,\n        externalType: externalType\n      };\n    }\n  }, {\n    key: \"_getSourceData\",\n    value: function _getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime) {\n      switch (externalType) {\n        case \"this\":\n        case \"window\":\n        case \"self\":\n          return getSourceForGlobalVariableExternal(request, this.externalType);\n        case \"global\":\n          return getSourceForGlobalVariableExternal(request, runtimeTemplate.globalObject);\n        case \"commonjs\":\n        case \"commonjs2\":\n        case \"commonjs-module\":\n        case \"commonjs-static\":\n          return getSourceForCommonJsExternal(request);\n        case \"node-commonjs\":\n          return this.buildInfo.module ? getSourceForCommonJsExternalInNodeModule(request) : getSourceForCommonJsExternal(request);\n        case \"amd\":\n        case \"amd-require\":\n        case \"umd\":\n        case \"umd2\":\n        case \"system\":\n        case \"jsonp\":\n          {\n            var id = chunkGraph.getModuleId(this);\n            return getSourceForAmdOrUmdExternal(id !== null ? id : this.identifier(), this.isOptional(moduleGraph), request, runtimeTemplate);\n          }\n        case \"import\":\n          return getSourceForImportExternal(request, runtimeTemplate);\n        case \"script\":\n          return getSourceForScriptExternal(request, runtimeTemplate);\n        case \"module\":\n          {\n            if (!this.buildInfo.module) {\n              if (!runtimeTemplate.supportsDynamicImport()) {\n                throw new Error(\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" + (runtimeTemplate.supportsEcmaScriptModuleSyntax() ? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\" : \"\"));\n              }\n              return getSourceForImportExternal(request, runtimeTemplate);\n            }\n            if (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n              throw new Error(\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\");\n            }\n            return getSourceForModuleExternal(request, moduleGraph.getExportsInfo(this), runtime, runtimeTemplate.outputOptions.hashFunction);\n          }\n        case \"var\":\n        case \"promise\":\n        case \"const\":\n        case \"let\":\n        case \"assign\":\n        default:\n          return getSourceForDefaultCase(this.isOptional(moduleGraph), request, runtimeTemplate);\n      }\n    }\n\n    /**\n     * @param {CodeGenerationContext} context context for code generation\n     * @returns {CodeGenerationResult} result\n     */\n  }, {\n    key: \"codeGeneration\",\n    value: function codeGeneration(_ref5) {\n      var runtimeTemplate = _ref5.runtimeTemplate,\n        moduleGraph = _ref5.moduleGraph,\n        chunkGraph = _ref5.chunkGraph,\n        runtime = _ref5.runtime,\n        concatenationScope = _ref5.concatenationScope;\n      var _this$_getRequestAndE2 = this._getRequestAndExternalType(),\n        request = _this$_getRequestAndE2.request,\n        externalType = _this$_getRequestAndE2.externalType;\n      switch (externalType) {\n        case \"asset\":\n          {\n            var sources = new Map();\n            sources.set(\"javascript\", new RawSource(\"module.exports = \".concat(JSON.stringify(request), \";\")));\n            var data = new Map();\n            data.set(\"url\", request);\n            return {\n              sources: sources,\n              runtimeRequirements: RUNTIME_REQUIREMENTS,\n              data: data\n            };\n          }\n        case \"css-import\":\n          {\n            var _sources = new Map();\n            _sources.set(\"css-import\", new RawSource(\"@import url(\".concat(JSON.stringify(request), \");\")));\n            return {\n              sources: _sources,\n              runtimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n            };\n          }\n        default:\n          {\n            var sourceData = this._getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime);\n            var sourceString = sourceData.expression;\n            if (sourceData.iife) sourceString = \"(function() { return \".concat(sourceString, \"; }())\");\n            if (concatenationScope) {\n              sourceString = \"\".concat(runtimeTemplate.supportsConst() ? \"const\" : \"var\", \" \").concat(ConcatenationScope.NAMESPACE_OBJECT_EXPORT, \" = \").concat(sourceString, \";\");\n              concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n            } else {\n              sourceString = \"module.exports = \".concat(sourceString, \";\");\n            }\n            if (sourceData.init) sourceString = \"\".concat(sourceData.init, \"\\n\").concat(sourceString);\n            var _data = undefined;\n            if (sourceData.chunkInitFragments) {\n              _data = new Map();\n              _data.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n            }\n            var _sources2 = new Map();\n            if (this.useSourceMap || this.useSimpleSourceMap) {\n              _sources2.set(\"javascript\", new OriginalSource(sourceString, this.identifier()));\n            } else {\n              _sources2.set(\"javascript\", new RawSource(sourceString));\n            }\n            var runtimeRequirements = sourceData.runtimeRequirements;\n            if (!concatenationScope) {\n              if (!runtimeRequirements) {\n                runtimeRequirements = RUNTIME_REQUIREMENTS;\n              } else {\n                var set = new Set(runtimeRequirements);\n                set.add(RuntimeGlobals.module);\n                runtimeRequirements = set;\n              }\n            }\n            return {\n              sources: _sources2,\n              runtimeRequirements: runtimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n              data: _data\n            };\n          }\n      }\n    }\n\n    /**\n     * @param {string=} type the source type for which the size should be estimated\n     * @returns {number} the estimated size of the module (must be non-zero)\n     */\n  }, {\n    key: \"size\",\n    value: function size(type) {\n      return 42;\n    }\n\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @param {UpdateHashContext} context context\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, context) {\n      var chunkGraph = context.chunkGraph;\n      hash.update(\"\".concat(this.externalType).concat(JSON.stringify(this.request)).concat(this.isOptional(chunkGraph.moduleGraph)));\n      _get(_getPrototypeOf(ExternalModule.prototype), \"updateHash\", this).call(this, hash, context);\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.request);\n      write(this.externalType);\n      write(this.userRequest);\n      _get(_getPrototypeOf(ExternalModule.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.request = read();\n      this.externalType = read();\n      this.userRequest = read();\n      _get(_getPrototypeOf(ExternalModule.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n  return ExternalModule;\n}(Module);\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\nmodule.exports = ExternalModule;","map":{"version":3,"names":["require","OriginalSource","RawSource","ConcatenationScope","UsageState","InitFragment","Module","RuntimeGlobals","Template","StaticExportsDependency","createHash","extractUrlAndGlobal","makeSerializable","propertyAccess","register","TYPES","Set","CSS_TYPES","RUNTIME_REQUIREMENTS","module","RUNTIME_REQUIREMENTS_FOR_SCRIPT","loadScript","RUNTIME_REQUIREMENTS_FOR_MODULE","definePropertyGetters","EMPTY_RUNTIME_REQUIREMENTS","getSourceForGlobalVariableExternal","variableName","type","Array","isArray","objectLookup","map","r","JSON","stringify","join","iife","expression","getSourceForCommonJsExternal","moduleAndSpecifiers","moduleName","getSourceForCommonJsExternalInNodeModule","chunkInitFragments","STAGE_HARMONY_IMPORTS","getSourceForImportExternal","runtimeTemplate","importName","outputOptions","importFunctionName","supportsDynamicImport","Error","length","returningFunction","ModuleExternalInitFragment","request","ident","hashFunction","undefined","toIdentifier","update","digest","slice","identifier","_ident","_identifier","_request","serialize","obj","write","deserialize","read","generateModuleRemapping","input","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","properties","orderedExports","exportInfo","used","getUsedName","name","nestedInfo","getNestedExportsInfo","nestedExpr","push","getSourceForModuleExternal","initFragment","baseAccess","getNamespaceIdentifier","moduleRemapping","init","runtimeRequirements","getSourceForScriptExternal","urlAndGlobal","url","globalName","basicFunction","checkExternalVariable","throwMissingModuleErrorBlock","getSourceForAmdOrUmdExternal","id","optional","externalVariable","getSourceForDefaultCase","ExternalModule","userRequest","externalType","options","chunk","chunkGraph","getNumberOfEntryModules","requestShortener","context","callback","buildMeta","compilation","resolver","fs","async","exportsType","buildInfo","strict","topLevelDeclarations","_getRequestAndExternalType","canMangle","clearDependenciesAndBlocks","addDependency","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","moduleGraph","globalObject","getModuleId","isOptional","supportsEcmaScriptModuleSyntax","getExportsInfo","concatenationScope","sources","Map","set","data","sourceData","_getSourceData","sourceString","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","useSourceMap","useSimpleSourceMap","add","hash","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ExternalModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst { UsageState } = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { register } = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\nconst TYPES = new Set([\"javascript\"]);\nconst CSS_TYPES = new Set([\"css-import\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([\n\tRuntimeGlobals.definePropertyGetters\n]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n\tif (!Array.isArray(variableName)) {\n\t\t// make it an array as the look up works the same basically\n\t\tvariableName = [variableName];\n\t}\n\n\t// needed for e.g. window[\"some\"][\"thing\"]\n\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n\treturn {\n\t\tiife: type === \"this\",\n\t\texpression: `${type}${objectLookup}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `require(${JSON.stringify(moduleName)})${propertyAccess(\n\t\t\tmoduleAndSpecifiers,\n\t\t\t1\n\t\t)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternalInNodeModule = moduleAndSpecifiers => {\n\tconst chunkInitFragments = [\n\t\tnew InitFragment(\n\t\t\t'import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n',\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t\"external module node-commonjs\"\n\t\t)\n\t];\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)})`,\n\t\t\tchunkInitFragments\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `__WEBPACK_EXTERNAL_createRequire(import.meta.url)(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\tchunkInitFragments\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\n\tconst importName = runtimeTemplate.outputOptions.importFunctionName;\n\tif (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n\t\tthrow new Error(\n\t\t\t\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\"\n\t\t);\n\t}\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\n\t\t};\n\t}\n\tif (moduleAndSpecifiers.length === 1) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `${importName}(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`module${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\t\t\"module\"\n\t\t)});`\n\t};\n};\n\nclass ModuleExternalInitFragment extends InitFragment {\n\t/**\n\t * @param {string} request import source\n\t * @param {string=} ident recomputed ident\n\t * @param {string | HashConstructor=} hashFunction the hash function to use\n\t */\n\tconstructor(request, ident, hashFunction = \"md4\") {\n\t\tif (ident === undefined) {\n\t\t\tident = Template.toIdentifier(request);\n\t\t\tif (ident !== request) {\n\t\t\t\tident += `_${createHash(hashFunction)\n\t\t\t\t\t.update(request)\n\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t.slice(0, 8)}`;\n\t\t\t}\n\t\t}\n\t\tconst identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n\t\tsuper(\n\t\t\t`import * as ${identifier} from ${JSON.stringify(request)};\\n`,\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t`external module import ${ident}`\n\t\t);\n\t\tthis._ident = ident;\n\t\tthis._identifier = identifier;\n\t\tthis._request = request;\n\t}\n\n\tgetNamespaceIdentifier() {\n\t\treturn this._identifier;\n\t}\n}\n\nregister(\n\tModuleExternalInitFragment,\n\t\"webpack/lib/ExternalModule\",\n\t\"ModuleExternalInitFragment\",\n\t{\n\t\tserialize(obj, { write }) {\n\t\t\twrite(obj._request);\n\t\t\twrite(obj._ident);\n\t\t},\n\t\tdeserialize({ read }) {\n\t\t\treturn new ModuleExternalInitFragment(read(), read());\n\t\t}\n\t}\n);\n\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n\t\tconst properties = [];\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tconst used = exportInfo.getUsedName(exportInfo.name, runtime);\n\t\t\tif (!used) continue;\n\t\t\tconst nestedInfo = exportInfo.getNestedExportsInfo();\n\t\t\tif (nestedInfo) {\n\t\t\t\tconst nestedExpr = generateModuleRemapping(\n\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`,\n\t\t\t\t\tnestedInfo\n\t\t\t\t);\n\t\t\t\tif (nestedExpr) {\n\t\t\t\t\tproperties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tproperties.push(\n\t\t\t\t`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([\n\t\t\t\t\texportInfo.name\n\t\t\t\t])}`\n\t\t\t);\n\t\t}\n\t\treturn `x({ ${properties.join(\", \")} })`;\n\t}\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\nconst getSourceForModuleExternal = (\n\tmoduleAndSpecifiers,\n\texportsInfo,\n\truntime,\n\thashFunction\n) => {\n\tif (!Array.isArray(moduleAndSpecifiers))\n\t\tmoduleAndSpecifiers = [moduleAndSpecifiers];\n\tconst initFragment = new ModuleExternalInitFragment(\n\t\tmoduleAndSpecifiers[0],\n\t\tundefined,\n\t\thashFunction\n\t);\n\tconst baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(\n\t\tmoduleAndSpecifiers,\n\t\t1\n\t)}`;\n\tconst moduleRemapping = generateModuleRemapping(\n\t\tbaseAccess,\n\t\texportsInfo,\n\t\truntime\n\t);\n\tlet expression = moduleRemapping || baseAccess;\n\treturn {\n\t\texpression,\n\t\tinit: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\n\t\truntimeRequirements: moduleRemapping\n\t\t\t? RUNTIME_REQUIREMENTS_FOR_MODULE\n\t\t\t: undefined,\n\t\tchunkInitFragments: [initFragment]\n\t};\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n\tif (typeof urlAndGlobal === \"string\") {\n\t\turlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n\t}\n\tconst url = urlAndGlobal[0];\n\tconst globalName = urlAndGlobal[1];\n\treturn {\n\t\tinit: \"var __webpack_error__ = new Error();\",\n\t\texpression: `new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\"resolve, reject\",\n\t\t\t[\n\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t`${RuntimeGlobals.loadScript}(${JSON.stringify(\n\t\t\t\t\turl\n\t\t\t\t)}, ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\"__webpack_error__.name = 'ScriptExternalLoadError';\",\n\t\t\t\t\t\"__webpack_error__.type = errorType;\",\n\t\t\t\t\t\"__webpack_error__.request = realSrc;\",\n\t\t\t\t\t\"reject(__webpack_error__);\"\n\t\t\t\t])}, ${JSON.stringify(globalName)});`\n\t\t\t]\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`${globalName}${propertyAccess(urlAndGlobal, 2)}`\n\t\t)})`,\n\t\truntimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n\t};\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\n\treturn `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock(\n\t\t{ request }\n\t)} }\\n`;\n};\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForAmdOrUmdExternal = (\n\tid,\n\toptional,\n\trequest,\n\truntimeTemplate\n) => {\n\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t`${id}`\n\t)}__`;\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(\n\t\t\t\t\texternalVariable,\n\t\t\t\t\tArray.isArray(request) ? request.join(\".\") : request,\n\t\t\t\t\truntimeTemplate\n\t\t\t  )\n\t\t\t: undefined,\n\t\texpression: externalVariable\n\t};\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n\tif (!Array.isArray(request)) {\n\t\t// make it an array as the look up works the same basically\n\t\trequest = [request];\n\t}\n\n\tconst variableName = request[0];\n\tconst objectLookup = propertyAccess(request, 1);\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate)\n\t\t\t: undefined,\n\t\texpression: `${variableName}${objectLookup}`\n\t};\n};\n\nclass ExternalModule extends Module {\n\tconstructor(request, type, userRequest) {\n\t\tsuper(\"javascript/dynamic\", null);\n\n\t\t// Info from Factory\n\t\t/** @type {string | string[] | Record<string, string | string[]>} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.externalType = type;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn this.userRequest;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk which condition should be checked\n\t * @param {Compilation} compilation the compilation\n\t * @returns {boolean} true, if the chunk is ok for the module\n\t */\n\tchunkCondition(chunk, { chunkGraph }) {\n\t\treturn this.externalType === \"css-import\"\n\t\t\t? true\n\t\t\t: chunkGraph.getNumberOfEntryModules(chunk) > 0;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `external ${this.externalType} ${JSON.stringify(this.request)}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {\n\t\t\tasync: false,\n\t\t\texportsType: undefined\n\t\t};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\ttopLevelDeclarations: new Set(),\n\t\t\tmodule: compilation.outputOptions.module\n\t\t};\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tthis.buildMeta.exportsType = \"dynamic\";\n\t\tlet canMangle = false;\n\t\tthis.clearDependenciesAndBlocks();\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\t\tthis.buildInfo.strict = false;\n\t\t\t\tbreak;\n\t\t\tcase \"system\":\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"module\":\n\t\t\t\tif (this.buildInfo.module) {\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"script\":\n\t\t\tcase \"promise\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tbreak;\n\t\t\tcase \"import\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.addDependency(new StaticExportsDependency(true, canMangle));\n\t\tcallback();\n\t}\n\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason({ moduleGraph }) {\n\t\tswitch (this.externalType) {\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\":\n\t\t\t\treturn `${this.externalType} externals can't be concatenated`;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_getRequestAndExternalType() {\n\t\tlet { request, externalType } = this;\n\t\tif (typeof request === \"object\" && !Array.isArray(request))\n\t\t\trequest = request[externalType];\n\t\treturn { request, externalType };\n\t}\n\n\t_getSourceData(\n\t\trequest,\n\t\texternalType,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime\n\t) {\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(request, this.externalType);\n\t\t\tcase \"global\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\tcase \"commonjs-module\":\n\t\t\tcase \"commonjs-static\":\n\t\t\t\treturn getSourceForCommonJsExternal(request);\n\t\t\tcase \"node-commonjs\":\n\t\t\t\treturn this.buildInfo.module\n\t\t\t\t\t? getSourceForCommonJsExternalInNodeModule(request)\n\t\t\t\t\t: getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\": {\n\t\t\t\tconst id = chunkGraph.getModuleId(this);\n\t\t\t\treturn getSourceForAmdOrUmdExternal(\n\t\t\t\t\tid !== null ? id : this.identifier(),\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"import\":\n\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\tcase \"script\":\n\t\t\t\treturn getSourceForScriptExternal(request, runtimeTemplate);\n\t\t\tcase \"module\": {\n\t\t\t\tif (!this.buildInfo.module) {\n\t\t\t\t\tif (!runtimeTemplate.supportsDynamicImport()) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" +\n\t\t\t\t\t\t\t\t(runtimeTemplate.supportsEcmaScriptModuleSyntax()\n\t\t\t\t\t\t\t\t\t? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\"\n\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\t\t}\n\t\t\t\tif (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn getSourceForModuleExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tmoduleGraph.getExportsInfo(this),\n\t\t\t\t\truntime,\n\t\t\t\t\truntimeTemplate.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"var\":\n\t\t\tcase \"promise\":\n\t\t\tcase \"const\":\n\t\t\tcase \"let\":\n\t\t\tcase \"assign\":\n\t\t\tdefault:\n\t\t\t\treturn getSourceForDefaultCase(\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope\n\t}) {\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tswitch (externalType) {\n\t\t\tcase \"asset\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"javascript\",\n\t\t\t\t\tnew RawSource(`module.exports = ${JSON.stringify(request)};`)\n\t\t\t\t);\n\t\t\t\tconst data = new Map();\n\t\t\t\tdata.set(\"url\", request);\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\n\t\t\t}\n\t\t\tcase \"css-import\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tnew RawSource(`@import url(${JSON.stringify(request)});`)\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst sourceData = this._getSourceData(\n\t\t\t\t\trequest,\n\t\t\t\t\texternalType,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime\n\t\t\t\t);\n\n\t\t\t\tlet sourceString = sourceData.expression;\n\t\t\t\tif (sourceData.iife)\n\t\t\t\t\tsourceString = `(function() { return ${sourceString}; }())`;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tsourceString = `${\n\t\t\t\t\t\truntimeTemplate.supportsConst() ? \"const\" : \"var\"\n\t\t\t\t\t} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsourceString = `module.exports = ${sourceString};`;\n\t\t\t\t}\n\t\t\t\tif (sourceData.init)\n\t\t\t\t\tsourceString = `${sourceData.init}\\n${sourceString}`;\n\n\t\t\t\tlet data = undefined;\n\t\t\t\tif (sourceData.chunkInitFragments) {\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tdata.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n\t\t\t\t}\n\n\t\t\t\tconst sources = new Map();\n\t\t\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\tnew OriginalSource(sourceString, this.identifier())\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsources.set(\"javascript\", new RawSource(sourceString));\n\t\t\t\t}\n\n\t\t\t\tlet runtimeRequirements = sourceData.runtimeRequirements;\n\t\t\t\tif (!concatenationScope) {\n\t\t\t\t\tif (!runtimeRequirements) {\n\t\t\t\t\t\truntimeRequirements = RUNTIME_REQUIREMENTS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst set = new Set(runtimeRequirements);\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\truntimeRequirements = set;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements:\n\t\t\t\t\t\truntimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tconst { chunkGraph } = context;\n\t\thash.update(\n\t\t\t`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(\n\t\t\t\tchunkGraph.moduleGraph\n\t\t\t)}`\n\t\t);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.request);\n\t\twrite(this.externalType);\n\t\twrite(this.userRequest);\n\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.request = read();\n\t\tthis.externalType = read();\n\t\tthis.userRequest = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\n\nmodule.exports = ExternalModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}