{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar memoize = require(\"../util/memoize\");\nvar LAZY_TARGET = Symbol(\"lazy serialization target\");\nvar LAZY_SERIALIZED_VALUE = Symbol(\"lazy serialization data\");\n\n/**\n * @template DeserializedType\n * @template SerializedType\n */\nvar SerializerMiddleware = /*#__PURE__*/function () {\n  function SerializerMiddleware() {\n    _classCallCheck(this, SerializerMiddleware);\n  }\n  _createClass(SerializerMiddleware, [{\n    key: \"serialize\",\n    value: /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {DeserializedType} data data\n     * @param {Object} context context object\n     * @returns {SerializedType|Promise<SerializedType>} serialized data\n     */\n    function serialize(data, context) {\n      var AbstractMethodError = require(\"../AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {SerializedType} data data\n     * @param {Object} context context object\n     * @returns {DeserializedType|Promise<DeserializedType>} deserialized data\n     */\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(data, context) {\n      var AbstractMethodError = require(\"../AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n\n    /**\n     * @param {any | function(): Promise<any> | any} value contained value or function to value\n     * @param {SerializerMiddleware<any, any>} target target middleware\n     * @param {object=} options lazy options\n     * @param {any=} serializedValue serialized value\n     * @returns {function(): Promise<any> | any} lazy function\n     */\n  }], [{\n    key: \"createLazy\",\n    value: function createLazy(value, target) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var serializedValue = arguments.length > 3 ? arguments[3] : undefined;\n      if (SerializerMiddleware.isLazy(value, target)) return value;\n      var fn = typeof value === \"function\" ? value : function () {\n        return value;\n      };\n      fn[LAZY_TARGET] = target;\n      /** @type {any} */\n      fn.options = options;\n      fn[LAZY_SERIALIZED_VALUE] = serializedValue;\n      return fn;\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} fn lazy function\n     * @param {SerializerMiddleware<any, any>=} target target middleware\n     * @returns {boolean} true, when fn is a lazy function (optionally of that target)\n     */\n  }, {\n    key: \"isLazy\",\n    value: function isLazy(fn, target) {\n      if (typeof fn !== \"function\") return false;\n      var t = fn[LAZY_TARGET];\n      return target ? t === target : !!t;\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} fn lazy function\n     * @returns {object} options\n     */\n  }, {\n    key: \"getLazyOptions\",\n    value: function getLazyOptions(fn) {\n      if (typeof fn !== \"function\") return undefined;\n      return (/** @type {any} */fn.options\n      );\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} fn lazy function\n     * @returns {any} serialized value\n     */\n  }, {\n    key: \"getLazySerializedValue\",\n    value: function getLazySerializedValue(fn) {\n      if (typeof fn !== \"function\") return undefined;\n      return fn[LAZY_SERIALIZED_VALUE];\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} fn lazy function\n     * @param {any} value serialized value\n     * @returns {void}\n     */\n  }, {\n    key: \"setLazySerializedValue\",\n    value: function setLazySerializedValue(fn, value) {\n      fn[LAZY_SERIALIZED_VALUE] = value;\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} lazy lazy function\n     * @param {function(any): Promise<any> | any} serialize serialize function\n     * @returns {function(): Promise<any> | any} new lazy\n     */\n  }, {\n    key: \"serializeLazy\",\n    value: function serializeLazy(lazy, serialize) {\n      var fn = memoize(function () {\n        var r = lazy();\n        if (r && typeof r.then === \"function\") {\n          return r.then(function (data) {\n            return data && serialize(data);\n          });\n        }\n        return serialize(r);\n      });\n      fn[LAZY_TARGET] = lazy[LAZY_TARGET];\n      /** @type {any} */\n      fn.options = /** @type {any} */lazy.options;\n      lazy[LAZY_SERIALIZED_VALUE] = fn;\n      return fn;\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} lazy lazy function\n     * @param {function(any): Promise<any> | any} deserialize deserialize function\n     * @returns {function(): Promise<any> | any} new lazy\n     */\n  }, {\n    key: \"deserializeLazy\",\n    value: function deserializeLazy(lazy, deserialize) {\n      var fn = memoize(function () {\n        var r = lazy();\n        if (r && typeof r.then === \"function\") {\n          return r.then(function (data) {\n            return deserialize(data);\n          });\n        }\n        return deserialize(r);\n      });\n      fn[LAZY_TARGET] = lazy[LAZY_TARGET];\n      /** @type {any} */\n      fn.options = /** @type {any} */lazy.options;\n      fn[LAZY_SERIALIZED_VALUE] = lazy;\n      return fn;\n    }\n\n    /**\n     * @param {function(): Promise<any> | any} lazy lazy function\n     * @returns {function(): Promise<any> | any} new lazy\n     */\n  }, {\n    key: \"unMemoizeLazy\",\n    value: function unMemoizeLazy(lazy) {\n      if (!SerializerMiddleware.isLazy(lazy)) return lazy;\n      var fn = function fn() {\n        throw new Error(\"A lazy value that has been unmemorized can't be called again\");\n      };\n      fn[LAZY_SERIALIZED_VALUE] = SerializerMiddleware.unMemoizeLazy(lazy[LAZY_SERIALIZED_VALUE]);\n      fn[LAZY_TARGET] = lazy[LAZY_TARGET];\n      fn.options = /** @type {any} */lazy.options;\n      return fn;\n    }\n  }]);\n  return SerializerMiddleware;\n}();\nmodule.exports = SerializerMiddleware;","map":{"version":3,"names":["memoize","require","LAZY_TARGET","Symbol","LAZY_SERIALIZED_VALUE","SerializerMiddleware","data","context","AbstractMethodError","value","target","options","serializedValue","isLazy","fn","t","undefined","lazy","serialize","r","then","deserialize","Error","unMemoizeLazy","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/serialization/SerializerMiddleware.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\n\nconst LAZY_TARGET = Symbol(\"lazy serialization target\");\nconst LAZY_SERIALIZED_VALUE = Symbol(\"lazy serialization data\");\n\n/**\n * @template DeserializedType\n * @template SerializedType\n */\nclass SerializerMiddleware {\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {DeserializedType} data data\n\t * @param {Object} context context object\n\t * @returns {SerializedType|Promise<SerializedType>} serialized data\n\t */\n\tserialize(data, context) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {SerializedType} data data\n\t * @param {Object} context context object\n\t * @returns {DeserializedType|Promise<DeserializedType>} deserialized data\n\t */\n\tdeserialize(data, context) {\n\t\tconst AbstractMethodError = require(\"../AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @param {any | function(): Promise<any> | any} value contained value or function to value\n\t * @param {SerializerMiddleware<any, any>} target target middleware\n\t * @param {object=} options lazy options\n\t * @param {any=} serializedValue serialized value\n\t * @returns {function(): Promise<any> | any} lazy function\n\t */\n\tstatic createLazy(value, target, options = {}, serializedValue) {\n\t\tif (SerializerMiddleware.isLazy(value, target)) return value;\n\t\tconst fn = typeof value === \"function\" ? value : () => value;\n\t\tfn[LAZY_TARGET] = target;\n\t\t/** @type {any} */ (fn).options = options;\n\t\tfn[LAZY_SERIALIZED_VALUE] = serializedValue;\n\t\treturn fn;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} fn lazy function\n\t * @param {SerializerMiddleware<any, any>=} target target middleware\n\t * @returns {boolean} true, when fn is a lazy function (optionally of that target)\n\t */\n\tstatic isLazy(fn, target) {\n\t\tif (typeof fn !== \"function\") return false;\n\t\tconst t = fn[LAZY_TARGET];\n\t\treturn target ? t === target : !!t;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} fn lazy function\n\t * @returns {object} options\n\t */\n\tstatic getLazyOptions(fn) {\n\t\tif (typeof fn !== \"function\") return undefined;\n\t\treturn /** @type {any} */ (fn).options;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} fn lazy function\n\t * @returns {any} serialized value\n\t */\n\tstatic getLazySerializedValue(fn) {\n\t\tif (typeof fn !== \"function\") return undefined;\n\t\treturn fn[LAZY_SERIALIZED_VALUE];\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} fn lazy function\n\t * @param {any} value serialized value\n\t * @returns {void}\n\t */\n\tstatic setLazySerializedValue(fn, value) {\n\t\tfn[LAZY_SERIALIZED_VALUE] = value;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} lazy lazy function\n\t * @param {function(any): Promise<any> | any} serialize serialize function\n\t * @returns {function(): Promise<any> | any} new lazy\n\t */\n\tstatic serializeLazy(lazy, serialize) {\n\t\tconst fn = memoize(() => {\n\t\t\tconst r = lazy();\n\t\t\tif (r && typeof r.then === \"function\") {\n\t\t\t\treturn r.then(data => data && serialize(data));\n\t\t\t}\n\t\t\treturn serialize(r);\n\t\t});\n\t\tfn[LAZY_TARGET] = lazy[LAZY_TARGET];\n\t\t/** @type {any} */ (fn).options = /** @type {any} */ (lazy).options;\n\t\tlazy[LAZY_SERIALIZED_VALUE] = fn;\n\t\treturn fn;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} lazy lazy function\n\t * @param {function(any): Promise<any> | any} deserialize deserialize function\n\t * @returns {function(): Promise<any> | any} new lazy\n\t */\n\tstatic deserializeLazy(lazy, deserialize) {\n\t\tconst fn = memoize(() => {\n\t\t\tconst r = lazy();\n\t\t\tif (r && typeof r.then === \"function\") {\n\t\t\t\treturn r.then(data => deserialize(data));\n\t\t\t}\n\t\t\treturn deserialize(r);\n\t\t});\n\t\tfn[LAZY_TARGET] = lazy[LAZY_TARGET];\n\t\t/** @type {any} */ (fn).options = /** @type {any} */ (lazy).options;\n\t\tfn[LAZY_SERIALIZED_VALUE] = lazy;\n\t\treturn fn;\n\t}\n\n\t/**\n\t * @param {function(): Promise<any> | any} lazy lazy function\n\t * @returns {function(): Promise<any> | any} new lazy\n\t */\n\tstatic unMemoizeLazy(lazy) {\n\t\tif (!SerializerMiddleware.isLazy(lazy)) return lazy;\n\t\tconst fn = () => {\n\t\t\tthrow new Error(\n\t\t\t\t\"A lazy value that has been unmemorized can't be called again\"\n\t\t\t);\n\t\t};\n\t\tfn[LAZY_SERIALIZED_VALUE] = SerializerMiddleware.unMemoizeLazy(\n\t\t\tlazy[LAZY_SERIALIZED_VALUE]\n\t\t);\n\t\tfn[LAZY_TARGET] = lazy[LAZY_TARGET];\n\t\tfn.options = /** @type {any} */ (lazy).options;\n\t\treturn fn;\n\t}\n}\n\nmodule.exports = SerializerMiddleware;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}