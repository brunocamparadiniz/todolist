{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar StartupChunkDependenciesRuntimeModule = require(\"./StartupChunkDependenciesRuntimeModule\");\nvar StartupEntrypointRuntimeModule = require(\"./StartupEntrypointRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar StartupChunkDependenciesPlugin = /*#__PURE__*/function () {\n  function StartupChunkDependenciesPlugin(options) {\n    _classCallCheck(this, StartupChunkDependenciesPlugin);\n    this.chunkLoading = options.chunkLoading;\n    this.asyncChunkLoading = typeof options.asyncChunkLoading === \"boolean\" ? options.asyncChunkLoading : true;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(StartupChunkDependenciesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.thisCompilation.tap(\"StartupChunkDependenciesPlugin\", function (compilation) {\n        var globalChunkLoading = compilation.outputOptions.chunkLoading;\n        var isEnabledForChunk = function isEnabledForChunk(chunk) {\n          var options = chunk.getEntryOptions();\n          var chunkLoading = options && options.chunkLoading !== undefined ? options.chunkLoading : globalChunkLoading;\n          return chunkLoading === _this.chunkLoading;\n        };\n        compilation.hooks.additionalTreeRuntimeRequirements.tap(\"StartupChunkDependenciesPlugin\", function (chunk, set, _ref) {\n          var chunkGraph = _ref.chunkGraph;\n          if (!isEnabledForChunk(chunk)) return;\n          if (chunkGraph.hasChunkEntryDependentChunks(chunk)) {\n            set.add(RuntimeGlobals.startup);\n            set.add(RuntimeGlobals.ensureChunk);\n            set.add(RuntimeGlobals.ensureChunkIncludeEntries);\n            compilation.addRuntimeModule(chunk, new StartupChunkDependenciesRuntimeModule(_this.asyncChunkLoading));\n          }\n        });\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.startupEntrypoint).tap(\"StartupChunkDependenciesPlugin\", function (chunk, set) {\n          if (!isEnabledForChunk(chunk)) return;\n          set.add(RuntimeGlobals.require);\n          set.add(RuntimeGlobals.ensureChunk);\n          set.add(RuntimeGlobals.ensureChunkIncludeEntries);\n          compilation.addRuntimeModule(chunk, new StartupEntrypointRuntimeModule(_this.asyncChunkLoading));\n        });\n      });\n    }\n  }]);\n  return StartupChunkDependenciesPlugin;\n}();\nmodule.exports = StartupChunkDependenciesPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","StartupChunkDependenciesRuntimeModule","StartupEntrypointRuntimeModule","StartupChunkDependenciesPlugin","options","chunkLoading","asyncChunkLoading","compiler","hooks","thisCompilation","tap","compilation","globalChunkLoading","outputOptions","isEnabledForChunk","chunk","getEntryOptions","undefined","additionalTreeRuntimeRequirements","set","chunkGraph","hasChunkEntryDependentChunks","add","startup","ensureChunk","ensureChunkIncludeEntries","addRuntimeModule","runtimeRequirementInTree","for","startupEntrypoint","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/runtime/StartupChunkDependenciesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst StartupChunkDependenciesRuntimeModule = require(\"./StartupChunkDependenciesRuntimeModule\");\nconst StartupEntrypointRuntimeModule = require(\"./StartupEntrypointRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass StartupChunkDependenciesPlugin {\n\tconstructor(options) {\n\t\tthis.chunkLoading = options.chunkLoading;\n\t\tthis.asyncChunkLoading =\n\t\t\ttypeof options.asyncChunkLoading === \"boolean\"\n\t\t\t\t? options.asyncChunkLoading\n\t\t\t\t: true;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"StartupChunkDependenciesPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst globalChunkLoading = compilation.outputOptions.chunkLoading;\n\t\t\t\tconst isEnabledForChunk = chunk => {\n\t\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\t\tconst chunkLoading =\n\t\t\t\t\t\toptions && options.chunkLoading !== undefined\n\t\t\t\t\t\t\t? options.chunkLoading\n\t\t\t\t\t\t\t: globalChunkLoading;\n\t\t\t\t\treturn chunkLoading === this.chunkLoading;\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.additionalTreeRuntimeRequirements.tap(\n\t\t\t\t\t\"StartupChunkDependenciesPlugin\",\n\t\t\t\t\t(chunk, set, { chunkGraph }) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tif (chunkGraph.hasChunkEntryDependentChunks(chunk)) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.startup);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunk);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkIncludeEntries);\n\t\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tnew StartupChunkDependenciesRuntimeModule(\n\t\t\t\t\t\t\t\t\tthis.asyncChunkLoading\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.startupEntrypoint)\n\t\t\t\t\t.tap(\"StartupChunkDependenciesPlugin\", (chunk, set) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunk);\n\t\t\t\t\t\tset.add(RuntimeGlobals.ensureChunkIncludeEntries);\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew StartupEntrypointRuntimeModule(this.asyncChunkLoading)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = StartupChunkDependenciesPlugin;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,IAAMC,qCAAqC,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AAChG,IAAME,8BAA8B,GAAGF,OAAO,CAAC,kCAAkC,CAAC;;AAElF;AAAA,IAEMG,8BAA8B;EACnC,wCAAYC,OAAO,EAAE;IAAA;IACpB,IAAI,CAACC,YAAY,GAAGD,OAAO,CAACC,YAAY;IACxC,IAAI,CAACC,iBAAiB,GACrB,OAAOF,OAAO,CAACE,iBAAiB,KAAK,SAAS,GAC3CF,OAAO,CAACE,iBAAiB,GACzB,IAAI;EACT;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,eAAe,CAACC,GAAG,CACjC,gCAAgC,EAChC,UAAAC,WAAW,EAAI;QACd,IAAMC,kBAAkB,GAAGD,WAAW,CAACE,aAAa,CAACR,YAAY;QACjE,IAAMS,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,KAAK,EAAI;UAClC,IAAMX,OAAO,GAAGW,KAAK,CAACC,eAAe,EAAE;UACvC,IAAMX,YAAY,GACjBD,OAAO,IAAIA,OAAO,CAACC,YAAY,KAAKY,SAAS,GAC1Cb,OAAO,CAACC,YAAY,GACpBO,kBAAkB;UACtB,OAAOP,YAAY,KAAK,KAAI,CAACA,YAAY;QAC1C,CAAC;QACDM,WAAW,CAACH,KAAK,CAACU,iCAAiC,CAACR,GAAG,CACtD,gCAAgC,EAChC,UAACK,KAAK,EAAEI,GAAG,QAAqB;UAAA,IAAjBC,UAAU,QAAVA,UAAU;UACxB,IAAI,CAACN,iBAAiB,CAACC,KAAK,CAAC,EAAE;UAC/B,IAAIK,UAAU,CAACC,4BAA4B,CAACN,KAAK,CAAC,EAAE;YACnDI,GAAG,CAACG,GAAG,CAACvB,cAAc,CAACwB,OAAO,CAAC;YAC/BJ,GAAG,CAACG,GAAG,CAACvB,cAAc,CAACyB,WAAW,CAAC;YACnCL,GAAG,CAACG,GAAG,CAACvB,cAAc,CAAC0B,yBAAyB,CAAC;YACjDd,WAAW,CAACe,gBAAgB,CAC3BX,KAAK,EACL,IAAId,qCAAqC,CACxC,KAAI,CAACK,iBAAiB,CACtB,CACD;UACF;QACD,CAAC,CACD;QACDK,WAAW,CAACH,KAAK,CAACmB,wBAAwB,CACxCC,GAAG,CAAC7B,cAAc,CAAC8B,iBAAiB,CAAC,CACrCnB,GAAG,CAAC,gCAAgC,EAAE,UAACK,KAAK,EAAEI,GAAG,EAAK;UACtD,IAAI,CAACL,iBAAiB,CAACC,KAAK,CAAC,EAAE;UAC/BI,GAAG,CAACG,GAAG,CAACvB,cAAc,CAACC,OAAO,CAAC;UAC/BmB,GAAG,CAACG,GAAG,CAACvB,cAAc,CAACyB,WAAW,CAAC;UACnCL,GAAG,CAACG,GAAG,CAACvB,cAAc,CAAC0B,yBAAyB,CAAC;UACjDd,WAAW,CAACe,gBAAgB,CAC3BX,KAAK,EACL,IAAIb,8BAA8B,CAAC,KAAI,CAACI,iBAAiB,CAAC,CAC1D;QACF,CAAC,CAAC;MACJ,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFwB,MAAM,CAACC,OAAO,GAAG5B,8BAA8B"},"metadata":{},"sourceType":"script","externalDependencies":[]}