{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar basename = require(\"./getPaths\").basename;\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = /*#__PURE__*/function () {\n  function CloneBasenamePlugin(source, target) {\n    _classCallCheck(this, CloneBasenamePlugin);\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(CloneBasenamePlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"CloneBasenamePlugin\", function (request, resolveContext, callback) {\n        var filename = basename(request.path);\n        var filePath = resolver.join(request.path, filename);\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: filePath,\n          relativePath: request.relativePath && resolver.join(request.relativePath, filename)\n        });\n        resolver.doResolve(target, obj, \"using path: \" + filePath, resolveContext, callback);\n      });\n    }\n  }]);\n  return CloneBasenamePlugin;\n}();","map":{"version":3,"names":["basename","require","module","exports","source","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","filename","path","filePath","join","obj","relativePath","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/CloneBasenamePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst basename = require(\"./getPaths\").basename;\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = class CloneBasenamePlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"CloneBasenamePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst filename = basename(request.path);\n\t\t\t\tconst filePath = resolver.join(request.path, filename);\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: filePath,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\tresolver.join(request.relativePath, filename)\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"using path: \" + filePath,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACD,QAAQ;;AAE/C;;AAEAE,MAAM,CAACC,OAAO;EACb,6BAAYC,MAAM,EAAEC,MAAM,EAAE;IAAA;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC;MAC/CC,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACJ,MAAM,CAAC,CACpBK,QAAQ,CAAC,qBAAqB,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACvE,IAAMC,QAAQ,GAAGb,QAAQ,CAACU,OAAO,CAACI,IAAI,CAAC;QACvC,IAAMC,QAAQ,GAAGT,QAAQ,CAACU,IAAI,CAACN,OAAO,CAACI,IAAI,EAAED,QAAQ,CAAC;QACtD,IAAMI,GAAG,mCACLP,OAAO;UACVI,IAAI,EAAEC,QAAQ;UACdG,YAAY,EACXR,OAAO,CAACQ,YAAY,IACpBZ,QAAQ,CAACU,IAAI,CAACN,OAAO,CAACQ,YAAY,EAAEL,QAAQ;QAAC,EAC9C;QACDP,QAAQ,CAACa,SAAS,CACjBd,MAAM,EACNY,GAAG,EACH,cAAc,GAAGF,QAAQ,EACzBJ,cAAc,EACdC,QAAQ,CACR;MACF,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}