{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _toConsumableArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar HotUpdateChunk = require(\"../HotUpdateChunk\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar SelfModuleFactory = require(\"../SelfModuleFactory\");\nvar CssExportDependency = require(\"../dependencies/CssExportDependency\");\nvar CssImportDependency = require(\"../dependencies/CssImportDependency\");\nvar CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nvar CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nvar CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nvar StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nvar _require2 = require(\"../util/comparators\"),\n  compareModulesByIdentifier = _require2.compareModulesByIdentifier;\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar createHash = require(\"../util/createHash\");\nvar memoize = require(\"../util/memoize\");\nvar nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nvar CssExportsGenerator = require(\"./CssExportsGenerator\");\nvar CssGenerator = require(\"./CssGenerator\");\nvar CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssExperimentOptions} CssExperimentOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nvar getCssLoadingRuntimeModule = memoize(function () {\n  return require(\"./CssLoadingRuntimeModule\");\n});\nvar getSchema = function getSchema(name) {\n  var _require3 = require(\"../../schemas/WebpackOptions.json\"),\n    definitions = _require3.definitions;\n  return {\n    definitions: definitions,\n    oneOf: [{\n      $ref: \"#/definitions/\".concat(name)\n    }]\n  };\n};\nvar validateGeneratorOptions = createSchemaValidation(require(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"), function () {\n  return getSchema(\"CssGeneratorOptions\");\n}, {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"parser\"\n});\nvar validateParserOptions = createSchemaValidation(require(\"../../schemas/plugins/css/CssParserOptions.check.js\"), function () {\n  return getSchema(\"CssParserOptions\");\n}, {\n  name: \"Css Modules Plugin\",\n  baseDataPath: \"parser\"\n});\nvar escapeCss = function escapeCss(str, omitOptionalUnderscore) {\n  var escaped = \"\".concat(str).replace(\n  // cspell:word uffff\n  /[^a-zA-Z0-9_\\u0081-\\uffff-]/g, function (s) {\n    return \"\\\\\".concat(s);\n  });\n  return !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped) ? \"_\".concat(escaped) : escaped;\n};\nvar plugin = \"CssModulesPlugin\";\nvar CssModulesPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {CssExperimentOptions} options options\n   */\n  function CssModulesPlugin(_ref) {\n    var _ref$exportsOnly = _ref.exportsOnly,\n      exportsOnly = _ref$exportsOnly === void 0 ? false : _ref$exportsOnly;\n    _classCallCheck(this, CssModulesPlugin);\n    this._exportsOnly = exportsOnly;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(CssModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(plugin, function (compilation, _ref2) {\n        var normalModuleFactory = _ref2.normalModuleFactory;\n        var selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n        compilation.dependencyFactories.set(CssUrlDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(CssUrlDependency, new CssUrlDependency.Template());\n        compilation.dependencyTemplates.set(CssLocalIdentifierDependency, new CssLocalIdentifierDependency.Template());\n        compilation.dependencyFactories.set(CssSelfLocalIdentifierDependency, selfFactory);\n        compilation.dependencyTemplates.set(CssSelfLocalIdentifierDependency, new CssSelfLocalIdentifierDependency.Template());\n        compilation.dependencyTemplates.set(CssExportDependency, new CssExportDependency.Template());\n        compilation.dependencyFactories.set(CssImportDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(CssImportDependency, new CssImportDependency.Template());\n        compilation.dependencyTemplates.set(StaticExportsDependency, new StaticExportsDependency.Template());\n        normalModuleFactory.hooks.createParser.for(\"css\").tap(plugin, function (parserOptions) {\n          validateParserOptions(parserOptions);\n          return new CssParser();\n        });\n        normalModuleFactory.hooks.createParser.for(\"css/global\").tap(plugin, function (parserOptions) {\n          validateParserOptions(parserOptions);\n          return new CssParser({\n            allowPseudoBlocks: false,\n            allowModeSwitch: false\n          });\n        });\n        normalModuleFactory.hooks.createParser.for(\"css/module\").tap(plugin, function (parserOptions) {\n          validateParserOptions(parserOptions);\n          return new CssParser({\n            defaultMode: \"local\"\n          });\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"css\").tap(plugin, function (generatorOptions) {\n          validateGeneratorOptions(generatorOptions);\n          return _this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"css/global\").tap(plugin, function (generatorOptions) {\n          validateGeneratorOptions(generatorOptions);\n          return _this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"css/module\").tap(plugin, function (generatorOptions) {\n          validateGeneratorOptions(generatorOptions);\n          return _this._exportsOnly ? new CssExportsGenerator() : new CssGenerator();\n        });\n        var orderedCssModulesPerChunk = new WeakMap();\n        compilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", function () {\n          var chunkGraph = compilation.chunkGraph;\n          var _iterator = _createForOfIteratorHelper(compilation.chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var chunk = _step.value;\n              if (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n                orderedCssModulesPerChunk.set(chunk, _this.getOrderedChunkCssModules(chunk, chunkGraph, compilation));\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n        compilation.hooks.contentHash.tap(\"CssModulesPlugin\", function (chunk) {\n          var chunkGraph = compilation.chunkGraph,\n            _compilation$outputOp = compilation.outputOptions,\n            hashSalt = _compilation$outputOp.hashSalt,\n            hashDigest = _compilation$outputOp.hashDigest,\n            hashDigestLength = _compilation$outputOp.hashDigestLength,\n            hashFunction = _compilation$outputOp.hashFunction;\n          var modules = orderedCssModulesPerChunk.get(chunk);\n          if (modules === undefined) return;\n          var hash = createHash(hashFunction);\n          if (hashSalt) hash.update(hashSalt);\n          var _iterator2 = _createForOfIteratorHelper(modules),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _module = _step2.value;\n              hash.update(chunkGraph.getModuleHash(_module, chunk.runtime));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          var digest = /** @type {string} */hash.digest(hashDigest);\n          chunk.contentHash.css = nonNumericOnlyHash(digest, hashDigestLength);\n        });\n        compilation.hooks.renderManifest.tap(plugin, function (result, options) {\n          var chunkGraph = compilation.chunkGraph;\n          var hash = options.hash,\n            chunk = options.chunk,\n            codeGenerationResults = options.codeGenerationResults;\n          if (chunk instanceof HotUpdateChunk) return result;\n          var modules = orderedCssModulesPerChunk.get(chunk);\n          if (modules !== undefined) {\n            result.push({\n              render: function render() {\n                return _this.renderChunk({\n                  chunk: chunk,\n                  chunkGraph: chunkGraph,\n                  codeGenerationResults: codeGenerationResults,\n                  uniqueName: compilation.outputOptions.uniqueName,\n                  modules: modules\n                });\n              },\n              filenameTemplate: CssModulesPlugin.getChunkFilenameTemplate(chunk, compilation.outputOptions),\n              pathOptions: {\n                hash: hash,\n                runtime: chunk.runtime,\n                chunk: chunk,\n                contentHashType: \"css\"\n              },\n              identifier: \"css\".concat(chunk.id),\n              hash: chunk.contentHash.css\n            });\n          }\n          return result;\n        });\n        var enabledChunks = new WeakSet();\n        var handler = function handler(chunk, set) {\n          if (enabledChunks.has(chunk)) {\n            return;\n          }\n          enabledChunks.add(chunk);\n          set.add(RuntimeGlobals.publicPath);\n          set.add(RuntimeGlobals.getChunkCssFilename);\n          set.add(RuntimeGlobals.hasOwnProperty);\n          set.add(RuntimeGlobals.moduleFactoriesAddOnly);\n          set.add(RuntimeGlobals.makeNamespaceObject);\n          var CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n          compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n        };\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hasCssModules).tap(plugin, handler);\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(plugin, handler);\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(plugin, handler);\n      });\n    }\n  }, {\n    key: \"getModulesInOrder\",\n    value: function getModulesInOrder(chunk, modules, compilation) {\n      if (!modules) return [];\n      var modulesList = _toConsumableArray(modules);\n\n      // Get ordered list of modules per chunk group\n      // Lists are in reverse order to allow to use Array.pop()\n      var modulesByChunkGroup = Array.from(chunk.groupsIterable, function (chunkGroup) {\n        var sortedModules = modulesList.map(function (module) {\n          return {\n            module: module,\n            index: chunkGroup.getModulePostOrderIndex(module)\n          };\n        }).filter(function (item) {\n          return item.index !== undefined;\n        }).sort(function (a, b) {\n          return b.index - a.index;\n        }).map(function (item) {\n          return item.module;\n        });\n        return {\n          list: sortedModules,\n          set: new Set(sortedModules)\n        };\n      });\n      if (modulesByChunkGroup.length === 1) return modulesByChunkGroup[0].list.reverse();\n      var compareModuleLists = function compareModuleLists(_ref3, _ref4) {\n        var a = _ref3.list;\n        var b = _ref4.list;\n        if (a.length === 0) {\n          return b.length === 0 ? 0 : 1;\n        } else {\n          if (b.length === 0) return -1;\n          return compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n        }\n      };\n      modulesByChunkGroup.sort(compareModuleLists);\n      var finalModules = [];\n      for (;;) {\n        var failedModules = new Set();\n        var list = modulesByChunkGroup[0].list;\n        if (list.length === 0) {\n          // done, everything empty\n          break;\n        }\n        var selectedModule = list[list.length - 1];\n        var hasFailed = undefined;\n        outer: for (;;) {\n          var _iterator3 = _createForOfIteratorHelper(modulesByChunkGroup),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _step3.value,\n                _list = _step3$value.list,\n                set = _step3$value.set;\n              if (_list.length === 0) continue;\n              var lastModule = _list[_list.length - 1];\n              if (lastModule === selectedModule) continue;\n              if (!set.has(selectedModule)) continue;\n              failedModules.add(selectedModule);\n              if (failedModules.has(lastModule)) {\n                // There is a conflict, try other alternatives\n                hasFailed = lastModule;\n                continue;\n              }\n              selectedModule = lastModule;\n              hasFailed = false;\n              continue outer; // restart\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          break;\n        }\n        if (hasFailed) {\n          // There is a not resolve-able conflict with the selectedModule\n          if (compilation) {\n            // TODO print better warning\n            compilation.warnings.push(new Error(\"chunk \".concat(chunk.name || chunk.id, \"\\nConflicting order between \").concat(hasFailed.readableIdentifier(compilation.requestShortener), \" and \").concat(selectedModule.readableIdentifier(compilation.requestShortener))));\n          }\n          selectedModule = hasFailed;\n        }\n        // Insert the selected module into the final modules list\n        finalModules.push(selectedModule);\n        // Remove the selected module from all lists\n        var _iterator4 = _createForOfIteratorHelper(modulesByChunkGroup),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _step4$value = _step4.value,\n              _list2 = _step4$value.list,\n              _set = _step4$value.set;\n            var _lastModule = _list2[_list2.length - 1];\n            if (_lastModule === selectedModule) _list2.pop();else if (hasFailed && _set.has(selectedModule)) {\n              var idx = _list2.indexOf(selectedModule);\n              if (idx >= 0) _list2.splice(idx, 1);\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        modulesByChunkGroup.sort(compareModuleLists);\n      }\n      return finalModules;\n    }\n  }, {\n    key: \"getOrderedChunkCssModules\",\n    value: function getOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n      return [].concat(_toConsumableArray(this.getModulesInOrder(chunk, chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css-import\", compareModulesByIdentifier), compilation)), _toConsumableArray(this.getModulesInOrder(chunk, chunkGraph.getOrderedChunkModulesIterableBySourceType(chunk, \"css\", compareModulesByIdentifier), compilation)));\n    }\n  }, {\n    key: \"renderChunk\",\n    value: function renderChunk(_ref5) {\n      var uniqueName = _ref5.uniqueName,\n        chunk = _ref5.chunk,\n        chunkGraph = _ref5.chunkGraph,\n        codeGenerationResults = _ref5.codeGenerationResults,\n        modules = _ref5.modules;\n      var source = new ConcatSource();\n      var metaData = [];\n      var _iterator5 = _createForOfIteratorHelper(modules),\n        _step5;\n      try {\n        var _loop = function _loop() {\n          var module = _step5.value;\n          try {\n            var codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n            var s = codeGenResult.sources.get(\"css\") || codeGenResult.sources.get(\"css-import\");\n            if (s) {\n              source.add(s);\n              source.add(\"\\n\");\n            }\n            var exports = codeGenResult.data && codeGenResult.data.get(\"css-exports\");\n            var moduleId = chunkGraph.getModuleId(module) + \"\";\n            metaData.push(\"\".concat(exports ? Array.from(exports, function (_ref6) {\n              var _ref7 = _slicedToArray(_ref6, 2),\n                n = _ref7[0],\n                v = _ref7[1];\n              var shortcutValue = \"\".concat(uniqueName ? uniqueName + \"-\" : \"\").concat(moduleId, \"-\").concat(n);\n              return v === shortcutValue ? \"\".concat(escapeCss(n), \"/\") : v === \"--\" + shortcutValue ? \"\".concat(escapeCss(n), \"%\") : \"\".concat(escapeCss(n), \"(\").concat(escapeCss(v), \")\");\n            }).join(\"\") : \"\").concat(escapeCss(moduleId)));\n          } catch (e) {\n            e.message += \"\\nduring rendering of css \".concat(module.identifier());\n            throw e;\n          }\n        };\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      source.add(\"head{--webpack-\".concat(escapeCss((uniqueName ? uniqueName + \"-\" : \"\") + chunk.id, true), \":\").concat(metaData.join(\",\"), \";}\"));\n      return source;\n    }\n  }], [{\n    key: \"getChunkFilenameTemplate\",\n    value: function getChunkFilenameTemplate(chunk, outputOptions) {\n      if (chunk.cssFilenameTemplate) {\n        return chunk.cssFilenameTemplate;\n      } else if (chunk.canBeInitial()) {\n        return outputOptions.cssFilename;\n      } else {\n        return outputOptions.cssChunkFilename;\n      }\n    }\n  }, {\n    key: \"chunkHasCss\",\n    value: function chunkHasCss(chunk, chunkGraph) {\n      return !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\") || !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\");\n    }\n  }]);\n  return CssModulesPlugin;\n}();\nmodule.exports = CssModulesPlugin;","map":{"version":3,"names":["require","ConcatSource","HotUpdateChunk","RuntimeGlobals","SelfModuleFactory","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","compareModulesByIdentifier","createSchemaValidation","createHash","memoize","nonNumericOnlyHash","CssExportsGenerator","CssGenerator","CssParser","getCssLoadingRuntimeModule","getSchema","name","definitions","oneOf","$ref","validateGeneratorOptions","baseDataPath","validateParserOptions","escapeCss","str","omitOptionalUnderscore","escaped","replace","s","test","plugin","CssModulesPlugin","exportsOnly","_exportsOnly","compiler","hooks","compilation","tap","normalModuleFactory","selfFactory","moduleGraph","dependencyFactories","set","dependencyTemplates","Template","createParser","for","parserOptions","allowPseudoBlocks","allowModeSwitch","defaultMode","createGenerator","generatorOptions","orderedCssModulesPerChunk","WeakMap","afterCodeGeneration","chunkGraph","chunks","chunk","chunkHasCss","getOrderedChunkCssModules","contentHash","outputOptions","hashSalt","hashDigest","hashDigestLength","hashFunction","modules","get","undefined","hash","update","module","getModuleHash","runtime","digest","css","renderManifest","result","options","codeGenerationResults","push","render","renderChunk","uniqueName","filenameTemplate","getChunkFilenameTemplate","pathOptions","contentHashType","identifier","id","enabledChunks","WeakSet","handler","has","add","publicPath","getChunkCssFilename","hasOwnProperty","moduleFactoriesAddOnly","makeNamespaceObject","CssLoadingRuntimeModule","addRuntimeModule","runtimeRequirementInTree","hasCssModules","ensureChunkHandlers","hmrDownloadUpdateHandlers","modulesList","modulesByChunkGroup","Array","from","groupsIterable","chunkGroup","sortedModules","map","index","getModulePostOrderIndex","filter","item","sort","a","b","list","Set","length","reverse","compareModuleLists","finalModules","failedModules","selectedModule","hasFailed","outer","lastModule","warnings","Error","readableIdentifier","requestShortener","pop","idx","indexOf","splice","getModulesInOrder","getOrderedChunkModulesIterableBySourceType","source","metaData","codeGenResult","sources","exports","data","moduleId","getModuleId","n","v","shortcutValue","join","e","message","cssFilenameTemplate","canBeInitial","cssFilename","cssChunkFilename","getChunkModulesIterableBySourceType"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/css/CssModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst SelfModuleFactory = require(\"../SelfModuleFactory\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst { compareModulesByIdentifier } = require(\"../util/comparators\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst createHash = require(\"../util/createHash\");\nconst memoize = require(\"../util/memoize\");\nconst nonNumericOnlyHash = require(\"../util/nonNumericOnlyHash\");\nconst CssExportsGenerator = require(\"./CssExportsGenerator\");\nconst CssGenerator = require(\"./CssGenerator\");\nconst CssParser = require(\"./CssParser\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").CssExperimentOptions} CssExperimentOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nconst getCssLoadingRuntimeModule = memoize(() =>\n\trequire(\"./CssLoadingRuntimeModule\")\n);\n\nconst getSchema = name => {\n\tconst { definitions } = require(\"../../schemas/WebpackOptions.json\");\n\treturn {\n\t\tdefinitions,\n\t\toneOf: [{ $ref: `#/definitions/${name}` }]\n\t};\n};\n\nconst validateGeneratorOptions = createSchemaValidation(\n\trequire(\"../../schemas/plugins/css/CssGeneratorOptions.check.js\"),\n\t() => getSchema(\"CssGeneratorOptions\"),\n\t{\n\t\tname: \"Css Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\nconst validateParserOptions = createSchemaValidation(\n\trequire(\"../../schemas/plugins/css/CssParserOptions.check.js\"),\n\t() => getSchema(\"CssParserOptions\"),\n\t{\n\t\tname: \"Css Modules Plugin\",\n\t\tbaseDataPath: \"parser\"\n\t}\n);\n\nconst escapeCss = (str, omitOptionalUnderscore) => {\n\tconst escaped = `${str}`.replace(\n\t\t// cspell:word uffff\n\t\t/[^a-zA-Z0-9_\\u0081-\\uffff-]/g,\n\t\ts => `\\\\${s}`\n\t);\n\treturn !omitOptionalUnderscore && /^(?!--)[0-9_-]/.test(escaped)\n\t\t? `_${escaped}`\n\t\t: escaped;\n};\n\nconst plugin = \"CssModulesPlugin\";\n\nclass CssModulesPlugin {\n\t/**\n\t * @param {CssExperimentOptions} options options\n\t */\n\tconstructor({ exportsOnly = false }) {\n\t\tthis._exportsOnly = exportsOnly;\n\t}\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tplugin,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst selfFactory = new SelfModuleFactory(compilation.moduleGraph);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssUrlDependency,\n\t\t\t\t\tnew CssUrlDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssLocalIdentifierDependency,\n\t\t\t\t\tnew CssLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tselfFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssSelfLocalIdentifierDependency,\n\t\t\t\t\tnew CssSelfLocalIdentifierDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssExportDependency,\n\t\t\t\t\tnew CssExportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tCssImportDependency,\n\t\t\t\t\tnew CssImportDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tStaticExportsDependency,\n\t\t\t\t\tnew StaticExportsDependency.Template()\n\t\t\t\t);\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css/global\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\tallowPseudoBlocks: false,\n\t\t\t\t\t\t\tallowModeSwitch: false\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"css/module\")\n\t\t\t\t\t.tap(plugin, parserOptions => {\n\t\t\t\t\t\tvalidateParserOptions(parserOptions);\n\t\t\t\t\t\treturn new CssParser({\n\t\t\t\t\t\t\tdefaultMode: \"local\"\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css/global\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"css/module\")\n\t\t\t\t\t.tap(plugin, generatorOptions => {\n\t\t\t\t\t\tvalidateGeneratorOptions(generatorOptions);\n\t\t\t\t\t\treturn this._exportsOnly\n\t\t\t\t\t\t\t? new CssExportsGenerator()\n\t\t\t\t\t\t\t: new CssGenerator();\n\t\t\t\t\t});\n\t\t\t\tconst orderedCssModulesPerChunk = new WeakMap();\n\t\t\t\tcompilation.hooks.afterCodeGeneration.tap(\"CssModulesPlugin\", () => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\tif (CssModulesPlugin.chunkHasCss(chunk, chunkGraph)) {\n\t\t\t\t\t\t\torderedCssModulesPerChunk.set(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tthis.getOrderedChunkCssModules(chunk, chunkGraph, compilation)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.contentHash.tap(\"CssModulesPlugin\", chunk => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\toutputOptions: {\n\t\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\t\thashFunction\n\t\t\t\t\t\t}\n\t\t\t\t\t} = compilation;\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules === undefined) return;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\thash.update(chunkGraph.getModuleHash(module, chunk.runtime));\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.css = nonNumericOnlyHash(digest, hashDigestLength);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.renderManifest.tap(plugin, (result, options) => {\n\t\t\t\t\tconst { chunkGraph } = compilation;\n\t\t\t\t\tconst { hash, chunk, codeGenerationResults } = options;\n\n\t\t\t\t\tif (chunk instanceof HotUpdateChunk) return result;\n\n\t\t\t\t\tconst modules = orderedCssModulesPerChunk.get(chunk);\n\t\t\t\t\tif (modules !== undefined) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderChunk({\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\t\t\t\tcodeGenerationResults,\n\t\t\t\t\t\t\t\t\tuniqueName: compilation.outputOptions.uniqueName,\n\t\t\t\t\t\t\t\t\tmodules\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tfilenameTemplate: CssModulesPlugin.getChunkFilenameTemplate(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\truntime: chunk.runtime,\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"css\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `css${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.contentHash.css\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t\tconst enabledChunks = new WeakSet();\n\t\t\t\tconst handler = (chunk, set) => {\n\t\t\t\t\tif (enabledChunks.has(chunk)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tenabledChunks.add(chunk);\n\n\t\t\t\t\tset.add(RuntimeGlobals.publicPath);\n\t\t\t\t\tset.add(RuntimeGlobals.getChunkCssFilename);\n\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\tset.add(RuntimeGlobals.makeNamespaceObject);\n\n\t\t\t\t\tconst CssLoadingRuntimeModule = getCssLoadingRuntimeModule();\n\t\t\t\t\tcompilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set));\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hasCssModules)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.hmrDownloadUpdateHandlers)\n\t\t\t\t\t.tap(plugin, handler);\n\t\t\t}\n\t\t);\n\t}\n\n\tgetModulesInOrder(chunk, modules, compilation) {\n\t\tif (!modules) return [];\n\n\t\tconst modulesList = [...modules];\n\n\t\t// Get ordered list of modules per chunk group\n\t\t// Lists are in reverse order to allow to use Array.pop()\n\t\tconst modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n\t\t\tconst sortedModules = modulesList\n\t\t\t\t.map(module => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tindex: chunkGroup.getModulePostOrderIndex(module)\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.filter(item => item.index !== undefined)\n\t\t\t\t.sort((a, b) => b.index - a.index)\n\t\t\t\t.map(item => item.module);\n\n\t\t\treturn { list: sortedModules, set: new Set(sortedModules) };\n\t\t});\n\n\t\tif (modulesByChunkGroup.length === 1)\n\t\t\treturn modulesByChunkGroup[0].list.reverse();\n\n\t\tconst compareModuleLists = ({ list: a }, { list: b }) => {\n\t\t\tif (a.length === 0) {\n\t\t\t\treturn b.length === 0 ? 0 : 1;\n\t\t\t} else {\n\t\t\t\tif (b.length === 0) return -1;\n\t\t\t\treturn compareModulesByIdentifier(a[a.length - 1], b[b.length - 1]);\n\t\t\t}\n\t\t};\n\n\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\n\t\tconst finalModules = [];\n\n\t\tfor (;;) {\n\t\t\tconst failedModules = new Set();\n\t\t\tconst list = modulesByChunkGroup[0].list;\n\t\t\tif (list.length === 0) {\n\t\t\t\t// done, everything empty\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet selectedModule = list[list.length - 1];\n\t\t\tlet hasFailed = undefined;\n\t\t\touter: for (;;) {\n\t\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\t\tif (list.length === 0) continue;\n\t\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\t\tif (lastModule === selectedModule) continue;\n\t\t\t\t\tif (!set.has(selectedModule)) continue;\n\t\t\t\t\tfailedModules.add(selectedModule);\n\t\t\t\t\tif (failedModules.has(lastModule)) {\n\t\t\t\t\t\t// There is a conflict, try other alternatives\n\t\t\t\t\t\thasFailed = lastModule;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tselectedModule = lastModule;\n\t\t\t\t\thasFailed = false;\n\t\t\t\t\tcontinue outer; // restart\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (hasFailed) {\n\t\t\t\t// There is a not resolve-able conflict with the selectedModule\n\t\t\t\tif (compilation) {\n\t\t\t\t\t// TODO print better warning\n\t\t\t\t\tcompilation.warnings.push(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t`chunk ${\n\t\t\t\t\t\t\t\tchunk.name || chunk.id\n\t\t\t\t\t\t\t}\\nConflicting order between ${hasFailed.readableIdentifier(\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)} and ${selectedModule.readableIdentifier(\n\t\t\t\t\t\t\t\tcompilation.requestShortener\n\t\t\t\t\t\t\t)}`\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tselectedModule = hasFailed;\n\t\t\t}\n\t\t\t// Insert the selected module into the final modules list\n\t\t\tfinalModules.push(selectedModule);\n\t\t\t// Remove the selected module from all lists\n\t\t\tfor (const { list, set } of modulesByChunkGroup) {\n\t\t\t\tconst lastModule = list[list.length - 1];\n\t\t\t\tif (lastModule === selectedModule) list.pop();\n\t\t\t\telse if (hasFailed && set.has(selectedModule)) {\n\t\t\t\t\tconst idx = list.indexOf(selectedModule);\n\t\t\t\t\tif (idx >= 0) list.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmodulesByChunkGroup.sort(compareModuleLists);\n\t\t}\n\t\treturn finalModules;\n\t}\n\n\tgetOrderedChunkCssModules(chunk, chunkGraph, compilation) {\n\t\treturn [\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\tchunk,\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t),\n\t\t\t...this.getModulesInOrder(\n\t\t\t\tchunk,\n\t\t\t\tchunkGraph.getOrderedChunkModulesIterableBySourceType(\n\t\t\t\t\tchunk,\n\t\t\t\t\t\"css\",\n\t\t\t\t\tcompareModulesByIdentifier\n\t\t\t\t),\n\t\t\t\tcompilation\n\t\t\t)\n\t\t];\n\t}\n\n\trenderChunk({\n\t\tuniqueName,\n\t\tchunk,\n\t\tchunkGraph,\n\t\tcodeGenerationResults,\n\t\tmodules\n\t}) {\n\t\tconst source = new ConcatSource();\n\t\tconst metaData = [];\n\t\tfor (const module of modules) {\n\t\t\ttry {\n\t\t\t\tconst codeGenResult = codeGenerationResults.get(module, chunk.runtime);\n\n\t\t\t\tconst s =\n\t\t\t\t\tcodeGenResult.sources.get(\"css\") ||\n\t\t\t\t\tcodeGenResult.sources.get(\"css-import\");\n\t\t\t\tif (s) {\n\t\t\t\t\tsource.add(s);\n\t\t\t\t\tsource.add(\"\\n\");\n\t\t\t\t}\n\t\t\t\tconst exports =\n\t\t\t\t\tcodeGenResult.data && codeGenResult.data.get(\"css-exports\");\n\t\t\t\tconst moduleId = chunkGraph.getModuleId(module) + \"\";\n\t\t\t\tmetaData.push(\n\t\t\t\t\t`${\n\t\t\t\t\t\texports\n\t\t\t\t\t\t\t? Array.from(exports, ([n, v]) => {\n\t\t\t\t\t\t\t\t\tconst shortcutValue = `${\n\t\t\t\t\t\t\t\t\t\tuniqueName ? uniqueName + \"-\" : \"\"\n\t\t\t\t\t\t\t\t\t}${moduleId}-${n}`;\n\t\t\t\t\t\t\t\t\treturn v === shortcutValue\n\t\t\t\t\t\t\t\t\t\t? `${escapeCss(n)}/`\n\t\t\t\t\t\t\t\t\t\t: v === \"--\" + shortcutValue\n\t\t\t\t\t\t\t\t\t\t? `${escapeCss(n)}%`\n\t\t\t\t\t\t\t\t\t\t: `${escapeCss(n)}(${escapeCss(v)})`;\n\t\t\t\t\t\t\t  }).join(\"\")\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t}${escapeCss(moduleId)}`\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\te.message += `\\nduring rendering of css ${module.identifier()}`;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tsource.add(\n\t\t\t`head{--webpack-${escapeCss(\n\t\t\t\t(uniqueName ? uniqueName + \"-\" : \"\") + chunk.id,\n\t\t\t\ttrue\n\t\t\t)}:${metaData.join(\",\")};}`\n\t\t);\n\t\treturn source;\n\t}\n\n\tstatic getChunkFilenameTemplate(chunk, outputOptions) {\n\t\tif (chunk.cssFilenameTemplate) {\n\t\t\treturn chunk.cssFilenameTemplate;\n\t\t} else if (chunk.canBeInitial()) {\n\t\t\treturn outputOptions.cssFilename;\n\t\t} else {\n\t\t\treturn outputOptions.cssChunkFilename;\n\t\t}\n\t}\n\n\tstatic chunkHasCss(chunk, chunkGraph) {\n\t\treturn (\n\t\t\t!!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css\") ||\n\t\t\t!!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css-import\")\n\t\t);\n\t}\n}\n\nmodule.exports = CssModulesPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}