{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar RuntimeModule = require(\"../RuntimeModule\");\nvar Template = require(\"../Template\");\nvar _require = require(\"../javascript/JavascriptModulesPlugin\"),\n  getChunkFilenameTemplate = _require.getChunkFilenameTemplate,\n  chunkHasJs = _require.chunkHasJs;\nvar _require2 = require(\"../javascript/StartupHelpers\"),\n  getInitialChunkIds = _require2.getInitialChunkIds;\nvar compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nvar _require3 = require(\"../util/identifier\"),\n  getUndoPath = _require3.getUndoPath;\n\n/** @typedef {import(\"../Chunk\")} Chunk */\nvar ImportScriptsChunkLoadingRuntimeModule = /*#__PURE__*/function (_RuntimeModule) {\n  _inherits(ImportScriptsChunkLoadingRuntimeModule, _RuntimeModule);\n  var _super = _createSuper(ImportScriptsChunkLoadingRuntimeModule);\n  function ImportScriptsChunkLoadingRuntimeModule(runtimeRequirements, withCreateScriptUrl) {\n    var _this;\n    _classCallCheck(this, ImportScriptsChunkLoadingRuntimeModule);\n    _this = _super.call(this, \"importScripts chunk loading\", RuntimeModule.STAGE_ATTACH);\n    _this.runtimeRequirements = runtimeRequirements;\n    _this._withCreateScriptUrl = withCreateScriptUrl;\n    return _this;\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @returns {string} generated code\n   */\n  _createClass(ImportScriptsChunkLoadingRuntimeModule, [{\n    key: \"_generateBaseUri\",\n    value: function _generateBaseUri(chunk) {\n      var options = chunk.getEntryOptions();\n      if (options && options.baseUri) {\n        return \"\".concat(RuntimeGlobals.baseURI, \" = \").concat(JSON.stringify(options.baseUri), \";\");\n      }\n      var outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n        chunk: chunk,\n        contentHashType: \"javascript\"\n      });\n      var rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, false);\n      return \"\".concat(RuntimeGlobals.baseURI, \" = self.location + \").concat(JSON.stringify(rootOutputDir ? \"/../\" + rootOutputDir : \"\"), \";\");\n    }\n\n    /**\n     * @returns {string} runtime code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate() {\n      var chunk = this.chunk,\n        chunkGraph = this.chunkGraph,\n        _this$compilation = this.compilation,\n        runtimeTemplate = _this$compilation.runtimeTemplate,\n        _this$compilation$out = _this$compilation.outputOptions,\n        chunkLoadingGlobal = _this$compilation$out.chunkLoadingGlobal,\n        hotUpdateGlobal = _this$compilation$out.hotUpdateGlobal,\n        withCreateScriptUrl = this._withCreateScriptUrl;\n      var globalObject = runtimeTemplate.globalObject;\n      var fn = RuntimeGlobals.ensureChunkHandlers;\n      var withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n      var withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n      var withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n      var withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n      var chunkLoadingGlobalExpr = \"\".concat(globalObject, \"[\").concat(JSON.stringify(chunkLoadingGlobal), \"]\");\n      var hasJsMatcher = compileBooleanMatcher(chunkGraph.getChunkConditionMap(chunk, chunkHasJs));\n      var initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n      var stateExpression = withHmr ? \"\".concat(RuntimeGlobals.hmrRuntimeStatePrefix, \"_importScripts\") : undefined;\n      return Template.asString([withBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"1\" means \"already loaded\"', \"var installedChunks = \".concat(stateExpression ? \"\".concat(stateExpression, \" = \").concat(stateExpression, \" || \") : \"\", \"{\"), Template.indent(Array.from(initialChunkIds, function (id) {\n        return \"\".concat(JSON.stringify(id), \": 1\");\n      }).join(\",\\n\")), \"};\", \"\", withLoading ? Template.asString([\"// importScripts chunk loading\", \"var installChunk = \".concat(runtimeTemplate.basicFunction(\"data\", [runtimeTemplate.destructureArray([\"chunkIds\", \"moreModules\", \"runtime\"], \"data\"), \"for(var moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent(\"\".concat(RuntimeGlobals.moduleFactories, \"[moduleId] = moreModules[moduleId];\")), \"}\"]), \"}\", \"if(runtime) runtime(__webpack_require__);\", \"while(chunkIds.length)\", Template.indent(\"installedChunks[chunkIds.pop()] = 1;\"), \"parentChunkLoadingFunction(data);\"]), \";\")]) : \"// no chunk install function needed\", withLoading ? Template.asString([\"\".concat(fn, \".i = \").concat(runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? ['// \"1\" is the signal for \"already loaded\"', \"if(!installedChunks[chunkId]) {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : \"if(\".concat(hasJsMatcher(\"chunkId\"), \") {\"), Template.indent(\"importScripts(\".concat(withCreateScriptUrl ? \"\".concat(RuntimeGlobals.createScriptUrl, \"(\").concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId))\") : \"\".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(chunkId)\"), \");\")), \"}\"]), \"}\"] : \"installedChunks[chunkId] = 1;\"), \";\"), \"\", \"var chunkLoadingGlobal = \".concat(chunkLoadingGlobalExpr, \" = \").concat(chunkLoadingGlobalExpr, \" || [];\"), \"var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\", \"chunkLoadingGlobal.push = installChunk;\"]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"var success = false;\", \"\".concat(globalObject, \"[\").concat(JSON.stringify(hotUpdateGlobal), \"] = \").concat(runtimeTemplate.basicFunction(\"_, moreModules, runtime\", [\"for(var moduleId in moreModules) {\", Template.indent([\"if(\".concat(RuntimeGlobals.hasOwnProperty, \"(moreModules, moduleId)) {\"), Template.indent([\"currentUpdate[moduleId] = moreModules[moduleId];\", \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"success = true;\"]), \";\"), \"// start update chunk loading\", \"importScripts(\".concat(withCreateScriptUrl ? \"\".concat(RuntimeGlobals.createScriptUrl, \"(\").concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkUpdateScriptFilename, \"(chunkId))\") : \"\".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkUpdateScriptFilename, \"(chunkId)\"), \");\"), 'if(!success) throw new Error(\"Loading update chunk failed for unknown reason\");']), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"importScrips\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([\"\".concat(RuntimeGlobals.hmrDownloadManifest, \" = \").concat(runtimeTemplate.basicFunction(\"\", ['if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");', \"return fetch(\".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getUpdateManifestFilename, \"()).then(\").concat(runtimeTemplate.basicFunction(\"response\", [\"if(response.status === 404) return; // no update available\", 'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);', \"return response.json();\"]), \");\")]), \";\")]) : \"// no HMR manifest\"]);\n    }\n  }]);\n  return ImportScriptsChunkLoadingRuntimeModule;\n}(RuntimeModule);\nmodule.exports = ImportScriptsChunkLoadingRuntimeModule;","map":{"version":3,"names":["RuntimeGlobals","require","RuntimeModule","Template","getChunkFilenameTemplate","chunkHasJs","getInitialChunkIds","compileBooleanMatcher","getUndoPath","ImportScriptsChunkLoadingRuntimeModule","runtimeRequirements","withCreateScriptUrl","STAGE_ATTACH","_withCreateScriptUrl","chunk","options","getEntryOptions","baseUri","baseURI","JSON","stringify","outputName","compilation","getPath","outputOptions","contentHashType","rootOutputDir","path","chunkGraph","runtimeTemplate","chunkLoadingGlobal","hotUpdateGlobal","globalObject","fn","ensureChunkHandlers","withBaseURI","has","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","chunkLoadingGlobalExpr","hasJsMatcher","getChunkConditionMap","initialChunkIds","stateExpression","hmrRuntimeStatePrefix","undefined","asString","_generateBaseUri","indent","Array","from","id","join","basicFunction","destructureArray","hasOwnProperty","moduleFactories","createScriptUrl","publicPath","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/webworker/ImportScriptsChunkLoadingRuntimeModule.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tgetChunkFilenameTemplate,\n\tchunkHasJs\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\nclass ImportScriptsChunkLoadingRuntimeModule extends RuntimeModule {\n\tconstructor(runtimeRequirements, withCreateScriptUrl) {\n\t\tsuper(\"importScripts chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t\tthis._withCreateScriptUrl = withCreateScriptUrl;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\tfalse\n\t\t);\n\t\treturn `${RuntimeGlobals.baseURI} = self.location + ${JSON.stringify(\n\t\t\trootOutputDir ? \"/../\" + rootOutputDir : \"\"\n\t\t)};`;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst {\n\t\t\tchunk,\n\t\t\tchunkGraph,\n\t\t\tcompilation: {\n\t\t\t\truntimeTemplate,\n\t\t\t\toutputOptions: { chunkLoadingGlobal, hotUpdateGlobal }\n\t\t\t},\n\t\t\t_withCreateScriptUrl: withCreateScriptUrl\n\t\t} = this;\n\t\tconst globalObject = runtimeTemplate.globalObject;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst chunkLoadingGlobalExpr = `${globalObject}[${JSON.stringify(\n\t\t\tchunkLoadingGlobal\n\t\t)}]`;\n\t\tconst hasJsMatcher = compileBooleanMatcher(\n\t\t\tchunkGraph.getChunkConditionMap(chunk, chunkHasJs)\n\t\t);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_importScripts`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI ? this._generateBaseUri(chunk) : \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"1\" means \"already loaded\"',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 1`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// importScripts chunk loading\",\n\t\t\t\t\t\t`var installChunk = ${runtimeTemplate.basicFunction(\"data\", [\n\t\t\t\t\t\t\truntimeTemplate.destructureArray(\n\t\t\t\t\t\t\t\t[\"chunkIds\", \"moreModules\", \"runtime\"],\n\t\t\t\t\t\t\t\t\"data\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"if(runtime) runtime(__webpack_require__);\",\n\t\t\t\t\t\t\t\"while(chunkIds.length)\",\n\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkIds.pop()] = 1;\"),\n\t\t\t\t\t\t\t\"parentChunkLoadingFunction(data);\"\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${fn}.i = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t\t'// \"1\" is the signal for \"already loaded\"',\n\t\t\t\t\t\t\t\t\t\t\"if(!installedChunks[chunkId]) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t\t\t\t\t`importScripts(${\n\t\t\t\t\t\t\t\t\t\t\t\t\twithCreateScriptUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId))`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)`\n\t\t\t\t\t\t\t\t\t\t\t\t});`\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t\t: \"installedChunks[chunkId] = 1;\"\n\t\t\t\t\t\t)};`,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t`var chunkLoadingGlobal = ${chunkLoadingGlobalExpr} = ${chunkLoadingGlobalExpr} || [];`,\n\t\t\t\t\t\t\"var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\",\n\t\t\t\t\t\t\"chunkLoadingGlobal.push = installChunk;\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var success = false;\",\n\t\t\t\t\t\t\t`${globalObject}[${JSON.stringify(\n\t\t\t\t\t\t\t\thotUpdateGlobal\n\t\t\t\t\t\t\t)}] = ${runtimeTemplate.basicFunction(\"_, moreModules, runtime\", [\n\t\t\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\"currentUpdate[moduleId] = moreModules[moduleId];\",\n\t\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\"success = true;\"\n\t\t\t\t\t\t\t])};`,\n\t\t\t\t\t\t\t\"// start update chunk loading\",\n\t\t\t\t\t\t\t`importScripts(${\n\t\t\t\t\t\t\t\twithCreateScriptUrl\n\t\t\t\t\t\t\t\t\t? `${RuntimeGlobals.createScriptUrl}(${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId))`\n\t\t\t\t\t\t\t\t\t: `${RuntimeGlobals.publicPath} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId)`\n\t\t\t\t\t\t\t});`,\n\t\t\t\t\t\t\t'if(!success) throw new Error(\"Loading update chunk failed for unknown reason\");'\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"importScrips\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${\n\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t\t\t\t\t} = ${runtimeTemplate.basicFunction(\"\", [\n\t\t\t\t\t\t\t'if (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");',\n\t\t\t\t\t\t\t`return fetch(${RuntimeGlobals.publicPath} + ${\n\t\t\t\t\t\t\t\tRuntimeGlobals.getUpdateManifestFilename\n\t\t\t\t\t\t\t}()).then(${runtimeTemplate.basicFunction(\"response\", [\n\t\t\t\t\t\t\t\t\"if(response.status === 404) return; // no update available\",\n\t\t\t\t\t\t\t\t'if(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);',\n\t\t\t\t\t\t\t\t\"return response.json();\"\n\t\t\t\t\t\t\t])});`\n\t\t\t\t\t\t])};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ImportScriptsChunkLoadingRuntimeModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}