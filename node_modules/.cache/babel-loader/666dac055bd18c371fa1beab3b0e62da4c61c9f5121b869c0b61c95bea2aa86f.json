{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar ExternalsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string | undefined} type default external type\n   * @param {Externals} externals externals config\n   */\n  function ExternalsPlugin(type, externals) {\n    _classCallCheck(this, ExternalsPlugin);\n    this.type = type;\n    this.externals = externals;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(ExternalsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compile.tap(\"ExternalsPlugin\", function (_ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        new ExternalModuleFactoryPlugin(_this.type, _this.externals).apply(normalModuleFactory);\n      });\n    }\n  }]);\n  return ExternalsPlugin;\n}();\nmodule.exports = ExternalsPlugin;","map":{"version":3,"names":["ExternalModuleFactoryPlugin","require","ExternalsPlugin","type","externals","compiler","hooks","compile","tap","normalModuleFactory","apply","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ExternalsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ExternalModuleFactoryPlugin = require(\"./ExternalModuleFactoryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").Externals} Externals */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass ExternalsPlugin {\n\t/**\n\t * @param {string | undefined} type default external type\n\t * @param {Externals} externals externals config\n\t */\n\tconstructor(type, externals) {\n\t\tthis.type = type;\n\t\tthis.externals = externals;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compile.tap(\"ExternalsPlugin\", ({ normalModuleFactory }) => {\n\t\t\tnew ExternalModuleFactoryPlugin(this.type, this.externals).apply(\n\t\t\t\tnormalModuleFactory\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = ExternalsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,2BAA2B,GAAGC,OAAO,CAAC,+BAA+B,CAAC;;AAE5E;AACA;AAAA,IAEMC,eAAe;EACpB;AACD;AACA;AACA;EACC,yBAAYC,IAAI,EAAEC,SAAS,EAAE;IAAA;IAC5B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC3B;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,gBAA6B;QAAA,IAA1BC,mBAAmB,QAAnBA,mBAAmB;QACnE,IAAIT,2BAA2B,CAAC,KAAI,CAACG,IAAI,EAAE,KAAI,CAACC,SAAS,CAAC,CAACM,KAAK,CAC/DD,mBAAmB,CACnB;MACF,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFE,MAAM,CAACC,OAAO,GAAGV,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}