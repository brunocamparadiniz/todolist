{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar createMappingsSerializer = require(\"./createMappingsSerializer\");\nexports.getSourceAndMap = function (inputSource, options) {\n  var code = \"\";\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(options);\n  var _inputSource$streamCh = inputSource.streamChunks(Object.assign({}, options, {\n      finalSource: true\n    }), function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n      if (chunk !== undefined) code += chunk;\n      mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n    }, function (sourceIndex, source, sourceContent) {\n      while (sources.length < sourceIndex) {\n        sources.push(null);\n      }\n      sources[sourceIndex] = source;\n      if (sourceContent !== undefined) {\n        while (sourcesContent.length < sourceIndex) {\n          sourcesContent.push(null);\n        }\n        sourcesContent[sourceIndex] = sourceContent;\n      }\n    }, function (nameIndex, name) {\n      while (names.length < nameIndex) {\n        names.push(null);\n      }\n      names[nameIndex] = name;\n    }),\n    source = _inputSource$streamCh.source;\n  return {\n    source: source !== undefined ? source : code,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings: mappings,\n      sources: sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names: names\n    } : null\n  };\n};\nexports.getMap = function (source, options) {\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(options);\n  source.streamChunks(Object.assign({}, options, {\n    source: false,\n    finalSource: true\n  }), function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, function (sourceIndex, source, sourceContent) {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n    sources[sourceIndex] = source;\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, function (nameIndex, name) {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n    names[nameIndex] = name;\n  });\n  return mappings.length > 0 ? {\n    version: 3,\n    file: \"x\",\n    mappings: mappings,\n    sources: sources,\n    sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n    names: names\n  } : null;\n};","map":{"version":3,"names":["createMappingsSerializer","require","exports","getSourceAndMap","inputSource","options","code","mappings","sources","sourcesContent","names","addMapping","streamChunks","Object","assign","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","source","sourceContent","length","push","name","map","version","file","getMap"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack-sources/lib/helpers/getFromStreamChunks.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nexports.getSourceAndMap = (inputSource, options) => {\n\tlet code = \"\";\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tconst { source } = inputSource.streamChunks(\n\t\tObject.assign({}, options, { finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tif (chunk !== undefined) code += chunk;\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn {\n\t\tsource: source !== undefined ? source : code,\n\t\tmap:\n\t\t\tmappings.length > 0\n\t\t\t\t? {\n\t\t\t\t\t\tversion: 3,\n\t\t\t\t\t\tfile: \"x\",\n\t\t\t\t\t\tmappings,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t\tsourcesContent:\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\t\t\tnames\n\t\t\t\t  }\n\t\t\t\t: null\n\t};\n};\n\nexports.getMap = (source, options) => {\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tsource.streamChunks(\n\t\tObject.assign({}, options, { source: false, finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn mappings.length > 0\n\t\t? {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: \"x\",\n\t\t\t\tmappings,\n\t\t\t\tsources,\n\t\t\t\tsourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\tnames\n\t\t  }\n\t\t: null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}