{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _defineProperty = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"tapable\"),\n  HookMap = _require.HookMap,\n  SyncBailHook = _require.SyncBailHook,\n  SyncWaterfallHook = _require.SyncWaterfallHook;\nvar _require2 = require(\"../util/comparators\"),\n  concatComparators = _require2.concatComparators,\n  keepOriginalOrder = _require2.keepOriginalOrder;\nvar smartGrouping = require(\"../util/smartGrouping\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {import(\"../util/smartGrouping\").GroupConfig<any, object>} GroupConfig */\n\n/**\n * @typedef {Object} KnownStatsFactoryContext\n * @property {string} type\n * @property {function(string): string=} makePathsRelative\n * @property {Compilation=} compilation\n * @property {Set<Module>=} rootModules\n * @property {Map<string,Chunk[]>=} compilationFileToChunks\n * @property {Map<string,Chunk[]>=} compilationAuxiliaryFileToChunks\n * @property {RuntimeSpec=} runtime\n * @property {function(Compilation): WebpackError[]=} cachedGetErrors\n * @property {function(Compilation): WebpackError[]=} cachedGetWarnings\n */\n\n/** @typedef {KnownStatsFactoryContext & Record<string, any>} StatsFactoryContext */\nvar StatsFactory = /*#__PURE__*/function () {\n  function StatsFactory() {\n    _classCallCheck(this, StatsFactory);\n    this.hooks = Object.freeze({\n      /** @type {HookMap<SyncBailHook<[Object, any, StatsFactoryContext]>>} */\n      extract: new HookMap(function () {\n        return new SyncBailHook([\"object\", \"data\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n      filter: new HookMap(function () {\n        return new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[(function(any, any): number)[], StatsFactoryContext]>>} */\n      sort: new HookMap(function () {\n        return new SyncBailHook([\"comparators\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n      filterSorted: new HookMap(function () {\n        return new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[GroupConfig[], StatsFactoryContext]>>} */\n      groupResults: new HookMap(function () {\n        return new SyncBailHook([\"groupConfigs\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[(function(any, any): number)[], StatsFactoryContext]>>} */\n      sortResults: new HookMap(function () {\n        return new SyncBailHook([\"comparators\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n      filterResults: new HookMap(function () {\n        return new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any[], StatsFactoryContext]>>} */\n      merge: new HookMap(function () {\n        return new SyncBailHook([\"items\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any[], StatsFactoryContext]>>} */\n      result: new HookMap(function () {\n        return new SyncWaterfallHook([\"result\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any, StatsFactoryContext]>>} */\n      getItemName: new HookMap(function () {\n        return new SyncBailHook([\"item\", \"context\"]);\n      }),\n      /** @type {HookMap<SyncBailHook<[any, StatsFactoryContext]>>} */\n      getItemFactory: new HookMap(function () {\n        return new SyncBailHook([\"item\", \"context\"]);\n      })\n    });\n    var hooks = this.hooks;\n    this._caches = /** @type {Record<keyof typeof hooks, Map<string, SyncBailHook<[any[], StatsFactoryContext]>[]>>} */{};\n    for (var _i = 0, _Object$keys = Object.keys(hooks); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      this._caches[key] = new Map();\n    }\n    this._inCreate = false;\n  }\n  _createClass(StatsFactory, [{\n    key: \"_getAllLevelHooks\",\n    value: function _getAllLevelHooks(hookMap, cache, type) {\n      var cacheEntry = cache.get(type);\n      if (cacheEntry !== undefined) {\n        return cacheEntry;\n      }\n      var hooks = [];\n      var typeParts = type.split(\".\");\n      for (var i = 0; i < typeParts.length; i++) {\n        var hook = hookMap.get(typeParts.slice(i).join(\".\"));\n        if (hook) {\n          hooks.push(hook);\n        }\n      }\n      cache.set(type, hooks);\n      return hooks;\n    }\n  }, {\n    key: \"_forEachLevel\",\n    value: function _forEachLevel(hookMap, cache, type, fn) {\n      var _iterator = _createForOfIteratorHelper(this._getAllLevelHooks(hookMap, cache, type)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var hook = _step.value;\n          var result = fn(hook);\n          if (result !== undefined) return result;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_forEachLevelWaterfall\",\n    value: function _forEachLevelWaterfall(hookMap, cache, type, data, fn) {\n      var _iterator2 = _createForOfIteratorHelper(this._getAllLevelHooks(hookMap, cache, type)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var hook = _step2.value;\n          data = fn(hook, data);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return data;\n    }\n  }, {\n    key: \"_forEachLevelFilter\",\n    value: function _forEachLevelFilter(hookMap, cache, type, items, fn, forceClone) {\n      var hooks = this._getAllLevelHooks(hookMap, cache, type);\n      if (hooks.length === 0) return forceClone ? items.slice() : items;\n      var i = 0;\n      return items.filter(function (item, idx) {\n        var _iterator3 = _createForOfIteratorHelper(hooks),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var hook = _step3.value;\n            var r = fn(hook, item, idx, i);\n            if (r !== undefined) {\n              if (r) i++;\n              return r;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        i++;\n        return true;\n      });\n    }\n\n    /**\n     * @param {string} type type\n     * @param {any} data factory data\n     * @param {Omit<StatsFactoryContext, \"type\">} baseContext context used as base\n     * @returns {any} created object\n     */\n  }, {\n    key: \"create\",\n    value: function create(type, data, baseContext) {\n      if (this._inCreate) {\n        return this._create(type, data, baseContext);\n      } else {\n        try {\n          this._inCreate = true;\n          return this._create(type, data, baseContext);\n        } finally {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(this._caches); _i2 < _Object$keys2.length; _i2++) {\n            var key = _Object$keys2[_i2];\n            this._caches[key].clear();\n          }\n          this._inCreate = false;\n        }\n      }\n    }\n  }, {\n    key: \"_create\",\n    value: function _create(type, data, baseContext) {\n      var _this = this;\n      var context = _objectSpread(_objectSpread({}, baseContext), {}, _defineProperty({\n        type: type\n      }, type, data));\n      if (Array.isArray(data)) {\n        // run filter on unsorted items\n        var items = this._forEachLevelFilter(this.hooks.filter, this._caches.filter, type, data, function (h, r, idx, i) {\n          return h.call(r, context, idx, i);\n        }, true);\n\n        // sort items\n        var comparators = [];\n        this._forEachLevel(this.hooks.sort, this._caches.sort, type, function (h) {\n          return h.call(comparators, context);\n        });\n        if (comparators.length > 0) {\n          items.sort(\n          // @ts-expect-error number of arguments is correct\n          concatComparators.apply(void 0, comparators.concat([keepOriginalOrder(items)])));\n        }\n\n        // run filter on sorted items\n        var items2 = this._forEachLevelFilter(this.hooks.filterSorted, this._caches.filterSorted, type, items, function (h, r, idx, i) {\n          return h.call(r, context, idx, i);\n        }, false);\n\n        // for each item\n        var resultItems = items2.map(function (item, i) {\n          var itemContext = _objectSpread(_objectSpread({}, context), {}, {\n            _index: i\n          });\n\n          // run getItemName\n          var itemName = _this._forEachLevel(_this.hooks.getItemName, _this._caches.getItemName, \"\".concat(type, \"[]\"), function (h) {\n            return h.call(item, itemContext);\n          });\n          if (itemName) itemContext[itemName] = item;\n          var innerType = itemName ? \"\".concat(type, \"[].\").concat(itemName) : \"\".concat(type, \"[]\");\n\n          // run getItemFactory\n          var itemFactory = _this._forEachLevel(_this.hooks.getItemFactory, _this._caches.getItemFactory, innerType, function (h) {\n            return h.call(item, itemContext);\n          }) || _this;\n\n          // run item factory\n          return itemFactory.create(innerType, item, itemContext);\n        });\n\n        // sort result items\n        var comparators2 = [];\n        this._forEachLevel(this.hooks.sortResults, this._caches.sortResults, type, function (h) {\n          return h.call(comparators2, context);\n        });\n        if (comparators2.length > 0) {\n          resultItems.sort(\n          // @ts-expect-error number of arguments is correct\n          concatComparators.apply(void 0, comparators2.concat([keepOriginalOrder(resultItems)])));\n        }\n\n        // group result items\n        var groupConfigs = [];\n        this._forEachLevel(this.hooks.groupResults, this._caches.groupResults, type, function (h) {\n          return h.call(groupConfigs, context);\n        });\n        if (groupConfigs.length > 0) {\n          resultItems = smartGrouping(resultItems, groupConfigs);\n        }\n\n        // run filter on sorted result items\n        var finalResultItems = this._forEachLevelFilter(this.hooks.filterResults, this._caches.filterResults, type, resultItems, function (h, r, idx, i) {\n          return h.call(r, context, idx, i);\n        }, false);\n\n        // run merge on mapped items\n        var result = this._forEachLevel(this.hooks.merge, this._caches.merge, type, function (h) {\n          return h.call(finalResultItems, context);\n        });\n        if (result === undefined) result = finalResultItems;\n\n        // run result on merged items\n        return this._forEachLevelWaterfall(this.hooks.result, this._caches.result, type, result, function (h, r) {\n          return h.call(r, context);\n        });\n      } else {\n        var object = {};\n\n        // run extract on value\n        this._forEachLevel(this.hooks.extract, this._caches.extract, type, function (h) {\n          return h.call(object, data, context);\n        });\n\n        // run result on extracted object\n        return this._forEachLevelWaterfall(this.hooks.result, this._caches.result, type, object, function (h, r) {\n          return h.call(r, context);\n        });\n      }\n    }\n  }]);\n  return StatsFactory;\n}();\nmodule.exports = StatsFactory;","map":{"version":3,"names":["require","HookMap","SyncBailHook","SyncWaterfallHook","concatComparators","keepOriginalOrder","smartGrouping","StatsFactory","hooks","Object","freeze","extract","filter","sort","filterSorted","groupResults","sortResults","filterResults","merge","result","getItemName","getItemFactory","_caches","keys","key","Map","_inCreate","hookMap","cache","type","cacheEntry","get","undefined","typeParts","split","i","length","hook","slice","join","push","set","fn","_getAllLevelHooks","data","items","forceClone","item","idx","r","baseContext","_create","clear","context","Array","isArray","_forEachLevelFilter","h","call","comparators","_forEachLevel","items2","resultItems","map","itemContext","_index","itemName","innerType","itemFactory","create","comparators2","groupConfigs","finalResultItems","_forEachLevelWaterfall","object","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/stats/StatsFactory.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { HookMap, SyncBailHook, SyncWaterfallHook } = require(\"tapable\");\nconst { concatComparators, keepOriginalOrder } = require(\"../util/comparators\");\nconst smartGrouping = require(\"../util/smartGrouping\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {import(\"../util/smartGrouping\").GroupConfig<any, object>} GroupConfig */\n\n/**\n * @typedef {Object} KnownStatsFactoryContext\n * @property {string} type\n * @property {function(string): string=} makePathsRelative\n * @property {Compilation=} compilation\n * @property {Set<Module>=} rootModules\n * @property {Map<string,Chunk[]>=} compilationFileToChunks\n * @property {Map<string,Chunk[]>=} compilationAuxiliaryFileToChunks\n * @property {RuntimeSpec=} runtime\n * @property {function(Compilation): WebpackError[]=} cachedGetErrors\n * @property {function(Compilation): WebpackError[]=} cachedGetWarnings\n */\n\n/** @typedef {KnownStatsFactoryContext & Record<string, any>} StatsFactoryContext */\n\nclass StatsFactory {\n\tconstructor() {\n\t\tthis.hooks = Object.freeze({\n\t\t\t/** @type {HookMap<SyncBailHook<[Object, any, StatsFactoryContext]>>} */\n\t\t\textract: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"object\", \"data\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n\t\t\tfilter: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[(function(any, any): number)[], StatsFactoryContext]>>} */\n\t\t\tsort: new HookMap(() => new SyncBailHook([\"comparators\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n\t\t\tfilterSorted: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[GroupConfig[], StatsFactoryContext]>>} */\n\t\t\tgroupResults: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"groupConfigs\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[(function(any, any): number)[], StatsFactoryContext]>>} */\n\t\t\tsortResults: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"comparators\", \"context\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsFactoryContext, number, number]>>} */\n\t\t\tfilterResults: new HookMap(\n\t\t\t\t() => new SyncBailHook([\"item\", \"context\", \"index\", \"unfilteredIndex\"])\n\t\t\t),\n\t\t\t/** @type {HookMap<SyncBailHook<[any[], StatsFactoryContext]>>} */\n\t\t\tmerge: new HookMap(() => new SyncBailHook([\"items\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[any[], StatsFactoryContext]>>} */\n\t\t\tresult: new HookMap(() => new SyncWaterfallHook([\"result\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsFactoryContext]>>} */\n\t\t\tgetItemName: new HookMap(() => new SyncBailHook([\"item\", \"context\"])),\n\t\t\t/** @type {HookMap<SyncBailHook<[any, StatsFactoryContext]>>} */\n\t\t\tgetItemFactory: new HookMap(() => new SyncBailHook([\"item\", \"context\"]))\n\t\t});\n\t\tconst hooks = this.hooks;\n\t\tthis._caches =\n\t\t\t/** @type {Record<keyof typeof hooks, Map<string, SyncBailHook<[any[], StatsFactoryContext]>[]>>} */ ({});\n\t\tfor (const key of Object.keys(hooks)) {\n\t\t\tthis._caches[key] = new Map();\n\t\t}\n\t\tthis._inCreate = false;\n\t}\n\n\t_getAllLevelHooks(hookMap, cache, type) {\n\t\tconst cacheEntry = cache.get(type);\n\t\tif (cacheEntry !== undefined) {\n\t\t\treturn cacheEntry;\n\t\t}\n\t\tconst hooks = [];\n\t\tconst typeParts = type.split(\".\");\n\t\tfor (let i = 0; i < typeParts.length; i++) {\n\t\t\tconst hook = hookMap.get(typeParts.slice(i).join(\".\"));\n\t\t\tif (hook) {\n\t\t\t\thooks.push(hook);\n\t\t\t}\n\t\t}\n\t\tcache.set(type, hooks);\n\t\treturn hooks;\n\t}\n\n\t_forEachLevel(hookMap, cache, type, fn) {\n\t\tfor (const hook of this._getAllLevelHooks(hookMap, cache, type)) {\n\t\t\tconst result = fn(hook);\n\t\t\tif (result !== undefined) return result;\n\t\t}\n\t}\n\n\t_forEachLevelWaterfall(hookMap, cache, type, data, fn) {\n\t\tfor (const hook of this._getAllLevelHooks(hookMap, cache, type)) {\n\t\t\tdata = fn(hook, data);\n\t\t}\n\t\treturn data;\n\t}\n\n\t_forEachLevelFilter(hookMap, cache, type, items, fn, forceClone) {\n\t\tconst hooks = this._getAllLevelHooks(hookMap, cache, type);\n\t\tif (hooks.length === 0) return forceClone ? items.slice() : items;\n\t\tlet i = 0;\n\t\treturn items.filter((item, idx) => {\n\t\t\tfor (const hook of hooks) {\n\t\t\t\tconst r = fn(hook, item, idx, i);\n\t\t\t\tif (r !== undefined) {\n\t\t\t\t\tif (r) i++;\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t\treturn true;\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} type type\n\t * @param {any} data factory data\n\t * @param {Omit<StatsFactoryContext, \"type\">} baseContext context used as base\n\t * @returns {any} created object\n\t */\n\tcreate(type, data, baseContext) {\n\t\tif (this._inCreate) {\n\t\t\treturn this._create(type, data, baseContext);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis._inCreate = true;\n\t\t\t\treturn this._create(type, data, baseContext);\n\t\t\t} finally {\n\t\t\t\tfor (const key of Object.keys(this._caches)) this._caches[key].clear();\n\t\t\t\tthis._inCreate = false;\n\t\t\t}\n\t\t}\n\t}\n\n\t_create(type, data, baseContext) {\n\t\tconst context = {\n\t\t\t...baseContext,\n\t\t\ttype,\n\t\t\t[type]: data\n\t\t};\n\t\tif (Array.isArray(data)) {\n\t\t\t// run filter on unsorted items\n\t\t\tconst items = this._forEachLevelFilter(\n\t\t\t\tthis.hooks.filter,\n\t\t\t\tthis._caches.filter,\n\t\t\t\ttype,\n\t\t\t\tdata,\n\t\t\t\t(h, r, idx, i) => h.call(r, context, idx, i),\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\t// sort items\n\t\t\tconst comparators = [];\n\t\t\tthis._forEachLevel(this.hooks.sort, this._caches.sort, type, h =>\n\t\t\t\th.call(comparators, context)\n\t\t\t);\n\t\t\tif (comparators.length > 0) {\n\t\t\t\titems.sort(\n\t\t\t\t\t// @ts-expect-error number of arguments is correct\n\t\t\t\t\tconcatComparators(...comparators, keepOriginalOrder(items))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// run filter on sorted items\n\t\t\tconst items2 = this._forEachLevelFilter(\n\t\t\t\tthis.hooks.filterSorted,\n\t\t\t\tthis._caches.filterSorted,\n\t\t\t\ttype,\n\t\t\t\titems,\n\t\t\t\t(h, r, idx, i) => h.call(r, context, idx, i),\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\t// for each item\n\t\t\tlet resultItems = items2.map((item, i) => {\n\t\t\t\tconst itemContext = {\n\t\t\t\t\t...context,\n\t\t\t\t\t_index: i\n\t\t\t\t};\n\n\t\t\t\t// run getItemName\n\t\t\t\tconst itemName = this._forEachLevel(\n\t\t\t\t\tthis.hooks.getItemName,\n\t\t\t\t\tthis._caches.getItemName,\n\t\t\t\t\t`${type}[]`,\n\t\t\t\t\th => h.call(item, itemContext)\n\t\t\t\t);\n\t\t\t\tif (itemName) itemContext[itemName] = item;\n\t\t\t\tconst innerType = itemName ? `${type}[].${itemName}` : `${type}[]`;\n\n\t\t\t\t// run getItemFactory\n\t\t\t\tconst itemFactory =\n\t\t\t\t\tthis._forEachLevel(\n\t\t\t\t\t\tthis.hooks.getItemFactory,\n\t\t\t\t\t\tthis._caches.getItemFactory,\n\t\t\t\t\t\tinnerType,\n\t\t\t\t\t\th => h.call(item, itemContext)\n\t\t\t\t\t) || this;\n\n\t\t\t\t// run item factory\n\t\t\t\treturn itemFactory.create(innerType, item, itemContext);\n\t\t\t});\n\n\t\t\t// sort result items\n\t\t\tconst comparators2 = [];\n\t\t\tthis._forEachLevel(\n\t\t\t\tthis.hooks.sortResults,\n\t\t\t\tthis._caches.sortResults,\n\t\t\t\ttype,\n\t\t\t\th => h.call(comparators2, context)\n\t\t\t);\n\t\t\tif (comparators2.length > 0) {\n\t\t\t\tresultItems.sort(\n\t\t\t\t\t// @ts-expect-error number of arguments is correct\n\t\t\t\t\tconcatComparators(...comparators2, keepOriginalOrder(resultItems))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// group result items\n\t\t\tconst groupConfigs = [];\n\t\t\tthis._forEachLevel(\n\t\t\t\tthis.hooks.groupResults,\n\t\t\t\tthis._caches.groupResults,\n\t\t\t\ttype,\n\t\t\t\th => h.call(groupConfigs, context)\n\t\t\t);\n\t\t\tif (groupConfigs.length > 0) {\n\t\t\t\tresultItems = smartGrouping(resultItems, groupConfigs);\n\t\t\t}\n\n\t\t\t// run filter on sorted result items\n\t\t\tconst finalResultItems = this._forEachLevelFilter(\n\t\t\t\tthis.hooks.filterResults,\n\t\t\t\tthis._caches.filterResults,\n\t\t\t\ttype,\n\t\t\t\tresultItems,\n\t\t\t\t(h, r, idx, i) => h.call(r, context, idx, i),\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\t// run merge on mapped items\n\t\t\tlet result = this._forEachLevel(\n\t\t\t\tthis.hooks.merge,\n\t\t\t\tthis._caches.merge,\n\t\t\t\ttype,\n\t\t\t\th => h.call(finalResultItems, context)\n\t\t\t);\n\t\t\tif (result === undefined) result = finalResultItems;\n\n\t\t\t// run result on merged items\n\t\t\treturn this._forEachLevelWaterfall(\n\t\t\t\tthis.hooks.result,\n\t\t\t\tthis._caches.result,\n\t\t\t\ttype,\n\t\t\t\tresult,\n\t\t\t\t(h, r) => h.call(r, context)\n\t\t\t);\n\t\t} else {\n\t\t\tconst object = {};\n\n\t\t\t// run extract on value\n\t\t\tthis._forEachLevel(this.hooks.extract, this._caches.extract, type, h =>\n\t\t\t\th.call(object, data, context)\n\t\t\t);\n\n\t\t\t// run result on extracted object\n\t\t\treturn this._forEachLevelWaterfall(\n\t\t\t\tthis.hooks.result,\n\t\t\t\tthis._caches.result,\n\t\t\t\ttype,\n\t\t\t\tobject,\n\t\t\t\t(h, r) => h.call(r, context)\n\t\t\t);\n\t\t}\n\t}\n}\nmodule.exports = StatsFactory;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}