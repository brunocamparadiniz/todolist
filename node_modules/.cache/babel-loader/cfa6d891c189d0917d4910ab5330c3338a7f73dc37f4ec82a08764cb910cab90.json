{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {ResolveStepHook} source source\n   */\n  function ResultPlugin(source) {\n    _classCallCheck(this, ResultPlugin);\n    this.source = source;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(ResultPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      this.source.tapAsync(\"ResultPlugin\", function (request, resolverContext, callback) {\n        var obj = _objectSpread({}, request);\n        if (resolverContext.log) resolverContext.log(\"reporting result \" + obj.path);\n        resolver.hooks.result.callAsync(obj, resolverContext, function (err) {\n          if (err) return callback(err);\n          if (typeof resolverContext.yield === \"function\") {\n            resolverContext.yield(obj);\n            callback(null, null);\n          } else {\n            callback(null, obj);\n          }\n        });\n      });\n    }\n  }]);\n  return ResultPlugin;\n}();","map":{"version":3,"names":["module","exports","source","resolver","tapAsync","request","resolverContext","callback","obj","log","path","hooks","result","callAsync","err","yield"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/ResultPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ResultPlugin {\n\t/**\n\t * @param {ResolveStepHook} source source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tthis.source.tapAsync(\n\t\t\t\"ResultPlugin\",\n\t\t\t(request, resolverContext, callback) => {\n\t\t\t\tconst obj = { ...request };\n\t\t\t\tif (resolverContext.log)\n\t\t\t\t\tresolverContext.log(\"reporting result \" + obj.path);\n\t\t\t\tresolver.hooks.result.callAsync(obj, resolverContext, err => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (typeof resolverContext.yield === \"function\") {\n\t\t\t\t\t\tresolverContext.yield(obj);\n\t\t\t\t\t\tcallback(null, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAAA;AAAA;AAAA;AAEAA,MAAM,CAACC,OAAO;EACb;AACD;AACA;EACC,sBAAYC,MAAM,EAAE;IAAA;IACnB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MACf,IAAI,CAACD,MAAM,CAACE,QAAQ,CACnB,cAAc,EACd,UAACC,OAAO,EAAEC,eAAe,EAAEC,QAAQ,EAAK;QACvC,IAAMC,GAAG,qBAAQH,OAAO,CAAE;QAC1B,IAAIC,eAAe,CAACG,GAAG,EACtBH,eAAe,CAACG,GAAG,CAAC,mBAAmB,GAAGD,GAAG,CAACE,IAAI,CAAC;QACpDP,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,SAAS,CAACL,GAAG,EAAEF,eAAe,EAAE,UAAAQ,GAAG,EAAI;UAC5D,IAAIA,GAAG,EAAE,OAAOP,QAAQ,CAACO,GAAG,CAAC;UAC7B,IAAI,OAAOR,eAAe,CAACS,KAAK,KAAK,UAAU,EAAE;YAChDT,eAAe,CAACS,KAAK,CAACP,GAAG,CAAC;YAC1BD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;UACrB,CAAC,MAAM;YACNA,QAAQ,CAAC,IAAI,EAAEC,GAAG,CAAC;UACpB;QACD,CAAC,CAAC;MACH,CAAC,CACD;IACF;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}