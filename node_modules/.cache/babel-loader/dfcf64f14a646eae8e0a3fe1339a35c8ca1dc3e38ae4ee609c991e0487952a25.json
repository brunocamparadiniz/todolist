{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @template T @typedef {(string | Record<string, string | string[] | T>)[] | Record<string, string | string[] | T>} ContainerOptionsFormat */\n\n/**\n * @template T\n * @template N\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @param {function(string | string[], string) : N} normalizeSimple normalize a simple item\n * @param {function(T, string) : N} normalizeOptions normalize a complex item\n * @param {function(string, N): void} fn processing function\n * @returns {void}\n */\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar process = function process(options, normalizeSimple, normalizeOptions, fn) {\n  var array = function array(items) {\n    var _iterator = _createForOfIteratorHelper(items),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        if (typeof item === \"string\") {\n          fn(item, normalizeSimple(item, item));\n        } else if (item && typeof item === \"object\") {\n          object(item);\n        } else {\n          throw new Error(\"Unexpected options format\");\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n  var object = function object(obj) {\n    for (var _i = 0, _Object$entries = Object.entries(obj); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      if (typeof value === \"string\" || Array.isArray(value)) {\n        fn(key, normalizeSimple(value, key));\n      } else {\n        fn(key, normalizeOptions(value, key));\n      }\n    }\n  };\n  if (!options) {\n    return;\n  } else if (Array.isArray(options)) {\n    array(options);\n  } else if (typeof options === \"object\") {\n    object(options);\n  } else {\n    throw new Error(\"Unexpected options format\");\n  }\n};\n\n/**\n * @template T\n * @template R\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @param {function(string | string[], string) : R} normalizeSimple normalize a simple item\n * @param {function(T, string) : R} normalizeOptions normalize a complex item\n * @returns {[string, R][]} parsed options\n */\nvar parseOptions = function parseOptions(options, normalizeSimple, normalizeOptions) {\n  /** @type {[string, R][]} */\n  var items = [];\n  process(options, normalizeSimple, normalizeOptions, function (key, value) {\n    items.push([key, value]);\n  });\n  return items;\n};\n\n/**\n * @template T\n * @param {string} scope scope name\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @returns {Record<string, string | string[] | T>} options to spread or pass\n */\nvar scope = function scope(_scope, options) {\n  /** @type {Record<string, string | string[] | T>} */\n  var obj = {};\n  process(options, function (item) {\n    return (/** @type {string | string[] | T} */item\n    );\n  }, function (item) {\n    return (/** @type {string | string[] | T} */item\n    );\n  }, function (key, value) {\n    obj[key.startsWith(\"./\") ? \"\".concat(_scope).concat(key.slice(1)) : \"\".concat(_scope, \"/\").concat(key)] = value;\n  });\n  return obj;\n};\nexports.parseOptions = parseOptions;\nexports.scope = scope;","map":{"version":3,"names":["process","options","normalizeSimple","normalizeOptions","fn","array","items","item","object","Error","obj","Object","entries","key","value","Array","isArray","parseOptions","push","scope","startsWith","slice","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/container/options.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @template T @typedef {(string | Record<string, string | string[] | T>)[] | Record<string, string | string[] | T>} ContainerOptionsFormat */\n\n/**\n * @template T\n * @template N\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @param {function(string | string[], string) : N} normalizeSimple normalize a simple item\n * @param {function(T, string) : N} normalizeOptions normalize a complex item\n * @param {function(string, N): void} fn processing function\n * @returns {void}\n */\nconst process = (options, normalizeSimple, normalizeOptions, fn) => {\n\tconst array = items => {\n\t\tfor (const item of items) {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\tfn(item, normalizeSimple(item, item));\n\t\t\t} else if (item && typeof item === \"object\") {\n\t\t\t\tobject(item);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected options format\");\n\t\t\t}\n\t\t}\n\t};\n\tconst object = obj => {\n\t\tfor (const [key, value] of Object.entries(obj)) {\n\t\t\tif (typeof value === \"string\" || Array.isArray(value)) {\n\t\t\t\tfn(key, normalizeSimple(value, key));\n\t\t\t} else {\n\t\t\t\tfn(key, normalizeOptions(value, key));\n\t\t\t}\n\t\t}\n\t};\n\tif (!options) {\n\t\treturn;\n\t} else if (Array.isArray(options)) {\n\t\tarray(options);\n\t} else if (typeof options === \"object\") {\n\t\tobject(options);\n\t} else {\n\t\tthrow new Error(\"Unexpected options format\");\n\t}\n};\n\n/**\n * @template T\n * @template R\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @param {function(string | string[], string) : R} normalizeSimple normalize a simple item\n * @param {function(T, string) : R} normalizeOptions normalize a complex item\n * @returns {[string, R][]} parsed options\n */\nconst parseOptions = (options, normalizeSimple, normalizeOptions) => {\n\t/** @type {[string, R][]} */\n\tconst items = [];\n\tprocess(options, normalizeSimple, normalizeOptions, (key, value) => {\n\t\titems.push([key, value]);\n\t});\n\treturn items;\n};\n\n/**\n * @template T\n * @param {string} scope scope name\n * @param {ContainerOptionsFormat<T>} options options passed by the user\n * @returns {Record<string, string | string[] | T>} options to spread or pass\n */\nconst scope = (scope, options) => {\n\t/** @type {Record<string, string | string[] | T>} */\n\tconst obj = {};\n\tprocess(\n\t\toptions,\n\t\titem => /** @type {string | string[] | T} */ (item),\n\t\titem => /** @type {string | string[] | T} */ (item),\n\t\t(key, value) => {\n\t\t\tobj[\n\t\t\t\tkey.startsWith(\"./\") ? `${scope}${key.slice(1)}` : `${scope}/${key}`\n\t\t\t] = value;\n\t\t}\n\t);\n\treturn obj;\n};\n\nexports.parseOptions = parseOptions;\nexports.scope = scope;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}