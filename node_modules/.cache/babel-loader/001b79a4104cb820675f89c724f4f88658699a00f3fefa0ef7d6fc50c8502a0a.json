{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar _require2 = require(\"..\"),\n  RuntimeGlobals = _require2.RuntimeGlobals;\nvar HotUpdateChunk = require(\"../HotUpdateChunk\");\nvar Template = require(\"../Template\");\nvar _require3 = require(\"../javascript/ChunkHelpers\"),\n  getAllChunks = _require3.getAllChunks;\nvar _require4 = require(\"../javascript/JavascriptModulesPlugin\"),\n  getCompilationHooks = _require4.getCompilationHooks,\n  getChunkFilenameTemplate = _require4.getChunkFilenameTemplate;\nvar _require5 = require(\"../javascript/StartupHelpers\"),\n  updateHashForEntryStartup = _require5.updateHashForEntryStartup;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar ModuleChunkFormatPlugin = /*#__PURE__*/function () {\n  function ModuleChunkFormatPlugin() {\n    _classCallCheck(this, ModuleChunkFormatPlugin);\n  }\n  _createClass(ModuleChunkFormatPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.thisCompilation.tap(\"ModuleChunkFormatPlugin\", function (compilation) {\n        compilation.hooks.additionalChunkRuntimeRequirements.tap(\"ModuleChunkFormatPlugin\", function (chunk, set) {\n          if (chunk.hasRuntime()) return;\n          if (compilation.chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n            set.add(RuntimeGlobals.require);\n            set.add(RuntimeGlobals.startupEntrypoint);\n            set.add(RuntimeGlobals.externalInstallChunk);\n          }\n        });\n        var hooks = getCompilationHooks(compilation);\n        hooks.renderChunk.tap(\"ModuleChunkFormatPlugin\", function (modules, renderContext) {\n          var chunk = renderContext.chunk,\n            chunkGraph = renderContext.chunkGraph,\n            runtimeTemplate = renderContext.runtimeTemplate;\n          var hotUpdateChunk = chunk instanceof HotUpdateChunk ? chunk : null;\n          var source = new ConcatSource();\n          if (hotUpdateChunk) {\n            throw new Error(\"HMR is not implemented for module chunk format yet\");\n          } else {\n            source.add(\"export const id = \".concat(JSON.stringify(chunk.id), \";\\n\"));\n            source.add(\"export const ids = \".concat(JSON.stringify(chunk.ids), \";\\n\"));\n            source.add(\"export const modules = \");\n            source.add(modules);\n            source.add(\";\\n\");\n            var runtimeModules = chunkGraph.getChunkRuntimeModulesInOrder(chunk);\n            if (runtimeModules.length > 0) {\n              source.add(\"export const runtime =\\n\");\n              source.add(Template.renderChunkRuntimeModules(runtimeModules, renderContext));\n            }\n            var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n            if (entries.length > 0) {\n              var runtimeChunk = entries[0][1].getRuntimeChunk();\n              var currentOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n                chunk: chunk,\n                contentHashType: \"javascript\"\n              }).split(\"/\");\n\n              // remove filename, we only need the directory\n              currentOutputName.pop();\n              var getRelativePath = function getRelativePath(chunk) {\n                var baseOutputName = currentOutputName.slice();\n                var chunkOutputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n                  chunk: chunk,\n                  contentHashType: \"javascript\"\n                }).split(\"/\");\n\n                // remove common parts\n                while (baseOutputName.length > 0 && chunkOutputName.length > 0 && baseOutputName[0] === chunkOutputName[0]) {\n                  baseOutputName.shift();\n                  chunkOutputName.shift();\n                }\n                // create final path\n                return (baseOutputName.length > 0 ? \"../\".repeat(baseOutputName.length) : \"./\") + chunkOutputName.join(\"/\");\n              };\n              var entrySource = new ConcatSource();\n              entrySource.add(source);\n              entrySource.add(\";\\n\\n// load runtime\\n\");\n              entrySource.add(\"import __webpack_require__ from \".concat(JSON.stringify(getRelativePath(runtimeChunk)), \";\\n\"));\n              var startupSource = new ConcatSource();\n              startupSource.add(\"var __webpack_exec__ = \".concat(runtimeTemplate.returningFunction(\"__webpack_require__(\".concat(RuntimeGlobals.entryModuleId, \" = moduleId)\"), \"moduleId\"), \"\\n\"));\n              var loadedChunks = new Set();\n              var index = 0;\n              for (var i = 0; i < entries.length; i++) {\n                var _entries$i = _slicedToArray(entries[i], 2),\n                  _module = _entries$i[0],\n                  entrypoint = _entries$i[1];\n                var final = i + 1 === entries.length;\n                var moduleId = chunkGraph.getModuleId(_module);\n                var chunks = getAllChunks(entrypoint, runtimeChunk, undefined);\n                var _iterator = _createForOfIteratorHelper(chunks),\n                  _step;\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var _chunk = _step.value;\n                    if (loadedChunks.has(_chunk)) continue;\n                    loadedChunks.add(_chunk);\n                    startupSource.add(\"import * as __webpack_chunk_\".concat(index, \"__ from \").concat(JSON.stringify(getRelativePath(_chunk)), \";\\n\"));\n                    startupSource.add(\"\".concat(RuntimeGlobals.externalInstallChunk, \"(__webpack_chunk_\").concat(index, \"__);\\n\"));\n                    index++;\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                startupSource.add(\"\".concat(final ? \"var __webpack_exports__ = \" : \"\", \"__webpack_exec__(\").concat(JSON.stringify(moduleId), \");\\n\"));\n              }\n              entrySource.add(hooks.renderStartup.call(startupSource, entries[entries.length - 1][0], _objectSpread(_objectSpread({}, renderContext), {}, {\n                inlined: false\n              })));\n              return entrySource;\n            }\n          }\n          return source;\n        });\n        hooks.chunkHash.tap(\"ModuleChunkFormatPlugin\", function (chunk, hash, _ref) {\n          var chunkGraph = _ref.chunkGraph,\n            runtimeTemplate = _ref.runtimeTemplate;\n          if (chunk.hasRuntime()) return;\n          hash.update(\"ModuleChunkFormatPlugin\");\n          hash.update(\"1\");\n          var entries = Array.from(chunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk));\n          updateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n        });\n      });\n    }\n  }]);\n  return ModuleChunkFormatPlugin;\n}();\nmodule.exports = ModuleChunkFormatPlugin;","map":{"version":3,"names":["require","ConcatSource","RuntimeGlobals","HotUpdateChunk","Template","getAllChunks","getCompilationHooks","getChunkFilenameTemplate","updateHashForEntryStartup","ModuleChunkFormatPlugin","compiler","hooks","thisCompilation","tap","compilation","additionalChunkRuntimeRequirements","chunk","set","hasRuntime","chunkGraph","getNumberOfEntryModules","add","startupEntrypoint","externalInstallChunk","renderChunk","modules","renderContext","runtimeTemplate","hotUpdateChunk","source","Error","JSON","stringify","id","ids","runtimeModules","getChunkRuntimeModulesInOrder","length","renderChunkRuntimeModules","entries","Array","from","getChunkEntryModulesWithChunkGroupIterable","runtimeChunk","getRuntimeChunk","currentOutputName","getPath","outputOptions","contentHashType","split","pop","getRelativePath","baseOutputName","slice","chunkOutputName","shift","repeat","join","entrySource","startupSource","returningFunction","entryModuleId","loadedChunks","Set","index","i","module","entrypoint","final","moduleId","getModuleId","chunks","undefined","has","renderStartup","call","inlined","chunkHash","hash","update","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/esm/ModuleChunkFormatPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst { RuntimeGlobals } = require(\"..\");\nconst HotUpdateChunk = require(\"../HotUpdateChunk\");\nconst Template = require(\"../Template\");\nconst { getAllChunks } = require(\"../javascript/ChunkHelpers\");\nconst {\n\tgetCompilationHooks,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { updateHashForEntryStartup } = require(\"../javascript/StartupHelpers\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass ModuleChunkFormatPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.additionalChunkRuntimeRequirements.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(chunk, set) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\tif (compilation.chunkGraph.getNumberOfEntryModules(chunk) > 0) {\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.require);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.startupEntrypoint);\n\t\t\t\t\t\t\tset.add(RuntimeGlobals.externalInstallChunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst hooks = getCompilationHooks(compilation);\n\t\t\t\thooks.renderChunk.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(modules, renderContext) => {\n\t\t\t\t\t\tconst { chunk, chunkGraph, runtimeTemplate } = renderContext;\n\t\t\t\t\t\tconst hotUpdateChunk =\n\t\t\t\t\t\t\tchunk instanceof HotUpdateChunk ? chunk : null;\n\t\t\t\t\t\tconst source = new ConcatSource();\n\t\t\t\t\t\tif (hotUpdateChunk) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"HMR is not implemented for module chunk format yet\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsource.add(`export const id = ${JSON.stringify(chunk.id)};\\n`);\n\t\t\t\t\t\t\tsource.add(`export const ids = ${JSON.stringify(chunk.ids)};\\n`);\n\t\t\t\t\t\t\tsource.add(`export const modules = `);\n\t\t\t\t\t\t\tsource.add(modules);\n\t\t\t\t\t\t\tsource.add(`;\\n`);\n\t\t\t\t\t\t\tconst runtimeModules =\n\t\t\t\t\t\t\t\tchunkGraph.getChunkRuntimeModulesInOrder(chunk);\n\t\t\t\t\t\t\tif (runtimeModules.length > 0) {\n\t\t\t\t\t\t\t\tsource.add(\"export const runtime =\\n\");\n\t\t\t\t\t\t\t\tsource.add(\n\t\t\t\t\t\t\t\t\tTemplate.renderChunkRuntimeModules(\n\t\t\t\t\t\t\t\t\t\truntimeModules,\n\t\t\t\t\t\t\t\t\t\trenderContext\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (entries.length > 0) {\n\t\t\t\t\t\t\t\tconst runtimeChunk = entries[0][1].getRuntimeChunk();\n\t\t\t\t\t\t\t\tconst currentOutputName = compilation\n\t\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t\t// remove filename, we only need the directory\n\t\t\t\t\t\t\t\tcurrentOutputName.pop();\n\n\t\t\t\t\t\t\t\tconst getRelativePath = chunk => {\n\t\t\t\t\t\t\t\t\tconst baseOutputName = currentOutputName.slice();\n\t\t\t\t\t\t\t\t\tconst chunkOutputName = compilation\n\t\t\t\t\t\t\t\t\t\t.getPath(\n\t\t\t\t\t\t\t\t\t\t\tgetChunkFilenameTemplate(\n\t\t\t\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\t\t\t\tcompilation.outputOptions\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tchunk: chunk,\n\t\t\t\t\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.split(\"/\");\n\n\t\t\t\t\t\t\t\t\t// remove common parts\n\t\t\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t\t\tbaseOutputName.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tchunkOutputName.length > 0 &&\n\t\t\t\t\t\t\t\t\t\tbaseOutputName[0] === chunkOutputName[0]\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tbaseOutputName.shift();\n\t\t\t\t\t\t\t\t\t\tchunkOutputName.shift();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// create final path\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t(baseOutputName.length > 0\n\t\t\t\t\t\t\t\t\t\t\t? \"../\".repeat(baseOutputName.length)\n\t\t\t\t\t\t\t\t\t\t\t: \"./\") + chunkOutputName.join(\"/\")\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tconst entrySource = new ConcatSource();\n\t\t\t\t\t\t\t\tentrySource.add(source);\n\t\t\t\t\t\t\t\tentrySource.add(\";\\n\\n// load runtime\\n\");\n\t\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t\t`import __webpack_require__ from ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\tgetRelativePath(runtimeChunk)\n\t\t\t\t\t\t\t\t\t)};\\n`\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst startupSource = new ConcatSource();\n\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t`var __webpack_exec__ = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\t\t\t\t`__webpack_require__(${RuntimeGlobals.entryModuleId} = moduleId)`,\n\t\t\t\t\t\t\t\t\t\t\"moduleId\"\n\t\t\t\t\t\t\t\t\t)}\\n`\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tconst loadedChunks = new Set();\n\t\t\t\t\t\t\t\tlet index = 0;\n\t\t\t\t\t\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\t\t\t\t\t\tconst [module, entrypoint] = entries[i];\n\t\t\t\t\t\t\t\t\tconst final = i + 1 === entries.length;\n\t\t\t\t\t\t\t\t\tconst moduleId = chunkGraph.getModuleId(module);\n\t\t\t\t\t\t\t\t\tconst chunks = getAllChunks(\n\t\t\t\t\t\t\t\t\t\tentrypoint,\n\t\t\t\t\t\t\t\t\t\truntimeChunk,\n\t\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\t\t\tif (loadedChunks.has(chunk)) continue;\n\t\t\t\t\t\t\t\t\t\tloadedChunks.add(chunk);\n\t\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t\t`import * as __webpack_chunk_${index}__ from ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\tgetRelativePath(chunk)\n\t\t\t\t\t\t\t\t\t\t\t)};\\n`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk}(__webpack_chunk_${index}__);\\n`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tstartupSource.add(\n\t\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\t\tfinal ? \"var __webpack_exports__ = \" : \"\"\n\t\t\t\t\t\t\t\t\t\t}__webpack_exec__(${JSON.stringify(moduleId)});\\n`\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tentrySource.add(\n\t\t\t\t\t\t\t\t\thooks.renderStartup.call(\n\t\t\t\t\t\t\t\t\t\tstartupSource,\n\t\t\t\t\t\t\t\t\t\tentries[entries.length - 1][0],\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...renderContext,\n\t\t\t\t\t\t\t\t\t\t\tinlined: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn entrySource;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn source;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\thooks.chunkHash.tap(\n\t\t\t\t\t\"ModuleChunkFormatPlugin\",\n\t\t\t\t\t(chunk, hash, { chunkGraph, runtimeTemplate }) => {\n\t\t\t\t\t\tif (chunk.hasRuntime()) return;\n\t\t\t\t\t\thash.update(\"ModuleChunkFormatPlugin\");\n\t\t\t\t\t\thash.update(\"1\");\n\t\t\t\t\t\tconst entries = Array.from(\n\t\t\t\t\t\t\tchunkGraph.getChunkEntryModulesWithChunkGroupIterable(chunk)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tupdateHashForEntryStartup(hash, chunkGraph, entries, chunk);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ModuleChunkFormatPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}