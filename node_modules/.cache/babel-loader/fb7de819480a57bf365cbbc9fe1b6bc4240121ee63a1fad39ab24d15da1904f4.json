{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"url\"),\n  URL = _require.URL,\n  fileURLToPath = _require.fileURLToPath;\nvar _require2 = require(\"..\"),\n  NormalModule = _require2.NormalModule;\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar FileUriPlugin = /*#__PURE__*/function () {\n  function FileUriPlugin() {\n    _classCallCheck(this, FileUriPlugin);\n  }\n  _createClass(FileUriPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"FileUriPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        normalModuleFactory.hooks.resolveForScheme.for(\"file\").tap(\"FileUriPlugin\", function (resourceData) {\n          var url = new URL(resourceData.resource);\n          var path = fileURLToPath(url);\n          var query = url.search;\n          var fragment = url.hash;\n          resourceData.path = path;\n          resourceData.query = query;\n          resourceData.fragment = fragment;\n          resourceData.resource = path + query + fragment;\n          return true;\n        });\n        var hooks = NormalModule.getCompilationHooks(compilation);\n        hooks.readResource.for(undefined).tapAsync(\"FileUriPlugin\", function (loaderContext, callback) {\n          var resourcePath = loaderContext.resourcePath;\n          loaderContext.addDependency(resourcePath);\n          loaderContext.fs.readFile(resourcePath, callback);\n        });\n      });\n    }\n  }]);\n  return FileUriPlugin;\n}();\nmodule.exports = FileUriPlugin;","map":{"version":3,"names":["require","URL","fileURLToPath","NormalModule","FileUriPlugin","compiler","hooks","compilation","tap","normalModuleFactory","resolveForScheme","for","resourceData","url","resource","path","query","search","fragment","hash","getCompilationHooks","readResource","undefined","tapAsync","loaderContext","callback","resourcePath","addDependency","fs","readFile","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/schemes/FileUriPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { URL, fileURLToPath } = require(\"url\");\nconst { NormalModule } = require(\"..\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass FileUriPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"FileUriPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.resolveForScheme\n\t\t\t\t\t.for(\"file\")\n\t\t\t\t\t.tap(\"FileUriPlugin\", resourceData => {\n\t\t\t\t\t\tconst url = new URL(resourceData.resource);\n\t\t\t\t\t\tconst path = fileURLToPath(url);\n\t\t\t\t\t\tconst query = url.search;\n\t\t\t\t\t\tconst fragment = url.hash;\n\t\t\t\t\t\tresourceData.path = path;\n\t\t\t\t\t\tresourceData.query = query;\n\t\t\t\t\t\tresourceData.fragment = fragment;\n\t\t\t\t\t\tresourceData.resource = path + query + fragment;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\tconst hooks = NormalModule.getCompilationHooks(compilation);\n\t\t\t\thooks.readResource\n\t\t\t\t\t.for(undefined)\n\t\t\t\t\t.tapAsync(\"FileUriPlugin\", (loaderContext, callback) => {\n\t\t\t\t\t\tconst { resourcePath } = loaderContext;\n\t\t\t\t\t\tloaderContext.addDependency(resourcePath);\n\t\t\t\t\t\tloaderContext.fs.readFile(resourcePath, callback);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FileUriPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,eAA+BA,OAAO,CAAC,KAAK,CAAC;EAArCC,GAAG,YAAHA,GAAG;EAAEC,aAAa,YAAbA,aAAa;AAC1B,gBAAyBF,OAAO,CAAC,IAAI,CAAC;EAA9BG,YAAY,aAAZA,YAAY;;AAEpB;AAAA,IAEMC,aAAa;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAClB;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,eAAe,EACf,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCA,mBAAmB,CAACH,KAAK,CAACI,gBAAgB,CACxCC,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,eAAe,EAAE,UAAAI,YAAY,EAAI;UACrC,IAAMC,GAAG,GAAG,IAAIZ,GAAG,CAACW,YAAY,CAACE,QAAQ,CAAC;UAC1C,IAAMC,IAAI,GAAGb,aAAa,CAACW,GAAG,CAAC;UAC/B,IAAMG,KAAK,GAAGH,GAAG,CAACI,MAAM;UACxB,IAAMC,QAAQ,GAAGL,GAAG,CAACM,IAAI;UACzBP,YAAY,CAACG,IAAI,GAAGA,IAAI;UACxBH,YAAY,CAACI,KAAK,GAAGA,KAAK;UAC1BJ,YAAY,CAACM,QAAQ,GAAGA,QAAQ;UAChCN,YAAY,CAACE,QAAQ,GAAGC,IAAI,GAAGC,KAAK,GAAGE,QAAQ;UAC/C,OAAO,IAAI;QACZ,CAAC,CAAC;QACH,IAAMZ,KAAK,GAAGH,YAAY,CAACiB,mBAAmB,CAACb,WAAW,CAAC;QAC3DD,KAAK,CAACe,YAAY,CAChBV,GAAG,CAACW,SAAS,CAAC,CACdC,QAAQ,CAAC,eAAe,EAAE,UAACC,aAAa,EAAEC,QAAQ,EAAK;UACvD,IAAQC,YAAY,GAAKF,aAAa,CAA9BE,YAAY;UACpBF,aAAa,CAACG,aAAa,CAACD,YAAY,CAAC;UACzCF,aAAa,CAACI,EAAE,CAACC,QAAQ,CAACH,YAAY,EAAED,QAAQ,CAAC;QAClD,CAAC,CAAC;MACJ,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFK,MAAM,CAACC,OAAO,GAAG3B,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}