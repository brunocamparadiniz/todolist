{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DynamicExports = require(\"./DynamicExports\");\nvar HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nvar HarmonyExports = require(\"./HarmonyExports\");\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyDetectionParserPlugin(options) {\n    _classCallCheck(this, HarmonyDetectionParserPlugin);\n    var _ref = options || {},\n      _ref$topLevelAwait = _ref.topLevelAwait,\n      topLevelAwait = _ref$topLevelAwait === void 0 ? false : _ref$topLevelAwait;\n    this.topLevelAwait = topLevelAwait;\n  }\n  _createClass(HarmonyDetectionParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n      parser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", function (ast) {\n        var isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n        var isHarmony = isStrictHarmony || ast.body.some(function (statement) {\n          return statement.type === \"ImportDeclaration\" || statement.type === \"ExportDefaultDeclaration\" || statement.type === \"ExportNamedDeclaration\" || statement.type === \"ExportAllDeclaration\";\n        });\n        if (isHarmony) {\n          var _module = parser.state.module;\n          var compatDep = new HarmonyCompatibilityDependency();\n          compatDep.loc = {\n            start: {\n              line: -1,\n              column: 0\n            },\n            end: {\n              line: -1,\n              column: 0\n            },\n            index: -3\n          };\n          _module.addPresentationalDependency(compatDep);\n          DynamicExports.bailout(parser.state);\n          HarmonyExports.enable(parser.state, isStrictHarmony);\n          parser.scope.isStrict = true;\n        }\n      });\n      parser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", function () {\n        var module = parser.state.module;\n        if (!_this.topLevelAwait) {\n          throw new Error(\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\");\n        }\n        if (!HarmonyExports.isEnabled(parser.state)) {\n          throw new Error(\"Top-level-await is only supported in EcmaScript Modules\");\n        }\n        module.buildMeta.async = true;\n      });\n      var skipInHarmony = function skipInHarmony() {\n        if (HarmonyExports.isEnabled(parser.state)) {\n          return true;\n        }\n      };\n      var nullInHarmony = function nullInHarmony() {\n        if (HarmonyExports.isEnabled(parser.state)) {\n          return null;\n        }\n      };\n      var nonHarmonyIdentifiers = [\"define\", \"exports\"];\n      for (var _i = 0, _nonHarmonyIdentifier = nonHarmonyIdentifiers; _i < _nonHarmonyIdentifier.length; _i++) {\n        var identifier = _nonHarmonyIdentifier[_i];\n        parser.hooks.evaluateTypeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n        parser.hooks.typeof.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n        parser.hooks.evaluate.for(identifier).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n        parser.hooks.expression.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n        parser.hooks.call.for(identifier).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      }\n    }\n  }]);\n  return HarmonyDetectionParserPlugin;\n}();","map":{"version":3,"names":["DynamicExports","require","HarmonyCompatibilityDependency","HarmonyExports","module","exports","options","topLevelAwait","parser","hooks","program","tap","ast","isStrictHarmony","state","type","isHarmony","body","some","statement","compatDep","loc","start","line","column","end","index","addPresentationalDependency","bailout","enable","scope","isStrict","Error","isEnabled","buildMeta","async","skipInHarmony","nullInHarmony","nonHarmonyIdentifiers","identifier","evaluateTypeof","for","typeof","evaluate","expression","call"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/HarmonyDetectionParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DynamicExports = require(\"./DynamicExports\");\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n\tconstructor(options) {\n\t\tconst { topLevelAwait = false } = options || {};\n\t\tthis.topLevelAwait = topLevelAwait;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n\t\t\tconst isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n\t\t\tconst isHarmony =\n\t\t\t\tisStrictHarmony ||\n\t\t\t\tast.body.some(\n\t\t\t\t\tstatement =>\n\t\t\t\t\t\tstatement.type === \"ImportDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportDefaultDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportNamedDeclaration\" ||\n\t\t\t\t\t\tstatement.type === \"ExportAllDeclaration\"\n\t\t\t\t);\n\t\t\tif (isHarmony) {\n\t\t\t\tconst module = parser.state.module;\n\t\t\t\tconst compatDep = new HarmonyCompatibilityDependency();\n\t\t\t\tcompatDep.loc = {\n\t\t\t\t\tstart: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tend: {\n\t\t\t\t\t\tline: -1,\n\t\t\t\t\t\tcolumn: 0\n\t\t\t\t\t},\n\t\t\t\t\tindex: -3\n\t\t\t\t};\n\t\t\t\tmodule.addPresentationalDependency(compatDep);\n\t\t\t\tDynamicExports.bailout(parser.state);\n\t\t\t\tHarmonyExports.enable(parser.state, isStrictHarmony);\n\t\t\t\tparser.scope.isStrict = true;\n\t\t\t}\n\t\t});\n\n\t\tparser.hooks.topLevelAwait.tap(\"HarmonyDetectionParserPlugin\", () => {\n\t\t\tconst module = parser.state.module;\n\t\t\tif (!this.topLevelAwait) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"The top-level-await experiment is not enabled (set experiments.topLevelAwait: true to enabled it)\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Top-level-await is only supported in EcmaScript Modules\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tmodule.buildMeta.async = true;\n\t\t});\n\n\t\tconst skipInHarmony = () => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tconst nullInHarmony = () => {\n\t\t\tif (HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tconst nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\t\tfor (const identifier of nonHarmonyIdentifiers) {\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.typeof\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.evaluate\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t\tparser.hooks.call\n\t\t\t\t.for(identifier)\n\t\t\t\t.tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n\t\t}\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}