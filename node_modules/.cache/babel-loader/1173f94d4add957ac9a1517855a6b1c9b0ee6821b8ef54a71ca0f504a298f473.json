{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar util = require(\"util\");\nvar Watchpack = require(\"watchpack\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n/** @typedef {import(\"../util/fs\").WatchFileSystem} WatchFileSystem */\n/** @typedef {import(\"../util/fs\").WatchMethod} WatchMethod */\n/** @typedef {import(\"../util/fs\").Watcher} Watcher */\nvar NodeWatchFileSystem = /*#__PURE__*/function () {\n  function NodeWatchFileSystem(inputFileSystem) {\n    _classCallCheck(this, NodeWatchFileSystem);\n    this.inputFileSystem = inputFileSystem;\n    this.watcherOptions = {\n      aggregateTimeout: 0\n    };\n    this.watcher = new Watchpack(this.watcherOptions);\n  }\n\n  /**\n   * @param {Iterable<string>} files watched files\n   * @param {Iterable<string>} directories watched directories\n   * @param {Iterable<string>} missing watched exitance entries\n   * @param {number} startTime timestamp of start time\n   * @param {WatchOptions} options options object\n   * @param {function(Error=, Map<string, FileSystemInfoEntry>, Map<string, FileSystemInfoEntry>, Set<string>, Set<string>): void} callback aggregated callback\n   * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n   * @returns {Watcher} a watcher\n   */\n  _createClass(NodeWatchFileSystem, [{\n    key: \"watch\",\n    value: function watch(files, directories, missing, startTime, options, callback, callbackUndelayed) {\n      var _this = this;\n      if (!files || typeof files[Symbol.iterator] !== \"function\") {\n        throw new Error(\"Invalid arguments: 'files'\");\n      }\n      if (!directories || typeof directories[Symbol.iterator] !== \"function\") {\n        throw new Error(\"Invalid arguments: 'directories'\");\n      }\n      if (!missing || typeof missing[Symbol.iterator] !== \"function\") {\n        throw new Error(\"Invalid arguments: 'missing'\");\n      }\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid arguments: 'callback'\");\n      }\n      if (typeof startTime !== \"number\" && startTime) {\n        throw new Error(\"Invalid arguments: 'startTime'\");\n      }\n      if (typeof options !== \"object\") {\n        throw new Error(\"Invalid arguments: 'options'\");\n      }\n      if (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n        throw new Error(\"Invalid arguments: 'callbackUndelayed'\");\n      }\n      var oldWatcher = this.watcher;\n      this.watcher = new Watchpack(options);\n      if (callbackUndelayed) {\n        this.watcher.once(\"change\", callbackUndelayed);\n      }\n      var fetchTimeInfo = function fetchTimeInfo() {\n        var fileTimeInfoEntries = new Map();\n        var contextTimeInfoEntries = new Map();\n        if (_this.watcher) {\n          _this.watcher.collectTimeInfoEntries(fileTimeInfoEntries, contextTimeInfoEntries);\n        }\n        return {\n          fileTimeInfoEntries: fileTimeInfoEntries,\n          contextTimeInfoEntries: contextTimeInfoEntries\n        };\n      };\n      this.watcher.once(\"aggregated\", function (changes, removals) {\n        // pause emitting events (avoids clearing aggregated changes and removals on timeout)\n        _this.watcher.pause();\n        if (_this.inputFileSystem && _this.inputFileSystem.purge) {\n          var fs = _this.inputFileSystem;\n          var _iterator = _createForOfIteratorHelper(changes),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var item = _step.value;\n              fs.purge(item);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var _iterator2 = _createForOfIteratorHelper(removals),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _item = _step2.value;\n              fs.purge(_item);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n        var _fetchTimeInfo = fetchTimeInfo(),\n          fileTimeInfoEntries = _fetchTimeInfo.fileTimeInfoEntries,\n          contextTimeInfoEntries = _fetchTimeInfo.contextTimeInfoEntries;\n        callback(null, fileTimeInfoEntries, contextTimeInfoEntries, changes, removals);\n      });\n      this.watcher.watch({\n        files: files,\n        directories: directories,\n        missing: missing,\n        startTime: startTime\n      });\n      if (oldWatcher) {\n        oldWatcher.close();\n      }\n      return {\n        close: function close() {\n          if (_this.watcher) {\n            _this.watcher.close();\n            _this.watcher = null;\n          }\n        },\n        pause: function pause() {\n          if (_this.watcher) {\n            _this.watcher.pause();\n          }\n        },\n        getAggregatedRemovals: util.deprecate(function () {\n          var items = _this.watcher && _this.watcher.aggregatedRemovals;\n          if (items && _this.inputFileSystem && _this.inputFileSystem.purge) {\n            var fs = _this.inputFileSystem;\n            var _iterator3 = _createForOfIteratorHelper(items),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var item = _step3.value;\n                fs.purge(item);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n          return items;\n        }, \"Watcher.getAggregatedRemovals is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_GET_AGGREGATED_REMOVALS\"),\n        getAggregatedChanges: util.deprecate(function () {\n          var items = _this.watcher && _this.watcher.aggregatedChanges;\n          if (items && _this.inputFileSystem && _this.inputFileSystem.purge) {\n            var fs = _this.inputFileSystem;\n            var _iterator4 = _createForOfIteratorHelper(items),\n              _step4;\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var item = _step4.value;\n                fs.purge(item);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n          return items;\n        }, \"Watcher.getAggregatedChanges is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_GET_AGGREGATED_CHANGES\"),\n        getFileTimeInfoEntries: util.deprecate(function () {\n          return fetchTimeInfo().fileTimeInfoEntries;\n        }, \"Watcher.getFileTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_FILE_TIME_INFO_ENTRIES\"),\n        getContextTimeInfoEntries: util.deprecate(function () {\n          return fetchTimeInfo().contextTimeInfoEntries;\n        }, \"Watcher.getContextTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\", \"DEP_WEBPACK_WATCHER_CONTEXT_TIME_INFO_ENTRIES\"),\n        getInfo: function getInfo() {\n          var removals = _this.watcher && _this.watcher.aggregatedRemovals;\n          var changes = _this.watcher && _this.watcher.aggregatedChanges;\n          if (_this.inputFileSystem && _this.inputFileSystem.purge) {\n            var fs = _this.inputFileSystem;\n            if (removals) {\n              var _iterator5 = _createForOfIteratorHelper(removals),\n                _step5;\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var item = _step5.value;\n                  fs.purge(item);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n            }\n            if (changes) {\n              var _iterator6 = _createForOfIteratorHelper(changes),\n                _step6;\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  var _item2 = _step6.value;\n                  fs.purge(_item2);\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n            }\n          }\n          var _fetchTimeInfo2 = fetchTimeInfo(),\n            fileTimeInfoEntries = _fetchTimeInfo2.fileTimeInfoEntries,\n            contextTimeInfoEntries = _fetchTimeInfo2.contextTimeInfoEntries;\n          return {\n            changes: changes,\n            removals: removals,\n            fileTimeInfoEntries: fileTimeInfoEntries,\n            contextTimeInfoEntries: contextTimeInfoEntries\n          };\n        }\n      };\n    }\n  }]);\n  return NodeWatchFileSystem;\n}();\nmodule.exports = NodeWatchFileSystem;","map":{"version":3,"names":["util","require","Watchpack","NodeWatchFileSystem","inputFileSystem","watcherOptions","aggregateTimeout","watcher","files","directories","missing","startTime","options","callback","callbackUndelayed","Symbol","iterator","Error","oldWatcher","once","fetchTimeInfo","fileTimeInfoEntries","Map","contextTimeInfoEntries","collectTimeInfoEntries","changes","removals","pause","purge","fs","item","watch","close","getAggregatedRemovals","deprecate","items","aggregatedRemovals","getAggregatedChanges","aggregatedChanges","getFileTimeInfoEntries","getContextTimeInfoEntries","getInfo","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/node/NodeWatchFileSystem.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst Watchpack = require(\"watchpack\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").WatchOptions} WatchOptions */\n/** @typedef {import(\"../FileSystemInfo\").FileSystemInfoEntry} FileSystemInfoEntry */\n/** @typedef {import(\"../util/fs\").WatchFileSystem} WatchFileSystem */\n/** @typedef {import(\"../util/fs\").WatchMethod} WatchMethod */\n/** @typedef {import(\"../util/fs\").Watcher} Watcher */\n\nclass NodeWatchFileSystem {\n\tconstructor(inputFileSystem) {\n\t\tthis.inputFileSystem = inputFileSystem;\n\t\tthis.watcherOptions = {\n\t\t\taggregateTimeout: 0\n\t\t};\n\t\tthis.watcher = new Watchpack(this.watcherOptions);\n\t}\n\n\t/**\n\t * @param {Iterable<string>} files watched files\n\t * @param {Iterable<string>} directories watched directories\n\t * @param {Iterable<string>} missing watched exitance entries\n\t * @param {number} startTime timestamp of start time\n\t * @param {WatchOptions} options options object\n\t * @param {function(Error=, Map<string, FileSystemInfoEntry>, Map<string, FileSystemInfoEntry>, Set<string>, Set<string>): void} callback aggregated callback\n\t * @param {function(string, number): void} callbackUndelayed callback when the first change was detected\n\t * @returns {Watcher} a watcher\n\t */\n\twatch(\n\t\tfiles,\n\t\tdirectories,\n\t\tmissing,\n\t\tstartTime,\n\t\toptions,\n\t\tcallback,\n\t\tcallbackUndelayed\n\t) {\n\t\tif (!files || typeof files[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'files'\");\n\t\t}\n\t\tif (!directories || typeof directories[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'directories'\");\n\t\t}\n\t\tif (!missing || typeof missing[Symbol.iterator] !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'missing'\");\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'callback'\");\n\t\t}\n\t\tif (typeof startTime !== \"number\" && startTime) {\n\t\t\tthrow new Error(\"Invalid arguments: 'startTime'\");\n\t\t}\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"Invalid arguments: 'options'\");\n\t\t}\n\t\tif (typeof callbackUndelayed !== \"function\" && callbackUndelayed) {\n\t\t\tthrow new Error(\"Invalid arguments: 'callbackUndelayed'\");\n\t\t}\n\t\tconst oldWatcher = this.watcher;\n\t\tthis.watcher = new Watchpack(options);\n\n\t\tif (callbackUndelayed) {\n\t\t\tthis.watcher.once(\"change\", callbackUndelayed);\n\t\t}\n\n\t\tconst fetchTimeInfo = () => {\n\t\t\tconst fileTimeInfoEntries = new Map();\n\t\t\tconst contextTimeInfoEntries = new Map();\n\t\t\tif (this.watcher) {\n\t\t\t\tthis.watcher.collectTimeInfoEntries(\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn { fileTimeInfoEntries, contextTimeInfoEntries };\n\t\t};\n\t\tthis.watcher.once(\"aggregated\", (changes, removals) => {\n\t\t\t// pause emitting events (avoids clearing aggregated changes and removals on timeout)\n\t\t\tthis.watcher.pause();\n\n\t\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\tfor (const item of changes) {\n\t\t\t\t\tfs.purge(item);\n\t\t\t\t}\n\t\t\t\tfor (const item of removals) {\n\t\t\t\t\tfs.purge(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { fileTimeInfoEntries, contextTimeInfoEntries } = fetchTimeInfo();\n\t\t\tcallback(\n\t\t\t\tnull,\n\t\t\t\tfileTimeInfoEntries,\n\t\t\t\tcontextTimeInfoEntries,\n\t\t\t\tchanges,\n\t\t\t\tremovals\n\t\t\t);\n\t\t});\n\n\t\tthis.watcher.watch({ files, directories, missing, startTime });\n\n\t\tif (oldWatcher) {\n\t\t\toldWatcher.close();\n\t\t}\n\t\treturn {\n\t\t\tclose: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.close();\n\t\t\t\t\tthis.watcher = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tpause: () => {\n\t\t\t\tif (this.watcher) {\n\t\t\t\t\tthis.watcher.pause();\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetAggregatedRemovals: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\tconst items = this.watcher && this.watcher.aggregatedRemovals;\n\t\t\t\t\tif (items && this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getAggregatedRemovals is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_GET_AGGREGATED_REMOVALS\"\n\t\t\t),\n\t\t\tgetAggregatedChanges: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\tconst items = this.watcher && this.watcher.aggregatedChanges;\n\t\t\t\t\tif (items && this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\t\tfor (const item of items) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn items;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getAggregatedChanges is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_GET_AGGREGATED_CHANGES\"\n\t\t\t),\n\t\t\tgetFileTimeInfoEntries: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\treturn fetchTimeInfo().fileTimeInfoEntries;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getFileTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_FILE_TIME_INFO_ENTRIES\"\n\t\t\t),\n\t\t\tgetContextTimeInfoEntries: util.deprecate(\n\t\t\t\t() => {\n\t\t\t\t\treturn fetchTimeInfo().contextTimeInfoEntries;\n\t\t\t\t},\n\t\t\t\t\"Watcher.getContextTimeInfoEntries is deprecated in favor of Watcher.getInfo since that's more performant.\",\n\t\t\t\t\"DEP_WEBPACK_WATCHER_CONTEXT_TIME_INFO_ENTRIES\"\n\t\t\t),\n\t\t\tgetInfo: () => {\n\t\t\t\tconst removals = this.watcher && this.watcher.aggregatedRemovals;\n\t\t\t\tconst changes = this.watcher && this.watcher.aggregatedChanges;\n\t\t\t\tif (this.inputFileSystem && this.inputFileSystem.purge) {\n\t\t\t\t\tconst fs = this.inputFileSystem;\n\t\t\t\t\tif (removals) {\n\t\t\t\t\t\tfor (const item of removals) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (changes) {\n\t\t\t\t\t\tfor (const item of changes) {\n\t\t\t\t\t\t\tfs.purge(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst { fileTimeInfoEntries, contextTimeInfoEntries } = fetchTimeInfo();\n\t\t\t\treturn {\n\t\t\t\t\tchanges,\n\t\t\t\t\tremovals,\n\t\t\t\t\tfileTimeInfoEntries,\n\t\t\t\t\tcontextTimeInfoEntries\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n}\n\nmodule.exports = NodeWatchFileSystem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}