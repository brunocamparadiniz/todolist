{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar forEachBail = require(\"./forEachBail\");\nvar _require = require(\"./util/path\"),\n  PathType = _require.PathType,\n  getType = _require.getType;\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {AliasOption | Array<AliasOption>} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  function AliasPlugin(source, options, target) {\n    _classCallCheck(this, AliasPlugin);\n    this.source = source;\n    this.options = Array.isArray(options) ? options : [options];\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(AliasPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      var getAbsolutePathWithSlashEnding = function getAbsolutePathWithSlashEnding(maybeAbsolutePath) {\n        var type = getType(maybeAbsolutePath);\n        if (type === PathType.AbsolutePosix || type === PathType.AbsoluteWin) {\n          return resolver.join(maybeAbsolutePath, \"_\").slice(0, -1);\n        }\n        return null;\n      };\n      var isSubPath = function isSubPath(path, maybeSubPath) {\n        var absolutePath = getAbsolutePathWithSlashEnding(maybeSubPath);\n        if (!absolutePath) return false;\n        return path.startsWith(absolutePath);\n      };\n      resolver.getHook(this.source).tapAsync(\"AliasPlugin\", function (request, resolveContext, callback) {\n        var innerRequest = request.request || request.path;\n        if (!innerRequest) return callback();\n        forEachBail(_this.options, function (item, callback) {\n          var shouldStop = false;\n          if (innerRequest === item.name || !item.onlyModule && (request.request ? innerRequest.startsWith(\"\".concat(item.name, \"/\")) : isSubPath(innerRequest, item.name))) {\n            var remainingRequest = innerRequest.substr(item.name.length);\n            var resolveWithAlias = function resolveWithAlias(alias, callback) {\n              if (alias === false) {\n                /** @type {ResolveRequest} */\n                var ignoreObj = _objectSpread(_objectSpread({}, request), {}, {\n                  path: false\n                });\n                if (typeof resolveContext.yield === \"function\") {\n                  resolveContext.yield(ignoreObj);\n                  return callback(null, null);\n                }\n                return callback(null, ignoreObj);\n              }\n              if (innerRequest !== alias && !innerRequest.startsWith(alias + \"/\")) {\n                shouldStop = true;\n                var newRequestStr = alias + remainingRequest;\n                var obj = _objectSpread(_objectSpread({}, request), {}, {\n                  request: newRequestStr,\n                  fullySpecified: false\n                });\n                return resolver.doResolve(target, obj, \"aliased with mapping '\" + item.name + \"': '\" + alias + \"' to '\" + newRequestStr + \"'\", resolveContext, function (err, result) {\n                  if (err) return callback(err);\n                  if (result) return callback(null, result);\n                  return callback();\n                });\n              }\n              return callback();\n            };\n            var stoppingCallback = function stoppingCallback(err, result) {\n              if (err) return callback(err);\n              if (result) return callback(null, result);\n              // Don't allow other aliasing or raw request\n              if (shouldStop) return callback(null, null);\n              return callback();\n            };\n            if (Array.isArray(item.alias)) {\n              return forEachBail(item.alias, resolveWithAlias, stoppingCallback);\n            } else {\n              return resolveWithAlias(item.alias, stoppingCallback);\n            }\n          }\n          return callback();\n        }, callback);\n      });\n    }\n  }]);\n  return AliasPlugin;\n}();","map":{"version":3,"names":["forEachBail","require","PathType","getType","module","exports","source","options","target","Array","isArray","resolver","ensureHook","getAbsolutePathWithSlashEnding","maybeAbsolutePath","type","AbsolutePosix","AbsoluteWin","join","slice","isSubPath","path","maybeSubPath","absolutePath","startsWith","getHook","tapAsync","request","resolveContext","callback","innerRequest","item","shouldStop","name","onlyModule","remainingRequest","substr","length","resolveWithAlias","alias","ignoreObj","yield","newRequestStr","obj","fullySpecified","doResolve","err","result","stoppingCallback"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/AliasPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst { PathType, getType } = require(\"./util/path\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{alias: string|Array<string>|false, name: string, onlyModule?: boolean}} AliasOption */\n\nmodule.exports = class AliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {AliasOption | Array<AliasOption>} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst getAbsolutePathWithSlashEnding = maybeAbsolutePath => {\n\t\t\tconst type = getType(maybeAbsolutePath);\n\t\t\tif (type === PathType.AbsolutePosix || type === PathType.AbsoluteWin) {\n\t\t\t\treturn resolver.join(maybeAbsolutePath, \"_\").slice(0, -1);\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tconst isSubPath = (path, maybeSubPath) => {\n\t\t\tconst absolutePath = getAbsolutePathWithSlashEnding(maybeSubPath);\n\t\t\tif (!absolutePath) return false;\n\t\t\treturn path.startsWith(absolutePath);\n\t\t};\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.options,\n\t\t\t\t\t(item, callback) => {\n\t\t\t\t\t\tlet shouldStop = false;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t\t(!item.onlyModule &&\n\t\t\t\t\t\t\t\t(request.request\n\t\t\t\t\t\t\t\t\t? innerRequest.startsWith(`${item.name}/`)\n\t\t\t\t\t\t\t\t\t: isSubPath(innerRequest, item.name)))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst remainingRequest = innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst resolveWithAlias = (alias, callback) => {\n\t\t\t\t\t\t\t\tif (alias === false) {\n\t\t\t\t\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tinnerRequest !== alias &&\n\t\t\t\t\t\t\t\t\t!innerRequest.startsWith(alias + \"/\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tshouldStop = true;\n\t\t\t\t\t\t\t\t\tconst newRequestStr = alias + remainingRequest;\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\trequest: newRequestStr,\n\t\t\t\t\t\t\t\t\t\tfullySpecified: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\t\t\talias +\n\t\t\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\tif (shouldStop) return callback(null, null);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (Array.isArray(item.alias)) {\n\t\t\t\t\t\t\t\treturn forEachBail(\n\t\t\t\t\t\t\t\t\titem.alias,\n\t\t\t\t\t\t\t\t\tresolveWithAlias,\n\t\t\t\t\t\t\t\t\tstoppingCallback\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn resolveWithAlias(item.alias, stoppingCallback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}