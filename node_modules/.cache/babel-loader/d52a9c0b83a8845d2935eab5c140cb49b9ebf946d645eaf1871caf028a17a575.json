{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar createMappingsSerializer = require(\"./createMappingsSerializer\");\nvar streamChunks = require(\"./streamChunks\");\nvar streamAndGetSourceAndMap = function streamAndGetSourceAndMap(inputSource, options, onChunk, onSource, onName) {\n  var code = \"\";\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(Object.assign({}, options, {\n    columns: true\n  }));\n  var finalSource = !!(options && options.finalSource);\n  var _streamChunks = streamChunks(inputSource, options, function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n      if (chunk !== undefined) code += chunk;\n      mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n      return onChunk(finalSource ? undefined : chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n    }, function (sourceIndex, source, sourceContent) {\n      while (sources.length < sourceIndex) {\n        sources.push(null);\n      }\n      sources[sourceIndex] = source;\n      if (sourceContent !== undefined) {\n        while (sourcesContent.length < sourceIndex) {\n          sourcesContent.push(null);\n        }\n        sourcesContent[sourceIndex] = sourceContent;\n      }\n      return onSource(sourceIndex, source, sourceContent);\n    }, function (nameIndex, name) {\n      while (names.length < nameIndex) {\n        names.push(null);\n      }\n      names[nameIndex] = name;\n      return onName(nameIndex, name);\n    }),\n    generatedLine = _streamChunks.generatedLine,\n    generatedColumn = _streamChunks.generatedColumn,\n    source = _streamChunks.source;\n  var resultSource = source !== undefined ? source : code;\n  return {\n    result: {\n      generatedLine: generatedLine,\n      generatedColumn: generatedColumn,\n      source: finalSource ? resultSource : undefined\n    },\n    source: resultSource,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings: mappings,\n      sources: sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names: names\n    } : null\n  };\n};\nmodule.exports = streamAndGetSourceAndMap;","map":{"version":3,"names":["createMappingsSerializer","require","streamChunks","streamAndGetSourceAndMap","inputSource","options","onChunk","onSource","onName","code","mappings","sources","sourcesContent","names","addMapping","Object","assign","columns","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","source","sourceContent","length","push","name","resultSource","result","map","version","file","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack-sources/lib/helpers/streamAndGetSourceAndMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\nconst streamChunks = require(\"./streamChunks\");\n\nconst streamAndGetSourceAndMap = (\n\tinputSource,\n\toptions,\n\tonChunk,\n\tonSource,\n\tonName\n) => {\n\tlet code = \"\";\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(\n\t\tObject.assign({}, options, { columns: true })\n\t);\n\tconst finalSource = !!(options && options.finalSource);\n\tconst { generatedLine, generatedColumn, source } = streamChunks(\n\t\tinputSource,\n\t\toptions,\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tif (chunk !== undefined) code += chunk;\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t\treturn onChunk(\n\t\t\t\tfinalSource ? undefined : chunk,\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t\treturn onSource(sourceIndex, source, sourceContent);\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t\treturn onName(nameIndex, name);\n\t\t}\n\t);\n\tconst resultSource = source !== undefined ? source : code;\n\treturn {\n\t\tresult: {\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsource: finalSource ? resultSource : undefined\n\t\t},\n\t\tsource: resultSource,\n\t\tmap:\n\t\t\tmappings.length > 0\n\t\t\t\t? {\n\t\t\t\t\t\tversion: 3,\n\t\t\t\t\t\tfile: \"x\",\n\t\t\t\t\t\tmappings,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t\tsourcesContent:\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\t\t\tnames\n\t\t\t\t  }\n\t\t\t\t: null\n\t};\n};\n\nmodule.exports = streamAndGetSourceAndMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACtE,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAE9C,IAAME,wBAAwB,GAAG,SAA3BA,wBAAwB,CAC7BC,WAAW,EACXC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACF;EACJ,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIC,KAAK,GAAG,EAAE;EACd,IAAMC,UAAU,GAAGd,wBAAwB,CAC1Ce,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,OAAO,EAAE;IAAEY,OAAO,EAAE;EAAK,CAAC,CAAC,CAC7C;EACD,IAAMC,WAAW,GAAG,CAAC,EAAEb,OAAO,IAAIA,OAAO,CAACa,WAAW,CAAC;EACtD,oBAAmDhB,YAAY,CAC9DE,WAAW,EACXC,OAAO,EACP,UACCc,KAAK,EACLC,aAAa,EACbC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,SAAS,EACL;MACJ,IAAIN,KAAK,KAAKO,SAAS,EAAEjB,IAAI,IAAIU,KAAK;MACtCT,QAAQ,IAAII,UAAU,CACrBM,aAAa,EACbC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,SAAS,CACT;MACD,OAAOnB,OAAO,CACbY,WAAW,GAAGQ,SAAS,GAAGP,KAAK,EAC/BC,aAAa,EACbC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,SAAS,CACT;IACF,CAAC,EACD,UAACH,WAAW,EAAEK,MAAM,EAAEC,aAAa,EAAK;MACvC,OAAOjB,OAAO,CAACkB,MAAM,GAAGP,WAAW,EAAE;QACpCX,OAAO,CAACmB,IAAI,CAAC,IAAI,CAAC;MACnB;MACAnB,OAAO,CAACW,WAAW,CAAC,GAAGK,MAAM;MAC7B,IAAIC,aAAa,KAAKF,SAAS,EAAE;QAChC,OAAOd,cAAc,CAACiB,MAAM,GAAGP,WAAW,EAAE;UAC3CV,cAAc,CAACkB,IAAI,CAAC,IAAI,CAAC;QAC1B;QACAlB,cAAc,CAACU,WAAW,CAAC,GAAGM,aAAa;MAC5C;MACA,OAAOrB,QAAQ,CAACe,WAAW,EAAEK,MAAM,EAAEC,aAAa,CAAC;IACpD,CAAC,EACD,UAACH,SAAS,EAAEM,IAAI,EAAK;MACpB,OAAOlB,KAAK,CAACgB,MAAM,GAAGJ,SAAS,EAAE;QAChCZ,KAAK,CAACiB,IAAI,CAAC,IAAI,CAAC;MACjB;MACAjB,KAAK,CAACY,SAAS,CAAC,GAAGM,IAAI;MACvB,OAAOvB,MAAM,CAACiB,SAAS,EAAEM,IAAI,CAAC;IAC/B,CAAC,CACD;IAnDOX,aAAa,iBAAbA,aAAa;IAAEC,eAAe,iBAAfA,eAAe;IAAEM,MAAM,iBAANA,MAAM;EAoD9C,IAAMK,YAAY,GAAGL,MAAM,KAAKD,SAAS,GAAGC,MAAM,GAAGlB,IAAI;EACzD,OAAO;IACNwB,MAAM,EAAE;MACPb,aAAa,EAAbA,aAAa;MACbC,eAAe,EAAfA,eAAe;MACfM,MAAM,EAAET,WAAW,GAAGc,YAAY,GAAGN;IACtC,CAAC;IACDC,MAAM,EAAEK,YAAY;IACpBE,GAAG,EACFxB,QAAQ,CAACmB,MAAM,GAAG,CAAC,GAChB;MACAM,OAAO,EAAE,CAAC;MACVC,IAAI,EAAE,GAAG;MACT1B,QAAQ,EAARA,QAAQ;MACRC,OAAO,EAAPA,OAAO;MACPC,cAAc,EACbA,cAAc,CAACiB,MAAM,GAAG,CAAC,GAAGjB,cAAc,GAAGc,SAAS;MACvDb,KAAK,EAALA;IACA,CAAC,GACD;EACL,CAAC;AACF,CAAC;AAEDwB,MAAM,CAACC,OAAO,GAAGnC,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}