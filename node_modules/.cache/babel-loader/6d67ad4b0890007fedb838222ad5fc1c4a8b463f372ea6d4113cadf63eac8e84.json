{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Dependency = require(\"../Dependency\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar makeSerializable = require(\"../util/makeSerializable\");\nvar ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\nvar WorkerDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(WorkerDependency, _ModuleDependency);\n  var _super = _createSuper(WorkerDependency);\n  /**\n   * @param {string} request request\n   * @param {[number, number]} range range\n   */\n  function WorkerDependency(request, range) {\n    var _this;\n    _classCallCheck(this, WorkerDependency);\n    _this = _super.call(this, request);\n    _this.range = range;\n    return _this;\n  }\n\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n  _createClass(WorkerDependency, [{\n    key: \"getReferencedExports\",\n    value: function getReferencedExports(moduleGraph, runtime) {\n      return Dependency.NO_EXPORTS_REFERENCED;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"new Worker()\";\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return \"worker\";\n    }\n  }]);\n  return WorkerDependency;\n}(ModuleDependency);\nWorkerDependency.Template = /*#__PURE__*/function (_ModuleDependency$Tem) {\n  _inherits(WorkerDependencyTemplate, _ModuleDependency$Tem);\n  var _super2 = _createSuper(WorkerDependencyTemplate);\n  function WorkerDependencyTemplate() {\n    _classCallCheck(this, WorkerDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(WorkerDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, templateContext) {\n      var chunkGraph = templateContext.chunkGraph,\n        moduleGraph = templateContext.moduleGraph,\n        runtimeRequirements = templateContext.runtimeRequirements;\n      var dep = /** @type {WorkerDependency} */dependency;\n      var block = /** @type {AsyncDependenciesBlock} */\n      moduleGraph.getParentBlock(dependency);\n      var entrypoint = /** @type {Entrypoint} */\n      chunkGraph.getBlockChunkGroup(block);\n      var chunk = entrypoint.getEntrypointChunk();\n      runtimeRequirements.add(RuntimeGlobals.publicPath);\n      runtimeRequirements.add(RuntimeGlobals.baseURI);\n      runtimeRequirements.add(RuntimeGlobals.getChunkScriptFilename);\n      source.replace(dep.range[0], dep.range[1] - 1, \"/* worker import */ \".concat(RuntimeGlobals.publicPath, \" + \").concat(RuntimeGlobals.getChunkScriptFilename, \"(\").concat(JSON.stringify(chunk.id), \"), \").concat(RuntimeGlobals.baseURI));\n    }\n  }]);\n  return WorkerDependencyTemplate;\n}(ModuleDependency.Template);\nmakeSerializable(WorkerDependency, \"webpack/lib/dependencies/WorkerDependency\");\nmodule.exports = WorkerDependency;","map":{"version":3,"names":["Dependency","require","RuntimeGlobals","makeSerializable","ModuleDependency","WorkerDependency","request","range","moduleGraph","runtime","NO_EXPORTS_REFERENCED","Template","dependency","source","templateContext","chunkGraph","runtimeRequirements","dep","block","getParentBlock","entrypoint","getBlockChunkGroup","chunk","getEntrypointChunk","add","publicPath","baseURI","getChunkScriptFilename","replace","JSON","stringify","id","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/WorkerDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass WorkerDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {[number, number]} range range\n\t */\n\tconstructor(request, range) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\t}\n\n\tget type() {\n\t\treturn \"new Worker()\";\n\t}\n\n\tget category() {\n\t\treturn \"worker\";\n\t}\n}\n\nWorkerDependency.Template = class WorkerDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst { chunkGraph, moduleGraph, runtimeRequirements } = templateContext;\n\t\tconst dep = /** @type {WorkerDependency} */ (dependency);\n\t\tconst block = /** @type {AsyncDependenciesBlock} */ (\n\t\t\tmoduleGraph.getParentBlock(dependency)\n\t\t);\n\t\tconst entrypoint = /** @type {Entrypoint} */ (\n\t\t\tchunkGraph.getBlockChunkGroup(block)\n\t\t);\n\t\tconst chunk = entrypoint.getEntrypointChunk();\n\n\t\truntimeRequirements.add(RuntimeGlobals.publicPath);\n\t\truntimeRequirements.add(RuntimeGlobals.baseURI);\n\t\truntimeRequirements.add(RuntimeGlobals.getChunkScriptFilename);\n\n\t\tsource.replace(\n\t\t\tdep.range[0],\n\t\t\tdep.range[1] - 1,\n\t\t\t`/* worker import */ ${RuntimeGlobals.publicPath} + ${\n\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t}(${JSON.stringify(chunk.id)}), ${RuntimeGlobals.baseURI}`\n\t\t);\n\t}\n};\n\nmakeSerializable(WorkerDependency, \"webpack/lib/dependencies/WorkerDependency\");\n\nmodule.exports = WorkerDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAMC,cAAc,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACnD,IAAME,gBAAgB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMG,gBAAgB,GAAGH,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAEMI,gBAAgB;EAAA;EAAA;EACrB;AACD;AACA;AACA;EACC,0BAAYC,OAAO,EAAEC,KAAK,EAAE;IAAA;IAAA;IAC3B,0BAAMD,OAAO;IACb,MAAKC,KAAK,GAAGA,KAAK;IAAC;EACpB;;EAEA;AACD;AACA;AACA;AACA;AACA;EALC;IAAA;IAAA,OAMA,8BAAqBC,WAAW,EAAEC,OAAO,EAAE;MAC1C,OAAOT,UAAU,CAACU,qBAAqB;IACxC;EAAC;IAAA;IAAA,KAED,eAAW;MACV,OAAO,cAAc;IACtB;EAAC;IAAA;IAAA,KAED,eAAe;MACd,OAAO,QAAQ;IAChB;EAAC;EAAA;AAAA,EA1B6BN,gBAAgB;AA6B/CC,gBAAgB,CAACM,QAAQ;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAGxB;AACD;AACA;AACA;AACA;AACA;IACC,eAAMC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;MAC1C,IAAQC,UAAU,GAAuCD,eAAe,CAAhEC,UAAU;QAAEP,WAAW,GAA0BM,eAAe,CAApDN,WAAW;QAAEQ,mBAAmB,GAAKF,eAAe,CAAvCE,mBAAmB;MACpD,IAAMC,GAAG,GAAG,+BAAiCL,UAAW;MACxD,IAAMM,KAAK,GAAG;MACbV,WAAW,CAACW,cAAc,CAACP,UAAU,CACrC;MACD,IAAMQ,UAAU,GAAG;MAClBL,UAAU,CAACM,kBAAkB,CAACH,KAAK,CACnC;MACD,IAAMI,KAAK,GAAGF,UAAU,CAACG,kBAAkB,EAAE;MAE7CP,mBAAmB,CAACQ,GAAG,CAACtB,cAAc,CAACuB,UAAU,CAAC;MAClDT,mBAAmB,CAACQ,GAAG,CAACtB,cAAc,CAACwB,OAAO,CAAC;MAC/CV,mBAAmB,CAACQ,GAAG,CAACtB,cAAc,CAACyB,sBAAsB,CAAC;MAE9Dd,MAAM,CAACe,OAAO,CACbX,GAAG,CAACV,KAAK,CAAC,CAAC,CAAC,EACZU,GAAG,CAACV,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,gCACOL,cAAc,CAACuB,UAAU,gBAC/CvB,cAAc,CAACyB,sBAAsB,cAClCE,IAAI,CAACC,SAAS,CAACR,KAAK,CAACS,EAAE,CAAC,gBAAM7B,cAAc,CAACwB,OAAO,EACxD;IACF;EAAC;EAAA;AAAA,EA9BDtB,gBAAgB,CAACO,QAAQ,CA+BzB;AAEDR,gBAAgB,CAACE,gBAAgB,EAAE,2CAA2C,CAAC;AAE/E2B,MAAM,CAACC,OAAO,GAAG5B,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}