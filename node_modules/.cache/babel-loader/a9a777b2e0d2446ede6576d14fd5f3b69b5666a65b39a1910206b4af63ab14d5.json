{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _construct = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/construct.js\").default;\nvar _require = require(\"../util/identifier\"),\n  parseResource = _require.parseResource;\n\n/** @typedef {import(\"estree\").Node} EsTreeNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"./ContextDependency\")} ContextDependency */\n/** @typedef {import(\"./ContextDependency\").ContextDependencyOptions} ContextDependencyOptions */\n\n/**\n * Escapes regular expression metacharacters\n * @param {string} str String to quote\n * @returns {string} Escaped string\n */\nvar quoteMeta = function quoteMeta(str) {\n  return str.replace(/[-[\\]\\\\/{}()*+?.^$|]/g, \"\\\\$&\");\n};\nvar splitContextFromPrefix = function splitContextFromPrefix(prefix) {\n  var idx = prefix.lastIndexOf(\"/\");\n  var context = \".\";\n  if (idx >= 0) {\n    context = prefix.slice(0, idx);\n    prefix = \".\".concat(prefix.slice(idx));\n  }\n  return {\n    context: context,\n    prefix: prefix\n  };\n};\n\n/** @typedef {Partial<Omit<ContextDependencyOptions, \"resource\">>} PartialContextDependencyOptions */\n\n/** @typedef {{ new(options: ContextDependencyOptions, range: [number, number], valueRange: [number, number], ...args: any[]): ContextDependency }} ContextDependencyConstructor */\n\n/**\n * @param {ContextDependencyConstructor} Dep the Dependency class\n * @param {[number, number]} range source range\n * @param {BasicEvaluatedExpression} param context param\n * @param {EsTreeNode} expr expr\n * @param {Pick<JavascriptParserOptions, `${\"expr\"|\"wrapped\"}Context${\"Critical\"|\"Recursive\"|\"RegExp\"}` | \"exprContextRequest\">} options options for context creation\n * @param {PartialContextDependencyOptions} contextOptions options for the ContextModule\n * @param {JavascriptParser} parser the parser\n * @param {...any} depArgs depArgs\n * @returns {ContextDependency} the created Dependency\n */\nexports.create = function (Dep, range, param, expr, options, contextOptions, parser) {\n  for (var _len = arguments.length, depArgs = new Array(_len > 7 ? _len - 7 : 0), _key = 7; _key < _len; _key++) {\n    depArgs[_key - 7] = arguments[_key];\n  }\n  if (param.isTemplateString()) {\n    var prefixRaw = param.quasis[0].string;\n    var postfixRaw = param.quasis.length > 1 ? param.quasis[param.quasis.length - 1].string : \"\";\n    var valueRange = param.range;\n    var _splitContextFromPref = splitContextFromPrefix(prefixRaw),\n      context = _splitContextFromPref.context,\n      prefix = _splitContextFromPref.prefix;\n    var _parseResource = parseResource(postfixRaw, parser),\n      postfix = _parseResource.path,\n      query = _parseResource.query,\n      fragment = _parseResource.fragment;\n\n    // When there are more than two quasis, the generated RegExp can be more precise\n    // We join the quasis with the expression regexp\n    var innerQuasis = param.quasis.slice(1, param.quasis.length - 1);\n    var innerRegExp = options.wrappedContextRegExp.source + innerQuasis.map(function (q) {\n      return quoteMeta(q.string) + options.wrappedContextRegExp.source;\n    }).join(\"\");\n\n    // Example: `./context/pre${e}inner${e}inner2${e}post?query#frag`\n    // context: \"./context\"\n    // prefix: \"./pre\"\n    // innerQuasis: [BEE(\"inner\"), BEE(\"inner2\")]\n    // (BEE = BasicEvaluatedExpression)\n    // postfix: \"post\"\n    // query: \"?query\"\n    // fragment: \"#frag\"\n    // regExp: /^\\.\\/pre.*inner.*inner2.*post$/\n    var regExp = new RegExp(\"^\".concat(quoteMeta(prefix)).concat(innerRegExp).concat(quoteMeta(postfix), \"$\"));\n    var dep = _construct(Dep, [_objectSpread({\n      request: context + query + fragment,\n      recursive: options.wrappedContextRecursive,\n      regExp: regExp,\n      mode: \"sync\"\n    }, contextOptions), range, valueRange].concat(depArgs));\n    dep.loc = expr.loc;\n    var replaces = [];\n    param.parts.forEach(function (part, i) {\n      if (i % 2 === 0) {\n        // Quasis or merged quasi\n        var _range = part.range;\n        var value = part.string;\n        if (param.templateStringKind === \"cooked\") {\n          value = JSON.stringify(value);\n          value = value.slice(1, value.length - 1);\n        }\n        if (i === 0) {\n          // prefix\n          value = prefix;\n          _range = [param.range[0], part.range[1]];\n          value = (param.templateStringKind === \"cooked\" ? \"`\" : \"String.raw`\") + value;\n        } else if (i === param.parts.length - 1) {\n          // postfix\n          value = postfix;\n          _range = [part.range[0], param.range[1]];\n          value = value + \"`\";\n        } else if (part.expression && part.expression.type === \"TemplateElement\" && part.expression.value.raw === value) {\n          // Shortcut when it's a single quasi and doesn't need to be replaced\n          return;\n        }\n        replaces.push({\n          range: _range,\n          value: value\n        });\n      } else {\n        // Expression\n        parser.walkExpression(part.expression);\n      }\n    });\n    dep.replaces = replaces;\n    dep.critical = options.wrappedContextCritical && \"a part of the request of a dependency is an expression\";\n    return dep;\n  } else if (param.isWrapped() && (param.prefix && param.prefix.isString() || param.postfix && param.postfix.isString())) {\n    var _prefixRaw = param.prefix && param.prefix.isString() ? param.prefix.string : \"\";\n    var _postfixRaw = param.postfix && param.postfix.isString() ? param.postfix.string : \"\";\n    var prefixRange = param.prefix && param.prefix.isString() ? param.prefix.range : null;\n    var postfixRange = param.postfix && param.postfix.isString() ? param.postfix.range : null;\n    var _valueRange = param.range;\n    var _splitContextFromPref2 = splitContextFromPrefix(_prefixRaw),\n      _context = _splitContextFromPref2.context,\n      _prefix = _splitContextFromPref2.prefix;\n    var _parseResource2 = parseResource(_postfixRaw, parser),\n      _postfix = _parseResource2.path,\n      _query = _parseResource2.query,\n      _fragment = _parseResource2.fragment;\n    var _regExp = new RegExp(\"^\".concat(quoteMeta(_prefix)).concat(options.wrappedContextRegExp.source).concat(quoteMeta(_postfix), \"$\"));\n    var _dep = _construct(Dep, [_objectSpread({\n      request: _context + _query + _fragment,\n      recursive: options.wrappedContextRecursive,\n      regExp: _regExp,\n      mode: \"sync\"\n    }, contextOptions), range, _valueRange].concat(depArgs));\n    _dep.loc = expr.loc;\n    var _replaces = [];\n    if (prefixRange) {\n      _replaces.push({\n        range: prefixRange,\n        value: JSON.stringify(_prefix)\n      });\n    }\n    if (postfixRange) {\n      _replaces.push({\n        range: postfixRange,\n        value: JSON.stringify(_postfix)\n      });\n    }\n    _dep.replaces = _replaces;\n    _dep.critical = options.wrappedContextCritical && \"a part of the request of a dependency is an expression\";\n    if (parser && param.wrappedInnerExpressions) {\n      var _iterator = _createForOfIteratorHelper(param.wrappedInnerExpressions),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var part = _step.value;\n          if (part.expression) parser.walkExpression(part.expression);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    return _dep;\n  } else {\n    var _dep2 = _construct(Dep, [_objectSpread({\n      request: options.exprContextRequest,\n      recursive: options.exprContextRecursive,\n      regExp: /** @type {RegExp} */options.exprContextRegExp,\n      mode: \"sync\"\n    }, contextOptions), range, param.range].concat(depArgs));\n    _dep2.loc = expr.loc;\n    _dep2.critical = options.exprContextCritical && \"the request of a dependency is an expression\";\n    parser.walkExpression(param.expression);\n    return _dep2;\n  }\n};","map":{"version":3,"names":["require","parseResource","quoteMeta","str","replace","splitContextFromPrefix","prefix","idx","lastIndexOf","context","slice","exports","create","Dep","range","param","expr","options","contextOptions","parser","depArgs","isTemplateString","prefixRaw","quasis","string","postfixRaw","length","valueRange","postfix","path","query","fragment","innerQuasis","innerRegExp","wrappedContextRegExp","source","map","q","join","regExp","RegExp","dep","request","recursive","wrappedContextRecursive","mode","loc","replaces","parts","forEach","part","i","value","templateStringKind","JSON","stringify","expression","type","raw","push","walkExpression","critical","wrappedContextCritical","isWrapped","isString","prefixRange","postfixRange","wrappedInnerExpressions","exprContextRequest","exprContextRecursive","exprContextRegExp","exprContextCritical"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/ContextDependencyHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { parseResource } = require(\"../util/identifier\");\n\n/** @typedef {import(\"estree\").Node} EsTreeNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ModuleOptionsNormalized} ModuleOptions */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"./ContextDependency\")} ContextDependency */\n/** @typedef {import(\"./ContextDependency\").ContextDependencyOptions} ContextDependencyOptions */\n\n/**\n * Escapes regular expression metacharacters\n * @param {string} str String to quote\n * @returns {string} Escaped string\n */\nconst quoteMeta = str => {\n\treturn str.replace(/[-[\\]\\\\/{}()*+?.^$|]/g, \"\\\\$&\");\n};\n\nconst splitContextFromPrefix = prefix => {\n\tconst idx = prefix.lastIndexOf(\"/\");\n\tlet context = \".\";\n\tif (idx >= 0) {\n\t\tcontext = prefix.slice(0, idx);\n\t\tprefix = `.${prefix.slice(idx)}`;\n\t}\n\treturn {\n\t\tcontext,\n\t\tprefix\n\t};\n};\n\n/** @typedef {Partial<Omit<ContextDependencyOptions, \"resource\">>} PartialContextDependencyOptions */\n\n/** @typedef {{ new(options: ContextDependencyOptions, range: [number, number], valueRange: [number, number], ...args: any[]): ContextDependency }} ContextDependencyConstructor */\n\n/**\n * @param {ContextDependencyConstructor} Dep the Dependency class\n * @param {[number, number]} range source range\n * @param {BasicEvaluatedExpression} param context param\n * @param {EsTreeNode} expr expr\n * @param {Pick<JavascriptParserOptions, `${\"expr\"|\"wrapped\"}Context${\"Critical\"|\"Recursive\"|\"RegExp\"}` | \"exprContextRequest\">} options options for context creation\n * @param {PartialContextDependencyOptions} contextOptions options for the ContextModule\n * @param {JavascriptParser} parser the parser\n * @param {...any} depArgs depArgs\n * @returns {ContextDependency} the created Dependency\n */\nexports.create = (\n\tDep,\n\trange,\n\tparam,\n\texpr,\n\toptions,\n\tcontextOptions,\n\tparser,\n\t...depArgs\n) => {\n\tif (param.isTemplateString()) {\n\t\tlet prefixRaw = param.quasis[0].string;\n\t\tlet postfixRaw =\n\t\t\tparam.quasis.length > 1\n\t\t\t\t? param.quasis[param.quasis.length - 1].string\n\t\t\t\t: \"\";\n\n\t\tconst valueRange = param.range;\n\t\tconst { context, prefix } = splitContextFromPrefix(prefixRaw);\n\t\tconst {\n\t\t\tpath: postfix,\n\t\t\tquery,\n\t\t\tfragment\n\t\t} = parseResource(postfixRaw, parser);\n\n\t\t// When there are more than two quasis, the generated RegExp can be more precise\n\t\t// We join the quasis with the expression regexp\n\t\tconst innerQuasis = param.quasis.slice(1, param.quasis.length - 1);\n\t\tconst innerRegExp =\n\t\t\toptions.wrappedContextRegExp.source +\n\t\t\tinnerQuasis\n\t\t\t\t.map(q => quoteMeta(q.string) + options.wrappedContextRegExp.source)\n\t\t\t\t.join(\"\");\n\n\t\t// Example: `./context/pre${e}inner${e}inner2${e}post?query#frag`\n\t\t// context: \"./context\"\n\t\t// prefix: \"./pre\"\n\t\t// innerQuasis: [BEE(\"inner\"), BEE(\"inner2\")]\n\t\t// (BEE = BasicEvaluatedExpression)\n\t\t// postfix: \"post\"\n\t\t// query: \"?query\"\n\t\t// fragment: \"#frag\"\n\t\t// regExp: /^\\.\\/pre.*inner.*inner2.*post$/\n\t\tconst regExp = new RegExp(\n\t\t\t`^${quoteMeta(prefix)}${innerRegExp}${quoteMeta(postfix)}$`\n\t\t);\n\t\tconst dep = new Dep(\n\t\t\t{\n\t\t\t\trequest: context + query + fragment,\n\t\t\t\trecursive: options.wrappedContextRecursive,\n\t\t\t\tregExp,\n\t\t\t\tmode: \"sync\",\n\t\t\t\t...contextOptions\n\t\t\t},\n\t\t\trange,\n\t\t\tvalueRange,\n\t\t\t...depArgs\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tconst replaces = [];\n\n\t\tparam.parts.forEach((part, i) => {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\t// Quasis or merged quasi\n\t\t\t\tlet range = part.range;\n\t\t\t\tlet value = part.string;\n\t\t\t\tif (param.templateStringKind === \"cooked\") {\n\t\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t\t\tvalue = value.slice(1, value.length - 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// prefix\n\t\t\t\t\tvalue = prefix;\n\t\t\t\t\trange = [param.range[0], part.range[1]];\n\t\t\t\t\tvalue =\n\t\t\t\t\t\t(param.templateStringKind === \"cooked\" ? \"`\" : \"String.raw`\") +\n\t\t\t\t\t\tvalue;\n\t\t\t\t} else if (i === param.parts.length - 1) {\n\t\t\t\t\t// postfix\n\t\t\t\t\tvalue = postfix;\n\t\t\t\t\trange = [part.range[0], param.range[1]];\n\t\t\t\t\tvalue = value + \"`\";\n\t\t\t\t} else if (\n\t\t\t\t\tpart.expression &&\n\t\t\t\t\tpart.expression.type === \"TemplateElement\" &&\n\t\t\t\t\tpart.expression.value.raw === value\n\t\t\t\t) {\n\t\t\t\t\t// Shortcut when it's a single quasi and doesn't need to be replaced\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treplaces.push({\n\t\t\t\t\trange,\n\t\t\t\t\tvalue\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Expression\n\t\t\t\tparser.walkExpression(part.expression);\n\t\t\t}\n\t\t});\n\n\t\tdep.replaces = replaces;\n\t\tdep.critical =\n\t\t\toptions.wrappedContextCritical &&\n\t\t\t\"a part of the request of a dependency is an expression\";\n\t\treturn dep;\n\t} else if (\n\t\tparam.isWrapped() &&\n\t\t((param.prefix && param.prefix.isString()) ||\n\t\t\t(param.postfix && param.postfix.isString()))\n\t) {\n\t\tlet prefixRaw =\n\t\t\tparam.prefix && param.prefix.isString() ? param.prefix.string : \"\";\n\t\tlet postfixRaw =\n\t\t\tparam.postfix && param.postfix.isString() ? param.postfix.string : \"\";\n\t\tconst prefixRange =\n\t\t\tparam.prefix && param.prefix.isString() ? param.prefix.range : null;\n\t\tconst postfixRange =\n\t\t\tparam.postfix && param.postfix.isString() ? param.postfix.range : null;\n\t\tconst valueRange = param.range;\n\t\tconst { context, prefix } = splitContextFromPrefix(prefixRaw);\n\t\tconst {\n\t\t\tpath: postfix,\n\t\t\tquery,\n\t\t\tfragment\n\t\t} = parseResource(postfixRaw, parser);\n\t\tconst regExp = new RegExp(\n\t\t\t`^${quoteMeta(prefix)}${options.wrappedContextRegExp.source}${quoteMeta(\n\t\t\t\tpostfix\n\t\t\t)}$`\n\t\t);\n\t\tconst dep = new Dep(\n\t\t\t{\n\t\t\t\trequest: context + query + fragment,\n\t\t\t\trecursive: options.wrappedContextRecursive,\n\t\t\t\tregExp,\n\t\t\t\tmode: \"sync\",\n\t\t\t\t...contextOptions\n\t\t\t},\n\t\t\trange,\n\t\t\tvalueRange,\n\t\t\t...depArgs\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tconst replaces = [];\n\t\tif (prefixRange) {\n\t\t\treplaces.push({\n\t\t\t\trange: prefixRange,\n\t\t\t\tvalue: JSON.stringify(prefix)\n\t\t\t});\n\t\t}\n\t\tif (postfixRange) {\n\t\t\treplaces.push({\n\t\t\t\trange: postfixRange,\n\t\t\t\tvalue: JSON.stringify(postfix)\n\t\t\t});\n\t\t}\n\t\tdep.replaces = replaces;\n\t\tdep.critical =\n\t\t\toptions.wrappedContextCritical &&\n\t\t\t\"a part of the request of a dependency is an expression\";\n\n\t\tif (parser && param.wrappedInnerExpressions) {\n\t\t\tfor (const part of param.wrappedInnerExpressions) {\n\t\t\t\tif (part.expression) parser.walkExpression(part.expression);\n\t\t\t}\n\t\t}\n\n\t\treturn dep;\n\t} else {\n\t\tconst dep = new Dep(\n\t\t\t{\n\t\t\t\trequest: options.exprContextRequest,\n\t\t\t\trecursive: options.exprContextRecursive,\n\t\t\t\tregExp: /** @type {RegExp} */ (options.exprContextRegExp),\n\t\t\t\tmode: \"sync\",\n\t\t\t\t...contextOptions\n\t\t\t},\n\t\t\trange,\n\t\t\tparam.range,\n\t\t\t...depArgs\n\t\t);\n\t\tdep.loc = expr.loc;\n\t\tdep.critical =\n\t\t\toptions.exprContextCritical &&\n\t\t\t\"the request of a dependency is an expression\";\n\n\t\tparser.walkExpression(param.expression);\n\n\t\treturn dep;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}