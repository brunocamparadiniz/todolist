{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {WeakMap<Compiler, Set<LibraryType>>} */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar enabledTypes = new WeakMap();\nvar getEnabledTypes = function getEnabledTypes(compiler) {\n  var set = enabledTypes.get(compiler);\n  if (set === undefined) {\n    set = new Set();\n    enabledTypes.set(compiler, set);\n  }\n  return set;\n};\nvar EnableLibraryPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {LibraryType} type library type that should be available\n   */\n  function EnableLibraryPlugin(type) {\n    _classCallCheck(this, EnableLibraryPlugin);\n    this.type = type;\n  }\n\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @param {LibraryType} type type of library\n   * @returns {void}\n   */\n  _createClass(EnableLibraryPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      var type = this.type;\n\n      // Only enable once\n      var enabled = getEnabledTypes(compiler);\n      if (enabled.has(type)) return;\n      enabled.add(type);\n      if (typeof type === \"string\") {\n        var enableExportProperty = function enableExportProperty() {\n          var ExportPropertyTemplatePlugin = require(\"./ExportPropertyLibraryPlugin\");\n          new ExportPropertyTemplatePlugin({\n            type: type,\n            nsObjectUsed: type !== \"module\"\n          }).apply(compiler);\n        };\n        switch (type) {\n          case \"var\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n              new AssignLibraryPlugin({\n                type: type,\n                prefix: [],\n                declare: \"var\",\n                unnamed: \"error\"\n              }).apply(compiler);\n              break;\n            }\n          case \"assign-properties\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin({\n                type: type,\n                prefix: [],\n                declare: false,\n                unnamed: \"error\",\n                named: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"assign\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin2 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin2({\n                type: type,\n                prefix: [],\n                declare: false,\n                unnamed: \"error\"\n              }).apply(compiler);\n              break;\n            }\n          case \"this\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin3 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin3({\n                type: type,\n                prefix: [\"this\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"window\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin4 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin4({\n                type: type,\n                prefix: [\"window\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"self\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin5 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin5({\n                type: type,\n                prefix: [\"self\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"global\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin6 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin6({\n                type: type,\n                prefix: \"global\",\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"commonjs\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin7 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin7({\n                type: type,\n                prefix: [\"exports\"],\n                declare: false,\n                unnamed: \"copy\"\n              }).apply(compiler);\n              break;\n            }\n          case \"commonjs-static\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin8 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin8({\n                type: type,\n                prefix: [\"exports\"],\n                declare: false,\n                unnamed: \"static\"\n              }).apply(compiler);\n              break;\n            }\n          case \"commonjs2\":\n          case \"commonjs-module\":\n            {\n              //@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n              var _AssignLibraryPlugin9 = require(\"./AssignLibraryPlugin\");\n              new _AssignLibraryPlugin9({\n                type: type,\n                prefix: [\"module\", \"exports\"],\n                declare: false,\n                unnamed: \"assign\"\n              }).apply(compiler);\n              break;\n            }\n          case \"amd\":\n          case \"amd-require\":\n            {\n              enableExportProperty();\n              var AmdLibraryPlugin = require(\"./AmdLibraryPlugin\");\n              new AmdLibraryPlugin({\n                type: type,\n                requireAsWrapper: type === \"amd-require\"\n              }).apply(compiler);\n              break;\n            }\n          case \"umd\":\n          case \"umd2\":\n            {\n              enableExportProperty();\n              var UmdLibraryPlugin = require(\"./UmdLibraryPlugin\");\n              new UmdLibraryPlugin({\n                type: type,\n                optionalAmdExternalAsGlobal: type === \"umd2\"\n              }).apply(compiler);\n              break;\n            }\n          case \"system\":\n            {\n              enableExportProperty();\n              var SystemLibraryPlugin = require(\"./SystemLibraryPlugin\");\n              new SystemLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n          case \"jsonp\":\n            {\n              enableExportProperty();\n              var JsonpLibraryPlugin = require(\"./JsonpLibraryPlugin\");\n              new JsonpLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n          case \"module\":\n            {\n              enableExportProperty();\n              var ModuleLibraryPlugin = require(\"./ModuleLibraryPlugin\");\n              new ModuleLibraryPlugin({\n                type: type\n              }).apply(compiler);\n              break;\n            }\n          default:\n            throw new Error(\"Unsupported library type \".concat(type, \".\\nPlugins which provide custom library types must call EnableLibraryPlugin.setEnabled(compiler, type) to disable this error.\"));\n        }\n      } else {\n        // TODO support plugin instances here\n        // apply them to the compiler\n      }\n    }\n  }], [{\n    key: \"setEnabled\",\n    value: function setEnabled(compiler, type) {\n      getEnabledTypes(compiler).add(type);\n    }\n\n    /**\n     * @param {Compiler} compiler the compiler instance\n     * @param {LibraryType} type type of library\n     * @returns {void}\n     */\n  }, {\n    key: \"checkEnabled\",\n    value: function checkEnabled(compiler, type) {\n      if (!getEnabledTypes(compiler).has(type)) {\n        throw new Error(\"Library type \\\"\".concat(type, \"\\\" is not enabled. \") + \"EnableLibraryPlugin need to be used to enable this type of library. \" + 'This usually happens through the \"output.enabledLibraryTypes\" option. ' + 'If you are using a function as entry which sets \"library\", you need to add all potential library types to \"output.enabledLibraryTypes\". ' + \"These types are enabled: \" + Array.from(getEnabledTypes(compiler)).join(\", \"));\n      }\n    }\n  }]);\n  return EnableLibraryPlugin;\n}();\nmodule.exports = EnableLibraryPlugin;","map":{"version":3,"names":["enabledTypes","WeakMap","getEnabledTypes","compiler","set","get","undefined","Set","EnableLibraryPlugin","type","enabled","has","add","enableExportProperty","ExportPropertyTemplatePlugin","require","nsObjectUsed","apply","AssignLibraryPlugin","prefix","declare","unnamed","named","AmdLibraryPlugin","requireAsWrapper","UmdLibraryPlugin","optionalAmdExternalAsGlobal","SystemLibraryPlugin","JsonpLibraryPlugin","ModuleLibraryPlugin","Error","Array","from","join","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/library/EnableLibraryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @type {WeakMap<Compiler, Set<LibraryType>>} */\nconst enabledTypes = new WeakMap();\n\nconst getEnabledTypes = compiler => {\n\tlet set = enabledTypes.get(compiler);\n\tif (set === undefined) {\n\t\tset = new Set();\n\t\tenabledTypes.set(compiler, set);\n\t}\n\treturn set;\n};\n\nclass EnableLibraryPlugin {\n\t/**\n\t * @param {LibraryType} type library type that should be available\n\t */\n\tconstructor(type) {\n\t\tthis.type = type;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @param {LibraryType} type type of library\n\t * @returns {void}\n\t */\n\tstatic setEnabled(compiler, type) {\n\t\tgetEnabledTypes(compiler).add(type);\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @param {LibraryType} type type of library\n\t * @returns {void}\n\t */\n\tstatic checkEnabled(compiler, type) {\n\t\tif (!getEnabledTypes(compiler).has(type)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Library type \"${type}\" is not enabled. ` +\n\t\t\t\t\t\"EnableLibraryPlugin need to be used to enable this type of library. \" +\n\t\t\t\t\t'This usually happens through the \"output.enabledLibraryTypes\" option. ' +\n\t\t\t\t\t'If you are using a function as entry which sets \"library\", you need to add all potential library types to \"output.enabledLibraryTypes\". ' +\n\t\t\t\t\t\"These types are enabled: \" +\n\t\t\t\t\tArray.from(getEnabledTypes(compiler)).join(\", \")\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { type } = this;\n\n\t\t// Only enable once\n\t\tconst enabled = getEnabledTypes(compiler);\n\t\tif (enabled.has(type)) return;\n\t\tenabled.add(type);\n\n\t\tif (typeof type === \"string\") {\n\t\t\tconst enableExportProperty = () => {\n\t\t\t\tconst ExportPropertyTemplatePlugin = require(\"./ExportPropertyLibraryPlugin\");\n\t\t\t\tnew ExportPropertyTemplatePlugin({\n\t\t\t\t\ttype,\n\t\t\t\t\tnsObjectUsed: type !== \"module\"\n\t\t\t\t}).apply(compiler);\n\t\t\t};\n\t\t\tswitch (type) {\n\t\t\t\tcase \"var\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: \"var\",\n\t\t\t\t\t\tunnamed: \"error\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"assign-properties\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"error\",\n\t\t\t\t\t\tnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"assign\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"error\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"this\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"this\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"window\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"window\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"self\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"self\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"global\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: \"global\",\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"copy\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs-static\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"static\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\": {\n\t\t\t\t\t//@ts-expect-error https://github.com/microsoft/TypeScript/issues/41697\n\t\t\t\t\tconst AssignLibraryPlugin = require(\"./AssignLibraryPlugin\");\n\t\t\t\t\tnew AssignLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprefix: [\"module\", \"exports\"],\n\t\t\t\t\t\tdeclare: false,\n\t\t\t\t\t\tunnamed: \"assign\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst AmdLibraryPlugin = require(\"./AmdLibraryPlugin\");\n\t\t\t\t\tnew AmdLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\trequireAsWrapper: type === \"amd-require\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst UmdLibraryPlugin = require(\"./UmdLibraryPlugin\");\n\t\t\t\t\tnew UmdLibraryPlugin({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: type === \"umd2\"\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst SystemLibraryPlugin = require(\"./SystemLibraryPlugin\");\n\t\t\t\t\tnew SystemLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst JsonpLibraryPlugin = require(\"./JsonpLibraryPlugin\");\n\t\t\t\t\tnew JsonpLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"module\": {\n\t\t\t\t\tenableExportProperty();\n\t\t\t\t\tconst ModuleLibraryPlugin = require(\"./ModuleLibraryPlugin\");\n\t\t\t\t\tnew ModuleLibraryPlugin({\n\t\t\t\t\t\ttype\n\t\t\t\t\t}).apply(compiler);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unsupported library type ${type}.\nPlugins which provide custom library types must call EnableLibraryPlugin.setEnabled(compiler, type) to disable this error.`);\n\t\t\t}\n\t\t} else {\n\t\t\t// TODO support plugin instances here\n\t\t\t// apply them to the compiler\n\t\t}\n\t}\n}\n\nmodule.exports = EnableLibraryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA;AAAA;AAAA;AACA,IAAMA,YAAY,GAAG,IAAIC,OAAO,EAAE;AAElC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,QAAQ,EAAI;EACnC,IAAIC,GAAG,GAAGJ,YAAY,CAACK,GAAG,CAACF,QAAQ,CAAC;EACpC,IAAIC,GAAG,KAAKE,SAAS,EAAE;IACtBF,GAAG,GAAG,IAAIG,GAAG,EAAE;IACfP,YAAY,CAACI,GAAG,CAACD,QAAQ,EAAEC,GAAG,CAAC;EAChC;EACA,OAAOA,GAAG;AACX,CAAC;AAAC,IAEII,mBAAmB;EACxB;AACD;AACA;EACC,6BAAYC,IAAI,EAAE;IAAA;IACjB,IAAI,CAACA,IAAI,GAAGA,IAAI;EACjB;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA;IA2BA;AACD;AACA;AACA;AACA;IACC,eAAMN,QAAQ,EAAE;MACf,IAAQM,IAAI,GAAK,IAAI,CAAbA,IAAI;;MAEZ;MACA,IAAMC,OAAO,GAAGR,eAAe,CAACC,QAAQ,CAAC;MACzC,IAAIO,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,EAAE;MACvBC,OAAO,CAACE,GAAG,CAACH,IAAI,CAAC;MAEjB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC7B,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoB,GAAS;UAClC,IAAMC,4BAA4B,GAAGC,OAAO,CAAC,+BAA+B,CAAC;UAC7E,IAAID,4BAA4B,CAAC;YAChCL,IAAI,EAAJA,IAAI;YACJO,YAAY,EAAEP,IAAI,KAAK;UACxB,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;QACnB,CAAC;QACD,QAAQM,IAAI;UACX,KAAK,KAAK;YAAE;cACX;cACA,IAAMS,mBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,mBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,EAAE;gBACVC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,mBAAmB;YAAE;cACzB;cACA,IAAMe,oBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,oBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,EAAE;gBACVC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE,OAAO;gBAChBC,KAAK,EAAE;cACR,CAAC,CAAC,CAACL,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,QAAQ;YAAE;cACd;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,EAAE;gBACVC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,MAAM;YAAE;cACZ;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,MAAM,CAAC;gBAChBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,QAAQ;YAAE;cACd;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,QAAQ,CAAC;gBAClBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,MAAM;YAAE;cACZ;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,MAAM,CAAC;gBAChBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,QAAQ;YAAE;cACd;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,QAAQ;gBAChBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,UAAU;YAAE;cAChB;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,SAAS,CAAC;gBACnBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,iBAAiB;YAAE;cACvB;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,SAAS,CAAC;gBACnBC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,WAAW;UAChB,KAAK,iBAAiB;YAAE;cACvB;cACA,IAAMe,qBAAmB,GAAGH,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIG,qBAAmB,CAAC;gBACvBT,IAAI,EAAJA,IAAI;gBACJU,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;gBAC7BC,OAAO,EAAE,KAAK;gBACdC,OAAO,EAAE;cACV,CAAC,CAAC,CAACJ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,KAAK;UACV,KAAK,aAAa;YAAE;cACnBU,oBAAoB,EAAE;cACtB,IAAMU,gBAAgB,GAAGR,OAAO,CAAC,oBAAoB,CAAC;cACtD,IAAIQ,gBAAgB,CAAC;gBACpBd,IAAI,EAAJA,IAAI;gBACJe,gBAAgB,EAAEf,IAAI,KAAK;cAC5B,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,KAAK;UACV,KAAK,MAAM;YAAE;cACZU,oBAAoB,EAAE;cACtB,IAAMY,gBAAgB,GAAGV,OAAO,CAAC,oBAAoB,CAAC;cACtD,IAAIU,gBAAgB,CAAC;gBACpBhB,IAAI,EAAJA,IAAI;gBACJiB,2BAA2B,EAAEjB,IAAI,KAAK;cACvC,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,QAAQ;YAAE;cACdU,oBAAoB,EAAE;cACtB,IAAMc,mBAAmB,GAAGZ,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIY,mBAAmB,CAAC;gBACvBlB,IAAI,EAAJA;cACD,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,OAAO;YAAE;cACbU,oBAAoB,EAAE;cACtB,IAAMe,kBAAkB,GAAGb,OAAO,CAAC,sBAAsB,CAAC;cAC1D,IAAIa,kBAAkB,CAAC;gBACtBnB,IAAI,EAAJA;cACD,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA,KAAK,QAAQ;YAAE;cACdU,oBAAoB,EAAE;cACtB,IAAMgB,mBAAmB,GAAGd,OAAO,CAAC,uBAAuB,CAAC;cAC5D,IAAIc,mBAAmB,CAAC;gBACvBpB,IAAI,EAAJA;cACD,CAAC,CAAC,CAACQ,KAAK,CAACd,QAAQ,CAAC;cAClB;YACD;UACA;YACC,MAAM,IAAI2B,KAAK,oCAA6BrB,IAAI,mIACuE;QAAC;MAE3H,CAAC,MAAM;QACN;QACA;MAAA;IAEF;EAAC;IAAA;IAAA,OAhND,oBAAkBN,QAAQ,EAAEM,IAAI,EAAE;MACjCP,eAAe,CAACC,QAAQ,CAAC,CAACS,GAAG,CAACH,IAAI,CAAC;IACpC;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,sBAAoBN,QAAQ,EAAEM,IAAI,EAAE;MACnC,IAAI,CAACP,eAAe,CAACC,QAAQ,CAAC,CAACQ,GAAG,CAACF,IAAI,CAAC,EAAE;QACzC,MAAM,IAAIqB,KAAK,CACd,yBAAiBrB,IAAI,2BACpB,sEAAsE,GACtE,wEAAwE,GACxE,0IAA0I,GAC1I,2BAA2B,GAC3BsB,KAAK,CAACC,IAAI,CAAC9B,eAAe,CAACC,QAAQ,CAAC,CAAC,CAAC8B,IAAI,CAAC,IAAI,CAAC,CACjD;MACF;IACD;EAAC;EAAA;AAAA;AA+LFC,MAAM,CAACC,OAAO,GAAG3B,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}