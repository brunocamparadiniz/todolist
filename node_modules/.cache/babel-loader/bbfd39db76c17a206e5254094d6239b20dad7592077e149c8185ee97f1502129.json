{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../util/comparators\"),\n  compareChunksNatural = _require.compareChunksNatural;\nvar _require2 = require(\"./IdHelpers\"),\n  assignAscendingChunkIds = _require2.assignAscendingChunkIds;\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\nvar NaturalChunkIdsPlugin = /*#__PURE__*/function () {\n  function NaturalChunkIdsPlugin() {\n    _classCallCheck(this, NaturalChunkIdsPlugin);\n  }\n  _createClass(NaturalChunkIdsPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"NaturalChunkIdsPlugin\", function (compilation) {\n        compilation.hooks.chunkIds.tap(\"NaturalChunkIdsPlugin\", function (chunks) {\n          var chunkGraph = compilation.chunkGraph;\n          var compareNatural = compareChunksNatural(chunkGraph);\n          var chunksInNaturalOrder = Array.from(chunks).sort(compareNatural);\n          assignAscendingChunkIds(chunksInNaturalOrder, compilation);\n        });\n      });\n    }\n  }]);\n  return NaturalChunkIdsPlugin;\n}();\nmodule.exports = NaturalChunkIdsPlugin;","map":{"version":3,"names":["require","compareChunksNatural","assignAscendingChunkIds","NaturalChunkIdsPlugin","compiler","hooks","compilation","tap","chunkIds","chunks","chunkGraph","compareNatural","chunksInNaturalOrder","Array","from","sort","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ids/NaturalChunkIdsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareChunksNatural } = require(\"../util/comparators\");\nconst { assignAscendingChunkIds } = require(\"./IdHelpers\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n\nclass NaturalChunkIdsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NaturalChunkIdsPlugin\", compilation => {\n\t\t\tcompilation.hooks.chunkIds.tap(\"NaturalChunkIdsPlugin\", chunks => {\n\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\tconst compareNatural = compareChunksNatural(chunkGraph);\n\t\t\t\tconst chunksInNaturalOrder = Array.from(chunks).sort(compareNatural);\n\t\t\t\tassignAscendingChunkIds(chunksInNaturalOrder, compilation);\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NaturalChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,eAAiCA,OAAO,CAAC,qBAAqB,CAAC;EAAvDC,oBAAoB,YAApBA,oBAAoB;AAC5B,gBAAoCD,OAAO,CAAC,aAAa,CAAC;EAAlDE,uBAAuB,aAAvBA,uBAAuB;;AAE/B;AACA;AACA;AAAA,IAEMC,qBAAqB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC1B;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,uBAAuB,EAAE,UAAAD,WAAW,EAAI;QACtEA,WAAW,CAACD,KAAK,CAACG,QAAQ,CAACD,GAAG,CAAC,uBAAuB,EAAE,UAAAE,MAAM,EAAI;UACjE,IAAMC,UAAU,GAAGJ,WAAW,CAACI,UAAU;UACzC,IAAMC,cAAc,GAAGV,oBAAoB,CAACS,UAAU,CAAC;UACvD,IAAME,oBAAoB,GAAGC,KAAK,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,IAAI,CAACJ,cAAc,CAAC;UACpET,uBAAuB,CAACU,oBAAoB,EAAEN,WAAW,CAAC;QAC3D,CAAC,CAAC;MACH,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFU,MAAM,CAACC,OAAO,GAAGd,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}