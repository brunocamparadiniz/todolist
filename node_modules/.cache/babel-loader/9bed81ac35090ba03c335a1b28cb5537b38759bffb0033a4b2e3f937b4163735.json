{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar util = require(\"util\");\nvar ExportsInfo = require(\"./ExportsInfo\");\nvar ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nvar SortableSet = require(\"./util/SortableSet\");\nvar WeakTupleMap = require(\"./util/WeakTupleMap\");\n\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleProfile\")} ModuleProfile */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback OptimizationBailoutFunction\n * @param {RequestShortener} requestShortener\n * @returns {string}\n */\n\nvar EMPTY_SET = new Set();\n\n/**\n * @param {SortableSet<ModuleGraphConnection>} set input\n * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} mapped by origin module\n */\nvar getConnectionsByOriginModule = function getConnectionsByOriginModule(set) {\n  var map = new Map();\n  /** @type {Module | 0} */\n  var lastModule = 0;\n  /** @type {ModuleGraphConnection[]} */\n  var lastList = undefined;\n  var _iterator = _createForOfIteratorHelper(set),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var connection = _step.value;\n      var originModule = connection.originModule;\n      if (lastModule === originModule) {\n        lastList.push(connection);\n      } else {\n        lastModule = originModule;\n        var list = map.get(originModule);\n        if (list !== undefined) {\n          lastList = list;\n          list.push(connection);\n        } else {\n          var _list = [connection];\n          lastList = _list;\n          map.set(originModule, _list);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return map;\n};\n\n/**\n * @param {SortableSet<ModuleGraphConnection>} set input\n * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} mapped by module\n */\nvar getConnectionsByModule = function getConnectionsByModule(set) {\n  var map = new Map();\n  /** @type {Module | 0} */\n  var lastModule = 0;\n  /** @type {ModuleGraphConnection[]} */\n  var lastList = undefined;\n  var _iterator2 = _createForOfIteratorHelper(set),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var connection = _step2.value;\n      var _module = connection.module;\n      if (lastModule === _module) {\n        lastList.push(connection);\n      } else {\n        lastModule = _module;\n        var list = map.get(_module);\n        if (list !== undefined) {\n          lastList = list;\n          list.push(connection);\n        } else {\n          var _list2 = [connection];\n          lastList = _list2;\n          map.set(_module, _list2);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return map;\n};\nvar ModuleGraphModule = /*#__PURE__*/_createClass(function ModuleGraphModule() {\n  _classCallCheck(this, ModuleGraphModule);\n  /** @type {SortableSet<ModuleGraphConnection>} */\n  this.incomingConnections = new SortableSet();\n  /** @type {SortableSet<ModuleGraphConnection> | undefined} */\n  this.outgoingConnections = undefined;\n  /** @type {Module | null} */\n  this.issuer = undefined;\n  /** @type {(string | OptimizationBailoutFunction)[]} */\n  this.optimizationBailout = [];\n  /** @type {ExportsInfo} */\n  this.exports = new ExportsInfo();\n  /** @type {number} */\n  this.preOrderIndex = null;\n  /** @type {number} */\n  this.postOrderIndex = null;\n  /** @type {number} */\n  this.depth = null;\n  /** @type {ModuleProfile} */\n  this.profile = undefined;\n  /** @type {boolean} */\n  this.async = false;\n  /** @type {ModuleGraphConnection[]} */\n  this._unassignedConnections = undefined;\n});\nvar ModuleGraph = /*#__PURE__*/function () {\n  function ModuleGraph() {\n    _classCallCheck(this, ModuleGraph);\n    /** @type {WeakMap<Dependency, ModuleGraphConnection>} */\n    this._dependencyMap = new WeakMap();\n    /** @type {Map<Module, ModuleGraphModule>} */\n    this._moduleMap = new Map();\n    /** @type {WeakMap<any, Object>} */\n    this._metaMap = new WeakMap();\n\n    /** @type {WeakTupleMap<any[], any>} */\n    this._cache = undefined;\n\n    /** @type {Map<Module, WeakTupleMap<any, any>>} */\n    this._moduleMemCaches = undefined;\n  }\n\n  /**\n   * @param {Module} module the module\n   * @returns {ModuleGraphModule} the internal module\n   */\n  _createClass(ModuleGraph, [{\n    key: \"_getModuleGraphModule\",\n    value: function _getModuleGraphModule(module) {\n      var mgm = this._moduleMap.get(module);\n      if (mgm === undefined) {\n        mgm = new ModuleGraphModule();\n        this._moduleMap.set(module, mgm);\n      }\n      return mgm;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency\n     * @param {DependenciesBlock} block parent block\n     * @param {Module} module parent module\n     * @param {number=} indexInBlock position in block\n     * @returns {void}\n     */\n  }, {\n    key: \"setParents\",\n    value: function setParents(dependency, block, module) {\n      var indexInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n      dependency._parentDependenciesBlockIndex = indexInBlock;\n      dependency._parentDependenciesBlock = block;\n      dependency._parentModule = module;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency\n     * @returns {Module} parent module\n     */\n  }, {\n    key: \"getParentModule\",\n    value: function getParentModule(dependency) {\n      return dependency._parentModule;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency\n     * @returns {DependenciesBlock} parent block\n     */\n  }, {\n    key: \"getParentBlock\",\n    value: function getParentBlock(dependency) {\n      return dependency._parentDependenciesBlock;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency\n     * @returns {number} index\n     */\n  }, {\n    key: \"getParentBlockIndex\",\n    value: function getParentBlockIndex(dependency) {\n      return dependency._parentDependenciesBlockIndex;\n    }\n\n    /**\n     * @param {Module} originModule the referencing module\n     * @param {Dependency} dependency the referencing dependency\n     * @param {Module} module the referenced module\n     * @returns {void}\n     */\n  }, {\n    key: \"setResolvedModule\",\n    value: function setResolvedModule(originModule, dependency, module) {\n      var connection = new ModuleGraphConnection(originModule, dependency, module, undefined, dependency.weak, dependency.getCondition(this));\n      var connections = this._getModuleGraphModule(module).incomingConnections;\n      connections.add(connection);\n      if (originModule) {\n        var mgm = this._getModuleGraphModule(originModule);\n        if (mgm._unassignedConnections === undefined) {\n          mgm._unassignedConnections = [];\n        }\n        mgm._unassignedConnections.push(connection);\n        if (mgm.outgoingConnections === undefined) {\n          mgm.outgoingConnections = new SortableSet();\n        }\n        mgm.outgoingConnections.add(connection);\n      } else {\n        this._dependencyMap.set(dependency, connection);\n      }\n    }\n\n    /**\n     * @param {Dependency} dependency the referencing dependency\n     * @param {Module} module the referenced module\n     * @returns {void}\n     */\n  }, {\n    key: \"updateModule\",\n    value: function updateModule(dependency, module) {\n      var connection = this.getConnection(dependency);\n      if (connection.module === module) return;\n      var newConnection = connection.clone();\n      newConnection.module = module;\n      this._dependencyMap.set(dependency, newConnection);\n      connection.setActive(false);\n      var originMgm = this._getModuleGraphModule(connection.originModule);\n      originMgm.outgoingConnections.add(newConnection);\n      var targetMgm = this._getModuleGraphModule(module);\n      targetMgm.incomingConnections.add(newConnection);\n    }\n\n    /**\n     * @param {Dependency} dependency the referencing dependency\n     * @returns {void}\n     */\n  }, {\n    key: \"removeConnection\",\n    value: function removeConnection(dependency) {\n      var connection = this.getConnection(dependency);\n      var targetMgm = this._getModuleGraphModule(connection.module);\n      targetMgm.incomingConnections.delete(connection);\n      var originMgm = this._getModuleGraphModule(connection.originModule);\n      originMgm.outgoingConnections.delete(connection);\n      this._dependencyMap.set(dependency, null);\n    }\n\n    /**\n     * @param {Dependency} dependency the referencing dependency\n     * @param {string} explanation an explanation\n     * @returns {void}\n     */\n  }, {\n    key: \"addExplanation\",\n    value: function addExplanation(dependency, explanation) {\n      var connection = this.getConnection(dependency);\n      connection.addExplanation(explanation);\n    }\n\n    /**\n     * @param {Module} sourceModule the source module\n     * @param {Module} targetModule the target module\n     * @returns {void}\n     */\n  }, {\n    key: \"cloneModuleAttributes\",\n    value: function cloneModuleAttributes(sourceModule, targetModule) {\n      var oldMgm = this._getModuleGraphModule(sourceModule);\n      var newMgm = this._getModuleGraphModule(targetModule);\n      newMgm.postOrderIndex = oldMgm.postOrderIndex;\n      newMgm.preOrderIndex = oldMgm.preOrderIndex;\n      newMgm.depth = oldMgm.depth;\n      newMgm.exports = oldMgm.exports;\n      newMgm.async = oldMgm.async;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {void}\n     */\n  }, {\n    key: \"removeModuleAttributes\",\n    value: function removeModuleAttributes(module) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.postOrderIndex = null;\n      mgm.preOrderIndex = null;\n      mgm.depth = null;\n      mgm.async = false;\n    }\n\n    /**\n     * @returns {void}\n     */\n  }, {\n    key: \"removeAllModuleAttributes\",\n    value: function removeAllModuleAttributes() {\n      var _iterator3 = _createForOfIteratorHelper(this._moduleMap.values()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var mgm = _step3.value;\n          mgm.postOrderIndex = null;\n          mgm.preOrderIndex = null;\n          mgm.depth = null;\n          mgm.async = false;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    /**\n     * @param {Module} oldModule the old referencing module\n     * @param {Module} newModule the new referencing module\n     * @param {function(ModuleGraphConnection): boolean} filterConnection filter predicate for replacement\n     * @returns {void}\n     */\n  }, {\n    key: \"moveModuleConnections\",\n    value: function moveModuleConnections(oldModule, newModule, filterConnection) {\n      if (oldModule === newModule) return;\n      var oldMgm = this._getModuleGraphModule(oldModule);\n      var newMgm = this._getModuleGraphModule(newModule);\n      // Outgoing connections\n      var oldConnections = oldMgm.outgoingConnections;\n      if (oldConnections !== undefined) {\n        if (newMgm.outgoingConnections === undefined) {\n          newMgm.outgoingConnections = new SortableSet();\n        }\n        var newConnections = newMgm.outgoingConnections;\n        var _iterator4 = _createForOfIteratorHelper(oldConnections),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var connection = _step4.value;\n            if (filterConnection(connection)) {\n              connection.originModule = newModule;\n              newConnections.add(connection);\n              oldConnections.delete(connection);\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n      // Incoming connections\n      var oldConnections2 = oldMgm.incomingConnections;\n      var newConnections2 = newMgm.incomingConnections;\n      var _iterator5 = _createForOfIteratorHelper(oldConnections2),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _connection = _step5.value;\n          if (filterConnection(_connection)) {\n            _connection.module = newModule;\n            newConnections2.add(_connection);\n            oldConnections2.delete(_connection);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    /**\n     * @param {Module} oldModule the old referencing module\n     * @param {Module} newModule the new referencing module\n     * @param {function(ModuleGraphConnection): boolean} filterConnection filter predicate for replacement\n     * @returns {void}\n     */\n  }, {\n    key: \"copyOutgoingModuleConnections\",\n    value: function copyOutgoingModuleConnections(oldModule, newModule, filterConnection) {\n      if (oldModule === newModule) return;\n      var oldMgm = this._getModuleGraphModule(oldModule);\n      var newMgm = this._getModuleGraphModule(newModule);\n      // Outgoing connections\n      var oldConnections = oldMgm.outgoingConnections;\n      if (oldConnections !== undefined) {\n        if (newMgm.outgoingConnections === undefined) {\n          newMgm.outgoingConnections = new SortableSet();\n        }\n        var newConnections = newMgm.outgoingConnections;\n        var _iterator6 = _createForOfIteratorHelper(oldConnections),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var connection = _step6.value;\n            if (filterConnection(connection)) {\n              var newConnection = connection.clone();\n              newConnection.originModule = newModule;\n              newConnections.add(newConnection);\n              if (newConnection.module !== undefined) {\n                var otherMgm = this._getModuleGraphModule(newConnection.module);\n                otherMgm.incomingConnections.add(newConnection);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n    }\n\n    /**\n     * @param {Module} module the referenced module\n     * @param {string} explanation an explanation why it's referenced\n     * @returns {void}\n     */\n  }, {\n    key: \"addExtraReason\",\n    value: function addExtraReason(module, explanation) {\n      var connections = this._getModuleGraphModule(module).incomingConnections;\n      connections.add(new ModuleGraphConnection(null, null, module, explanation));\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency to look for a referenced module\n     * @returns {Module} the referenced module\n     */\n  }, {\n    key: \"getResolvedModule\",\n    value: function getResolvedModule(dependency) {\n      var connection = this.getConnection(dependency);\n      return connection !== undefined ? connection.resolvedModule : null;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency to look for a referenced module\n     * @returns {ModuleGraphConnection | undefined} the connection\n     */\n  }, {\n    key: \"getConnection\",\n    value: function getConnection(dependency) {\n      var connection = this._dependencyMap.get(dependency);\n      if (connection === undefined) {\n        var _module2 = this.getParentModule(dependency);\n        if (_module2 !== undefined) {\n          var mgm = this._getModuleGraphModule(_module2);\n          if (mgm._unassignedConnections && mgm._unassignedConnections.length !== 0) {\n            var foundConnection;\n            var _iterator7 = _createForOfIteratorHelper(mgm._unassignedConnections),\n              _step7;\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _connection2 = _step7.value;\n                this._dependencyMap.set(_connection2.dependency, _connection2);\n                if (_connection2.dependency === dependency) foundConnection = _connection2;\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n            mgm._unassignedConnections.length = 0;\n            if (foundConnection !== undefined) {\n              return foundConnection;\n            }\n          }\n        }\n        this._dependencyMap.set(dependency, null);\n        return undefined;\n      }\n      return connection === null ? undefined : connection;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency to look for a referenced module\n     * @returns {Module} the referenced module\n     */\n  }, {\n    key: \"getModule\",\n    value: function getModule(dependency) {\n      var connection = this.getConnection(dependency);\n      return connection !== undefined ? connection.module : null;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency to look for a referencing module\n     * @returns {Module} the referencing module\n     */\n  }, {\n    key: \"getOrigin\",\n    value: function getOrigin(dependency) {\n      var connection = this.getConnection(dependency);\n      return connection !== undefined ? connection.originModule : null;\n    }\n\n    /**\n     * @param {Dependency} dependency the dependency to look for a referencing module\n     * @returns {Module} the original referencing module\n     */\n  }, {\n    key: \"getResolvedOrigin\",\n    value: function getResolvedOrigin(dependency) {\n      var connection = this.getConnection(dependency);\n      return connection !== undefined ? connection.resolvedOriginModule : null;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {Iterable<ModuleGraphConnection>} reasons why a module is included\n     */\n  }, {\n    key: \"getIncomingConnections\",\n    value: function getIncomingConnections(module) {\n      var connections = this._getModuleGraphModule(module).incomingConnections;\n      return connections;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {Iterable<ModuleGraphConnection>} list of outgoing connections\n     */\n  }, {\n    key: \"getOutgoingConnections\",\n    value: function getOutgoingConnections(module) {\n      var connections = this._getModuleGraphModule(module).outgoingConnections;\n      return connections === undefined ? EMPTY_SET : connections;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} reasons why a module is included, in a map by source module\n     */\n  }, {\n    key: \"getIncomingConnectionsByOriginModule\",\n    value: function getIncomingConnectionsByOriginModule(module) {\n      var connections = this._getModuleGraphModule(module).incomingConnections;\n      return connections.getFromUnorderedCache(getConnectionsByOriginModule);\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]> | undefined} connections to modules, in a map by module\n     */\n  }, {\n    key: \"getOutgoingConnectionsByModule\",\n    value: function getOutgoingConnectionsByModule(module) {\n      var connections = this._getModuleGraphModule(module).outgoingConnections;\n      return connections === undefined ? undefined : connections.getFromUnorderedCache(getConnectionsByModule);\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {ModuleProfile | null} the module profile\n     */\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.profile;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {ModuleProfile | null} profile the module profile\n     * @returns {void}\n     */\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(module, profile) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.profile = profile;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {Module | null} the issuer module\n     */\n  }, {\n    key: \"getIssuer\",\n    value: function getIssuer(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.issuer;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {Module | null} issuer the issuer module\n     * @returns {void}\n     */\n  }, {\n    key: \"setIssuer\",\n    value: function setIssuer(module, issuer) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.issuer = issuer;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {Module | null} issuer the issuer module\n     * @returns {void}\n     */\n  }, {\n    key: \"setIssuerIfUnset\",\n    value: function setIssuerIfUnset(module, issuer) {\n      var mgm = this._getModuleGraphModule(module);\n      if (mgm.issuer === undefined) mgm.issuer = issuer;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {(string | OptimizationBailoutFunction)[]} optimization bailouts\n     */\n  }, {\n    key: \"getOptimizationBailout\",\n    value: function getOptimizationBailout(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.optimizationBailout;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {true | string[] | null} the provided exports\n     */\n  }, {\n    key: \"getProvidedExports\",\n    value: function getProvidedExports(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.exports.getProvidedExports();\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {string | string[]} exportName a name of an export\n     * @returns {boolean | null} true, if the export is provided by the module.\n     * null, if it's unknown.\n     * false, if it's not provided.\n     */\n  }, {\n    key: \"isExportProvided\",\n    value: function isExportProvided(module, exportName) {\n      var mgm = this._getModuleGraphModule(module);\n      var result = mgm.exports.isExportProvided(exportName);\n      return result === undefined ? null : result;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {ExportsInfo} info about the exports\n     */\n  }, {\n    key: \"getExportsInfo\",\n    value: function getExportsInfo(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.exports;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {string} exportName the export\n     * @returns {ExportInfo} info about the export\n     */\n  }, {\n    key: \"getExportInfo\",\n    value: function getExportInfo(module, exportName) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.exports.getExportInfo(exportName);\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {string} exportName the export\n     * @returns {ExportInfo} info about the export (do not modify)\n     */\n  }, {\n    key: \"getReadOnlyExportInfo\",\n    value: function getReadOnlyExportInfo(module, exportName) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.exports.getReadOnlyExportInfo(exportName);\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {RuntimeSpec} runtime the runtime\n     * @returns {false | true | SortableSet<string> | null} the used exports\n     * false: module is not used at all.\n     * true: the module namespace/object export is used.\n     * SortableSet<string>: these export names are used.\n     * empty SortableSet<string>: module is used but no export.\n     * null: unknown, worst case should be assumed.\n     */\n  }, {\n    key: \"getUsedExports\",\n    value: function getUsedExports(module, runtime) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.exports.getUsedExports(runtime);\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {number} the index of the module\n     */\n  }, {\n    key: \"getPreOrderIndex\",\n    value: function getPreOrderIndex(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.preOrderIndex;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {number} the index of the module\n     */\n  }, {\n    key: \"getPostOrderIndex\",\n    value: function getPostOrderIndex(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.postOrderIndex;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} index the index of the module\n     * @returns {void}\n     */\n  }, {\n    key: \"setPreOrderIndex\",\n    value: function setPreOrderIndex(module, index) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.preOrderIndex = index;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} index the index of the module\n     * @returns {boolean} true, if the index was set\n     */\n  }, {\n    key: \"setPreOrderIndexIfUnset\",\n    value: function setPreOrderIndexIfUnset(module, index) {\n      var mgm = this._getModuleGraphModule(module);\n      if (mgm.preOrderIndex === null) {\n        mgm.preOrderIndex = index;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} index the index of the module\n     * @returns {void}\n     */\n  }, {\n    key: \"setPostOrderIndex\",\n    value: function setPostOrderIndex(module, index) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.postOrderIndex = index;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} index the index of the module\n     * @returns {boolean} true, if the index was set\n     */\n  }, {\n    key: \"setPostOrderIndexIfUnset\",\n    value: function setPostOrderIndexIfUnset(module, index) {\n      var mgm = this._getModuleGraphModule(module);\n      if (mgm.postOrderIndex === null) {\n        mgm.postOrderIndex = index;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {number} the depth of the module\n     */\n  }, {\n    key: \"getDepth\",\n    value: function getDepth(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.depth;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} depth the depth of the module\n     * @returns {void}\n     */\n  }, {\n    key: \"setDepth\",\n    value: function setDepth(module, depth) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.depth = depth;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @param {number} depth the depth of the module\n     * @returns {boolean} true, if the depth was set\n     */\n  }, {\n    key: \"setDepthIfLower\",\n    value: function setDepthIfLower(module, depth) {\n      var mgm = this._getModuleGraphModule(module);\n      if (mgm.depth === null || mgm.depth > depth) {\n        mgm.depth = depth;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {boolean} true, if the module is async\n     */\n  }, {\n    key: \"isAsync\",\n    value: function isAsync(module) {\n      var mgm = this._getModuleGraphModule(module);\n      return mgm.async;\n    }\n\n    /**\n     * @param {Module} module the module\n     * @returns {void}\n     */\n  }, {\n    key: \"setAsync\",\n    value: function setAsync(module) {\n      var mgm = this._getModuleGraphModule(module);\n      mgm.async = true;\n    }\n\n    /**\n     * @param {any} thing any thing\n     * @returns {Object} metadata\n     */\n  }, {\n    key: \"getMeta\",\n    value: function getMeta(thing) {\n      var meta = this._metaMap.get(thing);\n      if (meta === undefined) {\n        meta = Object.create(null);\n        this._metaMap.set(thing, meta);\n      }\n      return meta;\n    }\n\n    /**\n     * @param {any} thing any thing\n     * @returns {Object} metadata\n     */\n  }, {\n    key: \"getMetaIfExisting\",\n    value: function getMetaIfExisting(thing) {\n      return this._metaMap.get(thing);\n    }\n\n    /**\n     * @param {string=} cacheStage a persistent stage name for caching\n     */\n  }, {\n    key: \"freeze\",\n    value: function freeze(cacheStage) {\n      this._cache = new WeakTupleMap();\n      this._cacheStage = cacheStage;\n    }\n  }, {\n    key: \"unfreeze\",\n    value: function unfreeze() {\n      this._cache = undefined;\n      this._cacheStage = undefined;\n    }\n\n    /**\n     * @template {any[]} T\n     * @template V\n     * @param {(moduleGraph: ModuleGraph, ...args: T) => V} fn computer\n     * @param {T} args arguments\n     * @returns {V} computed value or cached\n     */\n  }, {\n    key: \"cached\",\n    value: function cached(fn) {\n      var _this$_cache,\n        _this = this;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (this._cache === undefined) return fn.apply(void 0, [this].concat(args));\n      return (_this$_cache = this._cache).provide.apply(_this$_cache, [fn].concat(args, [function () {\n        return fn.apply(void 0, [_this].concat(args));\n      }]));\n    }\n\n    /**\n     * @param {Map<Module, WeakTupleMap<any, any>>} moduleMemCaches mem caches for modules for better caching\n     */\n  }, {\n    key: \"setModuleMemCaches\",\n    value: function setModuleMemCaches(moduleMemCaches) {\n      this._moduleMemCaches = moduleMemCaches;\n    }\n\n    /**\n     * @param {Dependency} dependency dependency\n     * @param {...any} args arguments, last argument is a function called with moduleGraph, dependency, ...args\n     * @returns {any} computed value or cached\n     */\n  }, {\n    key: \"dependencyCacheProvide\",\n    value: function dependencyCacheProvide(dependency) {\n      var _this2 = this,\n        _this$_cache2;\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      /** @type {(moduleGraph: ModuleGraph, dependency: Dependency, ...args: any[]) => any} */\n      var fn = args.pop();\n      if (this._moduleMemCaches && this._cacheStage) {\n        var memCache = this._moduleMemCaches.get(this.getParentModule(dependency));\n        if (memCache !== undefined) {\n          return memCache.provide.apply(memCache, [dependency, this._cacheStage].concat(args, [function () {\n            return fn.apply(void 0, [_this2, dependency].concat(args));\n          }]));\n        }\n      }\n      if (this._cache === undefined) return fn.apply(void 0, [this, dependency].concat(args));\n      return (_this$_cache2 = this._cache).provide.apply(_this$_cache2, [dependency].concat(args, [function () {\n        return fn.apply(void 0, [_this2, dependency].concat(args));\n      }]));\n    }\n\n    // TODO remove in webpack 6\n    /**\n     * @param {Module} module the module\n     * @param {string} deprecateMessage message for the deprecation message\n     * @param {string} deprecationCode code for the deprecation\n     * @returns {ModuleGraph} the module graph\n     */\n  }], [{\n    key: \"getModuleGraphForModule\",\n    value: function getModuleGraphForModule(module, deprecateMessage, deprecationCode) {\n      var fn = deprecateMap.get(deprecateMessage);\n      if (fn) return fn(module);\n      var newFn = util.deprecate(\n      /**\n       * @param {Module} module the module\n       * @returns {ModuleGraph} the module graph\n       */\n      function (module) {\n        var moduleGraph = moduleGraphForModuleMap.get(module);\n        if (!moduleGraph) throw new Error(deprecateMessage + \"There was no ModuleGraph assigned to the Module for backward-compat (Use the new API)\");\n        return moduleGraph;\n      }, deprecateMessage + \": Use new ModuleGraph API\", deprecationCode);\n      deprecateMap.set(deprecateMessage, newFn);\n      return newFn(module);\n    }\n\n    // TODO remove in webpack 6\n    /**\n     * @param {Module} module the module\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @returns {void}\n     */\n  }, {\n    key: \"setModuleGraphForModule\",\n    value: function setModuleGraphForModule(module, moduleGraph) {\n      moduleGraphForModuleMap.set(module, moduleGraph);\n    }\n\n    // TODO remove in webpack 6\n    /**\n     * @param {Module} module the module\n     * @returns {void}\n     */\n  }, {\n    key: \"clearModuleGraphForModule\",\n    value: function clearModuleGraphForModule(module) {\n      moduleGraphForModuleMap.delete(module);\n    }\n  }]);\n  return ModuleGraph;\n}(); // TODO remove in webpack 6\n/** @type {WeakMap<Module, ModuleGraph>} */\nvar moduleGraphForModuleMap = new WeakMap();\n\n// TODO remove in webpack 6\n/** @type {Map<string, (module: Module) => ModuleGraph>} */\nvar deprecateMap = new Map();\nmodule.exports = ModuleGraph;\nmodule.exports.ModuleGraphConnection = ModuleGraphConnection;","map":{"version":3,"names":["util","require","ExportsInfo","ModuleGraphConnection","SortableSet","WeakTupleMap","EMPTY_SET","Set","getConnectionsByOriginModule","set","map","Map","lastModule","lastList","undefined","connection","originModule","push","list","get","getConnectionsByModule","module","ModuleGraphModule","incomingConnections","outgoingConnections","issuer","optimizationBailout","exports","preOrderIndex","postOrderIndex","depth","profile","async","_unassignedConnections","ModuleGraph","_dependencyMap","WeakMap","_moduleMap","_metaMap","_cache","_moduleMemCaches","mgm","dependency","block","indexInBlock","_parentDependenciesBlockIndex","_parentDependenciesBlock","_parentModule","weak","getCondition","connections","_getModuleGraphModule","add","getConnection","newConnection","clone","setActive","originMgm","targetMgm","delete","explanation","addExplanation","sourceModule","targetModule","oldMgm","newMgm","values","oldModule","newModule","filterConnection","oldConnections","newConnections","oldConnections2","newConnections2","otherMgm","resolvedModule","getParentModule","length","foundConnection","resolvedOriginModule","getFromUnorderedCache","getProvidedExports","exportName","result","isExportProvided","getExportInfo","getReadOnlyExportInfo","runtime","getUsedExports","index","thing","meta","Object","create","cacheStage","_cacheStage","fn","args","provide","moduleMemCaches","pop","memCache","deprecateMessage","deprecationCode","deprecateMap","newFn","deprecate","moduleGraph","moduleGraphForModuleMap","Error"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ModuleGraph.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst ExportsInfo = require(\"./ExportsInfo\");\nconst ModuleGraphConnection = require(\"./ModuleGraphConnection\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst WeakTupleMap = require(\"./util/WeakTupleMap\");\n\n/** @typedef {import(\"./DependenciesBlock\")} DependenciesBlock */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./ExportsInfo\").ExportInfo} ExportInfo */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleProfile\")} ModuleProfile */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @callback OptimizationBailoutFunction\n * @param {RequestShortener} requestShortener\n * @returns {string}\n */\n\nconst EMPTY_SET = new Set();\n\n/**\n * @param {SortableSet<ModuleGraphConnection>} set input\n * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} mapped by origin module\n */\nconst getConnectionsByOriginModule = set => {\n\tconst map = new Map();\n\t/** @type {Module | 0} */\n\tlet lastModule = 0;\n\t/** @type {ModuleGraphConnection[]} */\n\tlet lastList = undefined;\n\tfor (const connection of set) {\n\t\tconst { originModule } = connection;\n\t\tif (lastModule === originModule) {\n\t\t\tlastList.push(connection);\n\t\t} else {\n\t\t\tlastModule = originModule;\n\t\t\tconst list = map.get(originModule);\n\t\t\tif (list !== undefined) {\n\t\t\t\tlastList = list;\n\t\t\t\tlist.push(connection);\n\t\t\t} else {\n\t\t\t\tconst list = [connection];\n\t\t\t\tlastList = list;\n\t\t\t\tmap.set(originModule, list);\n\t\t\t}\n\t\t}\n\t}\n\treturn map;\n};\n\n/**\n * @param {SortableSet<ModuleGraphConnection>} set input\n * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} mapped by module\n */\nconst getConnectionsByModule = set => {\n\tconst map = new Map();\n\t/** @type {Module | 0} */\n\tlet lastModule = 0;\n\t/** @type {ModuleGraphConnection[]} */\n\tlet lastList = undefined;\n\tfor (const connection of set) {\n\t\tconst { module } = connection;\n\t\tif (lastModule === module) {\n\t\t\tlastList.push(connection);\n\t\t} else {\n\t\t\tlastModule = module;\n\t\t\tconst list = map.get(module);\n\t\t\tif (list !== undefined) {\n\t\t\t\tlastList = list;\n\t\t\t\tlist.push(connection);\n\t\t\t} else {\n\t\t\t\tconst list = [connection];\n\t\t\t\tlastList = list;\n\t\t\t\tmap.set(module, list);\n\t\t\t}\n\t\t}\n\t}\n\treturn map;\n};\n\nclass ModuleGraphModule {\n\tconstructor() {\n\t\t/** @type {SortableSet<ModuleGraphConnection>} */\n\t\tthis.incomingConnections = new SortableSet();\n\t\t/** @type {SortableSet<ModuleGraphConnection> | undefined} */\n\t\tthis.outgoingConnections = undefined;\n\t\t/** @type {Module | null} */\n\t\tthis.issuer = undefined;\n\t\t/** @type {(string | OptimizationBailoutFunction)[]} */\n\t\tthis.optimizationBailout = [];\n\t\t/** @type {ExportsInfo} */\n\t\tthis.exports = new ExportsInfo();\n\t\t/** @type {number} */\n\t\tthis.preOrderIndex = null;\n\t\t/** @type {number} */\n\t\tthis.postOrderIndex = null;\n\t\t/** @type {number} */\n\t\tthis.depth = null;\n\t\t/** @type {ModuleProfile} */\n\t\tthis.profile = undefined;\n\t\t/** @type {boolean} */\n\t\tthis.async = false;\n\t\t/** @type {ModuleGraphConnection[]} */\n\t\tthis._unassignedConnections = undefined;\n\t}\n}\n\nclass ModuleGraph {\n\tconstructor() {\n\t\t/** @type {WeakMap<Dependency, ModuleGraphConnection>} */\n\t\tthis._dependencyMap = new WeakMap();\n\t\t/** @type {Map<Module, ModuleGraphModule>} */\n\t\tthis._moduleMap = new Map();\n\t\t/** @type {WeakMap<any, Object>} */\n\t\tthis._metaMap = new WeakMap();\n\n\t\t/** @type {WeakTupleMap<any[], any>} */\n\t\tthis._cache = undefined;\n\n\t\t/** @type {Map<Module, WeakTupleMap<any, any>>} */\n\t\tthis._moduleMemCaches = undefined;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {ModuleGraphModule} the internal module\n\t */\n\t_getModuleGraphModule(module) {\n\t\tlet mgm = this._moduleMap.get(module);\n\t\tif (mgm === undefined) {\n\t\t\tmgm = new ModuleGraphModule();\n\t\t\tthis._moduleMap.set(module, mgm);\n\t\t}\n\t\treturn mgm;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @param {DependenciesBlock} block parent block\n\t * @param {Module} module parent module\n\t * @param {number=} indexInBlock position in block\n\t * @returns {void}\n\t */\n\tsetParents(dependency, block, module, indexInBlock = -1) {\n\t\tdependency._parentDependenciesBlockIndex = indexInBlock;\n\t\tdependency._parentDependenciesBlock = block;\n\t\tdependency._parentModule = module;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @returns {Module} parent module\n\t */\n\tgetParentModule(dependency) {\n\t\treturn dependency._parentModule;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @returns {DependenciesBlock} parent block\n\t */\n\tgetParentBlock(dependency) {\n\t\treturn dependency._parentDependenciesBlock;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency\n\t * @returns {number} index\n\t */\n\tgetParentBlockIndex(dependency) {\n\t\treturn dependency._parentDependenciesBlockIndex;\n\t}\n\n\t/**\n\t * @param {Module} originModule the referencing module\n\t * @param {Dependency} dependency the referencing dependency\n\t * @param {Module} module the referenced module\n\t * @returns {void}\n\t */\n\tsetResolvedModule(originModule, dependency, module) {\n\t\tconst connection = new ModuleGraphConnection(\n\t\t\toriginModule,\n\t\t\tdependency,\n\t\t\tmodule,\n\t\t\tundefined,\n\t\t\tdependency.weak,\n\t\t\tdependency.getCondition(this)\n\t\t);\n\t\tconst connections = this._getModuleGraphModule(module).incomingConnections;\n\t\tconnections.add(connection);\n\t\tif (originModule) {\n\t\t\tconst mgm = this._getModuleGraphModule(originModule);\n\t\t\tif (mgm._unassignedConnections === undefined) {\n\t\t\t\tmgm._unassignedConnections = [];\n\t\t\t}\n\t\t\tmgm._unassignedConnections.push(connection);\n\t\t\tif (mgm.outgoingConnections === undefined) {\n\t\t\t\tmgm.outgoingConnections = new SortableSet();\n\t\t\t}\n\t\t\tmgm.outgoingConnections.add(connection);\n\t\t} else {\n\t\t\tthis._dependencyMap.set(dependency, connection);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the referencing dependency\n\t * @param {Module} module the referenced module\n\t * @returns {void}\n\t */\n\tupdateModule(dependency, module) {\n\t\tconst connection = this.getConnection(dependency);\n\t\tif (connection.module === module) return;\n\t\tconst newConnection = connection.clone();\n\t\tnewConnection.module = module;\n\t\tthis._dependencyMap.set(dependency, newConnection);\n\t\tconnection.setActive(false);\n\t\tconst originMgm = this._getModuleGraphModule(connection.originModule);\n\t\toriginMgm.outgoingConnections.add(newConnection);\n\t\tconst targetMgm = this._getModuleGraphModule(module);\n\t\ttargetMgm.incomingConnections.add(newConnection);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the referencing dependency\n\t * @returns {void}\n\t */\n\tremoveConnection(dependency) {\n\t\tconst connection = this.getConnection(dependency);\n\t\tconst targetMgm = this._getModuleGraphModule(connection.module);\n\t\ttargetMgm.incomingConnections.delete(connection);\n\t\tconst originMgm = this._getModuleGraphModule(connection.originModule);\n\t\toriginMgm.outgoingConnections.delete(connection);\n\t\tthis._dependencyMap.set(dependency, null);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the referencing dependency\n\t * @param {string} explanation an explanation\n\t * @returns {void}\n\t */\n\taddExplanation(dependency, explanation) {\n\t\tconst connection = this.getConnection(dependency);\n\t\tconnection.addExplanation(explanation);\n\t}\n\n\t/**\n\t * @param {Module} sourceModule the source module\n\t * @param {Module} targetModule the target module\n\t * @returns {void}\n\t */\n\tcloneModuleAttributes(sourceModule, targetModule) {\n\t\tconst oldMgm = this._getModuleGraphModule(sourceModule);\n\t\tconst newMgm = this._getModuleGraphModule(targetModule);\n\t\tnewMgm.postOrderIndex = oldMgm.postOrderIndex;\n\t\tnewMgm.preOrderIndex = oldMgm.preOrderIndex;\n\t\tnewMgm.depth = oldMgm.depth;\n\t\tnewMgm.exports = oldMgm.exports;\n\t\tnewMgm.async = oldMgm.async;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {void}\n\t */\n\tremoveModuleAttributes(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.postOrderIndex = null;\n\t\tmgm.preOrderIndex = null;\n\t\tmgm.depth = null;\n\t\tmgm.async = false;\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tremoveAllModuleAttributes() {\n\t\tfor (const mgm of this._moduleMap.values()) {\n\t\t\tmgm.postOrderIndex = null;\n\t\t\tmgm.preOrderIndex = null;\n\t\t\tmgm.depth = null;\n\t\t\tmgm.async = false;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} oldModule the old referencing module\n\t * @param {Module} newModule the new referencing module\n\t * @param {function(ModuleGraphConnection): boolean} filterConnection filter predicate for replacement\n\t * @returns {void}\n\t */\n\tmoveModuleConnections(oldModule, newModule, filterConnection) {\n\t\tif (oldModule === newModule) return;\n\t\tconst oldMgm = this._getModuleGraphModule(oldModule);\n\t\tconst newMgm = this._getModuleGraphModule(newModule);\n\t\t// Outgoing connections\n\t\tconst oldConnections = oldMgm.outgoingConnections;\n\t\tif (oldConnections !== undefined) {\n\t\t\tif (newMgm.outgoingConnections === undefined) {\n\t\t\t\tnewMgm.outgoingConnections = new SortableSet();\n\t\t\t}\n\t\t\tconst newConnections = newMgm.outgoingConnections;\n\t\t\tfor (const connection of oldConnections) {\n\t\t\t\tif (filterConnection(connection)) {\n\t\t\t\t\tconnection.originModule = newModule;\n\t\t\t\t\tnewConnections.add(connection);\n\t\t\t\t\toldConnections.delete(connection);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Incoming connections\n\t\tconst oldConnections2 = oldMgm.incomingConnections;\n\t\tconst newConnections2 = newMgm.incomingConnections;\n\t\tfor (const connection of oldConnections2) {\n\t\t\tif (filterConnection(connection)) {\n\t\t\t\tconnection.module = newModule;\n\t\t\t\tnewConnections2.add(connection);\n\t\t\t\toldConnections2.delete(connection);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} oldModule the old referencing module\n\t * @param {Module} newModule the new referencing module\n\t * @param {function(ModuleGraphConnection): boolean} filterConnection filter predicate for replacement\n\t * @returns {void}\n\t */\n\tcopyOutgoingModuleConnections(oldModule, newModule, filterConnection) {\n\t\tif (oldModule === newModule) return;\n\t\tconst oldMgm = this._getModuleGraphModule(oldModule);\n\t\tconst newMgm = this._getModuleGraphModule(newModule);\n\t\t// Outgoing connections\n\t\tconst oldConnections = oldMgm.outgoingConnections;\n\t\tif (oldConnections !== undefined) {\n\t\t\tif (newMgm.outgoingConnections === undefined) {\n\t\t\t\tnewMgm.outgoingConnections = new SortableSet();\n\t\t\t}\n\t\t\tconst newConnections = newMgm.outgoingConnections;\n\t\t\tfor (const connection of oldConnections) {\n\t\t\t\tif (filterConnection(connection)) {\n\t\t\t\t\tconst newConnection = connection.clone();\n\t\t\t\t\tnewConnection.originModule = newModule;\n\t\t\t\t\tnewConnections.add(newConnection);\n\t\t\t\t\tif (newConnection.module !== undefined) {\n\t\t\t\t\t\tconst otherMgm = this._getModuleGraphModule(newConnection.module);\n\t\t\t\t\t\totherMgm.incomingConnections.add(newConnection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Module} module the referenced module\n\t * @param {string} explanation an explanation why it's referenced\n\t * @returns {void}\n\t */\n\taddExtraReason(module, explanation) {\n\t\tconst connections = this._getModuleGraphModule(module).incomingConnections;\n\t\tconnections.add(new ModuleGraphConnection(null, null, module, explanation));\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency to look for a referenced module\n\t * @returns {Module} the referenced module\n\t */\n\tgetResolvedModule(dependency) {\n\t\tconst connection = this.getConnection(dependency);\n\t\treturn connection !== undefined ? connection.resolvedModule : null;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency to look for a referenced module\n\t * @returns {ModuleGraphConnection | undefined} the connection\n\t */\n\tgetConnection(dependency) {\n\t\tconst connection = this._dependencyMap.get(dependency);\n\t\tif (connection === undefined) {\n\t\t\tconst module = this.getParentModule(dependency);\n\t\t\tif (module !== undefined) {\n\t\t\t\tconst mgm = this._getModuleGraphModule(module);\n\t\t\t\tif (\n\t\t\t\t\tmgm._unassignedConnections &&\n\t\t\t\t\tmgm._unassignedConnections.length !== 0\n\t\t\t\t) {\n\t\t\t\t\tlet foundConnection;\n\t\t\t\t\tfor (const connection of mgm._unassignedConnections) {\n\t\t\t\t\t\tthis._dependencyMap.set(connection.dependency, connection);\n\t\t\t\t\t\tif (connection.dependency === dependency)\n\t\t\t\t\t\t\tfoundConnection = connection;\n\t\t\t\t\t}\n\t\t\t\t\tmgm._unassignedConnections.length = 0;\n\t\t\t\t\tif (foundConnection !== undefined) {\n\t\t\t\t\t\treturn foundConnection;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._dependencyMap.set(dependency, null);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn connection === null ? undefined : connection;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency to look for a referenced module\n\t * @returns {Module} the referenced module\n\t */\n\tgetModule(dependency) {\n\t\tconst connection = this.getConnection(dependency);\n\t\treturn connection !== undefined ? connection.module : null;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency to look for a referencing module\n\t * @returns {Module} the referencing module\n\t */\n\tgetOrigin(dependency) {\n\t\tconst connection = this.getConnection(dependency);\n\t\treturn connection !== undefined ? connection.originModule : null;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency the dependency to look for a referencing module\n\t * @returns {Module} the original referencing module\n\t */\n\tgetResolvedOrigin(dependency) {\n\t\tconst connection = this.getConnection(dependency);\n\t\treturn connection !== undefined ? connection.resolvedOriginModule : null;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {Iterable<ModuleGraphConnection>} reasons why a module is included\n\t */\n\tgetIncomingConnections(module) {\n\t\tconst connections = this._getModuleGraphModule(module).incomingConnections;\n\t\treturn connections;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {Iterable<ModuleGraphConnection>} list of outgoing connections\n\t */\n\tgetOutgoingConnections(module) {\n\t\tconst connections = this._getModuleGraphModule(module).outgoingConnections;\n\t\treturn connections === undefined ? EMPTY_SET : connections;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]>} reasons why a module is included, in a map by source module\n\t */\n\tgetIncomingConnectionsByOriginModule(module) {\n\t\tconst connections = this._getModuleGraphModule(module).incomingConnections;\n\t\treturn connections.getFromUnorderedCache(getConnectionsByOriginModule);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {readonly Map<Module | undefined, readonly ModuleGraphConnection[]> | undefined} connections to modules, in a map by module\n\t */\n\tgetOutgoingConnectionsByModule(module) {\n\t\tconst connections = this._getModuleGraphModule(module).outgoingConnections;\n\t\treturn connections === undefined\n\t\t\t? undefined\n\t\t\t: connections.getFromUnorderedCache(getConnectionsByModule);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {ModuleProfile | null} the module profile\n\t */\n\tgetProfile(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.profile;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {ModuleProfile | null} profile the module profile\n\t * @returns {void}\n\t */\n\tsetProfile(module, profile) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.profile = profile;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {Module | null} the issuer module\n\t */\n\tgetIssuer(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.issuer;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {Module | null} issuer the issuer module\n\t * @returns {void}\n\t */\n\tsetIssuer(module, issuer) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.issuer = issuer;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {Module | null} issuer the issuer module\n\t * @returns {void}\n\t */\n\tsetIssuerIfUnset(module, issuer) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tif (mgm.issuer === undefined) mgm.issuer = issuer;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {(string | OptimizationBailoutFunction)[]} optimization bailouts\n\t */\n\tgetOptimizationBailout(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.optimizationBailout;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {true | string[] | null} the provided exports\n\t */\n\tgetProvidedExports(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.exports.getProvidedExports();\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {string | string[]} exportName a name of an export\n\t * @returns {boolean | null} true, if the export is provided by the module.\n\t * null, if it's unknown.\n\t * false, if it's not provided.\n\t */\n\tisExportProvided(module, exportName) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tconst result = mgm.exports.isExportProvided(exportName);\n\t\treturn result === undefined ? null : result;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {ExportsInfo} info about the exports\n\t */\n\tgetExportsInfo(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.exports;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {string} exportName the export\n\t * @returns {ExportInfo} info about the export\n\t */\n\tgetExportInfo(module, exportName) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.exports.getExportInfo(exportName);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {string} exportName the export\n\t * @returns {ExportInfo} info about the export (do not modify)\n\t */\n\tgetReadOnlyExportInfo(module, exportName) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.exports.getReadOnlyExportInfo(exportName);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {false | true | SortableSet<string> | null} the used exports\n\t * false: module is not used at all.\n\t * true: the module namespace/object export is used.\n\t * SortableSet<string>: these export names are used.\n\t * empty SortableSet<string>: module is used but no export.\n\t * null: unknown, worst case should be assumed.\n\t */\n\tgetUsedExports(module, runtime) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.exports.getUsedExports(runtime);\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {number} the index of the module\n\t */\n\tgetPreOrderIndex(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.preOrderIndex;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {number} the index of the module\n\t */\n\tgetPostOrderIndex(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.postOrderIndex;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} index the index of the module\n\t * @returns {void}\n\t */\n\tsetPreOrderIndex(module, index) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.preOrderIndex = index;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} index the index of the module\n\t * @returns {boolean} true, if the index was set\n\t */\n\tsetPreOrderIndexIfUnset(module, index) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tif (mgm.preOrderIndex === null) {\n\t\t\tmgm.preOrderIndex = index;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} index the index of the module\n\t * @returns {void}\n\t */\n\tsetPostOrderIndex(module, index) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.postOrderIndex = index;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} index the index of the module\n\t * @returns {boolean} true, if the index was set\n\t */\n\tsetPostOrderIndexIfUnset(module, index) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tif (mgm.postOrderIndex === null) {\n\t\t\tmgm.postOrderIndex = index;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {number} the depth of the module\n\t */\n\tgetDepth(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.depth;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} depth the depth of the module\n\t * @returns {void}\n\t */\n\tsetDepth(module, depth) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.depth = depth;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @param {number} depth the depth of the module\n\t * @returns {boolean} true, if the depth was set\n\t */\n\tsetDepthIfLower(module, depth) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tif (mgm.depth === null || mgm.depth > depth) {\n\t\t\tmgm.depth = depth;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {boolean} true, if the module is async\n\t */\n\tisAsync(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\treturn mgm.async;\n\t}\n\n\t/**\n\t * @param {Module} module the module\n\t * @returns {void}\n\t */\n\tsetAsync(module) {\n\t\tconst mgm = this._getModuleGraphModule(module);\n\t\tmgm.async = true;\n\t}\n\n\t/**\n\t * @param {any} thing any thing\n\t * @returns {Object} metadata\n\t */\n\tgetMeta(thing) {\n\t\tlet meta = this._metaMap.get(thing);\n\t\tif (meta === undefined) {\n\t\t\tmeta = Object.create(null);\n\t\t\tthis._metaMap.set(thing, meta);\n\t\t}\n\t\treturn meta;\n\t}\n\n\t/**\n\t * @param {any} thing any thing\n\t * @returns {Object} metadata\n\t */\n\tgetMetaIfExisting(thing) {\n\t\treturn this._metaMap.get(thing);\n\t}\n\n\t/**\n\t * @param {string=} cacheStage a persistent stage name for caching\n\t */\n\tfreeze(cacheStage) {\n\t\tthis._cache = new WeakTupleMap();\n\t\tthis._cacheStage = cacheStage;\n\t}\n\n\tunfreeze() {\n\t\tthis._cache = undefined;\n\t\tthis._cacheStage = undefined;\n\t}\n\n\t/**\n\t * @template {any[]} T\n\t * @template V\n\t * @param {(moduleGraph: ModuleGraph, ...args: T) => V} fn computer\n\t * @param {T} args arguments\n\t * @returns {V} computed value or cached\n\t */\n\tcached(fn, ...args) {\n\t\tif (this._cache === undefined) return fn(this, ...args);\n\t\treturn this._cache.provide(fn, ...args, () => fn(this, ...args));\n\t}\n\n\t/**\n\t * @param {Map<Module, WeakTupleMap<any, any>>} moduleMemCaches mem caches for modules for better caching\n\t */\n\tsetModuleMemCaches(moduleMemCaches) {\n\t\tthis._moduleMemCaches = moduleMemCaches;\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency\n\t * @param {...any} args arguments, last argument is a function called with moduleGraph, dependency, ...args\n\t * @returns {any} computed value or cached\n\t */\n\tdependencyCacheProvide(dependency, ...args) {\n\t\t/** @type {(moduleGraph: ModuleGraph, dependency: Dependency, ...args: any[]) => any} */\n\t\tconst fn = args.pop();\n\t\tif (this._moduleMemCaches && this._cacheStage) {\n\t\t\tconst memCache = this._moduleMemCaches.get(\n\t\t\t\tthis.getParentModule(dependency)\n\t\t\t);\n\t\t\tif (memCache !== undefined) {\n\t\t\t\treturn memCache.provide(dependency, this._cacheStage, ...args, () =>\n\t\t\t\t\tfn(this, dependency, ...args)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (this._cache === undefined) return fn(this, dependency, ...args);\n\t\treturn this._cache.provide(dependency, ...args, () =>\n\t\t\tfn(this, dependency, ...args)\n\t\t);\n\t}\n\n\t// TODO remove in webpack 6\n\t/**\n\t * @param {Module} module the module\n\t * @param {string} deprecateMessage message for the deprecation message\n\t * @param {string} deprecationCode code for the deprecation\n\t * @returns {ModuleGraph} the module graph\n\t */\n\tstatic getModuleGraphForModule(module, deprecateMessage, deprecationCode) {\n\t\tconst fn = deprecateMap.get(deprecateMessage);\n\t\tif (fn) return fn(module);\n\t\tconst newFn = util.deprecate(\n\t\t\t/**\n\t\t\t * @param {Module} module the module\n\t\t\t * @returns {ModuleGraph} the module graph\n\t\t\t */\n\t\t\tmodule => {\n\t\t\t\tconst moduleGraph = moduleGraphForModuleMap.get(module);\n\t\t\t\tif (!moduleGraph)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tdeprecateMessage +\n\t\t\t\t\t\t\t\"There was no ModuleGraph assigned to the Module for backward-compat (Use the new API)\"\n\t\t\t\t\t);\n\t\t\t\treturn moduleGraph;\n\t\t\t},\n\t\t\tdeprecateMessage + \": Use new ModuleGraph API\",\n\t\t\tdeprecationCode\n\t\t);\n\t\tdeprecateMap.set(deprecateMessage, newFn);\n\t\treturn newFn(module);\n\t}\n\n\t// TODO remove in webpack 6\n\t/**\n\t * @param {Module} module the module\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {void}\n\t */\n\tstatic setModuleGraphForModule(module, moduleGraph) {\n\t\tmoduleGraphForModuleMap.set(module, moduleGraph);\n\t}\n\n\t// TODO remove in webpack 6\n\t/**\n\t * @param {Module} module the module\n\t * @returns {void}\n\t */\n\tstatic clearModuleGraphForModule(module) {\n\t\tmoduleGraphForModuleMap.delete(module);\n\t}\n}\n\n// TODO remove in webpack 6\n/** @type {WeakMap<Module, ModuleGraph>} */\nconst moduleGraphForModuleMap = new WeakMap();\n\n// TODO remove in webpack 6\n/** @type {Map<string, (module: Module) => ModuleGraph>} */\nconst deprecateMap = new Map();\n\nmodule.exports = ModuleGraph;\nmodule.exports.ModuleGraphConnection = ModuleGraphConnection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}