{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../OptimizationStages\"),\n  STAGE_BASIC = _require.STAGE_BASIC;\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar EnsureChunkConditionsPlugin = /*#__PURE__*/function () {\n  function EnsureChunkConditionsPlugin() {\n    _classCallCheck(this, EnsureChunkConditionsPlugin);\n  }\n  _createClass(EnsureChunkConditionsPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"EnsureChunkConditionsPlugin\", function (compilation) {\n        var handler = function handler(chunks) {\n          var chunkGraph = compilation.chunkGraph;\n          // These sets are hoisted here to save memory\n          // They are cleared at the end of every loop\n          /** @type {Set<Chunk>} */\n          var sourceChunks = new Set();\n          /** @type {Set<ChunkGroup>} */\n          var chunkGroups = new Set();\n          var _iterator = _createForOfIteratorHelper(compilation.modules),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _module = _step.value;\n              if (!_module.hasChunkCondition()) continue;\n              var _iterator2 = _createForOfIteratorHelper(chunkGraph.getModuleChunksIterable(_module)),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var chunk = _step2.value;\n                  if (!_module.chunkCondition(chunk, compilation)) {\n                    sourceChunks.add(chunk);\n                    var _iterator6 = _createForOfIteratorHelper(chunk.groupsIterable),\n                      _step6;\n                    try {\n                      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                        var group = _step6.value;\n                        chunkGroups.add(group);\n                      }\n                    } catch (err) {\n                      _iterator6.e(err);\n                    } finally {\n                      _iterator6.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              if (sourceChunks.size === 0) continue;\n              /** @type {Set<Chunk>} */\n              var targetChunks = new Set();\n              var _iterator3 = _createForOfIteratorHelper(chunkGroups),\n                _step3;\n              try {\n                chunkGroupLoop: for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var chunkGroup = _step3.value;\n                  // Can module be placed in a chunk of this group?\n                  var _iterator7 = _createForOfIteratorHelper(chunkGroup.chunks),\n                    _step7;\n                  try {\n                    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                      var _chunk = _step7.value;\n                      if (_module.chunkCondition(_chunk, compilation)) {\n                        targetChunks.add(_chunk);\n                        continue chunkGroupLoop;\n                      }\n                    }\n                    // We reached the entrypoint: fail\n                  } catch (err) {\n                    _iterator7.e(err);\n                  } finally {\n                    _iterator7.f();\n                  }\n                  if (chunkGroup.isInitial()) {\n                    throw new Error(\"Cannot fullfil chunk condition of \" + _module.identifier());\n                  }\n                  // Try placing in all parents\n                  var _iterator8 = _createForOfIteratorHelper(chunkGroup.parentsIterable),\n                    _step8;\n                  try {\n                    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                      var _group = _step8.value;\n                      chunkGroups.add(_group);\n                    }\n                  } catch (err) {\n                    _iterator8.e(err);\n                  } finally {\n                    _iterator8.f();\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              var _iterator4 = _createForOfIteratorHelper(sourceChunks),\n                _step4;\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var sourceChunk = _step4.value;\n                  chunkGraph.disconnectChunkAndModule(sourceChunk, _module);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n              var _iterator5 = _createForOfIteratorHelper(targetChunks),\n                _step5;\n              try {\n                for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                  var targetChunk = _step5.value;\n                  chunkGraph.connectChunkAndModule(targetChunk, _module);\n                }\n              } catch (err) {\n                _iterator5.e(err);\n              } finally {\n                _iterator5.f();\n              }\n              sourceChunks.clear();\n              chunkGroups.clear();\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        };\n        compilation.hooks.optimizeChunks.tap({\n          name: \"EnsureChunkConditionsPlugin\",\n          stage: STAGE_BASIC\n        }, handler);\n      });\n    }\n  }]);\n  return EnsureChunkConditionsPlugin;\n}();\nmodule.exports = EnsureChunkConditionsPlugin;","map":{"version":3,"names":["require","STAGE_BASIC","EnsureChunkConditionsPlugin","compiler","hooks","compilation","tap","handler","chunks","chunkGraph","sourceChunks","Set","chunkGroups","modules","module","hasChunkCondition","getModuleChunksIterable","chunk","chunkCondition","add","groupsIterable","group","size","targetChunks","chunkGroupLoop","chunkGroup","isInitial","Error","identifier","parentsIterable","sourceChunk","disconnectChunkAndModule","targetChunk","connectChunkAndModule","clear","optimizeChunks","name","stage","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/optimize/EnsureChunkConditionsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { STAGE_BASIC } = require(\"../OptimizationStages\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass EnsureChunkConditionsPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EnsureChunkConditionsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst handler = chunks => {\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t// These sets are hoisted here to save memory\n\t\t\t\t\t// They are cleared at the end of every loop\n\t\t\t\t\t/** @type {Set<Chunk>} */\n\t\t\t\t\tconst sourceChunks = new Set();\n\t\t\t\t\t/** @type {Set<ChunkGroup>} */\n\t\t\t\t\tconst chunkGroups = new Set();\n\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\tif (!module.hasChunkCondition()) continue;\n\t\t\t\t\t\tfor (const chunk of chunkGraph.getModuleChunksIterable(module)) {\n\t\t\t\t\t\t\tif (!module.chunkCondition(chunk, compilation)) {\n\t\t\t\t\t\t\t\tsourceChunks.add(chunk);\n\t\t\t\t\t\t\t\tfor (const group of chunk.groupsIterable) {\n\t\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sourceChunks.size === 0) continue;\n\t\t\t\t\t\t/** @type {Set<Chunk>} */\n\t\t\t\t\t\tconst targetChunks = new Set();\n\t\t\t\t\t\tchunkGroupLoop: for (const chunkGroup of chunkGroups) {\n\t\t\t\t\t\t\t// Can module be placed in a chunk of this group?\n\t\t\t\t\t\t\tfor (const chunk of chunkGroup.chunks) {\n\t\t\t\t\t\t\t\tif (module.chunkCondition(chunk, compilation)) {\n\t\t\t\t\t\t\t\t\ttargetChunks.add(chunk);\n\t\t\t\t\t\t\t\t\tcontinue chunkGroupLoop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// We reached the entrypoint: fail\n\t\t\t\t\t\t\tif (chunkGroup.isInitial()) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"Cannot fullfil chunk condition of \" + module.identifier()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Try placing in all parents\n\t\t\t\t\t\t\tfor (const group of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\tchunkGroups.add(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const sourceChunk of sourceChunks) {\n\t\t\t\t\t\t\tchunkGraph.disconnectChunkAndModule(sourceChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const targetChunk of targetChunks) {\n\t\t\t\t\t\t\tchunkGraph.connectChunkAndModule(targetChunk, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsourceChunks.clear();\n\t\t\t\t\t\tchunkGroups.clear();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tcompilation.hooks.optimizeChunks.tap(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"EnsureChunkConditionsPlugin\",\n\t\t\t\t\t\tstage: STAGE_BASIC\n\t\t\t\t\t},\n\t\t\t\t\thandler\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = EnsureChunkConditionsPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}