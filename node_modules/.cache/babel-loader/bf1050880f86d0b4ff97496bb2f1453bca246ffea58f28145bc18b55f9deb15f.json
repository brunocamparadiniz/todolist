{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"url\"),\n  pathToFileURL = _require.pathToFileURL;\nvar BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nvar _require2 = require(\"../javascript/JavascriptParserHelpers\"),\n  approve = _require2.approve;\nvar InnerGraph = require(\"../optimize/InnerGraph\");\nvar URLDependency = require(\"./URLDependency\");\n\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\nvar URLPlugin = /*#__PURE__*/function () {\n  function URLPlugin() {\n    _classCallCheck(this, URLPlugin);\n  }\n  _createClass(URLPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Compiler} compiler compiler\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"URLPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(URLDependency, new URLDependency.Template());\n\n        /**\n         * @param {NormalModule} module module\n         * @returns {URL} file url\n         */\n        var getUrl = function getUrl(module) {\n          return pathToFileURL(module.resource);\n        };\n        /**\n         * @param {JavascriptParser} parser parser\n         * @param {object} parserOptions options\n         */\n        var parserCallback = function parserCallback(parser, parserOptions) {\n          if (parserOptions.url === false) return;\n          var relative = parserOptions.url === \"relative\";\n\n          /**\n           * @param {NewExpressionNode} expr expression\n           * @returns {undefined | string} request\n           */\n          var getUrlRequest = function getUrlRequest(expr) {\n            if (expr.arguments.length !== 2) return;\n            var _expr$arguments = _slicedToArray(expr.arguments, 2),\n              arg1 = _expr$arguments[0],\n              arg2 = _expr$arguments[1];\n            if (arg2.type !== \"MemberExpression\" || arg1.type === \"SpreadElement\") return;\n            var chain = parser.extractMemberExpressionChain(arg2);\n            if (chain.members.length !== 1 || chain.object.type !== \"MetaProperty\" || chain.object.meta.name !== \"import\" || chain.object.property.name !== \"meta\" || chain.members[0] !== \"url\") return;\n            var request = parser.evaluateExpression(arg1).asString();\n            return request;\n          };\n          parser.hooks.canRename.for(\"URL\").tap(\"URLPlugin\", approve);\n          parser.hooks.evaluateNewExpression.for(\"URL\").tap(\"URLPlugin\", function (expr) {\n            var request = getUrlRequest(expr);\n            if (!request) return;\n            var url = new URL(request, getUrl(parser.state.module));\n            return new BasicEvaluatedExpression().setString(url.toString()).setRange(expr.range);\n          });\n          parser.hooks.new.for(\"URL\").tap(\"URLPlugin\", function (_expr) {\n            var expr = /** @type {NewExpressionNode} */_expr;\n            var request = getUrlRequest(expr);\n            if (!request) return;\n            var _expr$arguments2 = _slicedToArray(expr.arguments, 2),\n              arg1 = _expr$arguments2[0],\n              arg2 = _expr$arguments2[1];\n            var dep = new URLDependency(request, [arg1.range[0], arg2.range[1]], expr.range, relative);\n            dep.loc = expr.loc;\n            parser.state.current.addDependency(dep);\n            InnerGraph.onUsage(parser.state, function (e) {\n              return dep.usedByExports = e;\n            });\n            return true;\n          });\n          parser.hooks.isPure.for(\"NewExpression\").tap(\"URLPlugin\", function (_expr) {\n            var expr = /** @type {NewExpressionNode} */_expr;\n            var callee = expr.callee;\n            if (callee.type !== \"Identifier\") return;\n            var calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n            if (!calleeInfo || calleeInfo.name !== \"URL\") return;\n            var request = getUrlRequest(expr);\n            if (request) return true;\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"URLPlugin\", parserCallback);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"URLPlugin\", parserCallback);\n      });\n    }\n  }]);\n  return URLPlugin;\n}();\nmodule.exports = URLPlugin;","map":{"version":3,"names":["require","pathToFileURL","BasicEvaluatedExpression","approve","InnerGraph","URLDependency","URLPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","getUrl","module","resource","parserCallback","parser","parserOptions","url","relative","getUrlRequest","expr","arguments","length","arg1","arg2","type","chain","extractMemberExpressionChain","members","object","meta","name","property","request","evaluateExpression","asString","canRename","for","evaluateNewExpression","URL","state","setString","toString","setRange","range","new","_expr","dep","loc","current","addDependency","onUsage","e","usedByExports","isPure","callee","calleeInfo","getFreeInfoFromVariable","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/URLPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst { approve } = require(\"../javascript/JavascriptParserHelpers\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst URLDependency = require(\"./URLDependency\");\n\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n\nclass URLPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"URLPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tURLDependency,\n\t\t\t\t\tnew URLDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {URL} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => {\n\t\t\t\t\treturn pathToFileURL(module.resource);\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser parser\n\t\t\t\t * @param {object} parserOptions options\n\t\t\t\t */\n\t\t\t\tconst parserCallback = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.url === false) return;\n\t\t\t\t\tconst relative = parserOptions.url === \"relative\";\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {NewExpressionNode} expr expression\n\t\t\t\t\t * @returns {undefined | string} request\n\t\t\t\t\t */\n\t\t\t\t\tconst getUrlRequest = expr => {\n\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\targ2.type !== \"MemberExpression\" ||\n\t\t\t\t\t\t\targ1.type === \"SpreadElement\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tconst chain = parser.extractMemberExpressionChain(arg2);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tchain.members.length !== 1 ||\n\t\t\t\t\t\t\tchain.object.type !== \"MetaProperty\" ||\n\t\t\t\t\t\t\tchain.object.meta.name !== \"import\" ||\n\t\t\t\t\t\t\tchain.object.property.name !== \"meta\" ||\n\t\t\t\t\t\t\tchain.members[0] !== \"url\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tconst request = parser.evaluateExpression(arg1).asString();\n\n\t\t\t\t\t\treturn request;\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.canRename.for(\"URL\").tap(\"URLPlugin\", approve);\n\t\t\t\t\tparser.hooks.evaluateNewExpression\n\t\t\t\t\t\t.for(\"URL\")\n\t\t\t\t\t\t.tap(\"URLPlugin\", expr => {\n\t\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\t\t\t\t\t\t\tif (!request) return;\n\t\t\t\t\t\t\tconst url = new URL(request, getUrl(parser.state.module));\n\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(url.toString())\n\t\t\t\t\t\t\t\t.setRange(expr.range);\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.new.for(\"URL\").tap(\"URLPlugin\", _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (!request) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\t\t\t\t\t\tconst dep = new URLDependency(\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t[arg1.range[0], arg2.range[1]],\n\t\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\t\trelative\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.isPure.for(\"NewExpression\").tap(\"URLPlugin\", _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\t\t\t\t\t\tconst { callee } = expr;\n\t\t\t\t\t\tif (callee.type !== \"Identifier\") return;\n\t\t\t\t\t\tconst calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n\t\t\t\t\t\tif (!calleeInfo || calleeInfo.name !== \"URL\") return;\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (request) return true;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"URLPlugin\", parserCallback);\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"URLPlugin\", parserCallback);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = URLPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,eAA0BA,OAAO,CAAC,KAAK,CAAC;EAAhCC,aAAa,YAAbA,aAAa;AACrB,IAAMC,wBAAwB,GAAGF,OAAO,CAAC,wCAAwC,CAAC;AAClF,gBAAoBA,OAAO,CAAC,uCAAuC,CAAC;EAA5DG,OAAO,aAAPA,OAAO;AACf,IAAMC,UAAU,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACpD,IAAMK,aAAa,GAAGL,OAAO,CAAC,iBAAiB,CAAC;;AAEhD;AACA;AACA;AACA;AAAA,IAEMM,SAAS;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACd;AACD;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,WAAW,EACX,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAACR,aAAa,EAAEM,mBAAmB,CAAC;QACvEF,WAAW,CAACK,mBAAmB,CAACD,GAAG,CAClCR,aAAa,EACb,IAAIA,aAAa,CAACU,QAAQ,EAAE,CAC5B;;QAED;AACJ;AACA;AACA;QACI,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAGC,MAAM,EAAI;UACxB,OAAOhB,aAAa,CAACgB,MAAM,CAACC,QAAQ,CAAC;QACtC,CAAC;QACD;AACJ;AACA;AACA;QACI,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,MAAM,EAAEC,aAAa,EAAK;UACjD,IAAIA,aAAa,CAACC,GAAG,KAAK,KAAK,EAAE;UACjC,IAAMC,QAAQ,GAAGF,aAAa,CAACC,GAAG,KAAK,UAAU;;UAEjD;AACL;AACA;AACA;UACK,IAAME,aAAa,GAAG,SAAhBA,aAAa,CAAGC,IAAI,EAAI;YAC7B,IAAIA,IAAI,CAACC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;YAEjC,qCAAqBF,IAAI,CAACC,SAAS;cAA5BE,IAAI;cAAEC,IAAI;YAEjB,IACCA,IAAI,CAACC,IAAI,KAAK,kBAAkB,IAChCF,IAAI,CAACE,IAAI,KAAK,eAAe,EAE7B;YAED,IAAMC,KAAK,GAAGX,MAAM,CAACY,4BAA4B,CAACH,IAAI,CAAC;YAEvD,IACCE,KAAK,CAACE,OAAO,CAACN,MAAM,KAAK,CAAC,IAC1BI,KAAK,CAACG,MAAM,CAACJ,IAAI,KAAK,cAAc,IACpCC,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,IAAI,KAAK,QAAQ,IACnCL,KAAK,CAACG,MAAM,CAACG,QAAQ,CAACD,IAAI,KAAK,MAAM,IACrCL,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAE1B;YAED,IAAMK,OAAO,GAAGlB,MAAM,CAACmB,kBAAkB,CAACX,IAAI,CAAC,CAACY,QAAQ,EAAE;YAE1D,OAAOF,OAAO;UACf,CAAC;UAEDlB,MAAM,CAACZ,KAAK,CAACiC,SAAS,CAACC,GAAG,CAAC,KAAK,CAAC,CAAChC,GAAG,CAAC,WAAW,EAAEP,OAAO,CAAC;UAC3DiB,MAAM,CAACZ,KAAK,CAACmC,qBAAqB,CAChCD,GAAG,CAAC,KAAK,CAAC,CACVhC,GAAG,CAAC,WAAW,EAAE,UAAAe,IAAI,EAAI;YACzB,IAAMa,OAAO,GAAGd,aAAa,CAACC,IAAI,CAAC;YACnC,IAAI,CAACa,OAAO,EAAE;YACd,IAAMhB,GAAG,GAAG,IAAIsB,GAAG,CAACN,OAAO,EAAEtB,MAAM,CAACI,MAAM,CAACyB,KAAK,CAAC5B,MAAM,CAAC,CAAC;YAEzD,OAAO,IAAIf,wBAAwB,EAAE,CACnC4C,SAAS,CAACxB,GAAG,CAACyB,QAAQ,EAAE,CAAC,CACzBC,QAAQ,CAACvB,IAAI,CAACwB,KAAK,CAAC;UACvB,CAAC,CAAC;UACH7B,MAAM,CAACZ,KAAK,CAAC0C,GAAG,CAACR,GAAG,CAAC,KAAK,CAAC,CAAChC,GAAG,CAAC,WAAW,EAAE,UAAAyC,KAAK,EAAI;YACrD,IAAM1B,IAAI,GAAG,gCAAkC0B,KAAM;YAErD,IAAMb,OAAO,GAAGd,aAAa,CAACC,IAAI,CAAC;YAEnC,IAAI,CAACa,OAAO,EAAE;YAEd,sCAAqBb,IAAI,CAACC,SAAS;cAA5BE,IAAI;cAAEC,IAAI;YACjB,IAAMuB,GAAG,GAAG,IAAI/C,aAAa,CAC5BiC,OAAO,EACP,CAACV,IAAI,CAACqB,KAAK,CAAC,CAAC,CAAC,EAAEpB,IAAI,CAACoB,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9BxB,IAAI,CAACwB,KAAK,EACV1B,QAAQ,CACR;YACD6B,GAAG,CAACC,GAAG,GAAG5B,IAAI,CAAC4B,GAAG;YAClBjC,MAAM,CAACyB,KAAK,CAACS,OAAO,CAACC,aAAa,CAACH,GAAG,CAAC;YACvChD,UAAU,CAACoD,OAAO,CAACpC,MAAM,CAACyB,KAAK,EAAE,UAAAY,CAAC;cAAA,OAAKL,GAAG,CAACM,aAAa,GAAGD,CAAC;YAAA,CAAC,CAAC;YAC9D,OAAO,IAAI;UACZ,CAAC,CAAC;UACFrC,MAAM,CAACZ,KAAK,CAACmD,MAAM,CAACjB,GAAG,CAAC,eAAe,CAAC,CAAChC,GAAG,CAAC,WAAW,EAAE,UAAAyC,KAAK,EAAI;YAClE,IAAM1B,IAAI,GAAG,gCAAkC0B,KAAM;YACrD,IAAQS,MAAM,GAAKnC,IAAI,CAAfmC,MAAM;YACd,IAAIA,MAAM,CAAC9B,IAAI,KAAK,YAAY,EAAE;YAClC,IAAM+B,UAAU,GAAGzC,MAAM,CAAC0C,uBAAuB,CAACF,MAAM,CAACxB,IAAI,CAAC;YAC9D,IAAI,CAACyB,UAAU,IAAIA,UAAU,CAACzB,IAAI,KAAK,KAAK,EAAE;YAE9C,IAAME,OAAO,GAAGd,aAAa,CAACC,IAAI,CAAC;YAEnC,IAAIa,OAAO,EAAE,OAAO,IAAI;UACzB,CAAC,CAAC;QACH,CAAC;QAED3B,mBAAmB,CAACH,KAAK,CAACY,MAAM,CAC9BsB,GAAG,CAAC,iBAAiB,CAAC,CACtBhC,GAAG,CAAC,WAAW,EAAES,cAAc,CAAC;QAElCR,mBAAmB,CAACH,KAAK,CAACY,MAAM,CAC9BsB,GAAG,CAAC,gBAAgB,CAAC,CACrBhC,GAAG,CAAC,WAAW,EAAES,cAAc,CAAC;MACnC,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFF,MAAM,CAAC8C,OAAO,GAAGzD,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}