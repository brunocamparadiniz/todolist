{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar forEachBail = require(\"./forEachBail\");\nvar getPaths = require(\"./getPaths\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | Array<string>} directories directories\n   * @param {string | ResolveStepHook} target target\n   */\n  function ModulesInHierarchicalDirectoriesPlugin(source, directories, target) {\n    _classCallCheck(this, ModulesInHierarchicalDirectoriesPlugin);\n    this.source = source;\n    this.directories = /** @type {Array<string>} */[].concat(directories);\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(ModulesInHierarchicalDirectoriesPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModulesInHierarchicalDirectoriesPlugin\", function (request, resolveContext, callback) {\n        var fs = resolver.fileSystem;\n        var addrs = getPaths(request.path).paths.map(function (p) {\n          return _this.directories.map(function (d) {\n            return resolver.join(p, d);\n          });\n        }).reduce(function (array, p) {\n          array.push.apply(array, p);\n          return array;\n        }, []);\n        forEachBail(addrs, function (addr, callback) {\n          fs.stat(addr, function (err, stat) {\n            if (!err && stat && stat.isDirectory()) {\n              var obj = _objectSpread(_objectSpread({}, request), {}, {\n                path: addr,\n                request: \"./\" + request.request,\n                module: false\n              });\n              var message = \"looking for modules in \" + addr;\n              return resolver.doResolve(target, obj, message, resolveContext, callback);\n            }\n            if (resolveContext.log) resolveContext.log(addr + \" doesn't exist or is not a directory\");\n            if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(addr);\n            return callback();\n          });\n        }, callback);\n      });\n    }\n  }]);\n  return ModulesInHierarchicalDirectoriesPlugin;\n}();","map":{"version":3,"names":["forEachBail","require","getPaths","module","exports","source","directories","target","concat","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","fs","fileSystem","addrs","path","paths","map","p","d","join","reduce","array","push","apply","addr","stat","err","isDirectory","obj","message","doResolve","log","missingDependencies","add"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/ModulesInHierarchicalDirectoriesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInHierarchicalDirectoriesPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} directories directories\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, directories, target) {\n\t\tthis.source = source;\n\t\tthis.directories = /** @type {Array<string>} */ ([]).concat(directories);\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"ModulesInHierarchicalDirectoriesPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst addrs = getPaths(request.path)\n\t\t\t\t\t\t.paths.map(p => {\n\t\t\t\t\t\t\treturn this.directories.map(d => resolver.join(p, d));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce((array, p) => {\n\t\t\t\t\t\t\tarray.push.apply(array, p);\n\t\t\t\t\t\t\treturn array;\n\t\t\t\t\t\t}, []);\n\t\t\t\t\tforEachBail(\n\t\t\t\t\t\taddrs,\n\t\t\t\t\t\t(addr, callback) => {\n\t\t\t\t\t\t\tfs.stat(addr, (err, stat) => {\n\t\t\t\t\t\t\t\tif (!err && stat && stat.isDirectory()) {\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: addr,\n\t\t\t\t\t\t\t\t\t\trequest: \"./\" + request.request,\n\t\t\t\t\t\t\t\t\t\tmodule: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tconst message = \"looking for modules in \" + addr;\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\taddr + \" doesn't exist or is not a directory\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(addr);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC5C,IAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAEtC;AACA;;AAEAE,MAAM,CAACC,OAAO;EACb;AACD;AACA;AACA;AACA;EACC,gDAAYC,MAAM,EAAEC,WAAW,EAAEC,MAAM,EAAE;IAAA;IACxC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAG,4BAA8B,EAAE,CAAEE,MAAM,CAACF,WAAW,CAAC;IACxE,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAME,QAAQ,EAAE;MAAA;MACf,IAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;MAC/CE,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CACR,wCAAwC,EACxC,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACtC,IAAMC,EAAE,GAAGP,QAAQ,CAACQ,UAAU;QAC9B,IAAMC,KAAK,GAAGhB,QAAQ,CAACW,OAAO,CAACM,IAAI,CAAC,CAClCC,KAAK,CAACC,GAAG,CAAC,UAAAC,CAAC,EAAI;UACf,OAAO,KAAI,CAAChB,WAAW,CAACe,GAAG,CAAC,UAAAE,CAAC;YAAA,OAAId,QAAQ,CAACe,IAAI,CAACF,CAAC,EAAEC,CAAC,CAAC;UAAA,EAAC;QACtD,CAAC,CAAC,CACDE,MAAM,CAAC,UAACC,KAAK,EAAEJ,CAAC,EAAK;UACrBI,KAAK,CAACC,IAAI,CAACC,KAAK,CAACF,KAAK,EAAEJ,CAAC,CAAC;UAC1B,OAAOI,KAAK;QACb,CAAC,EAAE,EAAE,CAAC;QACP1B,WAAW,CACVkB,KAAK,EACL,UAACW,IAAI,EAAEd,QAAQ,EAAK;UACnBC,EAAE,CAACc,IAAI,CAACD,IAAI,EAAE,UAACE,GAAG,EAAED,IAAI,EAAK;YAC5B,IAAI,CAACC,GAAG,IAAID,IAAI,IAAIA,IAAI,CAACE,WAAW,EAAE,EAAE;cACvC,IAAMC,GAAG,mCACLpB,OAAO;gBACVM,IAAI,EAAEU,IAAI;gBACVhB,OAAO,EAAE,IAAI,GAAGA,OAAO,CAACA,OAAO;gBAC/BV,MAAM,EAAE;cAAK,EACb;cACD,IAAM+B,OAAO,GAAG,yBAAyB,GAAGL,IAAI;cAChD,OAAOpB,QAAQ,CAAC0B,SAAS,CACxB5B,MAAM,EACN0B,GAAG,EACHC,OAAO,EACPpB,cAAc,EACdC,QAAQ,CACR;YACF;YACA,IAAID,cAAc,CAACsB,GAAG,EACrBtB,cAAc,CAACsB,GAAG,CACjBP,IAAI,GAAG,sCAAsC,CAC7C;YACF,IAAIf,cAAc,CAACuB,mBAAmB,EACrCvB,cAAc,CAACuB,mBAAmB,CAACC,GAAG,CAACT,IAAI,CAAC;YAC7C,OAAOd,QAAQ,EAAE;UAClB,CAAC,CAAC;QACH,CAAC,EACDA,QAAQ,CACR;MACF,CAAC,CACD;IACH;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}