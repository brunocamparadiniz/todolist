{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  function FileExistsPlugin(source, target) {\n    _classCallCheck(this, FileExistsPlugin);\n    this.source = source;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(FileExistsPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      var fs = resolver.fileSystem;\n      resolver.getHook(this.source).tapAsync(\"FileExistsPlugin\", function (request, resolveContext, callback) {\n        var file = request.path;\n        if (!file) return callback();\n        fs.stat(file, function (err, stat) {\n          if (err || !stat) {\n            if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n            if (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n            return callback();\n          }\n          if (!stat.isFile()) {\n            if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(file);\n            if (resolveContext.log) resolveContext.log(file + \" is not a file\");\n            return callback();\n          }\n          if (resolveContext.fileDependencies) resolveContext.fileDependencies.add(file);\n          resolver.doResolve(target, request, \"existing file: \" + file, resolveContext, callback);\n        });\n      });\n    }\n  }]);\n  return FileExistsPlugin;\n}();","map":{"version":3,"names":["module","exports","source","target","resolver","ensureHook","fs","fileSystem","getHook","tapAsync","request","resolveContext","callback","file","path","stat","err","missingDependencies","add","log","isFile","fileDependencies","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/FileExistsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class FileExistsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst fs = resolver.fileSystem;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst file = request.path;\n\t\t\t\tif (!file) return callback();\n\t\t\t\tfs.stat(file, (err, stat) => {\n\t\t\t\t\tif (err || !stat) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (!stat.isFile()) {\n\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\tresolveContext.missingDependencies.add(file);\n\t\t\t\t\t\tif (resolveContext.log) resolveContext.log(file + \" is not a file\");\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\tif (resolveContext.fileDependencies)\n\t\t\t\t\t\tresolveContext.fileDependencies.add(file);\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\"existing file: \" + file,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AAAA;AAAA;AAEAA,MAAM,CAACC,OAAO;EACb;AACD;AACA;AACA;EACC,0BAAYC,MAAM,EAAEC,MAAM,EAAE;IAAA;IAC3B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC;MAC/C,IAAMG,EAAE,GAAGF,QAAQ,CAACG,UAAU;MAC9BH,QAAQ,CACNI,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC,CACpBO,QAAQ,CAAC,kBAAkB,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACpE,IAAMC,IAAI,GAAGH,OAAO,CAACI,IAAI;QACzB,IAAI,CAACD,IAAI,EAAE,OAAOD,QAAQ,EAAE;QAC5BN,EAAE,CAACS,IAAI,CAACF,IAAI,EAAE,UAACG,GAAG,EAAED,IAAI,EAAK;UAC5B,IAAIC,GAAG,IAAI,CAACD,IAAI,EAAE;YACjB,IAAIJ,cAAc,CAACM,mBAAmB,EACrCN,cAAc,CAACM,mBAAmB,CAACC,GAAG,CAACL,IAAI,CAAC;YAC7C,IAAIF,cAAc,CAACQ,GAAG,EAAER,cAAc,CAACQ,GAAG,CAACN,IAAI,GAAG,gBAAgB,CAAC;YACnE,OAAOD,QAAQ,EAAE;UAClB;UACA,IAAI,CAACG,IAAI,CAACK,MAAM,EAAE,EAAE;YACnB,IAAIT,cAAc,CAACM,mBAAmB,EACrCN,cAAc,CAACM,mBAAmB,CAACC,GAAG,CAACL,IAAI,CAAC;YAC7C,IAAIF,cAAc,CAACQ,GAAG,EAAER,cAAc,CAACQ,GAAG,CAACN,IAAI,GAAG,gBAAgB,CAAC;YACnE,OAAOD,QAAQ,EAAE;UAClB;UACA,IAAID,cAAc,CAACU,gBAAgB,EAClCV,cAAc,CAACU,gBAAgB,CAACH,GAAG,CAACL,IAAI,CAAC;UAC1CT,QAAQ,CAACkB,SAAS,CACjBnB,MAAM,EACNO,OAAO,EACP,iBAAiB,GAAGG,IAAI,EACxBF,cAAc,EACdC,QAAQ,CACR;QACF,CAAC,CAAC;MACH,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}