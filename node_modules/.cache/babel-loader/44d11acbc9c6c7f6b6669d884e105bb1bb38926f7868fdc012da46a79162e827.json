{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Cache\").Etag} Etag */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar MergedEtag = /*#__PURE__*/function () {\n  /**\n   * @param {Etag} a first\n   * @param {Etag} b second\n   */\n  function MergedEtag(a, b) {\n    _classCallCheck(this, MergedEtag);\n    this.a = a;\n    this.b = b;\n  }\n  _createClass(MergedEtag, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.a.toString(), \"|\").concat(this.b.toString());\n    }\n  }]);\n  return MergedEtag;\n}();\nvar dualObjectMap = new WeakMap();\nvar objectStringMap = new WeakMap();\n\n/**\n * @param {Etag} a first\n * @param {Etag} b second\n * @returns {Etag} result\n */\nvar mergeEtags = function mergeEtags(a, b) {\n  if (typeof a === \"string\") {\n    if (typeof b === \"string\") {\n      return \"\".concat(a, \"|\").concat(b);\n    } else {\n      var temp = b;\n      b = a;\n      a = temp;\n    }\n  } else {\n    if (typeof b !== \"string\") {\n      // both a and b are objects\n      var _map = dualObjectMap.get(a);\n      if (_map === undefined) {\n        dualObjectMap.set(a, _map = new WeakMap());\n      }\n      var _mergedEtag = _map.get(b);\n      if (_mergedEtag === undefined) {\n        var newMergedEtag = new MergedEtag(a, b);\n        _map.set(b, newMergedEtag);\n        return newMergedEtag;\n      } else {\n        return _mergedEtag;\n      }\n    }\n  }\n  // a is object, b is string\n  var map = objectStringMap.get(a);\n  if (map === undefined) {\n    objectStringMap.set(a, map = new Map());\n  }\n  var mergedEtag = map.get(b);\n  if (mergedEtag === undefined) {\n    var _newMergedEtag = new MergedEtag(a, b);\n    map.set(b, _newMergedEtag);\n    return _newMergedEtag;\n  } else {\n    return mergedEtag;\n  }\n};\nmodule.exports = mergeEtags;","map":{"version":3,"names":["MergedEtag","a","b","toString","dualObjectMap","WeakMap","objectStringMap","mergeEtags","temp","map","get","undefined","set","mergedEtag","newMergedEtag","Map","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/cache/mergeEtags.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Cache\").Etag} Etag */\n\nclass MergedEtag {\n\t/**\n\t * @param {Etag} a first\n\t * @param {Etag} b second\n\t */\n\tconstructor(a, b) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t}\n\n\ttoString() {\n\t\treturn `${this.a.toString()}|${this.b.toString()}`;\n\t}\n}\n\nconst dualObjectMap = new WeakMap();\nconst objectStringMap = new WeakMap();\n\n/**\n * @param {Etag} a first\n * @param {Etag} b second\n * @returns {Etag} result\n */\nconst mergeEtags = (a, b) => {\n\tif (typeof a === \"string\") {\n\t\tif (typeof b === \"string\") {\n\t\t\treturn `${a}|${b}`;\n\t\t} else {\n\t\t\tconst temp = b;\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\t} else {\n\t\tif (typeof b !== \"string\") {\n\t\t\t// both a and b are objects\n\t\t\tlet map = dualObjectMap.get(a);\n\t\t\tif (map === undefined) {\n\t\t\t\tdualObjectMap.set(a, (map = new WeakMap()));\n\t\t\t}\n\t\t\tconst mergedEtag = map.get(b);\n\t\t\tif (mergedEtag === undefined) {\n\t\t\t\tconst newMergedEtag = new MergedEtag(a, b);\n\t\t\t\tmap.set(b, newMergedEtag);\n\t\t\t\treturn newMergedEtag;\n\t\t\t} else {\n\t\t\t\treturn mergedEtag;\n\t\t\t}\n\t\t}\n\t}\n\t// a is object, b is string\n\tlet map = objectStringMap.get(a);\n\tif (map === undefined) {\n\t\tobjectStringMap.set(a, (map = new Map()));\n\t}\n\tconst mergedEtag = map.get(b);\n\tif (mergedEtag === undefined) {\n\t\tconst newMergedEtag = new MergedEtag(a, b);\n\t\tmap.set(b, newMergedEtag);\n\t\treturn newMergedEtag;\n\t} else {\n\t\treturn mergedEtag;\n\t}\n};\n\nmodule.exports = mergeEtags;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAAA;AAAA;AAAA,IAEMA,UAAU;EACf;AACD;AACA;AACA;EACC,oBAAYC,CAAC,EAAEC,CAAC,EAAE;IAAA;IACjB,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACX;EAAC;IAAA;IAAA,OAED,oBAAW;MACV,iBAAU,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE,cAAI,IAAI,CAACD,CAAC,CAACC,QAAQ,EAAE;IACjD;EAAC;EAAA;AAAA;AAGF,IAAMC,aAAa,GAAG,IAAIC,OAAO,EAAE;AACnC,IAAMC,eAAe,GAAG,IAAID,OAAO,EAAE;;AAErC;AACA;AACA;AACA;AACA;AACA,IAAME,UAAU,GAAG,SAAbA,UAAU,CAAIN,CAAC,EAAEC,CAAC,EAAK;EAC5B,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;IAC1B,IAAI,OAAOC,CAAC,KAAK,QAAQ,EAAE;MAC1B,iBAAUD,CAAC,cAAIC,CAAC;IACjB,CAAC,MAAM;MACN,IAAMM,IAAI,GAAGN,CAAC;MACdA,CAAC,GAAGD,CAAC;MACLA,CAAC,GAAGO,IAAI;IACT;EACD,CAAC,MAAM;IACN,IAAI,OAAON,CAAC,KAAK,QAAQ,EAAE;MAC1B;MACA,IAAIO,IAAG,GAAGL,aAAa,CAACM,GAAG,CAACT,CAAC,CAAC;MAC9B,IAAIQ,IAAG,KAAKE,SAAS,EAAE;QACtBP,aAAa,CAACQ,GAAG,CAACX,CAAC,EAAGQ,IAAG,GAAG,IAAIJ,OAAO,EAAE,CAAE;MAC5C;MACA,IAAMQ,WAAU,GAAGJ,IAAG,CAACC,GAAG,CAACR,CAAC,CAAC;MAC7B,IAAIW,WAAU,KAAKF,SAAS,EAAE;QAC7B,IAAMG,aAAa,GAAG,IAAId,UAAU,CAACC,CAAC,EAAEC,CAAC,CAAC;QAC1CO,IAAG,CAACG,GAAG,CAACV,CAAC,EAAEY,aAAa,CAAC;QACzB,OAAOA,aAAa;MACrB,CAAC,MAAM;QACN,OAAOD,WAAU;MAClB;IACD;EACD;EACA;EACA,IAAIJ,GAAG,GAAGH,eAAe,CAACI,GAAG,CAACT,CAAC,CAAC;EAChC,IAAIQ,GAAG,KAAKE,SAAS,EAAE;IACtBL,eAAe,CAACM,GAAG,CAACX,CAAC,EAAGQ,GAAG,GAAG,IAAIM,GAAG,EAAE,CAAE;EAC1C;EACA,IAAMF,UAAU,GAAGJ,GAAG,CAACC,GAAG,CAACR,CAAC,CAAC;EAC7B,IAAIW,UAAU,KAAKF,SAAS,EAAE;IAC7B,IAAMG,cAAa,GAAG,IAAId,UAAU,CAACC,CAAC,EAAEC,CAAC,CAAC;IAC1CO,GAAG,CAACG,GAAG,CAACV,CAAC,EAAEY,cAAa,CAAC;IACzB,OAAOA,cAAa;EACrB,CAAC,MAAM;IACN,OAAOD,UAAU;EAClB;AACD,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGV,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}