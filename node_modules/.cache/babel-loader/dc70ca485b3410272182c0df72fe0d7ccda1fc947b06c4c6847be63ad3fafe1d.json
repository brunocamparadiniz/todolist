{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar InnerGraph = require(\"../optimize/InnerGraph\");\nvar ConstDependency = require(\"./ConstDependency\");\nvar HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nvar HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nvar HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nvar HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nvar _require = require(\"./HarmonyImportDependency\"),\n  ExportPresenceModes = _require.ExportPresenceModes;\nvar _require2 = require(\"./HarmonyImportDependencyParserPlugin\"),\n  harmonySpecifierTag = _require2.harmonySpecifierTag,\n  getAssertions = _require2.getAssertions;\nvar HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nvar HarmonyStarExportsList = HarmonyExportImportedSpecifierDependency.HarmonyStarExportsList;\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyExportDependencyParserPlugin(options) {\n    _classCallCheck(this, HarmonyExportDependencyParserPlugin);\n    this.exportPresenceMode = options.reexportExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.reexportExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n  }\n  _createClass(HarmonyExportDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var exportPresenceMode = this.exportPresenceMode;\n      parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", function (statement) {\n        var dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.module.addPresentationalDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source) {\n        parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n        var clearDep = new ConstDependency(\"\", statement.range);\n        clearDep.loc = Object.create(statement.loc);\n        clearDep.loc.index = -1;\n        parser.state.module.addPresentationalDependency(clearDep);\n        var sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.lastHarmonyImportOrder, getAssertions(statement));\n        sideEffectDep.loc = Object.create(statement.loc);\n        sideEffectDep.loc.index = -1;\n        parser.state.current.addDependency(sideEffectDep);\n        return true;\n      });\n      parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, expr) {\n        var isFunctionDeclaration = expr.type === \"FunctionDeclaration\";\n        var comments = parser.getComments([statement.range[0], expr.range[0]]);\n        var dep = new HarmonyExportExpressionDependency(expr.range, statement.range, comments.map(function (c) {\n          switch (c.type) {\n            case \"Block\":\n              return \"/*\".concat(c.value, \"*/\");\n            case \"Line\":\n              return \"//\".concat(c.value, \"\\n\");\n          }\n          return \"\";\n        }).join(\"\"), expr.type.endsWith(\"Declaration\") && expr.id ? expr.id.name : isFunctionDeclaration ? {\n          id: expr.id ? expr.id.name : undefined,\n          range: [expr.range[0], expr.params.length > 0 ? expr.params[0].range[0] : expr.body.range[0]],\n          prefix: \"\".concat(expr.async ? \"async \" : \"\", \"function\").concat(expr.generator ? \"*\" : \"\", \" \"),\n          suffix: \"(\".concat(expr.params.length > 0 ? \"\" : \") \")\n        } : undefined);\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.current.addDependency(dep);\n        InnerGraph.addVariableUsage(parser, expr.type.endsWith(\"Declaration\") && expr.id ? expr.id.name : \"*default*\", \"default\");\n        return true;\n      });\n      parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, id, name, idx) {\n        var settings = parser.getTagData(id, harmonySpecifierTag);\n        var dep;\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        harmonyNamedExports.add(name);\n        InnerGraph.addVariableUsage(parser, id, name);\n        if (settings) {\n          dep = new HarmonyExportImportedSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, name, harmonyNamedExports, null, exportPresenceMode, null, settings.assertions);\n        } else {\n          dep = new HarmonyExportSpecifierDependency(id, name);\n        }\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source, id, name, idx) {\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        var harmonyStarExports = null;\n        if (name) {\n          harmonyNamedExports.add(name);\n        } else {\n          harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || new HarmonyStarExportsList();\n        }\n        var dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.lastHarmonyImportOrder, id ? [id] : [], name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), exportPresenceMode, harmonyStarExports);\n        if (harmonyStarExports) {\n          harmonyStarExports.push(dep);\n        }\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n  return HarmonyExportDependencyParserPlugin;\n}();","map":{"version":3,"names":["InnerGraph","require","ConstDependency","HarmonyExportExpressionDependency","HarmonyExportHeaderDependency","HarmonyExportImportedSpecifierDependency","HarmonyExportSpecifierDependency","ExportPresenceModes","harmonySpecifierTag","getAssertions","HarmonyImportSideEffectDependency","HarmonyStarExportsList","module","exports","options","exportPresenceMode","reexportExportsPresence","undefined","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","addPresentationalDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","current","addDependency","exportExpression","expr","isFunctionDeclaration","type","comments","getComments","map","c","value","join","endsWith","id","name","params","length","body","prefix","async","generator","suffix","addVariableUsage","exportSpecifier","idx","settings","getTagData","harmonyNamedExports","Set","add","sourceOrder","ids","assertions","exportImportSpecifier","harmonyStarExports","slice","push"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst {\n\tharmonySpecifierTag,\n\tgetAssertions\n} = require(\"./HarmonyImportDependencyParserPlugin\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst { HarmonyStarExportsList } = HarmonyExportImportedSpecifierDependency;\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.reexportExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.reexportExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t: options.strictExportPresence\n\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t: ExportPresenceModes.AUTO;\n\t}\n\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tgetAssertions(statement)\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst isFunctionDeclaration = expr.type === \"FunctionDeclaration\";\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\"),\n\t\t\t\t\texpr.type.endsWith(\"Declaration\") && expr.id\n\t\t\t\t\t\t? expr.id.name\n\t\t\t\t\t\t: isFunctionDeclaration\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tid: expr.id ? expr.id.name : undefined,\n\t\t\t\t\t\t\t\trange: [\n\t\t\t\t\t\t\t\t\texpr.range[0],\n\t\t\t\t\t\t\t\t\texpr.params.length > 0\n\t\t\t\t\t\t\t\t\t\t? expr.params[0].range[0]\n\t\t\t\t\t\t\t\t\t\t: expr.body.range[0]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tprefix: `${expr.async ? \"async \" : \"\"}function${\n\t\t\t\t\t\t\t\t\texpr.generator ? \"*\" : \"\"\n\t\t\t\t\t\t\t\t} `,\n\t\t\t\t\t\t\t\tsuffix: `(${expr.params.length > 0 ? \"\" : \") \"}`\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\tInnerGraph.addVariableUsage(\n\t\t\t\t\tparser,\n\t\t\t\t\texpr.type.endsWith(\"Declaration\") && expr.id\n\t\t\t\t\t\t? expr.id.name\n\t\t\t\t\t\t: \"*default*\",\n\t\t\t\t\t\"default\"\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst settings = parser.getTagData(id, harmonySpecifierTag);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tInnerGraph.addVariableUsage(parser, id, name);\n\t\t\t\tif (settings) {\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tsettings.ids,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tsettings.assertions\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(id, name);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || new HarmonyStarExportsList();\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tid ? [id] : [],\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tharmonyStarExports\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}