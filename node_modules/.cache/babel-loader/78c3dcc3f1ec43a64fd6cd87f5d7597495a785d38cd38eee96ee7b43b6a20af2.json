{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar makeSerializable = require(\"../util/makeSerializable\");\nvar ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\nvar CssImportDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(CssImportDependency, _ModuleDependency);\n  var _super = _createSuper(CssImportDependency);\n  /**\n   * @param {string} request request\n   * @param {[number, number]} range range of the argument\n   * @param {string | undefined} supports list of supports conditions\n   * @param {string | undefined} media list of media conditions\n   */\n  function CssImportDependency(request, range, supports, media) {\n    var _this;\n    _classCallCheck(this, CssImportDependency);\n    _this = _super.call(this, request);\n    _this.range = range;\n    _this.supports = supports;\n    _this.media = media;\n    return _this;\n  }\n  _createClass(CssImportDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"css @import\";\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return \"css-import\";\n    }\n\n    /**\n     * @param {string} context context directory\n     * @returns {Module} a module\n     */\n  }, {\n    key: \"createIgnoredModule\",\n    value: function createIgnoredModule(context) {\n      return null;\n    }\n  }]);\n  return CssImportDependency;\n}(ModuleDependency);\nCssImportDependency.Template = /*#__PURE__*/function (_ModuleDependency$Tem) {\n  _inherits(CssImportDependencyTemplate, _ModuleDependency$Tem);\n  var _super2 = _createSuper(CssImportDependencyTemplate);\n  function CssImportDependencyTemplate() {\n    _classCallCheck(this, CssImportDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(CssImportDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, templateContext) {\n      var dep = /** @type {CssImportDependency} */dependency;\n      source.replace(dep.range[0], dep.range[1] - 1, \"\");\n    }\n  }]);\n  return CssImportDependencyTemplate;\n}(ModuleDependency.Template);\nmakeSerializable(CssImportDependency, \"webpack/lib/dependencies/CssImportDependency\");\nmodule.exports = CssImportDependency;","map":{"version":3,"names":["makeSerializable","require","ModuleDependency","CssImportDependency","request","range","supports","media","context","Template","dependency","source","templateContext","dep","replace","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/CssImportDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssImportDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {[number, number]} range range of the argument\n\t * @param {string | undefined} supports list of supports conditions\n\t * @param {string | undefined} media list of media conditions\n\t */\n\tconstructor(request, range, supports, media) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.supports = supports;\n\t\tthis.media = media;\n\t}\n\n\tget type() {\n\t\treturn \"css @import\";\n\t}\n\n\tget category() {\n\t\treturn \"css-import\";\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\treturn null;\n\t}\n}\n\nCssImportDependency.Template = class CssImportDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {CssImportDependency} */ (dependency);\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"\");\n\t}\n};\n\nmakeSerializable(\n\tCssImportDependency,\n\t\"webpack/lib/dependencies/CssImportDependency\"\n);\n\nmodule.exports = CssImportDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAEME,mBAAmB;EAAA;EAAA;EACxB;AACD;AACA;AACA;AACA;AACA;EACC,6BAAYC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IAAA;IAAA;IAC5C,0BAAMH,OAAO;IACb,MAAKC,KAAK,GAAGA,KAAK;IAClB,MAAKC,QAAQ,GAAGA,QAAQ;IACxB,MAAKC,KAAK,GAAGA,KAAK;IAAC;EACpB;EAAC;IAAA;IAAA,KAED,eAAW;MACV,OAAO,aAAa;IACrB;EAAC;IAAA;IAAA,KAED,eAAe;MACd,OAAO,YAAY;IACpB;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,6BAAoBC,OAAO,EAAE;MAC5B,OAAO,IAAI;IACZ;EAAC;EAAA;AAAA,EA5BgCN,gBAAgB;AA+BlDC,mBAAmB,CAACM,QAAQ;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAG3B;AACD;AACA;AACA;AACA;AACA;IACC,eAAMC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;MAC1C,IAAMC,GAAG,GAAG,kCAAoCH,UAAW;MAE3DC,MAAM,CAACG,OAAO,CAACD,GAAG,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEQ,GAAG,CAACR,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;IACnD;EAAC;EAAA;AAAA,EAZDH,gBAAgB,CAACO,QAAQ,CAazB;AAEDT,gBAAgB,CACfG,mBAAmB,EACnB,8CAA8C,CAC9C;AAEDY,MAAM,CAACC,OAAO,GAAGb,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}