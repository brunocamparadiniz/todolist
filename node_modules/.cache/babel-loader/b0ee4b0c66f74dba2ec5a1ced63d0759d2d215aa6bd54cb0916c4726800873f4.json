{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Generator = require(\"../Generator\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\nvar TYPES = new Set([\"webassembly\"]);\nvar AsyncWebAssemblyGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(AsyncWebAssemblyGenerator, _Generator);\n  var _super = _createSuper(AsyncWebAssemblyGenerator);\n  function AsyncWebAssemblyGenerator(options) {\n    var _this;\n    _classCallCheck(this, AsyncWebAssemblyGenerator);\n    _this = _super.call(this);\n    _this.options = options;\n    return _this;\n  }\n\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {Set<string>} available types (do not mutate)\n   */\n  _createClass(AsyncWebAssemblyGenerator, [{\n    key: \"getTypes\",\n    value: function getTypes(module) {\n      return TYPES;\n    }\n\n    /**\n     * @param {NormalModule} module the module\n     * @param {string=} type source type\n     * @returns {number} estimate size of the module\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize(module, type) {\n      var originalSource = module.originalSource();\n      if (!originalSource) {\n        return 0;\n      }\n      return originalSource.size();\n    }\n\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {GenerateContext} generateContext context for generate\n     * @returns {Source} generated code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate(module, generateContext) {\n      return module.originalSource();\n    }\n  }]);\n  return AsyncWebAssemblyGenerator;\n}(Generator);\nmodule.exports = AsyncWebAssemblyGenerator;","map":{"version":3,"names":["Generator","require","TYPES","Set","AsyncWebAssemblyGenerator","options","module","type","originalSource","size","generateContext","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/wasm-async/AsyncWebAssemblyGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Generator = require(\"../Generator\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\nconst TYPES = new Set([\"webassembly\"]);\n\nclass AsyncWebAssemblyGenerator extends Generator {\n\tconstructor(options) {\n\t\tsuper();\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst originalSource = module.originalSource();\n\t\tif (!originalSource) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn originalSource.size();\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\treturn module.originalSource();\n\t}\n}\n\nmodule.exports = AsyncWebAssemblyGenerator;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEzC;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;AAAC,IAEjCC,yBAAyB;EAAA;EAAA;EAC9B,mCAAYC,OAAO,EAAE;IAAA;IAAA;IACpB;IACA,MAAKA,OAAO,GAAGA,OAAO;IAAC;EACxB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,kBAASC,MAAM,EAAE;MAChB,OAAOJ,KAAK;IACb;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,iBAAQI,MAAM,EAAEC,IAAI,EAAE;MACrB,IAAMC,cAAc,GAAGF,MAAM,CAACE,cAAc,EAAE;MAC9C,IAAI,CAACA,cAAc,EAAE;QACpB,OAAO,CAAC;MACT;MACA,OAAOA,cAAc,CAACC,IAAI,EAAE;IAC7B;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,kBAASH,MAAM,EAAEI,eAAe,EAAE;MACjC,OAAOJ,MAAM,CAACE,cAAc,EAAE;IAC/B;EAAC;EAAA;AAAA,EAlCsCR,SAAS;AAqCjDM,MAAM,CAACK,OAAO,GAAGP,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}