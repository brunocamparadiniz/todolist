{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar arraySum = function arraySum(array) {\n  var sum = 0;\n  var _iterator = _createForOfIteratorHelper(array),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      sum += item;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return sum;\n};\n\n/**\n * @param {any[]} args items to be truncated\n * @param {number} maxLength maximum length of args including spaces between\n * @returns {string[]} truncated args\n */\nvar truncateArgs = function truncateArgs(args, maxLength) {\n  var lengths = args.map(function (a) {\n    return \"\".concat(a).length;\n  });\n  var availableLength = maxLength - lengths.length + 1;\n  if (availableLength > 0 && args.length === 1) {\n    if (availableLength >= args[0].length) {\n      return args;\n    } else if (availableLength > 3) {\n      return [\"...\" + args[0].slice(-availableLength + 3)];\n    } else {\n      return [args[0].slice(-availableLength)];\n    }\n  }\n\n  // Check if there is space for at least 4 chars per arg\n  if (availableLength < arraySum(lengths.map(function (i) {\n    return Math.min(i, 6);\n  }))) {\n    // remove args\n    if (args.length > 1) return truncateArgs(args.slice(0, args.length - 1), maxLength);\n    return [];\n  }\n  var currentLength = arraySum(lengths);\n\n  // Check if all fits into maxLength\n  if (currentLength <= availableLength) return args;\n\n  // Try to remove chars from the longest items until it fits\n  var _loop = function _loop() {\n    var maxLength = Math.max.apply(Math, _toConsumableArray(lengths));\n    var shorterItems = lengths.filter(function (l) {\n      return l !== maxLength;\n    });\n    var nextToMaxLength = shorterItems.length > 0 ? Math.max.apply(Math, _toConsumableArray(shorterItems)) : 0;\n    var maxReduce = maxLength - nextToMaxLength;\n    var maxItems = lengths.length - shorterItems.length;\n    var overrun = currentLength - availableLength;\n    for (var i = 0; i < lengths.length; i++) {\n      if (lengths[i] === maxLength) {\n        var reduce = Math.min(Math.floor(overrun / maxItems), maxReduce);\n        lengths[i] -= reduce;\n        currentLength -= reduce;\n        overrun -= reduce;\n        maxItems--;\n      }\n    }\n  };\n  while (currentLength > availableLength) {\n    _loop();\n  }\n\n  // Return args reduced to length in lengths\n  return args.map(function (a, i) {\n    var str = \"\".concat(a);\n    var length = lengths[i];\n    if (str.length === length) {\n      return str;\n    } else if (length > 5) {\n      return \"...\" + str.slice(-length + 3);\n    } else if (length > 0) {\n      return str.slice(-length);\n    } else {\n      return \"\";\n    }\n  });\n};\nmodule.exports = truncateArgs;","map":{"version":3,"names":["arraySum","array","sum","item","truncateArgs","args","maxLength","lengths","map","a","length","availableLength","slice","i","Math","min","currentLength","max","shorterItems","filter","l","nextToMaxLength","maxReduce","maxItems","overrun","reduce","floor","str","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/logging/truncateArgs.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst arraySum = array => {\n\tlet sum = 0;\n\tfor (const item of array) sum += item;\n\treturn sum;\n};\n\n/**\n * @param {any[]} args items to be truncated\n * @param {number} maxLength maximum length of args including spaces between\n * @returns {string[]} truncated args\n */\nconst truncateArgs = (args, maxLength) => {\n\tconst lengths = args.map(a => `${a}`.length);\n\tconst availableLength = maxLength - lengths.length + 1;\n\n\tif (availableLength > 0 && args.length === 1) {\n\t\tif (availableLength >= args[0].length) {\n\t\t\treturn args;\n\t\t} else if (availableLength > 3) {\n\t\t\treturn [\"...\" + args[0].slice(-availableLength + 3)];\n\t\t} else {\n\t\t\treturn [args[0].slice(-availableLength)];\n\t\t}\n\t}\n\n\t// Check if there is space for at least 4 chars per arg\n\tif (availableLength < arraySum(lengths.map(i => Math.min(i, 6)))) {\n\t\t// remove args\n\t\tif (args.length > 1)\n\t\t\treturn truncateArgs(args.slice(0, args.length - 1), maxLength);\n\t\treturn [];\n\t}\n\n\tlet currentLength = arraySum(lengths);\n\n\t// Check if all fits into maxLength\n\tif (currentLength <= availableLength) return args;\n\n\t// Try to remove chars from the longest items until it fits\n\twhile (currentLength > availableLength) {\n\t\tconst maxLength = Math.max(...lengths);\n\t\tconst shorterItems = lengths.filter(l => l !== maxLength);\n\t\tconst nextToMaxLength =\n\t\t\tshorterItems.length > 0 ? Math.max(...shorterItems) : 0;\n\t\tconst maxReduce = maxLength - nextToMaxLength;\n\t\tlet maxItems = lengths.length - shorterItems.length;\n\t\tlet overrun = currentLength - availableLength;\n\t\tfor (let i = 0; i < lengths.length; i++) {\n\t\t\tif (lengths[i] === maxLength) {\n\t\t\t\tconst reduce = Math.min(Math.floor(overrun / maxItems), maxReduce);\n\t\t\t\tlengths[i] -= reduce;\n\t\t\t\tcurrentLength -= reduce;\n\t\t\t\toverrun -= reduce;\n\t\t\t\tmaxItems--;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return args reduced to length in lengths\n\treturn args.map((a, i) => {\n\t\tconst str = `${a}`;\n\t\tconst length = lengths[i];\n\t\tif (str.length === length) {\n\t\t\treturn str;\n\t\t} else if (length > 5) {\n\t\t\treturn \"...\" + str.slice(-length + 3);\n\t\t} else if (length > 0) {\n\t\t\treturn str.slice(-length);\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t});\n};\n\nmodule.exports = truncateArgs;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}