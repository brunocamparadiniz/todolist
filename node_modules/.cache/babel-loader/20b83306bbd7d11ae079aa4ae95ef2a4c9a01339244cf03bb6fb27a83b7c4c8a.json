{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ConcatenationScope = require(\"../ConcatenationScope\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar makeSerializable = require(\"../util/makeSerializable\");\nvar HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nvar NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\nvar HarmonyExportExpressionDependency = /*#__PURE__*/function (_NullDependency) {\n  _inherits(HarmonyExportExpressionDependency, _NullDependency);\n  var _super = _createSuper(HarmonyExportExpressionDependency);\n  function HarmonyExportExpressionDependency(range, rangeStatement, prefix, declarationId) {\n    var _this;\n    _classCallCheck(this, HarmonyExportExpressionDependency);\n    _this = _super.call(this);\n    _this.range = range;\n    _this.rangeStatement = rangeStatement;\n    _this.prefix = prefix;\n    _this.declarationId = declarationId;\n    return _this;\n  }\n  _createClass(HarmonyExportExpressionDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"harmony export expression\";\n    }\n\n    /**\n     * Returns the exported names\n     * @param {ModuleGraph} moduleGraph module graph\n     * @returns {ExportsSpec | undefined} export names\n     */\n  }, {\n    key: \"getExports\",\n    value: function getExports(moduleGraph) {\n      return {\n        exports: [\"default\"],\n        priority: 1,\n        terminalBinding: true,\n        dependencies: undefined\n      };\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @returns {ConnectionState} how this dependency connects the module to referencing modules\n     */\n  }, {\n    key: \"getModuleEvaluationSideEffectsState\",\n    value: function getModuleEvaluationSideEffectsState(moduleGraph) {\n      // The expression/declaration is already covered by SideEffectsFlagPlugin\n      return false;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.range);\n      write(this.rangeStatement);\n      write(this.prefix);\n      write(this.declarationId);\n      _get(_getPrototypeOf(HarmonyExportExpressionDependency.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.range = read();\n      this.rangeStatement = read();\n      this.prefix = read();\n      this.declarationId = read();\n      _get(_getPrototypeOf(HarmonyExportExpressionDependency.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n  return HarmonyExportExpressionDependency;\n}(NullDependency);\nmakeSerializable(HarmonyExportExpressionDependency, \"webpack/lib/dependencies/HarmonyExportExpressionDependency\");\nHarmonyExportExpressionDependency.Template = /*#__PURE__*/function (_NullDependency$Templ) {\n  _inherits(HarmonyExportDependencyTemplate, _NullDependency$Templ);\n  var _super2 = _createSuper(HarmonyExportDependencyTemplate);\n  function HarmonyExportDependencyTemplate() {\n    _classCallCheck(this, HarmonyExportDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(HarmonyExportDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, _ref) {\n      var module = _ref.module,\n        moduleGraph = _ref.moduleGraph,\n        runtimeTemplate = _ref.runtimeTemplate,\n        runtimeRequirements = _ref.runtimeRequirements,\n        initFragments = _ref.initFragments,\n        runtime = _ref.runtime,\n        concatenationScope = _ref.concatenationScope;\n      var dep = /** @type {HarmonyExportExpressionDependency} */dependency;\n      var declarationId = dep.declarationId;\n      var exportsName = module.exportsArgument;\n      if (declarationId) {\n        var name;\n        if (typeof declarationId === \"string\") {\n          name = declarationId;\n        } else {\n          name = ConcatenationScope.DEFAULT_EXPORT;\n          source.replace(declarationId.range[0], declarationId.range[1] - 1, \"\".concat(declarationId.prefix).concat(name).concat(declarationId.suffix));\n        }\n        if (concatenationScope) {\n          concatenationScope.registerExport(\"default\", name);\n        } else {\n          var used = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n          if (used) {\n            var map = new Map();\n            map.set(used, \"/* export default binding */ \".concat(name));\n            initFragments.push(new HarmonyExportInitFragment(exportsName, map));\n          }\n        }\n        source.replace(dep.rangeStatement[0], dep.range[0] - 1, \"/* harmony default export */ \".concat(dep.prefix));\n      } else {\n        var content;\n        var _name = ConcatenationScope.DEFAULT_EXPORT;\n        if (runtimeTemplate.supportsConst()) {\n          content = \"/* harmony default export */ const \".concat(_name, \" = \");\n          if (concatenationScope) {\n            concatenationScope.registerExport(\"default\", _name);\n          } else {\n            var _used = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n            if (_used) {\n              runtimeRequirements.add(RuntimeGlobals.exports);\n              var _map = new Map();\n              _map.set(_used, _name);\n              initFragments.push(new HarmonyExportInitFragment(exportsName, _map));\n            } else {\n              content = \"/* unused harmony default export */ var \".concat(_name, \" = \");\n            }\n          }\n        } else if (concatenationScope) {\n          content = \"/* harmony default export */ var \".concat(_name, \" = \");\n          concatenationScope.registerExport(\"default\", _name);\n        } else {\n          var _used2 = moduleGraph.getExportsInfo(module).getUsedName(\"default\", runtime);\n          if (_used2) {\n            runtimeRequirements.add(RuntimeGlobals.exports);\n            // This is a little bit incorrect as TDZ is not correct, but we can't use const.\n            content = \"/* harmony default export */ \".concat(exportsName, \"[\").concat(JSON.stringify(_used2), \"] = \");\n          } else {\n            content = \"/* unused harmony default export */ var \".concat(_name, \" = \");\n          }\n        }\n        if (dep.range) {\n          source.replace(dep.rangeStatement[0], dep.range[0] - 1, content + \"(\" + dep.prefix);\n          source.replace(dep.range[1], dep.rangeStatement[1] - 0.5, \");\");\n          return;\n        }\n        source.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\n      }\n    }\n  }]);\n  return HarmonyExportDependencyTemplate;\n}(NullDependency.Template);\nmodule.exports = HarmonyExportExpressionDependency;","map":{"version":3,"names":["ConcatenationScope","require","RuntimeGlobals","makeSerializable","HarmonyExportInitFragment","NullDependency","HarmonyExportExpressionDependency","range","rangeStatement","prefix","declarationId","moduleGraph","exports","priority","terminalBinding","dependencies","undefined","context","write","read","Template","dependency","source","module","runtimeTemplate","runtimeRequirements","initFragments","runtime","concatenationScope","dep","exportsName","exportsArgument","name","DEFAULT_EXPORT","replace","suffix","registerExport","used","getExportsInfo","getUsedName","map","Map","set","push","content","supportsConst","add","JSON","stringify"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/HarmonyExportExpressionDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst HarmonyExportInitFragment = require(\"./HarmonyExportInitFragment\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\nclass HarmonyExportExpressionDependency extends NullDependency {\n\tconstructor(range, rangeStatement, prefix, declarationId) {\n\t\tsuper();\n\t\tthis.range = range;\n\t\tthis.rangeStatement = rangeStatement;\n\t\tthis.prefix = prefix;\n\t\tthis.declarationId = declarationId;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export expression\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\treturn {\n\t\t\texports: [\"default\"],\n\t\t\tpriority: 1,\n\t\t\tterminalBinding: true,\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\t// The expression/declaration is already covered by SideEffectsFlagPlugin\n\t\treturn false;\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.range);\n\t\twrite(this.rangeStatement);\n\t\twrite(this.prefix);\n\t\twrite(this.declarationId);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.range = read();\n\t\tthis.rangeStatement = read();\n\t\tthis.prefix = read();\n\t\tthis.declarationId = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyExportExpressionDependency,\n\t\"webpack/lib/dependencies/HarmonyExportExpressionDependency\"\n);\n\nHarmonyExportExpressionDependency.Template = class HarmonyExportDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{\n\t\t\tmodule,\n\t\t\tmoduleGraph,\n\t\t\truntimeTemplate,\n\t\t\truntimeRequirements,\n\t\t\tinitFragments,\n\t\t\truntime,\n\t\t\tconcatenationScope\n\t\t}\n\t) {\n\t\tconst dep = /** @type {HarmonyExportExpressionDependency} */ (dependency);\n\t\tconst { declarationId } = dep;\n\t\tconst exportsName = module.exportsArgument;\n\t\tif (declarationId) {\n\t\t\tlet name;\n\t\t\tif (typeof declarationId === \"string\") {\n\t\t\t\tname = declarationId;\n\t\t\t} else {\n\t\t\t\tname = ConcatenationScope.DEFAULT_EXPORT;\n\t\t\t\tsource.replace(\n\t\t\t\t\tdeclarationId.range[0],\n\t\t\t\t\tdeclarationId.range[1] - 1,\n\t\t\t\t\t`${declarationId.prefix}${name}${declarationId.suffix}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (concatenationScope) {\n\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t} else {\n\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\tif (used) {\n\t\t\t\t\tconst map = new Map();\n\t\t\t\t\tmap.set(used, `/* export default binding */ ${name}`);\n\t\t\t\t\tinitFragments.push(new HarmonyExportInitFragment(exportsName, map));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsource.replace(\n\t\t\t\tdep.rangeStatement[0],\n\t\t\t\tdep.range[0] - 1,\n\t\t\t\t`/* harmony default export */ ${dep.prefix}`\n\t\t\t);\n\t\t} else {\n\t\t\tlet content;\n\t\t\tconst name = ConcatenationScope.DEFAULT_EXPORT;\n\t\t\tif (runtimeTemplate.supportsConst()) {\n\t\t\t\tcontent = `/* harmony default export */ const ${name} = `;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t\t} else {\n\t\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\t\tif (used) {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\tmap.set(used, name);\n\t\t\t\t\t\tinitFragments.push(new HarmonyExportInitFragment(exportsName, map));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontent = `/* unused harmony default export */ var ${name} = `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (concatenationScope) {\n\t\t\t\tcontent = `/* harmony default export */ var ${name} = `;\n\t\t\t\tconcatenationScope.registerExport(\"default\", name);\n\t\t\t} else {\n\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.getUsedName(\"default\", runtime);\n\t\t\t\tif (used) {\n\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t// This is a little bit incorrect as TDZ is not correct, but we can't use const.\n\t\t\t\t\tcontent = `/* harmony default export */ ${exportsName}[${JSON.stringify(\n\t\t\t\t\t\tused\n\t\t\t\t\t)}] = `;\n\t\t\t\t} else {\n\t\t\t\t\tcontent = `/* unused harmony default export */ var ${name} = `;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dep.range) {\n\t\t\t\tsource.replace(\n\t\t\t\t\tdep.rangeStatement[0],\n\t\t\t\t\tdep.range[0] - 1,\n\t\t\t\t\tcontent + \"(\" + dep.prefix\n\t\t\t\t);\n\t\t\t\tsource.replace(dep.range[1], dep.rangeStatement[1] - 0.5, \");\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsource.replace(dep.rangeStatement[0], dep.rangeStatement[1] - 1, content);\n\t\t}\n\t}\n};\n\nmodule.exports = HarmonyExportExpressionDependency;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}