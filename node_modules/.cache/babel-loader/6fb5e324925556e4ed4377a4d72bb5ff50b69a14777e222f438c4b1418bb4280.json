{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"webpack-sources\"),\n  RawSource = _require.RawSource;\nvar _require2 = require(\"../ExportsInfo\"),\n  UsageState = _require2.UsageState;\nvar Generator = require(\"../Generator\");\nvar InitFragment = require(\"../InitFragment\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar Template = require(\"../Template\");\nvar ModuleDependency = require(\"../dependencies/ModuleDependency\");\nvar WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nvar TYPES = new Set([\"webassembly\"]);\nvar WebAssemblyJavascriptGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(WebAssemblyJavascriptGenerator, _Generator);\n  var _super = _createSuper(WebAssemblyJavascriptGenerator);\n  function WebAssemblyJavascriptGenerator() {\n    _classCallCheck(this, WebAssemblyJavascriptGenerator);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebAssemblyJavascriptGenerator, [{\n    key: \"getTypes\",\n    value:\n    /**\n     * @param {NormalModule} module fresh module\n     * @returns {Set<string>} available types (do not mutate)\n     */\n    function getTypes(module) {\n      return TYPES;\n    }\n\n    /**\n     * @param {NormalModule} module the module\n     * @param {string=} type source type\n     * @returns {number} estimate size of the module\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize(module, type) {\n      return 95 + module.dependencies.length * 5;\n    }\n\n    /**\n     * @param {NormalModule} module module for which the code should be generated\n     * @param {GenerateContext} generateContext context for generate\n     * @returns {Source} generated code\n     */\n  }, {\n    key: \"generate\",\n    value: function generate(module, generateContext) {\n      var runtimeTemplate = generateContext.runtimeTemplate,\n        moduleGraph = generateContext.moduleGraph,\n        chunkGraph = generateContext.chunkGraph,\n        runtimeRequirements = generateContext.runtimeRequirements,\n        runtime = generateContext.runtime;\n      /** @type {InitFragment[]} */\n      var initFragments = [];\n      var exportsInfo = moduleGraph.getExportsInfo(module);\n      var needExportsCopy = false;\n      var importedModules = new Map();\n      var initParams = [];\n      var index = 0;\n      var _iterator = _createForOfIteratorHelper(module.dependencies),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var dep = _step.value;\n          var moduleDep = dep && dep instanceof ModuleDependency ? dep : undefined;\n          if (moduleGraph.getModule(dep)) {\n            var importData = importedModules.get(moduleGraph.getModule(dep));\n            if (importData === undefined) {\n              importedModules.set(moduleGraph.getModule(dep), importData = {\n                importVar: \"m\".concat(index),\n                index: index,\n                request: moduleDep && moduleDep.userRequest || undefined,\n                names: new Set(),\n                reexports: []\n              });\n              index++;\n            }\n            if (dep instanceof WebAssemblyImportDependency) {\n              importData.names.add(dep.name);\n              if (dep.description.type === \"GlobalType\") {\n                var exportName = dep.name;\n                var importedModule = moduleGraph.getModule(dep);\n                if (importedModule) {\n                  var usedName = moduleGraph.getExportsInfo(importedModule).getUsedName(exportName, runtime);\n                  if (usedName) {\n                    initParams.push(runtimeTemplate.exportFromImport({\n                      moduleGraph: moduleGraph,\n                      module: importedModule,\n                      request: dep.request,\n                      importVar: importData.importVar,\n                      originModule: module,\n                      exportName: dep.name,\n                      asiSafe: true,\n                      isCall: false,\n                      callContext: null,\n                      defaultInterop: true,\n                      initFragments: initFragments,\n                      runtime: runtime,\n                      runtimeRequirements: runtimeRequirements\n                    }));\n                  }\n                }\n              }\n            }\n            if (dep instanceof WebAssemblyExportImportedDependency) {\n              importData.names.add(dep.name);\n              var _usedName = moduleGraph.getExportsInfo(module).getUsedName(dep.exportName, runtime);\n              if (_usedName) {\n                runtimeRequirements.add(RuntimeGlobals.exports);\n                var exportProp = \"\".concat(module.exportsArgument, \"[\").concat(JSON.stringify(_usedName), \"]\");\n                var defineStatement = Template.asString([\"\".concat(exportProp, \" = \").concat(runtimeTemplate.exportFromImport({\n                  moduleGraph: moduleGraph,\n                  module: moduleGraph.getModule(dep),\n                  request: dep.request,\n                  importVar: importData.importVar,\n                  originModule: module,\n                  exportName: dep.name,\n                  asiSafe: true,\n                  isCall: false,\n                  callContext: null,\n                  defaultInterop: true,\n                  initFragments: initFragments,\n                  runtime: runtime,\n                  runtimeRequirements: runtimeRequirements\n                }), \";\"), \"if(WebAssembly.Global) \".concat(exportProp, \" = \") + \"new WebAssembly.Global({ value: \".concat(JSON.stringify(dep.valueType), \" }, \").concat(exportProp, \");\")]);\n                importData.reexports.push(defineStatement);\n                needExportsCopy = true;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var importsCode = Template.asString(Array.from(importedModules, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          module = _ref2[0],\n          _ref2$ = _ref2[1],\n          importVar = _ref2$.importVar,\n          request = _ref2$.request,\n          reexports = _ref2$.reexports;\n        var importStatement = runtimeTemplate.importStatement({\n          module: module,\n          chunkGraph: chunkGraph,\n          request: request,\n          importVar: importVar,\n          originModule: module,\n          runtimeRequirements: runtimeRequirements\n        });\n        return importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\n      }));\n      var copyAllExports = exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused && !needExportsCopy;\n\n      // need these globals\n      runtimeRequirements.add(RuntimeGlobals.module);\n      runtimeRequirements.add(RuntimeGlobals.moduleId);\n      runtimeRequirements.add(RuntimeGlobals.wasmInstances);\n      if (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n        runtimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n        runtimeRequirements.add(RuntimeGlobals.exports);\n      }\n      if (!copyAllExports) {\n        runtimeRequirements.add(RuntimeGlobals.exports);\n      }\n\n      // create source\n      var source = new RawSource(['\"use strict\";', \"// Instantiate WebAssembly module\", \"var wasmExports = \".concat(RuntimeGlobals.wasmInstances, \"[\").concat(module.moduleArgument, \".id];\"), exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused ? \"\".concat(RuntimeGlobals.makeNamespaceObject, \"(\").concat(module.exportsArgument, \");\") : \"\",\n      // this must be before import for circular dependencies\n      \"// export exports from WebAssembly module\", copyAllExports ? \"\".concat(module.moduleArgument, \".exports = wasmExports;\") : \"for(var name in wasmExports) \" + \"if(name) \" + \"\".concat(module.exportsArgument, \"[name] = wasmExports[name];\"), \"// exec imports from WebAssembly module (for esm order)\", importsCode, \"\", \"// exec wasm module\", \"wasmExports[\\\"\\\"](\".concat(initParams.join(\", \"), \")\")].join(\"\\n\"));\n      return InitFragment.addToSource(source, initFragments, generateContext);\n    }\n  }]);\n  return WebAssemblyJavascriptGenerator;\n}(Generator);\nmodule.exports = WebAssemblyJavascriptGenerator;","map":{"version":3,"names":["require","RawSource","UsageState","Generator","InitFragment","RuntimeGlobals","Template","ModuleDependency","WebAssemblyExportImportedDependency","WebAssemblyImportDependency","TYPES","Set","WebAssemblyJavascriptGenerator","module","type","dependencies","length","generateContext","runtimeTemplate","moduleGraph","chunkGraph","runtimeRequirements","runtime","initFragments","exportsInfo","getExportsInfo","needExportsCopy","importedModules","Map","initParams","index","dep","moduleDep","undefined","getModule","importData","get","set","importVar","request","userRequest","names","reexports","add","name","description","exportName","importedModule","usedName","getUsedName","push","exportFromImport","originModule","asiSafe","isCall","callContext","defaultInterop","exports","exportProp","exportsArgument","JSON","stringify","defineStatement","asString","valueType","importsCode","Array","from","importStatement","join","copyAllExports","otherExportsInfo","getUsed","Unused","moduleId","wasmInstances","makeNamespaceObject","source","moduleArgument","addToSource"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/wasm-sync/WebAssemblyJavascriptGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst WebAssemblyExportImportedDependency = require(\"../dependencies/WebAssemblyExportImportedDependency\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\nconst TYPES = new Set([\"webassembly\"]);\n\nclass WebAssemblyJavascriptGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\treturn 95 + module.dependencies.length * 5;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\tmoduleGraph,\n\t\t\tchunkGraph,\n\t\t\truntimeRequirements,\n\t\t\truntime\n\t\t} = generateContext;\n\t\t/** @type {InitFragment[]} */\n\t\tconst initFragments = [];\n\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\n\t\tlet needExportsCopy = false;\n\t\tconst importedModules = new Map();\n\t\tconst initParams = [];\n\t\tlet index = 0;\n\t\tfor (const dep of module.dependencies) {\n\t\t\tconst moduleDep =\n\t\t\t\tdep && dep instanceof ModuleDependency ? dep : undefined;\n\t\t\tif (moduleGraph.getModule(dep)) {\n\t\t\t\tlet importData = importedModules.get(moduleGraph.getModule(dep));\n\t\t\t\tif (importData === undefined) {\n\t\t\t\t\timportedModules.set(\n\t\t\t\t\t\tmoduleGraph.getModule(dep),\n\t\t\t\t\t\t(importData = {\n\t\t\t\t\t\t\timportVar: `m${index}`,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\trequest: (moduleDep && moduleDep.userRequest) || undefined,\n\t\t\t\t\t\t\tnames: new Set(),\n\t\t\t\t\t\t\treexports: []\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tif (dep.description.type === \"GlobalType\") {\n\t\t\t\t\t\tconst exportName = dep.name;\n\t\t\t\t\t\tconst importedModule = moduleGraph.getModule(dep);\n\n\t\t\t\t\t\tif (importedModule) {\n\t\t\t\t\t\t\tconst usedName = moduleGraph\n\t\t\t\t\t\t\t\t.getExportsInfo(importedModule)\n\t\t\t\t\t\t\t\t.getUsedName(exportName, runtime);\n\t\t\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\t\t\tinitParams.push(\n\t\t\t\t\t\t\t\t\truntimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\t\t\tmodule: importedModule,\n\t\t\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\t\t\tcallContext: null,\n\t\t\t\t\t\t\t\t\t\tdefaultInterop: true,\n\t\t\t\t\t\t\t\t\t\tinitFragments,\n\t\t\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dep instanceof WebAssemblyExportImportedDependency) {\n\t\t\t\t\timportData.names.add(dep.name);\n\t\t\t\t\tconst usedName = moduleGraph\n\t\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t\t.getUsedName(dep.exportName, runtime);\n\t\t\t\t\tif (usedName) {\n\t\t\t\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\t\t\t\tconst exportProp = `${module.exportsArgument}[${JSON.stringify(\n\t\t\t\t\t\t\tusedName\n\t\t\t\t\t\t)}]`;\n\t\t\t\t\t\tconst defineStatement = Template.asString([\n\t\t\t\t\t\t\t`${exportProp} = ${runtimeTemplate.exportFromImport({\n\t\t\t\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\t\t\t\trequest: dep.request,\n\t\t\t\t\t\t\t\timportVar: importData.importVar,\n\t\t\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\t\t\texportName: dep.name,\n\t\t\t\t\t\t\t\tasiSafe: true,\n\t\t\t\t\t\t\t\tisCall: false,\n\t\t\t\t\t\t\t\tcallContext: null,\n\t\t\t\t\t\t\t\tdefaultInterop: true,\n\t\t\t\t\t\t\t\tinitFragments,\n\t\t\t\t\t\t\t\truntime,\n\t\t\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t\t\t})};`,\n\t\t\t\t\t\t\t`if(WebAssembly.Global) ${exportProp} = ` +\n\t\t\t\t\t\t\t\t`new WebAssembly.Global({ value: ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tdep.valueType\n\t\t\t\t\t\t\t\t)} }, ${exportProp});`\n\t\t\t\t\t\t]);\n\t\t\t\t\t\timportData.reexports.push(defineStatement);\n\t\t\t\t\t\tneedExportsCopy = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst importsCode = Template.asString(\n\t\t\tArray.from(\n\t\t\t\timportedModules,\n\t\t\t\t([module, { importVar, request, reexports }]) => {\n\t\t\t\t\tconst importStatement = runtimeTemplate.importStatement({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tchunkGraph,\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\toriginModule: module,\n\t\t\t\t\t\truntimeRequirements\n\t\t\t\t\t});\n\t\t\t\t\treturn importStatement[0] + importStatement[1] + reexports.join(\"\\n\");\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\n\t\tconst copyAllExports =\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused &&\n\t\t\t!needExportsCopy;\n\n\t\t// need these globals\n\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\truntimeRequirements.add(RuntimeGlobals.moduleId);\n\t\truntimeRequirements.add(RuntimeGlobals.wasmInstances);\n\t\tif (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.makeNamespaceObject);\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t}\n\t\tif (!copyAllExports) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t}\n\n\t\t// create source\n\t\tconst source = new RawSource(\n\t\t\t[\n\t\t\t\t'\"use strict\";',\n\t\t\t\t\"// Instantiate WebAssembly module\",\n\t\t\t\t`var wasmExports = ${RuntimeGlobals.wasmInstances}[${module.moduleArgument}.id];`,\n\n\t\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused\n\t\t\t\t\t? `${RuntimeGlobals.makeNamespaceObject}(${module.exportsArgument});`\n\t\t\t\t\t: \"\",\n\n\t\t\t\t// this must be before import for circular dependencies\n\t\t\t\t\"// export exports from WebAssembly module\",\n\t\t\t\tcopyAllExports\n\t\t\t\t\t? `${module.moduleArgument}.exports = wasmExports;`\n\t\t\t\t\t: \"for(var name in wasmExports) \" +\n\t\t\t\t\t  `if(name) ` +\n\t\t\t\t\t  `${module.exportsArgument}[name] = wasmExports[name];`,\n\t\t\t\t\"// exec imports from WebAssembly module (for esm order)\",\n\t\t\t\timportsCode,\n\t\t\t\t\"\",\n\t\t\t\t\"// exec wasm module\",\n\t\t\t\t`wasmExports[\"\"](${initParams.join(\", \")})`\n\t\t\t].join(\"\\n\")\n\t\t);\n\t\treturn InitFragment.addToSource(source, initFragments, generateContext);\n\t}\n}\n\nmodule.exports = WebAssemblyJavascriptGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}