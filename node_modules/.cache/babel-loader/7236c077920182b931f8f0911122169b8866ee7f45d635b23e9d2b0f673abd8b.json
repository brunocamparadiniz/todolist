{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\n/** @typedef {Record<string, any>} PreparsedAst */\n\n/**\n * @typedef {Object} ParserStateBase\n * @property {string | Buffer} source\n * @property {NormalModule} current\n * @property {NormalModule} module\n * @property {Compilation} compilation\n * @property {{[k: string]: any}} options\n */\n\n/** @typedef {Record<string, any> & ParserStateBase} ParserState */\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n  }\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: /* istanbul ignore next */\n    /**\n     * @abstract\n     * @param {string | Buffer | PreparsedAst} source the source to parse\n     * @param {ParserState} state the parser state\n     * @returns {ParserState} the parser state\n     */\n    function parse(source, state) {\n      var AbstractMethodError = require(\"./AbstractMethodError\");\n      throw new AbstractMethodError();\n    }\n  }]);\n  return Parser;\n}();\nmodule.exports = Parser;","map":{"version":3,"names":["Parser","source","state","AbstractMethodError","require","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/Parser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./NormalModule\")} NormalModule */\n\n/** @typedef {Record<string, any>} PreparsedAst */\n\n/**\n * @typedef {Object} ParserStateBase\n * @property {string | Buffer} source\n * @property {NormalModule} current\n * @property {NormalModule} module\n * @property {Compilation} compilation\n * @property {{[k: string]: any}} options\n */\n\n/** @typedef {Record<string, any> & ParserStateBase} ParserState */\n\nclass Parser {\n\t/* istanbul ignore next */\n\t/**\n\t * @abstract\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tconst AbstractMethodError = require(\"./AbstractMethodError\");\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nmodule.exports = Parser;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA,IAEMA,MAAM;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACX;IACA;AACD;AACA;AACA;AACA;AACA;IACC,eAAMC,MAAM,EAAEC,KAAK,EAAE;MACpB,IAAMC,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;MAC5D,MAAM,IAAID,mBAAmB,EAAE;IAChC;EAAC;EAAA;AAAA;AAGFE,MAAM,CAACC,OAAO,GAAGN,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}