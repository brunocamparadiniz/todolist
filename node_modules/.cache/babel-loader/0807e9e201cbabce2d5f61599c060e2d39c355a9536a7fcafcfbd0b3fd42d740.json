{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar SetObjectSerializer = /*#__PURE__*/function () {\n  function SetObjectSerializer() {\n    _classCallCheck(this, SetObjectSerializer);\n  }\n  _createClass(SetObjectSerializer, [{\n    key: \"serialize\",\n    value: function serialize(obj, _ref) {\n      var write = _ref.write;\n      write(obj.size);\n      var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n          write(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(_ref2) {\n      var read = _ref2.read;\n      var size = read();\n      var set = new Set();\n      for (var i = 0; i < size; i++) {\n        set.add(read());\n      }\n      return set;\n    }\n  }]);\n  return SetObjectSerializer;\n}();\nmodule.exports = SetObjectSerializer;","map":{"version":3,"names":["SetObjectSerializer","obj","write","size","value","read","set","Set","i","add","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/serialization/SetObjectSerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nclass SetObjectSerializer {\n\tserialize(obj, { write }) {\n\t\twrite(obj.size);\n\t\tfor (const value of obj) {\n\t\t\twrite(value);\n\t\t}\n\t}\n\tdeserialize({ read }) {\n\t\tlet size = read();\n\t\tconst set = new Set();\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tset.add(read());\n\t\t}\n\t\treturn set;\n\t}\n}\n\nmodule.exports = SetObjectSerializer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA,IAEPA,mBAAmB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACxB,mBAAUC,GAAG,QAAa;MAAA,IAATC,KAAK,QAALA,KAAK;MACrBA,KAAK,CAACD,GAAG,CAACE,IAAI,CAAC;MAAC,2CACIF,GAAG;QAAA;MAAA;QAAvB,oDAAyB;UAAA,IAAdG,KAAK;UACfF,KAAK,CAACE,KAAK,CAAC;QACb;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OACD,4BAAsB;MAAA,IAARC,IAAI,SAAJA,IAAI;MACjB,IAAIF,IAAI,GAAGE,IAAI,EAAE;MACjB,IAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;MACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,EAAEK,CAAC,EAAE,EAAE;QAC9BF,GAAG,CAACG,GAAG,CAACJ,IAAI,EAAE,CAAC;MAChB;MACA,OAAOC,GAAG;IACX;EAAC;EAAA;AAAA;AAGFI,MAAM,CAACC,OAAO,GAAGX,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}