{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n\n/**\n * @param {InitFragment} fragment the init fragment\n * @param {number} index index\n * @returns {[InitFragment, number]} tuple with both\n */\nvar extractFragmentIndex = function extractFragmentIndex(fragment, index) {\n  return [fragment, index];\n};\n\n/**\n * @param {[InitFragment, number]} a first pair\n * @param {[InitFragment, number]} b second pair\n * @returns {number} sort value\n */\nvar sortFragmentWithIndex = function sortFragmentWithIndex(_ref, _ref2) {\n  var _ref3 = _slicedToArray(_ref, 2),\n    a = _ref3[0],\n    i = _ref3[1];\n  var _ref4 = _slicedToArray(_ref2, 2),\n    b = _ref4[0],\n    j = _ref4[1];\n  var stageCmp = a.stage - b.stage;\n  if (stageCmp !== 0) return stageCmp;\n  var positionCmp = a.position - b.position;\n  if (positionCmp !== 0) return positionCmp;\n  return i - j;\n};\n\n/**\n * @template Context\n */\nvar InitFragment = /*#__PURE__*/function () {\n  /**\n   * @param {string|Source} content the source code that will be included as initialization code\n   * @param {number} stage category of initialization code (contribute to order)\n   * @param {number} position position in the category (contribute to order)\n   * @param {string=} key unique key to avoid emitting the same initialization code twice\n   * @param {string|Source=} endContent the source code that will be included at the end of the module\n   */\n  function InitFragment(content, stage, position, key, endContent) {\n    _classCallCheck(this, InitFragment);\n    this.content = content;\n    this.stage = stage;\n    this.position = position;\n    this.key = key;\n    this.endContent = endContent;\n  }\n\n  /**\n   * @param {Context} context context\n   * @returns {string|Source} the source code that will be included as initialization code\n   */\n  _createClass(InitFragment, [{\n    key: \"getContent\",\n    value: function getContent(context) {\n      return this.content;\n    }\n\n    /**\n     * @param {Context} context context\n     * @returns {string|Source=} the source code that will be included at the end of the module\n     */\n  }, {\n    key: \"getEndContent\",\n    value: function getEndContent(context) {\n      return this.endContent;\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.content);\n      write(this.stage);\n      write(this.position);\n      write(this.key);\n      write(this.endContent);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.content = read();\n      this.stage = read();\n      this.position = read();\n      this.key = read();\n      this.endContent = read();\n    }\n  }], [{\n    key: \"addToSource\",\n    value: function addToSource(source, initFragments, context) {\n      if (initFragments.length > 0) {\n        // Sort fragments by position. If 2 fragments have the same position,\n        // use their index.\n        var sortedFragments = initFragments.map(extractFragmentIndex).sort(sortFragmentWithIndex);\n\n        // Deduplicate fragments. If a fragment has no key, it is always included.\n        var keyedFragments = new Map();\n        var _iterator = _createForOfIteratorHelper(sortedFragments),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 1),\n              fragment = _step$value[0];\n            if (typeof fragment.mergeAll === \"function\") {\n              if (!fragment.key) {\n                throw new Error(\"InitFragment with mergeAll function must have a valid key: \".concat(fragment.constructor.name));\n              }\n              var oldValue = keyedFragments.get(fragment.key);\n              if (oldValue === undefined) {\n                keyedFragments.set(fragment.key, fragment);\n              } else if (Array.isArray(oldValue)) {\n                oldValue.push(fragment);\n              } else {\n                keyedFragments.set(fragment.key, [oldValue, fragment]);\n              }\n              continue;\n            } else if (typeof fragment.merge === \"function\") {\n              var _oldValue = keyedFragments.get(fragment.key);\n              if (_oldValue !== undefined) {\n                keyedFragments.set(fragment.key, fragment.merge(_oldValue));\n                continue;\n              }\n            }\n            keyedFragments.set(fragment.key || Symbol(), fragment);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var concatSource = new ConcatSource();\n        var endContents = [];\n        var _iterator2 = _createForOfIteratorHelper(keyedFragments.values()),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _fragment = _step2.value;\n            if (Array.isArray(_fragment)) {\n              _fragment = _fragment[0].mergeAll(_fragment);\n            }\n            concatSource.add(_fragment.getContent(context));\n            var endContent = _fragment.getEndContent(context);\n            if (endContent) {\n              endContents.push(endContent);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        concatSource.add(source);\n        var _iterator3 = _createForOfIteratorHelper(endContents.reverse()),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var content = _step3.value;\n            concatSource.add(content);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n        return concatSource;\n      } else {\n        return source;\n      }\n    }\n  }]);\n  return InitFragment;\n}();\nmakeSerializable(InitFragment, \"webpack/lib/InitFragment\");\nInitFragment.prototype.merge = undefined;\nInitFragment.STAGE_CONSTANTS = 10;\nInitFragment.STAGE_ASYNC_BOUNDARY = 20;\nInitFragment.STAGE_HARMONY_EXPORTS = 30;\nInitFragment.STAGE_HARMONY_IMPORTS = 40;\nInitFragment.STAGE_PROVIDES = 50;\nInitFragment.STAGE_ASYNC_DEPENDENCIES = 60;\nInitFragment.STAGE_ASYNC_HARMONY_IMPORTS = 70;\nmodule.exports = InitFragment;","map":{"version":3,"names":["require","ConcatSource","makeSerializable","extractFragmentIndex","fragment","index","sortFragmentWithIndex","a","i","b","j","stageCmp","stage","positionCmp","position","InitFragment","content","key","endContent","context","write","read","source","initFragments","length","sortedFragments","map","sort","keyedFragments","Map","mergeAll","Error","constructor","name","oldValue","get","undefined","set","Array","isArray","push","merge","Symbol","concatSource","endContents","values","add","getContent","getEndContent","reverse","prototype","STAGE_CONSTANTS","STAGE_ASYNC_BOUNDARY","STAGE_HARMONY_EXPORTS","STAGE_HARMONY_IMPORTS","STAGE_PROVIDES","STAGE_ASYNC_DEPENDENCIES","STAGE_ASYNC_HARMONY_IMPORTS","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/InitFragment.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"./Generator\").GenerateContext} GenerateContext */\n\n/**\n * @param {InitFragment} fragment the init fragment\n * @param {number} index index\n * @returns {[InitFragment, number]} tuple with both\n */\nconst extractFragmentIndex = (fragment, index) => [fragment, index];\n\n/**\n * @param {[InitFragment, number]} a first pair\n * @param {[InitFragment, number]} b second pair\n * @returns {number} sort value\n */\nconst sortFragmentWithIndex = ([a, i], [b, j]) => {\n\tconst stageCmp = a.stage - b.stage;\n\tif (stageCmp !== 0) return stageCmp;\n\tconst positionCmp = a.position - b.position;\n\tif (positionCmp !== 0) return positionCmp;\n\treturn i - j;\n};\n\n/**\n * @template Context\n */\nclass InitFragment {\n\t/**\n\t * @param {string|Source} content the source code that will be included as initialization code\n\t * @param {number} stage category of initialization code (contribute to order)\n\t * @param {number} position position in the category (contribute to order)\n\t * @param {string=} key unique key to avoid emitting the same initialization code twice\n\t * @param {string|Source=} endContent the source code that will be included at the end of the module\n\t */\n\tconstructor(content, stage, position, key, endContent) {\n\t\tthis.content = content;\n\t\tthis.stage = stage;\n\t\tthis.position = position;\n\t\tthis.key = key;\n\t\tthis.endContent = endContent;\n\t}\n\n\t/**\n\t * @param {Context} context context\n\t * @returns {string|Source} the source code that will be included as initialization code\n\t */\n\tgetContent(context) {\n\t\treturn this.content;\n\t}\n\n\t/**\n\t * @param {Context} context context\n\t * @returns {string|Source=} the source code that will be included at the end of the module\n\t */\n\tgetEndContent(context) {\n\t\treturn this.endContent;\n\t}\n\n\tstatic addToSource(source, initFragments, context) {\n\t\tif (initFragments.length > 0) {\n\t\t\t// Sort fragments by position. If 2 fragments have the same position,\n\t\t\t// use their index.\n\t\t\tconst sortedFragments = initFragments\n\t\t\t\t.map(extractFragmentIndex)\n\t\t\t\t.sort(sortFragmentWithIndex);\n\n\t\t\t// Deduplicate fragments. If a fragment has no key, it is always included.\n\t\t\tconst keyedFragments = new Map();\n\t\t\tfor (const [fragment] of sortedFragments) {\n\t\t\t\tif (typeof fragment.mergeAll === \"function\") {\n\t\t\t\t\tif (!fragment.key) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`InitFragment with mergeAll function must have a valid key: ${fragment.constructor.name}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst oldValue = keyedFragments.get(fragment.key);\n\t\t\t\t\tif (oldValue === undefined) {\n\t\t\t\t\t\tkeyedFragments.set(fragment.key, fragment);\n\t\t\t\t\t} else if (Array.isArray(oldValue)) {\n\t\t\t\t\t\toldValue.push(fragment);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeyedFragments.set(fragment.key, [oldValue, fragment]);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (typeof fragment.merge === \"function\") {\n\t\t\t\t\tconst oldValue = keyedFragments.get(fragment.key);\n\t\t\t\t\tif (oldValue !== undefined) {\n\t\t\t\t\t\tkeyedFragments.set(fragment.key, fragment.merge(oldValue));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tkeyedFragments.set(fragment.key || Symbol(), fragment);\n\t\t\t}\n\n\t\t\tconst concatSource = new ConcatSource();\n\t\t\tconst endContents = [];\n\t\t\tfor (let fragment of keyedFragments.values()) {\n\t\t\t\tif (Array.isArray(fragment)) {\n\t\t\t\t\tfragment = fragment[0].mergeAll(fragment);\n\t\t\t\t}\n\t\t\t\tconcatSource.add(fragment.getContent(context));\n\t\t\t\tconst endContent = fragment.getEndContent(context);\n\t\t\t\tif (endContent) {\n\t\t\t\t\tendContents.push(endContent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconcatSource.add(source);\n\t\t\tfor (const content of endContents.reverse()) {\n\t\t\t\tconcatSource.add(content);\n\t\t\t}\n\t\t\treturn concatSource;\n\t\t} else {\n\t\t\treturn source;\n\t\t}\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.content);\n\t\twrite(this.stage);\n\t\twrite(this.position);\n\t\twrite(this.key);\n\t\twrite(this.endContent);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.content = read();\n\t\tthis.stage = read();\n\t\tthis.position = read();\n\t\tthis.key = read();\n\t\tthis.endContent = read();\n\t}\n}\n\nmakeSerializable(InitFragment, \"webpack/lib/InitFragment\");\n\nInitFragment.prototype.merge = undefined;\n\nInitFragment.STAGE_CONSTANTS = 10;\nInitFragment.STAGE_ASYNC_BOUNDARY = 20;\nInitFragment.STAGE_HARMONY_EXPORTS = 30;\nInitFragment.STAGE_HARMONY_IMPORTS = 40;\nInitFragment.STAGE_PROVIDES = 50;\nInitFragment.STAGE_ASYNC_DEPENDENCIES = 60;\nInitFragment.STAGE_ASYNC_HARMONY_IMPORTS = 70;\n\nmodule.exports = InitFragment;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}