{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"../OptimizationStages\"),\n  STAGE_ADVANCED = _require.STAGE_ADVANCED;\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/MinChunkSizePlugin\").MinChunkSizePluginOptions} MinChunkSizePluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.json\");\n}, {\n  name: \"Min Chunk Size Plugin\",\n  baseDataPath: \"options\"\n});\nvar MinChunkSizePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {MinChunkSizePluginOptions} options options object\n   */\n  function MinChunkSizePlugin(options) {\n    _classCallCheck(this, MinChunkSizePlugin);\n    validate(options);\n    this.options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(MinChunkSizePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      var minChunkSize = options.minChunkSize;\n      compiler.hooks.compilation.tap(\"MinChunkSizePlugin\", function (compilation) {\n        compilation.hooks.optimizeChunks.tap({\n          name: \"MinChunkSizePlugin\",\n          stage: STAGE_ADVANCED\n        }, function (chunks) {\n          var chunkGraph = compilation.chunkGraph;\n          var equalOptions = {\n            chunkOverhead: 1,\n            entryChunkMultiplicator: 1\n          };\n          var chunkSizesMap = new Map();\n          /** @type {[Chunk, Chunk][]} */\n          var combinations = [];\n          /** @type {Chunk[]} */\n          var smallChunks = [];\n          var visitedChunks = [];\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var a = _step.value;\n              // check if one of the chunks sizes is smaller than the minChunkSize\n              // and filter pairs that can NOT be integrated!\n              if (chunkGraph.getChunkSize(a, equalOptions) < minChunkSize) {\n                smallChunks.push(a);\n                var _iterator2 = _createForOfIteratorHelper(visitedChunks),\n                  _step2;\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var b = _step2.value;\n                    if (chunkGraph.canChunksBeIntegrated(b, a)) combinations.push([b, a]);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n              } else {\n                var _iterator3 = _createForOfIteratorHelper(smallChunks),\n                  _step3;\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var _b = _step3.value;\n                    if (chunkGraph.canChunksBeIntegrated(_b, a)) combinations.push([_b, a]);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n              }\n              chunkSizesMap.set(a, chunkGraph.getChunkSize(a, options));\n              visitedChunks.push(a);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var sortedSizeFilteredExtendedPairCombinations = combinations.map(function (pair) {\n            // extend combination pairs with size and integrated size\n            var a = chunkSizesMap.get(pair[0]);\n            var b = chunkSizesMap.get(pair[1]);\n            var ab = chunkGraph.getIntegratedChunksSize(pair[0], pair[1], options);\n            /** @type {[number, number, Chunk, Chunk]} */\n            var extendedPair = [a + b - ab, ab, pair[0], pair[1]];\n            return extendedPair;\n          }).sort(function (a, b) {\n            // sadly javascript does an in place sort here\n            // sort by size\n            var diff = b[0] - a[0];\n            if (diff !== 0) return diff;\n            return a[1] - b[1];\n          });\n          if (sortedSizeFilteredExtendedPairCombinations.length === 0) return;\n          var pair = sortedSizeFilteredExtendedPairCombinations[0];\n          chunkGraph.integrateChunks(pair[2], pair[3]);\n          compilation.chunks.delete(pair[3]);\n          return true;\n        });\n      });\n    }\n  }]);\n  return MinChunkSizePlugin;\n}();\nmodule.exports = MinChunkSizePlugin;","map":{"version":3,"names":["require","STAGE_ADVANCED","createSchemaValidation","validate","name","baseDataPath","MinChunkSizePlugin","options","compiler","minChunkSize","hooks","compilation","tap","optimizeChunks","stage","chunks","chunkGraph","equalOptions","chunkOverhead","entryChunkMultiplicator","chunkSizesMap","Map","combinations","smallChunks","visitedChunks","a","getChunkSize","push","b","canChunksBeIntegrated","set","sortedSizeFilteredExtendedPairCombinations","map","pair","get","ab","getIntegratedChunksSize","extendedPair","sort","diff","length","integrateChunks","delete","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/optimize/MinChunkSizePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { STAGE_ADVANCED } = require(\"../OptimizationStages\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/MinChunkSizePlugin\").MinChunkSizePluginOptions} MinChunkSizePluginOptions */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/optimize/MinChunkSizePlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/optimize/MinChunkSizePlugin.json\"),\n\t{\n\t\tname: \"Min Chunk Size Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass MinChunkSizePlugin {\n\t/**\n\t * @param {MinChunkSizePluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tconst minChunkSize = options.minChunkSize;\n\t\tcompiler.hooks.compilation.tap(\"MinChunkSizePlugin\", compilation => {\n\t\t\tcompilation.hooks.optimizeChunks.tap(\n\t\t\t\t{\n\t\t\t\t\tname: \"MinChunkSizePlugin\",\n\t\t\t\t\tstage: STAGE_ADVANCED\n\t\t\t\t},\n\t\t\t\tchunks => {\n\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\tconst equalOptions = {\n\t\t\t\t\t\tchunkOverhead: 1,\n\t\t\t\t\t\tentryChunkMultiplicator: 1\n\t\t\t\t\t};\n\n\t\t\t\t\tconst chunkSizesMap = new Map();\n\t\t\t\t\t/** @type {[Chunk, Chunk][]} */\n\t\t\t\t\tconst combinations = [];\n\t\t\t\t\t/** @type {Chunk[]} */\n\t\t\t\t\tconst smallChunks = [];\n\t\t\t\t\tconst visitedChunks = [];\n\t\t\t\t\tfor (const a of chunks) {\n\t\t\t\t\t\t// check if one of the chunks sizes is smaller than the minChunkSize\n\t\t\t\t\t\t// and filter pairs that can NOT be integrated!\n\t\t\t\t\t\tif (chunkGraph.getChunkSize(a, equalOptions) < minChunkSize) {\n\t\t\t\t\t\t\tsmallChunks.push(a);\n\t\t\t\t\t\t\tfor (const b of visitedChunks) {\n\t\t\t\t\t\t\t\tif (chunkGraph.canChunksBeIntegrated(b, a))\n\t\t\t\t\t\t\t\t\tcombinations.push([b, a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (const b of smallChunks) {\n\t\t\t\t\t\t\t\tif (chunkGraph.canChunksBeIntegrated(b, a))\n\t\t\t\t\t\t\t\t\tcombinations.push([b, a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchunkSizesMap.set(a, chunkGraph.getChunkSize(a, options));\n\t\t\t\t\t\tvisitedChunks.push(a);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sortedSizeFilteredExtendedPairCombinations = combinations\n\t\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\t\t// extend combination pairs with size and integrated size\n\t\t\t\t\t\t\tconst a = chunkSizesMap.get(pair[0]);\n\t\t\t\t\t\t\tconst b = chunkSizesMap.get(pair[1]);\n\t\t\t\t\t\t\tconst ab = chunkGraph.getIntegratedChunksSize(\n\t\t\t\t\t\t\t\tpair[0],\n\t\t\t\t\t\t\t\tpair[1],\n\t\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t/** @type {[number, number, Chunk, Chunk]} */\n\t\t\t\t\t\t\tconst extendedPair = [a + b - ab, ab, pair[0], pair[1]];\n\t\t\t\t\t\t\treturn extendedPair;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t// sadly javascript does an in place sort here\n\t\t\t\t\t\t\t// sort by size\n\t\t\t\t\t\t\tconst diff = b[0] - a[0];\n\t\t\t\t\t\t\tif (diff !== 0) return diff;\n\t\t\t\t\t\t\treturn a[1] - b[1];\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (sortedSizeFilteredExtendedPairCombinations.length === 0) return;\n\n\t\t\t\t\tconst pair = sortedSizeFilteredExtendedPairCombinations[0];\n\n\t\t\t\t\tchunkGraph.integrateChunks(pair[2], pair[3]);\n\t\t\t\t\tcompilation.chunks.delete(pair[3]);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = MinChunkSizePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}