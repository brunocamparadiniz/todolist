{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Compiler = require(\"./Compiler\");\nvar MultiCompiler = require(\"./MultiCompiler\");\nvar NormalModule = require(\"./NormalModule\");\nvar createSchemaValidation = require(\"./util/create-schema-validation\");\nvar _require = require(\"./util/identifier\"),\n  contextify = _require.contextify;\n\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").HandlerFunction} HandlerFunction */\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginArgument} ProgressPluginArgument */\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginOptions} ProgressPluginOptions */\n\nvar validate = createSchemaValidation(require(\"../schemas/plugins/ProgressPlugin.check.js\"), function () {\n  return require(\"../schemas/plugins/ProgressPlugin.json\");\n}, {\n  name: \"Progress Plugin\",\n  baseDataPath: \"options\"\n});\nvar median3 = function median3(a, b, c) {\n  return a + b + c - Math.max(a, b, c) - Math.min(a, b, c);\n};\nvar createDefaultHandler = function createDefaultHandler(profile, logger) {\n  /** @type {{ value: string, time: number }[]} */\n  var lastStateInfo = [];\n  var defaultHandler = function defaultHandler(percentage, msg) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    if (profile) {\n      if (percentage === 0) {\n        lastStateInfo.length = 0;\n      }\n      var fullState = [msg].concat(args);\n      var state = fullState.map(function (s) {\n        return s.replace(/\\d+\\/\\d+ /g, \"\");\n      });\n      var now = Date.now();\n      var len = Math.max(state.length, lastStateInfo.length);\n      for (var i = len; i >= 0; i--) {\n        var stateItem = i < state.length ? state[i] : undefined;\n        var lastStateItem = i < lastStateInfo.length ? lastStateInfo[i] : undefined;\n        if (lastStateItem) {\n          if (stateItem !== lastStateItem.value) {\n            var diff = now - lastStateItem.time;\n            if (lastStateItem.value) {\n              var reportState = lastStateItem.value;\n              if (i > 0) {\n                reportState = lastStateInfo[i - 1].value + \" > \" + reportState;\n              }\n              var stateMsg = \"\".concat(\" | \".repeat(i)).concat(diff, \" ms \").concat(reportState);\n              var d = diff;\n              // This depends on timing so we ignore it for coverage\n              /* istanbul ignore next */\n              {\n                if (d > 10000) {\n                  logger.error(stateMsg);\n                } else if (d > 1000) {\n                  logger.warn(stateMsg);\n                } else if (d > 10) {\n                  logger.info(stateMsg);\n                } else if (d > 5) {\n                  logger.log(stateMsg);\n                } else {\n                  logger.debug(stateMsg);\n                }\n              }\n            }\n            if (stateItem === undefined) {\n              lastStateInfo.length = i;\n            } else {\n              lastStateItem.value = stateItem;\n              lastStateItem.time = now;\n              lastStateInfo.length = i + 1;\n            }\n          }\n        } else {\n          lastStateInfo[i] = {\n            value: stateItem,\n            time: now\n          };\n        }\n      }\n    }\n    logger.status.apply(logger, [\"\".concat(Math.floor(percentage * 100), \"%\"), msg].concat(args));\n    if (percentage === 1 || !msg && args.length === 0) logger.status();\n  };\n  return defaultHandler;\n};\n\n/**\n * @callback ReportProgress\n * @param {number} p\n * @param {...string} [args]\n * @returns {void}\n */\n\n/** @type {WeakMap<Compiler,ReportProgress>} */\nvar progressReporters = new WeakMap();\nvar ProgressPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {ProgressPluginArgument} options options\n   */\n  function ProgressPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ProgressPlugin);\n    if (typeof options === \"function\") {\n      options = {\n        handler: options\n      };\n    }\n    validate(options);\n    options = _objectSpread(_objectSpread({}, ProgressPlugin.defaultOptions), options);\n    this.profile = options.profile;\n    this.handler = options.handler;\n    this.modulesCount = options.modulesCount;\n    this.dependenciesCount = options.dependenciesCount;\n    this.showEntries = options.entries;\n    this.showModules = options.modules;\n    this.showDependencies = options.dependencies;\n    this.showActiveModules = options.activeModules;\n    this.percentBy = options.percentBy;\n  }\n\n  /**\n   * @param {Compiler | MultiCompiler} compiler webpack compiler\n   * @returns {void}\n   */\n  _createClass(ProgressPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var handler = this.handler || createDefaultHandler(this.profile, compiler.getInfrastructureLogger(\"webpack.Progress\"));\n      if (compiler instanceof MultiCompiler) {\n        this._applyOnMultiCompiler(compiler, handler);\n      } else if (compiler instanceof Compiler) {\n        this._applyOnCompiler(compiler, handler);\n      }\n    }\n\n    /**\n     * @param {MultiCompiler} compiler webpack multi-compiler\n     * @param {HandlerFunction} handler function that executes for every progress step\n     * @returns {void}\n     */\n  }, {\n    key: \"_applyOnMultiCompiler\",\n    value: function _applyOnMultiCompiler(compiler, handler) {\n      var states = compiler.compilers.map(function () {\n        return (/** @type {[number, ...string[]]} */[0]\n        );\n      });\n      compiler.compilers.forEach(function (compiler, idx) {\n        new ProgressPlugin(function (p, msg) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n          states[idx] = [p, msg].concat(args);\n          var sum = 0;\n          var _iterator = _createForOfIteratorHelper(states),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _slicedToArray(_step.value, 1),\n                _p = _step$value[0];\n              sum += _p;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          handler.apply(void 0, [sum / states.length, \"[\".concat(idx, \"] \").concat(msg)].concat(args));\n        }).apply(compiler);\n      });\n    }\n\n    /**\n     * @param {Compiler} compiler webpack compiler\n     * @param {HandlerFunction} handler function that executes for every progress step\n     * @returns {void}\n     */\n  }, {\n    key: \"_applyOnCompiler\",\n    value: function _applyOnCompiler(compiler, handler) {\n      var _this = this;\n      var showEntries = this.showEntries;\n      var showModules = this.showModules;\n      var showDependencies = this.showDependencies;\n      var showActiveModules = this.showActiveModules;\n      var lastActiveModule = \"\";\n      var currentLoader = \"\";\n      var lastModulesCount = 0;\n      var lastDependenciesCount = 0;\n      var lastEntriesCount = 0;\n      var modulesCount = 0;\n      var dependenciesCount = 0;\n      var entriesCount = 1;\n      var doneModules = 0;\n      var doneDependencies = 0;\n      var doneEntries = 0;\n      var activeModules = new Set();\n      var lastUpdate = 0;\n      var updateThrottled = function updateThrottled() {\n        if (lastUpdate + 500 < Date.now()) update();\n      };\n      var update = function update() {\n        /** @type {string[]} */\n        var items = [];\n        var percentByModules = doneModules / Math.max(lastModulesCount || _this.modulesCount || 1, modulesCount);\n        var percentByEntries = doneEntries / Math.max(lastEntriesCount || _this.dependenciesCount || 1, entriesCount);\n        var percentByDependencies = doneDependencies / Math.max(lastDependenciesCount || 1, dependenciesCount);\n        var percentageFactor;\n        switch (_this.percentBy) {\n          case \"entries\":\n            percentageFactor = percentByEntries;\n            break;\n          case \"dependencies\":\n            percentageFactor = percentByDependencies;\n            break;\n          case \"modules\":\n            percentageFactor = percentByModules;\n            break;\n          default:\n            percentageFactor = median3(percentByModules, percentByEntries, percentByDependencies);\n        }\n        var percentage = 0.1 + percentageFactor * 0.55;\n        if (currentLoader) {\n          items.push(\"import loader \".concat(contextify(compiler.context, currentLoader, compiler.root)));\n        } else {\n          var statItems = [];\n          if (showEntries) {\n            statItems.push(\"\".concat(doneEntries, \"/\").concat(entriesCount, \" entries\"));\n          }\n          if (showDependencies) {\n            statItems.push(\"\".concat(doneDependencies, \"/\").concat(dependenciesCount, \" dependencies\"));\n          }\n          if (showModules) {\n            statItems.push(\"\".concat(doneModules, \"/\").concat(modulesCount, \" modules\"));\n          }\n          if (showActiveModules) {\n            statItems.push(\"\".concat(activeModules.size, \" active\"));\n          }\n          if (statItems.length > 0) {\n            items.push(statItems.join(\" \"));\n          }\n          if (showActiveModules) {\n            items.push(lastActiveModule);\n          }\n        }\n        handler.apply(void 0, [percentage, \"building\"].concat(items));\n        lastUpdate = Date.now();\n      };\n      var factorizeAdd = function factorizeAdd() {\n        dependenciesCount++;\n        if (dependenciesCount < 50 || dependenciesCount % 100 === 0) updateThrottled();\n      };\n      var factorizeDone = function factorizeDone() {\n        doneDependencies++;\n        if (doneDependencies < 50 || doneDependencies % 100 === 0) updateThrottled();\n      };\n      var moduleAdd = function moduleAdd() {\n        modulesCount++;\n        if (modulesCount < 50 || modulesCount % 100 === 0) updateThrottled();\n      };\n\n      // only used when showActiveModules is set\n      var moduleBuild = function moduleBuild(module) {\n        var ident = module.identifier();\n        if (ident) {\n          activeModules.add(ident);\n          lastActiveModule = ident;\n          update();\n        }\n      };\n      var entryAdd = function entryAdd(entry, options) {\n        entriesCount++;\n        if (entriesCount < 5 || entriesCount % 10 === 0) updateThrottled();\n      };\n      var moduleDone = function moduleDone(module) {\n        doneModules++;\n        if (showActiveModules) {\n          var ident = module.identifier();\n          if (ident) {\n            activeModules.delete(ident);\n            if (lastActiveModule === ident) {\n              lastActiveModule = \"\";\n              var _iterator2 = _createForOfIteratorHelper(activeModules),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var m = _step2.value;\n                  lastActiveModule = m;\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              update();\n              return;\n            }\n          }\n        }\n        if (doneModules < 50 || doneModules % 100 === 0) updateThrottled();\n      };\n      var entryDone = function entryDone(entry, options) {\n        doneEntries++;\n        update();\n      };\n      var cache = compiler.getCache(\"ProgressPlugin\").getItemCache(\"counts\", null);\n      var cacheGetPromise;\n      compiler.hooks.beforeCompile.tap(\"ProgressPlugin\", function () {\n        if (!cacheGetPromise) {\n          cacheGetPromise = cache.getPromise().then(function (data) {\n            if (data) {\n              lastModulesCount = lastModulesCount || data.modulesCount;\n              lastDependenciesCount = lastDependenciesCount || data.dependenciesCount;\n            }\n            return data;\n          }, function (err) {\n            // Ignore error\n          });\n        }\n      });\n      compiler.hooks.afterCompile.tapPromise(\"ProgressPlugin\", function (compilation) {\n        if (compilation.compiler.isChild()) return Promise.resolve();\n        return cacheGetPromise.then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oldData) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(!oldData || oldData.modulesCount !== modulesCount || oldData.dependenciesCount !== dependenciesCount)) {\n                    _context.next = 3;\n                    break;\n                  }\n                  _context.next = 3;\n                  return cache.storePromise({\n                    modulesCount: modulesCount,\n                    dependenciesCount: dependenciesCount\n                  });\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      });\n      compiler.hooks.compilation.tap(\"ProgressPlugin\", function (compilation) {\n        if (compilation.compiler.isChild()) return;\n        lastModulesCount = modulesCount;\n        lastEntriesCount = entriesCount;\n        lastDependenciesCount = dependenciesCount;\n        modulesCount = dependenciesCount = entriesCount = 0;\n        doneModules = doneDependencies = doneEntries = 0;\n        compilation.factorizeQueue.hooks.added.tap(\"ProgressPlugin\", factorizeAdd);\n        compilation.factorizeQueue.hooks.result.tap(\"ProgressPlugin\", factorizeDone);\n        compilation.addModuleQueue.hooks.added.tap(\"ProgressPlugin\", moduleAdd);\n        compilation.processDependenciesQueue.hooks.result.tap(\"ProgressPlugin\", moduleDone);\n        if (showActiveModules) {\n          compilation.hooks.buildModule.tap(\"ProgressPlugin\", moduleBuild);\n        }\n        compilation.hooks.addEntry.tap(\"ProgressPlugin\", entryAdd);\n        compilation.hooks.failedEntry.tap(\"ProgressPlugin\", entryDone);\n        compilation.hooks.succeedEntry.tap(\"ProgressPlugin\", entryDone);\n\n        // avoid dynamic require if bundled with webpack\n        // @ts-expect-error\n        if (typeof __webpack_require__ !== \"function\") {\n          var requiredLoaders = new Set();\n          NormalModule.getCompilationHooks(compilation).beforeLoaders.tap(\"ProgressPlugin\", function (loaders) {\n            var _iterator3 = _createForOfIteratorHelper(loaders),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var loader = _step3.value;\n                if (loader.type !== \"module\" && !requiredLoaders.has(loader.loader)) {\n                  requiredLoaders.add(loader.loader);\n                  currentLoader = loader.loader;\n                  update();\n                  require(loader.loader);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n            if (currentLoader) {\n              currentLoader = \"\";\n              update();\n            }\n          });\n        }\n        var hooks = {\n          finishModules: \"finish module graph\",\n          seal: \"plugins\",\n          optimizeDependencies: \"dependencies optimization\",\n          afterOptimizeDependencies: \"after dependencies optimization\",\n          beforeChunks: \"chunk graph\",\n          afterChunks: \"after chunk graph\",\n          optimize: \"optimizing\",\n          optimizeModules: \"module optimization\",\n          afterOptimizeModules: \"after module optimization\",\n          optimizeChunks: \"chunk optimization\",\n          afterOptimizeChunks: \"after chunk optimization\",\n          optimizeTree: \"module and chunk tree optimization\",\n          afterOptimizeTree: \"after module and chunk tree optimization\",\n          optimizeChunkModules: \"chunk modules optimization\",\n          afterOptimizeChunkModules: \"after chunk modules optimization\",\n          reviveModules: \"module reviving\",\n          beforeModuleIds: \"before module ids\",\n          moduleIds: \"module ids\",\n          optimizeModuleIds: \"module id optimization\",\n          afterOptimizeModuleIds: \"module id optimization\",\n          reviveChunks: \"chunk reviving\",\n          beforeChunkIds: \"before chunk ids\",\n          chunkIds: \"chunk ids\",\n          optimizeChunkIds: \"chunk id optimization\",\n          afterOptimizeChunkIds: \"after chunk id optimization\",\n          recordModules: \"record modules\",\n          recordChunks: \"record chunks\",\n          beforeModuleHash: \"module hashing\",\n          beforeCodeGeneration: \"code generation\",\n          beforeRuntimeRequirements: \"runtime requirements\",\n          beforeHash: \"hashing\",\n          afterHash: \"after hashing\",\n          recordHash: \"record hash\",\n          beforeModuleAssets: \"module assets processing\",\n          beforeChunkAssets: \"chunk assets processing\",\n          processAssets: \"asset processing\",\n          afterProcessAssets: \"after asset optimization\",\n          record: \"recording\",\n          afterSeal: \"after seal\"\n        };\n        var numberOfHooks = Object.keys(hooks).length;\n        Object.keys(hooks).forEach(function (name, idx) {\n          var title = hooks[name];\n          var percentage = idx / numberOfHooks * 0.25 + 0.7;\n          compilation.hooks[name].intercept({\n            name: \"ProgressPlugin\",\n            call: function call() {\n              handler(percentage, \"sealing\", title);\n            },\n            done: function done() {\n              progressReporters.set(compiler, undefined);\n              handler(percentage, \"sealing\", title);\n            },\n            result: function result() {\n              handler(percentage, \"sealing\", title);\n            },\n            error: function error() {\n              handler(percentage, \"sealing\", title);\n            },\n            tap: function tap(_tap) {\n              // p is percentage from 0 to 1\n              // args is any number of messages in a hierarchical matter\n              progressReporters.set(compilation.compiler, function (p) {\n                for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                  args[_key3 - 1] = arguments[_key3];\n                }\n                handler.apply(void 0, [percentage, \"sealing\", title, _tap.name].concat(args));\n              });\n              handler(percentage, \"sealing\", title, _tap.name);\n            }\n          });\n        });\n      });\n      compiler.hooks.make.intercept({\n        name: \"ProgressPlugin\",\n        call: function call() {\n          handler(0.1, \"building\");\n        },\n        done: function done() {\n          handler(0.65, \"building\");\n        }\n      });\n      var interceptHook = function interceptHook(hook, progress, category, name) {\n        hook.intercept({\n          name: \"ProgressPlugin\",\n          call: function call() {\n            handler(progress, category, name);\n          },\n          done: function done() {\n            progressReporters.set(compiler, undefined);\n            handler(progress, category, name);\n          },\n          result: function result() {\n            handler(progress, category, name);\n          },\n          error: function error() {\n            handler(progress, category, name);\n          },\n          tap: function tap(_tap2) {\n            progressReporters.set(compiler, function (p) {\n              for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                args[_key4 - 1] = arguments[_key4];\n              }\n              handler.apply(void 0, [progress, category, name, _tap2.name].concat(args));\n            });\n            handler(progress, category, name, _tap2.name);\n          }\n        });\n      };\n      compiler.cache.hooks.endIdle.intercept({\n        name: \"ProgressPlugin\",\n        call: function call() {\n          handler(0, \"\");\n        }\n      });\n      interceptHook(compiler.cache.hooks.endIdle, 0.01, \"cache\", \"end idle\");\n      compiler.hooks.beforeRun.intercept({\n        name: \"ProgressPlugin\",\n        call: function call() {\n          handler(0, \"\");\n        }\n      });\n      interceptHook(compiler.hooks.beforeRun, 0.01, \"setup\", \"before run\");\n      interceptHook(compiler.hooks.run, 0.02, \"setup\", \"run\");\n      interceptHook(compiler.hooks.watchRun, 0.03, \"setup\", \"watch run\");\n      interceptHook(compiler.hooks.normalModuleFactory, 0.04, \"setup\", \"normal module factory\");\n      interceptHook(compiler.hooks.contextModuleFactory, 0.05, \"setup\", \"context module factory\");\n      interceptHook(compiler.hooks.beforeCompile, 0.06, \"setup\", \"before compile\");\n      interceptHook(compiler.hooks.compile, 0.07, \"setup\", \"compile\");\n      interceptHook(compiler.hooks.thisCompilation, 0.08, \"setup\", \"compilation\");\n      interceptHook(compiler.hooks.compilation, 0.09, \"setup\", \"compilation\");\n      interceptHook(compiler.hooks.finishMake, 0.69, \"building\", \"finish\");\n      interceptHook(compiler.hooks.emit, 0.95, \"emitting\", \"emit\");\n      interceptHook(compiler.hooks.afterEmit, 0.98, \"emitting\", \"after emit\");\n      interceptHook(compiler.hooks.done, 0.99, \"done\", \"plugins\");\n      compiler.hooks.done.intercept({\n        name: \"ProgressPlugin\",\n        done: function done() {\n          handler(0.99, \"\");\n        }\n      });\n      interceptHook(compiler.cache.hooks.storeBuildDependencies, 0.99, \"cache\", \"store build dependencies\");\n      interceptHook(compiler.cache.hooks.shutdown, 0.99, \"cache\", \"shutdown\");\n      interceptHook(compiler.cache.hooks.beginIdle, 0.99, \"cache\", \"begin idle\");\n      interceptHook(compiler.hooks.watchClose, 0.99, \"end\", \"closing watch compilation\");\n      compiler.cache.hooks.beginIdle.intercept({\n        name: \"ProgressPlugin\",\n        done: function done() {\n          handler(1, \"\");\n        }\n      });\n      compiler.cache.hooks.shutdown.intercept({\n        name: \"ProgressPlugin\",\n        done: function done() {\n          handler(1, \"\");\n        }\n      });\n    }\n  }], [{\n    key: \"getReporter\",\n    value:\n    /**\n     * @param {Compiler} compiler the current compiler\n     * @returns {ReportProgress} a progress reporter, if any\n     */\n    function getReporter(compiler) {\n      return progressReporters.get(compiler);\n    }\n  }]);\n  return ProgressPlugin;\n}();\nProgressPlugin.defaultOptions = {\n  profile: false,\n  modulesCount: 5000,\n  dependenciesCount: 10000,\n  modules: true,\n  dependencies: true,\n  activeModules: false,\n  entries: true\n};\nmodule.exports = ProgressPlugin;","map":{"version":3,"names":["Compiler","require","MultiCompiler","NormalModule","createSchemaValidation","contextify","validate","name","baseDataPath","median3","a","b","c","Math","max","min","createDefaultHandler","profile","logger","lastStateInfo","defaultHandler","percentage","msg","args","length","fullState","state","map","s","replace","now","Date","len","i","stateItem","undefined","lastStateItem","value","diff","time","reportState","stateMsg","repeat","d","error","warn","info","log","debug","status","floor","progressReporters","WeakMap","ProgressPlugin","options","handler","defaultOptions","modulesCount","dependenciesCount","showEntries","entries","showModules","modules","showDependencies","dependencies","showActiveModules","activeModules","percentBy","compiler","getInfrastructureLogger","_applyOnMultiCompiler","_applyOnCompiler","states","compilers","forEach","idx","p","sum","apply","lastActiveModule","currentLoader","lastModulesCount","lastDependenciesCount","lastEntriesCount","entriesCount","doneModules","doneDependencies","doneEntries","Set","lastUpdate","updateThrottled","update","items","percentByModules","percentByEntries","percentByDependencies","percentageFactor","push","context","root","statItems","size","join","factorizeAdd","factorizeDone","moduleAdd","moduleBuild","module","ident","identifier","add","entryAdd","entry","moduleDone","delete","m","entryDone","cache","getCache","getItemCache","cacheGetPromise","hooks","beforeCompile","tap","getPromise","then","data","err","afterCompile","tapPromise","compilation","isChild","Promise","resolve","oldData","storePromise","factorizeQueue","added","result","addModuleQueue","processDependenciesQueue","buildModule","addEntry","failedEntry","succeedEntry","__webpack_require__","requiredLoaders","getCompilationHooks","beforeLoaders","loaders","loader","type","has","finishModules","seal","optimizeDependencies","afterOptimizeDependencies","beforeChunks","afterChunks","optimize","optimizeModules","afterOptimizeModules","optimizeChunks","afterOptimizeChunks","optimizeTree","afterOptimizeTree","optimizeChunkModules","afterOptimizeChunkModules","reviveModules","beforeModuleIds","moduleIds","optimizeModuleIds","afterOptimizeModuleIds","reviveChunks","beforeChunkIds","chunkIds","optimizeChunkIds","afterOptimizeChunkIds","recordModules","recordChunks","beforeModuleHash","beforeCodeGeneration","beforeRuntimeRequirements","beforeHash","afterHash","recordHash","beforeModuleAssets","beforeChunkAssets","processAssets","afterProcessAssets","record","afterSeal","numberOfHooks","Object","keys","title","intercept","call","done","set","make","interceptHook","hook","progress","category","endIdle","beforeRun","run","watchRun","normalModuleFactory","contextModuleFactory","compile","thisCompilation","finishMake","emit","afterEmit","storeBuildDependencies","shutdown","beginIdle","watchClose","get","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/ProgressPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Compiler = require(\"./Compiler\");\nconst MultiCompiler = require(\"./MultiCompiler\");\nconst NormalModule = require(\"./NormalModule\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\nconst { contextify } = require(\"./util/identifier\");\n\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").HandlerFunction} HandlerFunction */\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginArgument} ProgressPluginArgument */\n/** @typedef {import(\"../declarations/plugins/ProgressPlugin\").ProgressPluginOptions} ProgressPluginOptions */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/ProgressPlugin.check.js\"),\n\t() => require(\"../schemas/plugins/ProgressPlugin.json\"),\n\t{\n\t\tname: \"Progress Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nconst median3 = (a, b, c) => {\n\treturn a + b + c - Math.max(a, b, c) - Math.min(a, b, c);\n};\n\nconst createDefaultHandler = (profile, logger) => {\n\t/** @type {{ value: string, time: number }[]} */\n\tconst lastStateInfo = [];\n\n\tconst defaultHandler = (percentage, msg, ...args) => {\n\t\tif (profile) {\n\t\t\tif (percentage === 0) {\n\t\t\t\tlastStateInfo.length = 0;\n\t\t\t}\n\t\t\tconst fullState = [msg, ...args];\n\t\t\tconst state = fullState.map(s => s.replace(/\\d+\\/\\d+ /g, \"\"));\n\t\t\tconst now = Date.now();\n\t\t\tconst len = Math.max(state.length, lastStateInfo.length);\n\t\t\tfor (let i = len; i >= 0; i--) {\n\t\t\t\tconst stateItem = i < state.length ? state[i] : undefined;\n\t\t\t\tconst lastStateItem =\n\t\t\t\t\ti < lastStateInfo.length ? lastStateInfo[i] : undefined;\n\t\t\t\tif (lastStateItem) {\n\t\t\t\t\tif (stateItem !== lastStateItem.value) {\n\t\t\t\t\t\tconst diff = now - lastStateItem.time;\n\t\t\t\t\t\tif (lastStateItem.value) {\n\t\t\t\t\t\t\tlet reportState = lastStateItem.value;\n\t\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\t\treportState = lastStateInfo[i - 1].value + \" > \" + reportState;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst stateMsg = `${\" | \".repeat(i)}${diff} ms ${reportState}`;\n\t\t\t\t\t\t\tconst d = diff;\n\t\t\t\t\t\t\t// This depends on timing so we ignore it for coverage\n\t\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (d > 10000) {\n\t\t\t\t\t\t\t\t\tlogger.error(stateMsg);\n\t\t\t\t\t\t\t\t} else if (d > 1000) {\n\t\t\t\t\t\t\t\t\tlogger.warn(stateMsg);\n\t\t\t\t\t\t\t\t} else if (d > 10) {\n\t\t\t\t\t\t\t\t\tlogger.info(stateMsg);\n\t\t\t\t\t\t\t\t} else if (d > 5) {\n\t\t\t\t\t\t\t\t\tlogger.log(stateMsg);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlogger.debug(stateMsg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stateItem === undefined) {\n\t\t\t\t\t\t\tlastStateInfo.length = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlastStateItem.value = stateItem;\n\t\t\t\t\t\t\tlastStateItem.time = now;\n\t\t\t\t\t\t\tlastStateInfo.length = i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlastStateInfo[i] = {\n\t\t\t\t\t\tvalue: stateItem,\n\t\t\t\t\t\ttime: now\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlogger.status(`${Math.floor(percentage * 100)}%`, msg, ...args);\n\t\tif (percentage === 1 || (!msg && args.length === 0)) logger.status();\n\t};\n\n\treturn defaultHandler;\n};\n\n/**\n * @callback ReportProgress\n * @param {number} p\n * @param {...string} [args]\n * @returns {void}\n */\n\n/** @type {WeakMap<Compiler,ReportProgress>} */\nconst progressReporters = new WeakMap();\n\nclass ProgressPlugin {\n\t/**\n\t * @param {Compiler} compiler the current compiler\n\t * @returns {ReportProgress} a progress reporter, if any\n\t */\n\tstatic getReporter(compiler) {\n\t\treturn progressReporters.get(compiler);\n\t}\n\n\t/**\n\t * @param {ProgressPluginArgument} options options\n\t */\n\tconstructor(options = {}) {\n\t\tif (typeof options === \"function\") {\n\t\t\toptions = {\n\t\t\t\thandler: options\n\t\t\t};\n\t\t}\n\n\t\tvalidate(options);\n\t\toptions = { ...ProgressPlugin.defaultOptions, ...options };\n\n\t\tthis.profile = options.profile;\n\t\tthis.handler = options.handler;\n\t\tthis.modulesCount = options.modulesCount;\n\t\tthis.dependenciesCount = options.dependenciesCount;\n\t\tthis.showEntries = options.entries;\n\t\tthis.showModules = options.modules;\n\t\tthis.showDependencies = options.dependencies;\n\t\tthis.showActiveModules = options.activeModules;\n\t\tthis.percentBy = options.percentBy;\n\t}\n\n\t/**\n\t * @param {Compiler | MultiCompiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst handler =\n\t\t\tthis.handler ||\n\t\t\tcreateDefaultHandler(\n\t\t\t\tthis.profile,\n\t\t\t\tcompiler.getInfrastructureLogger(\"webpack.Progress\")\n\t\t\t);\n\t\tif (compiler instanceof MultiCompiler) {\n\t\t\tthis._applyOnMultiCompiler(compiler, handler);\n\t\t} else if (compiler instanceof Compiler) {\n\t\t\tthis._applyOnCompiler(compiler, handler);\n\t\t}\n\t}\n\n\t/**\n\t * @param {MultiCompiler} compiler webpack multi-compiler\n\t * @param {HandlerFunction} handler function that executes for every progress step\n\t * @returns {void}\n\t */\n\t_applyOnMultiCompiler(compiler, handler) {\n\t\tconst states = compiler.compilers.map(\n\t\t\t() => /** @type {[number, ...string[]]} */ ([0])\n\t\t);\n\t\tcompiler.compilers.forEach((compiler, idx) => {\n\t\t\tnew ProgressPlugin((p, msg, ...args) => {\n\t\t\t\tstates[idx] = [p, msg, ...args];\n\t\t\t\tlet sum = 0;\n\t\t\t\tfor (const [p] of states) sum += p;\n\t\t\t\thandler(sum / states.length, `[${idx}] ${msg}`, ...args);\n\t\t\t}).apply(compiler);\n\t\t});\n\t}\n\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @param {HandlerFunction} handler function that executes for every progress step\n\t * @returns {void}\n\t */\n\t_applyOnCompiler(compiler, handler) {\n\t\tconst showEntries = this.showEntries;\n\t\tconst showModules = this.showModules;\n\t\tconst showDependencies = this.showDependencies;\n\t\tconst showActiveModules = this.showActiveModules;\n\t\tlet lastActiveModule = \"\";\n\t\tlet currentLoader = \"\";\n\t\tlet lastModulesCount = 0;\n\t\tlet lastDependenciesCount = 0;\n\t\tlet lastEntriesCount = 0;\n\t\tlet modulesCount = 0;\n\t\tlet dependenciesCount = 0;\n\t\tlet entriesCount = 1;\n\t\tlet doneModules = 0;\n\t\tlet doneDependencies = 0;\n\t\tlet doneEntries = 0;\n\t\tconst activeModules = new Set();\n\t\tlet lastUpdate = 0;\n\n\t\tconst updateThrottled = () => {\n\t\t\tif (lastUpdate + 500 < Date.now()) update();\n\t\t};\n\n\t\tconst update = () => {\n\t\t\t/** @type {string[]} */\n\t\t\tconst items = [];\n\t\t\tconst percentByModules =\n\t\t\t\tdoneModules /\n\t\t\t\tMath.max(lastModulesCount || this.modulesCount || 1, modulesCount);\n\t\t\tconst percentByEntries =\n\t\t\t\tdoneEntries /\n\t\t\t\tMath.max(lastEntriesCount || this.dependenciesCount || 1, entriesCount);\n\t\t\tconst percentByDependencies =\n\t\t\t\tdoneDependencies /\n\t\t\t\tMath.max(lastDependenciesCount || 1, dependenciesCount);\n\t\t\tlet percentageFactor;\n\n\t\t\tswitch (this.percentBy) {\n\t\t\t\tcase \"entries\":\n\t\t\t\t\tpercentageFactor = percentByEntries;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dependencies\":\n\t\t\t\t\tpercentageFactor = percentByDependencies;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"modules\":\n\t\t\t\t\tpercentageFactor = percentByModules;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tpercentageFactor = median3(\n\t\t\t\t\t\tpercentByModules,\n\t\t\t\t\t\tpercentByEntries,\n\t\t\t\t\t\tpercentByDependencies\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst percentage = 0.1 + percentageFactor * 0.55;\n\n\t\t\tif (currentLoader) {\n\t\t\t\titems.push(\n\t\t\t\t\t`import loader ${contextify(\n\t\t\t\t\t\tcompiler.context,\n\t\t\t\t\t\tcurrentLoader,\n\t\t\t\t\t\tcompiler.root\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst statItems = [];\n\t\t\t\tif (showEntries) {\n\t\t\t\t\tstatItems.push(`${doneEntries}/${entriesCount} entries`);\n\t\t\t\t}\n\t\t\t\tif (showDependencies) {\n\t\t\t\t\tstatItems.push(\n\t\t\t\t\t\t`${doneDependencies}/${dependenciesCount} dependencies`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (showModules) {\n\t\t\t\t\tstatItems.push(`${doneModules}/${modulesCount} modules`);\n\t\t\t\t}\n\t\t\t\tif (showActiveModules) {\n\t\t\t\t\tstatItems.push(`${activeModules.size} active`);\n\t\t\t\t}\n\t\t\t\tif (statItems.length > 0) {\n\t\t\t\t\titems.push(statItems.join(\" \"));\n\t\t\t\t}\n\t\t\t\tif (showActiveModules) {\n\t\t\t\t\titems.push(lastActiveModule);\n\t\t\t\t}\n\t\t\t}\n\t\t\thandler(percentage, \"building\", ...items);\n\t\t\tlastUpdate = Date.now();\n\t\t};\n\n\t\tconst factorizeAdd = () => {\n\t\t\tdependenciesCount++;\n\t\t\tif (dependenciesCount < 50 || dependenciesCount % 100 === 0)\n\t\t\t\tupdateThrottled();\n\t\t};\n\n\t\tconst factorizeDone = () => {\n\t\t\tdoneDependencies++;\n\t\t\tif (doneDependencies < 50 || doneDependencies % 100 === 0)\n\t\t\t\tupdateThrottled();\n\t\t};\n\n\t\tconst moduleAdd = () => {\n\t\t\tmodulesCount++;\n\t\t\tif (modulesCount < 50 || modulesCount % 100 === 0) updateThrottled();\n\t\t};\n\n\t\t// only used when showActiveModules is set\n\t\tconst moduleBuild = module => {\n\t\t\tconst ident = module.identifier();\n\t\t\tif (ident) {\n\t\t\t\tactiveModules.add(ident);\n\t\t\t\tlastActiveModule = ident;\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tconst entryAdd = (entry, options) => {\n\t\t\tentriesCount++;\n\t\t\tif (entriesCount < 5 || entriesCount % 10 === 0) updateThrottled();\n\t\t};\n\n\t\tconst moduleDone = module => {\n\t\t\tdoneModules++;\n\t\t\tif (showActiveModules) {\n\t\t\t\tconst ident = module.identifier();\n\t\t\t\tif (ident) {\n\t\t\t\t\tactiveModules.delete(ident);\n\t\t\t\t\tif (lastActiveModule === ident) {\n\t\t\t\t\t\tlastActiveModule = \"\";\n\t\t\t\t\t\tfor (const m of activeModules) {\n\t\t\t\t\t\t\tlastActiveModule = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doneModules < 50 || doneModules % 100 === 0) updateThrottled();\n\t\t};\n\n\t\tconst entryDone = (entry, options) => {\n\t\t\tdoneEntries++;\n\t\t\tupdate();\n\t\t};\n\n\t\tconst cache = compiler\n\t\t\t.getCache(\"ProgressPlugin\")\n\t\t\t.getItemCache(\"counts\", null);\n\n\t\tlet cacheGetPromise;\n\n\t\tcompiler.hooks.beforeCompile.tap(\"ProgressPlugin\", () => {\n\t\t\tif (!cacheGetPromise) {\n\t\t\t\tcacheGetPromise = cache.getPromise().then(\n\t\t\t\t\tdata => {\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tlastModulesCount = lastModulesCount || data.modulesCount;\n\t\t\t\t\t\t\tlastDependenciesCount =\n\t\t\t\t\t\t\t\tlastDependenciesCount || data.dependenciesCount;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\t// Ignore error\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tcompiler.hooks.afterCompile.tapPromise(\"ProgressPlugin\", compilation => {\n\t\t\tif (compilation.compiler.isChild()) return Promise.resolve();\n\t\t\treturn cacheGetPromise.then(async oldData => {\n\t\t\t\tif (\n\t\t\t\t\t!oldData ||\n\t\t\t\t\toldData.modulesCount !== modulesCount ||\n\t\t\t\t\toldData.dependenciesCount !== dependenciesCount\n\t\t\t\t) {\n\t\t\t\t\tawait cache.storePromise({ modulesCount, dependenciesCount });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\"ProgressPlugin\", compilation => {\n\t\t\tif (compilation.compiler.isChild()) return;\n\t\t\tlastModulesCount = modulesCount;\n\t\t\tlastEntriesCount = entriesCount;\n\t\t\tlastDependenciesCount = dependenciesCount;\n\t\t\tmodulesCount = dependenciesCount = entriesCount = 0;\n\t\t\tdoneModules = doneDependencies = doneEntries = 0;\n\n\t\t\tcompilation.factorizeQueue.hooks.added.tap(\n\t\t\t\t\"ProgressPlugin\",\n\t\t\t\tfactorizeAdd\n\t\t\t);\n\t\t\tcompilation.factorizeQueue.hooks.result.tap(\n\t\t\t\t\"ProgressPlugin\",\n\t\t\t\tfactorizeDone\n\t\t\t);\n\n\t\t\tcompilation.addModuleQueue.hooks.added.tap(\"ProgressPlugin\", moduleAdd);\n\t\t\tcompilation.processDependenciesQueue.hooks.result.tap(\n\t\t\t\t\"ProgressPlugin\",\n\t\t\t\tmoduleDone\n\t\t\t);\n\n\t\t\tif (showActiveModules) {\n\t\t\t\tcompilation.hooks.buildModule.tap(\"ProgressPlugin\", moduleBuild);\n\t\t\t}\n\n\t\t\tcompilation.hooks.addEntry.tap(\"ProgressPlugin\", entryAdd);\n\t\t\tcompilation.hooks.failedEntry.tap(\"ProgressPlugin\", entryDone);\n\t\t\tcompilation.hooks.succeedEntry.tap(\"ProgressPlugin\", entryDone);\n\n\t\t\t// avoid dynamic require if bundled with webpack\n\t\t\t// @ts-expect-error\n\t\t\tif (typeof __webpack_require__ !== \"function\") {\n\t\t\t\tconst requiredLoaders = new Set();\n\t\t\t\tNormalModule.getCompilationHooks(compilation).beforeLoaders.tap(\n\t\t\t\t\t\"ProgressPlugin\",\n\t\t\t\t\tloaders => {\n\t\t\t\t\t\tfor (const loader of loaders) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tloader.type !== \"module\" &&\n\t\t\t\t\t\t\t\t!requiredLoaders.has(loader.loader)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\trequiredLoaders.add(loader.loader);\n\t\t\t\t\t\t\t\tcurrentLoader = loader.loader;\n\t\t\t\t\t\t\t\tupdate();\n\t\t\t\t\t\t\t\trequire(loader.loader);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (currentLoader) {\n\t\t\t\t\t\t\tcurrentLoader = \"\";\n\t\t\t\t\t\t\tupdate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst hooks = {\n\t\t\t\tfinishModules: \"finish module graph\",\n\t\t\t\tseal: \"plugins\",\n\t\t\t\toptimizeDependencies: \"dependencies optimization\",\n\t\t\t\tafterOptimizeDependencies: \"after dependencies optimization\",\n\t\t\t\tbeforeChunks: \"chunk graph\",\n\t\t\t\tafterChunks: \"after chunk graph\",\n\t\t\t\toptimize: \"optimizing\",\n\t\t\t\toptimizeModules: \"module optimization\",\n\t\t\t\tafterOptimizeModules: \"after module optimization\",\n\t\t\t\toptimizeChunks: \"chunk optimization\",\n\t\t\t\tafterOptimizeChunks: \"after chunk optimization\",\n\t\t\t\toptimizeTree: \"module and chunk tree optimization\",\n\t\t\t\tafterOptimizeTree: \"after module and chunk tree optimization\",\n\t\t\t\toptimizeChunkModules: \"chunk modules optimization\",\n\t\t\t\tafterOptimizeChunkModules: \"after chunk modules optimization\",\n\t\t\t\treviveModules: \"module reviving\",\n\t\t\t\tbeforeModuleIds: \"before module ids\",\n\t\t\t\tmoduleIds: \"module ids\",\n\t\t\t\toptimizeModuleIds: \"module id optimization\",\n\t\t\t\tafterOptimizeModuleIds: \"module id optimization\",\n\t\t\t\treviveChunks: \"chunk reviving\",\n\t\t\t\tbeforeChunkIds: \"before chunk ids\",\n\t\t\t\tchunkIds: \"chunk ids\",\n\t\t\t\toptimizeChunkIds: \"chunk id optimization\",\n\t\t\t\tafterOptimizeChunkIds: \"after chunk id optimization\",\n\t\t\t\trecordModules: \"record modules\",\n\t\t\t\trecordChunks: \"record chunks\",\n\t\t\t\tbeforeModuleHash: \"module hashing\",\n\t\t\t\tbeforeCodeGeneration: \"code generation\",\n\t\t\t\tbeforeRuntimeRequirements: \"runtime requirements\",\n\t\t\t\tbeforeHash: \"hashing\",\n\t\t\t\tafterHash: \"after hashing\",\n\t\t\t\trecordHash: \"record hash\",\n\t\t\t\tbeforeModuleAssets: \"module assets processing\",\n\t\t\t\tbeforeChunkAssets: \"chunk assets processing\",\n\t\t\t\tprocessAssets: \"asset processing\",\n\t\t\t\tafterProcessAssets: \"after asset optimization\",\n\t\t\t\trecord: \"recording\",\n\t\t\t\tafterSeal: \"after seal\"\n\t\t\t};\n\t\t\tconst numberOfHooks = Object.keys(hooks).length;\n\t\t\tObject.keys(hooks).forEach((name, idx) => {\n\t\t\t\tconst title = hooks[name];\n\t\t\t\tconst percentage = (idx / numberOfHooks) * 0.25 + 0.7;\n\t\t\t\tcompilation.hooks[name].intercept({\n\t\t\t\t\tname: \"ProgressPlugin\",\n\t\t\t\t\tcall() {\n\t\t\t\t\t\thandler(percentage, \"sealing\", title);\n\t\t\t\t\t},\n\t\t\t\t\tdone() {\n\t\t\t\t\t\tprogressReporters.set(compiler, undefined);\n\t\t\t\t\t\thandler(percentage, \"sealing\", title);\n\t\t\t\t\t},\n\t\t\t\t\tresult() {\n\t\t\t\t\t\thandler(percentage, \"sealing\", title);\n\t\t\t\t\t},\n\t\t\t\t\terror() {\n\t\t\t\t\t\thandler(percentage, \"sealing\", title);\n\t\t\t\t\t},\n\t\t\t\t\ttap(tap) {\n\t\t\t\t\t\t// p is percentage from 0 to 1\n\t\t\t\t\t\t// args is any number of messages in a hierarchical matter\n\t\t\t\t\t\tprogressReporters.set(compilation.compiler, (p, ...args) => {\n\t\t\t\t\t\t\thandler(percentage, \"sealing\", title, tap.name, ...args);\n\t\t\t\t\t\t});\n\t\t\t\t\t\thandler(percentage, \"sealing\", title, tap.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tcompiler.hooks.make.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tcall() {\n\t\t\t\thandler(0.1, \"building\");\n\t\t\t},\n\t\t\tdone() {\n\t\t\t\thandler(0.65, \"building\");\n\t\t\t}\n\t\t});\n\t\tconst interceptHook = (hook, progress, category, name) => {\n\t\t\thook.intercept({\n\t\t\t\tname: \"ProgressPlugin\",\n\t\t\t\tcall() {\n\t\t\t\t\thandler(progress, category, name);\n\t\t\t\t},\n\t\t\t\tdone() {\n\t\t\t\t\tprogressReporters.set(compiler, undefined);\n\t\t\t\t\thandler(progress, category, name);\n\t\t\t\t},\n\t\t\t\tresult() {\n\t\t\t\t\thandler(progress, category, name);\n\t\t\t\t},\n\t\t\t\terror() {\n\t\t\t\t\thandler(progress, category, name);\n\t\t\t\t},\n\t\t\t\ttap(tap) {\n\t\t\t\t\tprogressReporters.set(compiler, (p, ...args) => {\n\t\t\t\t\t\thandler(progress, category, name, tap.name, ...args);\n\t\t\t\t\t});\n\t\t\t\t\thandler(progress, category, name, tap.name);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tcompiler.cache.hooks.endIdle.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tcall() {\n\t\t\t\thandler(0, \"\");\n\t\t\t}\n\t\t});\n\t\tinterceptHook(compiler.cache.hooks.endIdle, 0.01, \"cache\", \"end idle\");\n\t\tcompiler.hooks.beforeRun.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tcall() {\n\t\t\t\thandler(0, \"\");\n\t\t\t}\n\t\t});\n\t\tinterceptHook(compiler.hooks.beforeRun, 0.01, \"setup\", \"before run\");\n\t\tinterceptHook(compiler.hooks.run, 0.02, \"setup\", \"run\");\n\t\tinterceptHook(compiler.hooks.watchRun, 0.03, \"setup\", \"watch run\");\n\t\tinterceptHook(\n\t\t\tcompiler.hooks.normalModuleFactory,\n\t\t\t0.04,\n\t\t\t\"setup\",\n\t\t\t\"normal module factory\"\n\t\t);\n\t\tinterceptHook(\n\t\t\tcompiler.hooks.contextModuleFactory,\n\t\t\t0.05,\n\t\t\t\"setup\",\n\t\t\t\"context module factory\"\n\t\t);\n\t\tinterceptHook(\n\t\t\tcompiler.hooks.beforeCompile,\n\t\t\t0.06,\n\t\t\t\"setup\",\n\t\t\t\"before compile\"\n\t\t);\n\t\tinterceptHook(compiler.hooks.compile, 0.07, \"setup\", \"compile\");\n\t\tinterceptHook(compiler.hooks.thisCompilation, 0.08, \"setup\", \"compilation\");\n\t\tinterceptHook(compiler.hooks.compilation, 0.09, \"setup\", \"compilation\");\n\t\tinterceptHook(compiler.hooks.finishMake, 0.69, \"building\", \"finish\");\n\t\tinterceptHook(compiler.hooks.emit, 0.95, \"emitting\", \"emit\");\n\t\tinterceptHook(compiler.hooks.afterEmit, 0.98, \"emitting\", \"after emit\");\n\t\tinterceptHook(compiler.hooks.done, 0.99, \"done\", \"plugins\");\n\t\tcompiler.hooks.done.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tdone() {\n\t\t\t\thandler(0.99, \"\");\n\t\t\t}\n\t\t});\n\t\tinterceptHook(\n\t\t\tcompiler.cache.hooks.storeBuildDependencies,\n\t\t\t0.99,\n\t\t\t\"cache\",\n\t\t\t\"store build dependencies\"\n\t\t);\n\t\tinterceptHook(compiler.cache.hooks.shutdown, 0.99, \"cache\", \"shutdown\");\n\t\tinterceptHook(compiler.cache.hooks.beginIdle, 0.99, \"cache\", \"begin idle\");\n\t\tinterceptHook(\n\t\t\tcompiler.hooks.watchClose,\n\t\t\t0.99,\n\t\t\t\"end\",\n\t\t\t\"closing watch compilation\"\n\t\t);\n\t\tcompiler.cache.hooks.beginIdle.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tdone() {\n\t\t\t\thandler(1, \"\");\n\t\t\t}\n\t\t});\n\t\tcompiler.cache.hooks.shutdown.intercept({\n\t\t\tname: \"ProgressPlugin\",\n\t\t\tdone() {\n\t\t\t\thandler(1, \"\");\n\t\t\t}\n\t\t});\n\t}\n}\n\nProgressPlugin.defaultOptions = {\n\tprofile: false,\n\tmodulesCount: 5000,\n\tdependenciesCount: 10000,\n\tmodules: true,\n\tdependencies: true,\n\tactiveModules: false,\n\tentries: true\n};\n\nmodule.exports = ProgressPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}