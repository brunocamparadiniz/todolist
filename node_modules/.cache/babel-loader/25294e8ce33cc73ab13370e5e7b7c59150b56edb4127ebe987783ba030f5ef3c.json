{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Maël Nison @arcanis\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/**\n * @typedef {Object} PnpApiImpl\n * @property {function(string, string, object): string} resolveToUnqualified\n */\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {PnpApiImpl} pnpApi pnpApi\n   * @param {string | ResolveStepHook} target target\n   */\n  function PnpPlugin(source, pnpApi, target) {\n    _classCallCheck(this, PnpPlugin);\n    this.source = source;\n    this.pnpApi = pnpApi;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(PnpPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"PnpPlugin\", function (request, resolveContext, callback) {\n        var req = request.request;\n        if (!req) return callback();\n\n        // The trailing slash indicates to PnP that this value is a folder rather than a file\n        var issuer = \"\".concat(request.path, \"/\");\n        var packageMatch = /^(@[^/]+\\/)?[^/]+/.exec(req);\n        if (!packageMatch) return callback();\n        var packageName = packageMatch[0];\n        var innerRequest = \".\".concat(req.slice(packageName.length));\n        var resolution;\n        var apiResolution;\n        try {\n          resolution = _this.pnpApi.resolveToUnqualified(packageName, issuer, {\n            considerBuiltins: false\n          });\n          if (resolveContext.fileDependencies) {\n            apiResolution = _this.pnpApi.resolveToUnqualified(\"pnpapi\", issuer, {\n              considerBuiltins: false\n            });\n          }\n        } catch (error) {\n          if (error.code === \"MODULE_NOT_FOUND\" && error.pnpCode === \"UNDECLARED_DEPENDENCY\") {\n            // This is not a PnP managed dependency.\n            // Try to continue resolving with our alternatives\n            if (resolveContext.log) {\n              resolveContext.log(\"request is not managed by the pnpapi\");\n              var _iterator = _createForOfIteratorHelper(error.message.split(\"\\n\").filter(Boolean)),\n                _step;\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var line = _step.value;\n                  resolveContext.log(\"  \".concat(line));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            }\n            return callback();\n          }\n          return callback(error);\n        }\n        if (resolution === packageName) return callback();\n        if (apiResolution && resolveContext.fileDependencies) {\n          resolveContext.fileDependencies.add(apiResolution);\n        }\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: resolution,\n          request: innerRequest,\n          ignoreSymlinks: true,\n          fullySpecified: request.fullySpecified && innerRequest !== \".\"\n        });\n        resolver.doResolve(target, obj, \"resolved by pnp to \".concat(resolution), resolveContext, function (err, result) {\n          if (err) return callback(err);\n          if (result) return callback(null, result);\n          // Skip alternatives\n          return callback(null, null);\n        });\n      });\n    }\n  }]);\n  return PnpPlugin;\n}();","map":{"version":3,"names":["module","exports","source","pnpApi","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","issuer","path","packageMatch","exec","packageName","innerRequest","slice","length","resolution","apiResolution","resolveToUnqualified","considerBuiltins","fileDependencies","error","code","pnpCode","log","message","split","filter","Boolean","line","add","obj","ignoreSymlinks","fullySpecified","doResolve","err","result"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/PnpPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Maël Nison @arcanis\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/**\n * @typedef {Object} PnpApiImpl\n * @property {function(string, string, object): string} resolveToUnqualified\n */\n\nmodule.exports = class PnpPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {PnpApiImpl} pnpApi pnpApi\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, pnpApi, target) {\n\t\tthis.source = source;\n\t\tthis.pnpApi = pnpApi;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"PnpPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\n\t\t\t\t// The trailing slash indicates to PnP that this value is a folder rather than a file\n\t\t\t\tconst issuer = `${request.path}/`;\n\n\t\t\t\tconst packageMatch = /^(@[^/]+\\/)?[^/]+/.exec(req);\n\t\t\t\tif (!packageMatch) return callback();\n\n\t\t\t\tconst packageName = packageMatch[0];\n\t\t\t\tconst innerRequest = `.${req.slice(packageName.length)}`;\n\n\t\t\t\tlet resolution;\n\t\t\t\tlet apiResolution;\n\t\t\t\ttry {\n\t\t\t\t\tresolution = this.pnpApi.resolveToUnqualified(packageName, issuer, {\n\t\t\t\t\t\tconsiderBuiltins: false\n\t\t\t\t\t});\n\t\t\t\t\tif (resolveContext.fileDependencies) {\n\t\t\t\t\t\tapiResolution = this.pnpApi.resolveToUnqualified(\"pnpapi\", issuer, {\n\t\t\t\t\t\t\tconsiderBuiltins: false\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror.code === \"MODULE_NOT_FOUND\" &&\n\t\t\t\t\t\terror.pnpCode === \"UNDECLARED_DEPENDENCY\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// This is not a PnP managed dependency.\n\t\t\t\t\t\t// Try to continue resolving with our alternatives\n\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\tresolveContext.log(`request is not managed by the pnpapi`);\n\t\t\t\t\t\t\tfor (const line of error.message.split(\"\\n\").filter(Boolean))\n\t\t\t\t\t\t\t\tresolveContext.log(`  ${line}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn callback();\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(error);\n\t\t\t\t}\n\n\t\t\t\tif (resolution === packageName) return callback();\n\n\t\t\t\tif (apiResolution && resolveContext.fileDependencies) {\n\t\t\t\t\tresolveContext.fileDependencies.add(apiResolution);\n\t\t\t\t}\n\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: resolution,\n\t\t\t\t\trequest: innerRequest,\n\t\t\t\t\tignoreSymlinks: true,\n\t\t\t\t\tfullySpecified: request.fullySpecified && innerRequest !== \".\"\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t`resolved by pnp to ${resolution}`,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t// Skip alternatives\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}