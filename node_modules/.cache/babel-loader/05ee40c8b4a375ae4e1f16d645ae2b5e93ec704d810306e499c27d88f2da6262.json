{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _defineProperty = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar path = require(\"path\");\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\nvar alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {MainFieldOptions} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  function MainFieldPlugin(source, options, target) {\n    _classCallCheck(this, MainFieldPlugin);\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  _createClass(MainFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", function (request, resolveContext, callback) {\n        if (request.path !== request.descriptionFileRoot || request[alreadyTriedMainField] === request.descriptionFilePath || !request.descriptionFilePath) return callback();\n        var filename = path.basename(request.descriptionFilePath);\n        var mainModule = DescriptionFileUtils.getField(request.descriptionFileData, _this.options.name);\n        if (!mainModule || typeof mainModule !== \"string\" || mainModule === \".\" || mainModule === \"./\") {\n          return callback();\n        }\n        if (_this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n        var obj = _objectSpread(_objectSpread({}, request), {}, _defineProperty({\n          request: mainModule,\n          module: false,\n          directory: mainModule.endsWith(\"/\")\n        }, alreadyTriedMainField, request.descriptionFilePath));\n        return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + _this.options.name + \" in \" + filename, resolveContext, callback);\n      });\n    }\n  }]);\n  return MainFieldPlugin;\n}();","map":{"version":3,"names":["path","require","DescriptionFileUtils","alreadyTriedMainField","Symbol","module","exports","source","options","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","descriptionFilePath","filename","basename","mainModule","getField","descriptionFileData","name","forceRelative","test","obj","directory","endsWith","doResolve"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/enhanced-resolve/lib/MainFieldPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst path = require(\"path\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{name: string|Array<string>, forceRelative: boolean}} MainFieldOptions */\n\nconst alreadyTriedMainField = Symbol(\"alreadyTriedMainField\");\n\nmodule.exports = class MainFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {MainFieldOptions} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (\n\t\t\t\t\trequest.path !== request.descriptionFileRoot ||\n\t\t\t\t\trequest[alreadyTriedMainField] === request.descriptionFilePath ||\n\t\t\t\t\t!request.descriptionFilePath\n\t\t\t\t)\n\t\t\t\t\treturn callback();\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\tlet mainModule = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.options.name\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!mainModule ||\n\t\t\t\t\ttypeof mainModule !== \"string\" ||\n\t\t\t\t\tmainModule === \".\" ||\n\t\t\t\t\tmainModule === \"./\"\n\t\t\t\t) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\n\t\t\t\t\tmainModule = \"./\" + mainModule;\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\trequest: mainModule,\n\t\t\t\t\tmodule: false,\n\t\t\t\t\tdirectory: mainModule.endsWith(\"/\"),\n\t\t\t\t\t[alreadyTriedMainField]: request.descriptionFilePath\n\t\t\t\t};\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" +\n\t\t\t\t\t\tmainModule +\n\t\t\t\t\t\t\" from \" +\n\t\t\t\t\t\tthis.options.name +\n\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\tfilename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;;AAE9D;AACA;AACA;;AAEA,IAAME,qBAAqB,GAAGC,MAAM,CAAC,uBAAuB,CAAC;AAE7DC,MAAM,CAACC,OAAO;EACb;AACD;AACA;AACA;AACA;EACC,yBAAYC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IAAA;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MAAA;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC;MAC/CC,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACL,MAAM,CAAC,CACpBM,QAAQ,CAAC,iBAAiB,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QACnE,IACCF,OAAO,CAACd,IAAI,KAAKc,OAAO,CAACG,mBAAmB,IAC5CH,OAAO,CAACX,qBAAqB,CAAC,KAAKW,OAAO,CAACI,mBAAmB,IAC9D,CAACJ,OAAO,CAACI,mBAAmB,EAE5B,OAAOF,QAAQ,EAAE;QAClB,IAAMG,QAAQ,GAAGnB,IAAI,CAACoB,QAAQ,CAACN,OAAO,CAACI,mBAAmB,CAAC;QAC3D,IAAIG,UAAU,GAAGnB,oBAAoB,CAACoB,QAAQ,CAC7CR,OAAO,CAACS,mBAAmB,EAC3B,KAAI,CAACf,OAAO,CAACgB,IAAI,CACjB;QAED,IACC,CAACH,UAAU,IACX,OAAOA,UAAU,KAAK,QAAQ,IAC9BA,UAAU,KAAK,GAAG,IAClBA,UAAU,KAAK,IAAI,EAClB;UACD,OAAOL,QAAQ,EAAE;QAClB;QACA,IAAI,KAAI,CAACR,OAAO,CAACiB,aAAa,IAAI,CAAC,UAAU,CAACC,IAAI,CAACL,UAAU,CAAC,EAC7DA,UAAU,GAAG,IAAI,GAAGA,UAAU;QAC/B,IAAMM,GAAG,mCACLb,OAAO;UACVA,OAAO,EAAEO,UAAU;UACnBhB,MAAM,EAAE,KAAK;UACbuB,SAAS,EAAEP,UAAU,CAACQ,QAAQ,CAAC,GAAG;QAAC,GAClC1B,qBAAqB,EAAGW,OAAO,CAACI,mBAAmB,EACpD;QACD,OAAOR,QAAQ,CAACoB,SAAS,CACxBrB,MAAM,EACNkB,GAAG,EACH,MAAM,GACLN,UAAU,GACV,QAAQ,GACR,KAAI,CAACb,OAAO,CAACgB,IAAI,GACjB,MAAM,GACNL,QAAQ,EACTJ,cAAc,EACdC,QAAQ,CACR;MACF,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}