{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar _require = require(\"../optimize/InnerGraph\"),\n  getDependencyUsedByExportsCondition = _require.getDependencyUsedByExportsCondition;\nvar makeSerializable = require(\"../util/makeSerializable\");\nvar memoize = require(\"../util/memoize\");\nvar ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nvar getRawDataUrlModule = memoize(function () {\n  return require(\"../asset/RawDataUrlModule\");\n});\nvar URLDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(URLDependency, _ModuleDependency);\n  var _super = _createSuper(URLDependency);\n  /**\n   * @param {string} request request\n   * @param {[number, number]} range range of the arguments of new URL( |> ... <| )\n   * @param {[number, number]} outerRange range of the full |> new URL(...) <|\n   * @param {boolean=} relative use relative urls instead of absolute with base uri\n   */\n  function URLDependency(request, range, outerRange, relative) {\n    var _this;\n    _classCallCheck(this, URLDependency);\n    _this = _super.call(this, request);\n    _this.range = range;\n    _this.outerRange = outerRange;\n    _this.relative = relative || false;\n    /** @type {Set<string> | boolean} */\n    _this.usedByExports = undefined;\n    return _this;\n  }\n  _createClass(URLDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"new URL()\";\n    }\n  }, {\n    key: \"category\",\n    get: function get() {\n      return \"url\";\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph module graph\n     * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n     */\n  }, {\n    key: \"getCondition\",\n    value: function getCondition(moduleGraph) {\n      return getDependencyUsedByExportsCondition(this, this.usedByExports, moduleGraph);\n    }\n\n    /**\n     * @param {string} context context directory\n     * @returns {Module} a module\n     */\n  }, {\n    key: \"createIgnoredModule\",\n    value: function createIgnoredModule(context) {\n      var RawDataUrlModule = getRawDataUrlModule();\n      return new RawDataUrlModule(\"data:,\", \"ignored-asset\", \"(ignored asset)\");\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.outerRange);\n      write(this.relative);\n      write(this.usedByExports);\n      _get(_getPrototypeOf(URLDependency.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.outerRange = read();\n      this.relative = read();\n      this.usedByExports = read();\n      _get(_getPrototypeOf(URLDependency.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n  return URLDependency;\n}(ModuleDependency);\nURLDependency.Template = /*#__PURE__*/function (_ModuleDependency$Tem) {\n  _inherits(URLDependencyTemplate, _ModuleDependency$Tem);\n  var _super2 = _createSuper(URLDependencyTemplate);\n  function URLDependencyTemplate() {\n    _classCallCheck(this, URLDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(URLDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, templateContext) {\n      var chunkGraph = templateContext.chunkGraph,\n        moduleGraph = templateContext.moduleGraph,\n        runtimeRequirements = templateContext.runtimeRequirements,\n        runtimeTemplate = templateContext.runtimeTemplate,\n        runtime = templateContext.runtime;\n      var dep = /** @type {URLDependency} */dependency;\n      var connection = moduleGraph.getConnection(dep);\n      // Skip rendering depending when dependency is conditional\n      if (connection && !connection.isTargetActive(runtime)) {\n        source.replace(dep.outerRange[0], dep.outerRange[1] - 1, \"/* unused asset import */ undefined\");\n        return;\n      }\n      runtimeRequirements.add(RuntimeGlobals.require);\n      if (dep.relative) {\n        runtimeRequirements.add(RuntimeGlobals.relativeUrl);\n        source.replace(dep.outerRange[0], dep.outerRange[1] - 1, \"/* asset import */ new \".concat(RuntimeGlobals.relativeUrl, \"(\").concat(runtimeTemplate.moduleRaw({\n          chunkGraph: chunkGraph,\n          module: moduleGraph.getModule(dep),\n          request: dep.request,\n          runtimeRequirements: runtimeRequirements,\n          weak: false\n        }), \")\"));\n      } else {\n        runtimeRequirements.add(RuntimeGlobals.baseURI);\n        source.replace(dep.range[0], dep.range[1] - 1, \"/* asset import */ \".concat(runtimeTemplate.moduleRaw({\n          chunkGraph: chunkGraph,\n          module: moduleGraph.getModule(dep),\n          request: dep.request,\n          runtimeRequirements: runtimeRequirements,\n          weak: false\n        }), \", \").concat(RuntimeGlobals.baseURI));\n      }\n    }\n  }]);\n  return URLDependencyTemplate;\n}(ModuleDependency.Template);\nmakeSerializable(URLDependency, \"webpack/lib/dependencies/URLDependency\");\nmodule.exports = URLDependency;","map":{"version":3,"names":["RuntimeGlobals","require","getDependencyUsedByExportsCondition","makeSerializable","memoize","ModuleDependency","getRawDataUrlModule","URLDependency","request","range","outerRange","relative","usedByExports","undefined","moduleGraph","context","RawDataUrlModule","write","read","Template","dependency","source","templateContext","chunkGraph","runtimeRequirements","runtimeTemplate","runtime","dep","connection","getConnection","isTargetActive","replace","add","relativeUrl","moduleRaw","module","getModule","weak","baseURI","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/URLDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst {\n\tgetDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst memoize = require(\"../util/memoize\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst getRawDataUrlModule = memoize(() => require(\"../asset/RawDataUrlModule\"));\n\nclass URLDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {[number, number]} range range of the arguments of new URL( |> ... <| )\n\t * @param {[number, number]} outerRange range of the full |> new URL(...) <|\n\t * @param {boolean=} relative use relative urls instead of absolute with base uri\n\t */\n\tconstructor(request, range, outerRange, relative) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.outerRange = outerRange;\n\t\tthis.relative = relative || false;\n\t\t/** @type {Set<string> | boolean} */\n\t\tthis.usedByExports = undefined;\n\t}\n\n\tget type() {\n\t\treturn \"new URL()\";\n\t}\n\n\tget category() {\n\t\treturn \"url\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn getDependencyUsedByExportsCondition(\n\t\t\tthis,\n\t\t\tthis.usedByExports,\n\t\t\tmoduleGraph\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\tconst RawDataUrlModule = getRawDataUrlModule();\n\t\treturn new RawDataUrlModule(\"data:,\", `ignored-asset`, `(ignored asset)`);\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.outerRange);\n\t\twrite(this.relative);\n\t\twrite(this.usedByExports);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.outerRange = read();\n\t\tthis.relative = read();\n\t\tthis.usedByExports = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nURLDependency.Template = class URLDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst {\n\t\t\tchunkGraph,\n\t\t\tmoduleGraph,\n\t\t\truntimeRequirements,\n\t\t\truntimeTemplate,\n\t\t\truntime\n\t\t} = templateContext;\n\t\tconst dep = /** @type {URLDependency} */ (dependency);\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) {\n\t\t\tsource.replace(\n\t\t\t\tdep.outerRange[0],\n\t\t\t\tdep.outerRange[1] - 1,\n\t\t\t\t\"/* unused asset import */ undefined\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\n\t\tif (dep.relative) {\n\t\t\truntimeRequirements.add(RuntimeGlobals.relativeUrl);\n\t\t\tsource.replace(\n\t\t\t\tdep.outerRange[0],\n\t\t\t\tdep.outerRange[1] - 1,\n\t\t\t\t`/* asset import */ new ${\n\t\t\t\t\tRuntimeGlobals.relativeUrl\n\t\t\t\t}(${runtimeTemplate.moduleRaw({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\trequest: dep.request,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\tweak: false\n\t\t\t\t})})`\n\t\t\t);\n\t\t} else {\n\t\t\truntimeRequirements.add(RuntimeGlobals.baseURI);\n\n\t\t\tsource.replace(\n\t\t\t\tdep.range[0],\n\t\t\t\tdep.range[1] - 1,\n\t\t\t\t`/* asset import */ ${runtimeTemplate.moduleRaw({\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\trequest: dep.request,\n\t\t\t\t\truntimeRequirements,\n\t\t\t\t\tweak: false\n\t\t\t\t})}, ${RuntimeGlobals.baseURI}`\n\t\t\t);\n\t\t}\n\t}\n};\n\nmakeSerializable(URLDependency, \"webpack/lib/dependencies/URLDependency\");\n\nmodule.exports = URLDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,eAEIA,OAAO,CAAC,wBAAwB,CAAC;EADpCC,mCAAmC,YAAnCA,mCAAmC;AAEpC,IAAMC,gBAAgB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC5D,IAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC1C,IAAMI,gBAAgB,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMK,mBAAmB,GAAGF,OAAO,CAAC;EAAA,OAAMH,OAAO,CAAC,2BAA2B,CAAC;AAAA,EAAC;AAAC,IAE1EM,aAAa;EAAA;EAAA;EAClB;AACD;AACA;AACA;AACA;AACA;EACC,uBAAYC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,QAAQ,EAAE;IAAA;IAAA;IACjD,0BAAMH,OAAO;IACb,MAAKC,KAAK,GAAGA,KAAK;IAClB,MAAKC,UAAU,GAAGA,UAAU;IAC5B,MAAKC,QAAQ,GAAGA,QAAQ,IAAI,KAAK;IACjC;IACA,MAAKC,aAAa,GAAGC,SAAS;IAAC;EAChC;EAAC;IAAA;IAAA,KAED,eAAW;MACV,OAAO,WAAW;IACnB;EAAC;IAAA;IAAA,KAED,eAAe;MACd,OAAO,KAAK;IACb;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,sBAAaC,WAAW,EAAE;MACzB,OAAOZ,mCAAmC,CACzC,IAAI,EACJ,IAAI,CAACU,aAAa,EAClBE,WAAW,CACX;IACF;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,6BAAoBC,OAAO,EAAE;MAC5B,IAAMC,gBAAgB,GAAGV,mBAAmB,EAAE;MAC9C,OAAO,IAAIU,gBAAgB,CAAC,QAAQ,qCAAqC;IAC1E;EAAC;IAAA;IAAA,OAED,mBAAUD,OAAO,EAAE;MAClB,IAAQE,KAAK,GAAKF,OAAO,CAAjBE,KAAK;MACbA,KAAK,CAAC,IAAI,CAACP,UAAU,CAAC;MACtBO,KAAK,CAAC,IAAI,CAACN,QAAQ,CAAC;MACpBM,KAAK,CAAC,IAAI,CAACL,aAAa,CAAC;MACzB,6EAAgBG,OAAO;IACxB;EAAC;IAAA;IAAA,OAED,qBAAYA,OAAO,EAAE;MACpB,IAAQG,IAAI,GAAKH,OAAO,CAAhBG,IAAI;MACZ,IAAI,CAACR,UAAU,GAAGQ,IAAI,EAAE;MACxB,IAAI,CAACP,QAAQ,GAAGO,IAAI,EAAE;MACtB,IAAI,CAACN,aAAa,GAAGM,IAAI,EAAE;MAC3B,+EAAkBH,OAAO;IAC1B;EAAC;EAAA;AAAA,EA3D0BV,gBAAgB;AA8D5CE,aAAa,CAACY,QAAQ;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAGrB;AACD;AACA;AACA;AACA;AACA;IACC,eAAMC,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;MAC1C,IACCC,UAAU,GAKPD,eAAe,CALlBC,UAAU;QACVT,WAAW,GAIRQ,eAAe,CAJlBR,WAAW;QACXU,mBAAmB,GAGhBF,eAAe,CAHlBE,mBAAmB;QACnBC,eAAe,GAEZH,eAAe,CAFlBG,eAAe;QACfC,OAAO,GACJJ,eAAe,CADlBI,OAAO;MAER,IAAMC,GAAG,GAAG,4BAA8BP,UAAW;MACrD,IAAMQ,UAAU,GAAGd,WAAW,CAACe,aAAa,CAACF,GAAG,CAAC;MACjD;MACA,IAAIC,UAAU,IAAI,CAACA,UAAU,CAACE,cAAc,CAACJ,OAAO,CAAC,EAAE;QACtDL,MAAM,CAACU,OAAO,CACbJ,GAAG,CAACjB,UAAU,CAAC,CAAC,CAAC,EACjBiB,GAAG,CAACjB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EACrB,qCAAqC,CACrC;QACD;MACD;MAEAc,mBAAmB,CAACQ,GAAG,CAAChC,cAAc,CAACC,OAAO,CAAC;MAE/C,IAAI0B,GAAG,CAAChB,QAAQ,EAAE;QACjBa,mBAAmB,CAACQ,GAAG,CAAChC,cAAc,CAACiC,WAAW,CAAC;QACnDZ,MAAM,CAACU,OAAO,CACbJ,GAAG,CAACjB,UAAU,CAAC,CAAC,CAAC,EACjBiB,GAAG,CAACjB,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,mCAEpBV,cAAc,CAACiC,WAAW,cACvBR,eAAe,CAACS,SAAS,CAAC;UAC7BX,UAAU,EAAVA,UAAU;UACVY,MAAM,EAAErB,WAAW,CAACsB,SAAS,CAACT,GAAG,CAAC;UAClCnB,OAAO,EAAEmB,GAAG,CAACnB,OAAO;UACpBgB,mBAAmB,EAAnBA,mBAAmB;UACnBa,IAAI,EAAE;QACP,CAAC,CAAC,OACF;MACF,CAAC,MAAM;QACNb,mBAAmB,CAACQ,GAAG,CAAChC,cAAc,CAACsC,OAAO,CAAC;QAE/CjB,MAAM,CAACU,OAAO,CACbJ,GAAG,CAAClB,KAAK,CAAC,CAAC,CAAC,EACZkB,GAAG,CAAClB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,+BACMgB,eAAe,CAACS,SAAS,CAAC;UAC/CX,UAAU,EAAVA,UAAU;UACVY,MAAM,EAAErB,WAAW,CAACsB,SAAS,CAACT,GAAG,CAAC;UAClCnB,OAAO,EAAEmB,GAAG,CAACnB,OAAO;UACpBgB,mBAAmB,EAAnBA,mBAAmB;UACnBa,IAAI,EAAE;QACP,CAAC,CAAC,eAAKrC,cAAc,CAACsC,OAAO,EAC7B;MACF;IACD;EAAC;EAAA;AAAA,EA5DDjC,gBAAgB,CAACc,QAAQ,CA6DzB;AAEDhB,gBAAgB,CAACI,aAAa,EAAE,wCAAwC,CAAC;AAEzE4B,MAAM,CAACI,OAAO,GAAGhC,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}