{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DllEntryPlugin = require(\"./DllEntryPlugin\");\nvar FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\nvar LibManifestPlugin = require(\"./LibManifestPlugin\");\nvar createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nvar validate = createSchemaValidation(require(\"../schemas/plugins/DllPlugin.check.js\"), function () {\n  return require(\"../schemas/plugins/DllPlugin.json\");\n}, {\n  name: \"Dll Plugin\",\n  baseDataPath: \"options\"\n});\nvar DllPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {DllPluginOptions} options options object\n   */\n  function DllPlugin(options) {\n    _classCallCheck(this, DllPlugin);\n    validate(options);\n    this.options = _objectSpread(_objectSpread({}, options), {}, {\n      entryOnly: options.entryOnly !== false\n    });\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(DllPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.entryOption.tap(\"DllPlugin\", function (context, entry) {\n        if (typeof entry !== \"function\") {\n          for (var _i = 0, _Object$keys = Object.keys(entry); _i < _Object$keys.length; _i++) {\n            var name = _Object$keys[_i];\n            var options = {\n              name: name,\n              filename: entry.filename\n            };\n            new DllEntryPlugin(context, entry[name].import, options).apply(compiler);\n          }\n        } else {\n          throw new Error(\"DllPlugin doesn't support dynamic entry (function) yet\");\n        }\n        return true;\n      });\n      new LibManifestPlugin(this.options).apply(compiler);\n      if (!this.options.entryOnly) {\n        new FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n      }\n    }\n  }]);\n  return DllPlugin;\n}();\nmodule.exports = DllPlugin;","map":{"version":3,"names":["DllEntryPlugin","require","FlagAllModulesAsUsedPlugin","LibManifestPlugin","createSchemaValidation","validate","name","baseDataPath","DllPlugin","options","entryOnly","compiler","hooks","entryOption","tap","context","entry","Object","keys","filename","import","apply","Error","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/DllPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\nconst FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\nconst createSchemaValidation = require(\"./util/create-schema-validation\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../schemas/plugins/DllPlugin.check.js\"),\n\t() => require(\"../schemas/plugins/DllPlugin.json\"),\n\t{\n\t\tname: \"Dll Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\n\nclass DllPlugin {\n\t/**\n\t * @param {DllPluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\t\tthis.options = {\n\t\t\t...options,\n\t\t\tentryOnly: options.entryOnly !== false\n\t\t};\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"DllPlugin\", (context, entry) => {\n\t\t\tif (typeof entry !== \"function\") {\n\t\t\t\tfor (const name of Object.keys(entry)) {\n\t\t\t\t\tconst options = {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tfilename: entry.filename\n\t\t\t\t\t};\n\t\t\t\t\tnew DllEntryPlugin(context, entry[name].import, options).apply(\n\t\t\t\t\t\tcompiler\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"DllPlugin doesn't support dynamic entry (function) yet\"\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tnew LibManifestPlugin(this.options).apply(compiler);\n\t\tif (!this.options.entryOnly) {\n\t\t\tnew FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n\t\t}\n\t}\n}\n\nmodule.exports = DllPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAClD,IAAMC,0BAA0B,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAC1E,IAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACxD,IAAMG,sBAAsB,GAAGH,OAAO,CAAC,iCAAiC,CAAC;;AAEzE;AACA;;AAEA,IAAMI,QAAQ,GAAGD,sBAAsB,CACtCH,OAAO,CAAC,uCAAuC,CAAC,EAChD;EAAA,OAAMA,OAAO,CAAC,mCAAmC,CAAC;AAAA,GAClD;EACCK,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;AACf,CAAC,CACD;AAAC,IAEIC,SAAS;EACd;AACD;AACA;EACC,mBAAYC,OAAO,EAAE;IAAA;IACpBJ,QAAQ,CAACI,OAAO,CAAC;IACjB,IAAI,CAACA,OAAO,mCACRA,OAAO;MACVC,SAAS,EAAED,OAAO,CAACC,SAAS,KAAK;IAAK,EACtC;EACF;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,WAAW,EAAE,UAACC,OAAO,EAAEC,KAAK,EAAK;QAC/D,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;UAChC,gCAAmBC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,kCAAE;YAAlC,IAAMV,IAAI;YACd,IAAMG,OAAO,GAAG;cACfH,IAAI,EAAJA,IAAI;cACJa,QAAQ,EAAEH,KAAK,CAACG;YACjB,CAAC;YACD,IAAInB,cAAc,CAACe,OAAO,EAAEC,KAAK,CAACV,IAAI,CAAC,CAACc,MAAM,EAAEX,OAAO,CAAC,CAACY,KAAK,CAC7DV,QAAQ,CACR;UACF;QACD,CAAC,MAAM;UACN,MAAM,IAAIW,KAAK,CACd,wDAAwD,CACxD;QACF;QACA,OAAO,IAAI;MACZ,CAAC,CAAC;MACF,IAAInB,iBAAiB,CAAC,IAAI,CAACM,OAAO,CAAC,CAACY,KAAK,CAACV,QAAQ,CAAC;MACnD,IAAI,CAAC,IAAI,CAACF,OAAO,CAACC,SAAS,EAAE;QAC5B,IAAIR,0BAA0B,CAAC,WAAW,CAAC,CAACmB,KAAK,CAACV,QAAQ,CAAC;MAC5D;IACD;EAAC;EAAA;AAAA;AAGFY,MAAM,CAACC,OAAO,GAAGhB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}