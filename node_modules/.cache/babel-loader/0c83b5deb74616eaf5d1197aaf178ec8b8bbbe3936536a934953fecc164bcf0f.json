{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ArraySerializer = /*#__PURE__*/function () {\n  function ArraySerializer() {\n    _classCallCheck(this, ArraySerializer);\n  }\n  _createClass(ArraySerializer, [{\n    key: \"serialize\",\n    value: function serialize(array, _ref) {\n      var write = _ref.write;\n      write(array.length);\n      var _iterator = _createForOfIteratorHelper(array),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          write(item);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(_ref2) {\n      var read = _ref2.read;\n      var length = read();\n      var array = [];\n      for (var i = 0; i < length; i++) {\n        array.push(read());\n      }\n      return array;\n    }\n  }]);\n  return ArraySerializer;\n}();\nmodule.exports = ArraySerializer;","map":{"version":3,"names":["ArraySerializer","array","write","length","item","read","i","push","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/serialization/ArraySerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nclass ArraySerializer {\n\tserialize(array, { write }) {\n\t\twrite(array.length);\n\t\tfor (const item of array) write(item);\n\t}\n\tdeserialize({ read }) {\n\t\tconst length = read();\n\t\tconst array = [];\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tarray.push(read());\n\t\t}\n\t\treturn array;\n\t}\n}\n\nmodule.exports = ArraySerializer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA,IAEPA,eAAe;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACpB,mBAAUC,KAAK,QAAa;MAAA,IAATC,KAAK,QAALA,KAAK;MACvBA,KAAK,CAACD,KAAK,CAACE,MAAM,CAAC;MAAC,2CACDF,KAAK;QAAA;MAAA;QAAxB,oDAA0B;UAAA,IAAfG,IAAI;UAAWF,KAAK,CAACE,IAAI,CAAC;QAAA;MAAC;QAAA;MAAA;QAAA;MAAA;IACvC;EAAC;IAAA;IAAA,OACD,4BAAsB;MAAA,IAARC,IAAI,SAAJA,IAAI;MACjB,IAAMF,MAAM,GAAGE,IAAI,EAAE;MACrB,IAAMJ,KAAK,GAAG,EAAE;MAChB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;QAChCL,KAAK,CAACM,IAAI,CAACF,IAAI,EAAE,CAAC;MACnB;MACA,OAAOJ,KAAK;IACb;EAAC;EAAA;AAAA;AAGFO,MAAM,CAACC,OAAO,GAAGT,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}