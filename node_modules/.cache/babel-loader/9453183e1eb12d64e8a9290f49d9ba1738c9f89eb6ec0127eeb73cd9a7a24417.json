{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"chrome-trace-event\"),\n  Tracer = _require.Tracer;\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar _require2 = require(\"../util/fs\"),\n  dirname = _require2.dirname,\n  mkdirpSync = _require2.mkdirpSync;\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n/** @typedef {import(\"../util/fs\").IntermediateFileSystem} IntermediateFileSystem */\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/debug/ProfilingPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n}, {\n  name: \"Profiling Plugin\",\n  baseDataPath: \"options\"\n});\nvar inspector = undefined;\ntry {\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  inspector = require(\"inspector\");\n} catch (e) {\n  console.log(\"Unable to CPU profile in < node 8.0\");\n}\nvar Profiler = /*#__PURE__*/function () {\n  function Profiler(inspector) {\n    _classCallCheck(this, Profiler);\n    this.session = undefined;\n    this.inspector = inspector;\n    this._startTime = 0;\n  }\n  _createClass(Profiler, [{\n    key: \"hasSession\",\n    value: function hasSession() {\n      return this.session !== undefined;\n    }\n  }, {\n    key: \"startProfiling\",\n    value: function startProfiling() {\n      if (this.inspector === undefined) {\n        return Promise.resolve();\n      }\n      try {\n        this.session = new inspector.Session();\n        this.session.connect();\n      } catch (_) {\n        this.session = undefined;\n        return Promise.resolve();\n      }\n      var hrtime = process.hrtime();\n      this._startTime = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000);\n      return Promise.all([this.sendCommand(\"Profiler.setSamplingInterval\", {\n        interval: 100\n      }), this.sendCommand(\"Profiler.enable\"), this.sendCommand(\"Profiler.start\")]);\n    }\n  }, {\n    key: \"sendCommand\",\n    value: function sendCommand(method, params) {\n      var _this = this;\n      if (this.hasSession()) {\n        return new Promise(function (res, rej) {\n          return _this.session.post(method, params, function (err, params) {\n            if (err !== null) {\n              rej(err);\n            } else {\n              res(params);\n            }\n          });\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hasSession()) {\n        this.session.disconnect();\n      }\n      return Promise.resolve();\n    }\n  }, {\n    key: \"stopProfiling\",\n    value: function stopProfiling() {\n      var _this2 = this;\n      return this.sendCommand(\"Profiler.stop\").then(function (_ref) {\n        var profile = _ref.profile;\n        var hrtime = process.hrtime();\n        var endTime = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000);\n        if (profile.startTime < _this2._startTime || profile.endTime > endTime) {\n          // In some cases timestamps mismatch and we need to adjust them\n          // Both process.hrtime and the inspector timestamps claim to be relative\n          // to a unknown point in time. But they do not guarantee that this is the\n          // same point in time.\n          var duration = profile.endTime - profile.startTime;\n          var ownDuration = endTime - _this2._startTime;\n          var untracked = Math.max(0, ownDuration - duration);\n          profile.startTime = _this2._startTime + untracked / 2;\n          profile.endTime = endTime - untracked / 2;\n        }\n        return {\n          profile: profile\n        };\n      });\n    }\n  }]);\n  return Profiler;\n}();\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n/**\n * @param {IntermediateFileSystem} fs filesystem used for output\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nvar createTrace = function createTrace(fs, outputPath) {\n  var trace = new Tracer();\n  var profiler = new Profiler(inspector);\n  if (/\\/|\\\\/.test(outputPath)) {\n    var dirPath = dirname(fs, outputPath);\n    mkdirpSync(fs, dirPath);\n  }\n  var fsStream = fs.createWriteStream(outputPath);\n  var counter = 0;\n  trace.pipe(fsStream);\n  // These are critical events that need to be inserted so that tools like\n  // chrome dev tools can load the profile.\n  trace.instantEvent({\n    name: \"TracingStartedInPage\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\",\n        page: \"0xfff\",\n        frames: [{\n          frame: \"0xfff\",\n          url: \"webpack\",\n          name: \"\"\n        }]\n      }\n    }\n  });\n  trace.instantEvent({\n    name: \"TracingStartedInBrowser\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\"\n      }\n    }\n  });\n  return {\n    trace: trace,\n    counter: counter,\n    profiler: profiler,\n    end: function end(callback) {\n      trace.push(\"]\");\n      // Wait until the write stream finishes.\n      fsStream.on(\"close\", function () {\n        callback();\n      });\n      // Tear down the readable trace stream.\n      trace.push(null);\n    }\n  };\n};\nvar pluginName = \"ProfilingPlugin\";\nvar ProfilingPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {ProfilingPluginOptions=} options options object\n   */\n  function ProfilingPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, ProfilingPlugin);\n    validate(options);\n    this.outputPath = options.outputPath || \"events.json\";\n  }\n  _createClass(ProfilingPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var tracer = createTrace(compiler.intermediateFileSystem, this.outputPath);\n      tracer.profiler.startProfiling();\n\n      // Compiler Hooks\n      Object.keys(compiler.hooks).forEach(function (hookName) {\n        var hook = compiler.hooks[hookName];\n        if (hook) {\n          hook.intercept(makeInterceptorFor(\"Compiler\", tracer)(hookName));\n        }\n      });\n      Object.keys(compiler.resolverFactory.hooks).forEach(function (hookName) {\n        var hook = compiler.resolverFactory.hooks[hookName];\n        if (hook) {\n          hook.intercept(makeInterceptorFor(\"Resolver\", tracer)(hookName));\n        }\n      });\n      compiler.hooks.compilation.tap(pluginName, function (compilation, _ref2) {\n        var normalModuleFactory = _ref2.normalModuleFactory,\n          contextModuleFactory = _ref2.contextModuleFactory;\n        interceptAllHooksFor(compilation, tracer, \"Compilation\");\n        interceptAllHooksFor(normalModuleFactory, tracer, \"Normal Module Factory\");\n        interceptAllHooksFor(contextModuleFactory, tracer, \"Context Module Factory\");\n        interceptAllParserHooks(normalModuleFactory, tracer);\n        interceptAllJavascriptModulesPluginHooks(compilation, tracer);\n      });\n\n      // We need to write out the CPU profile when we are all done.\n      compiler.hooks.done.tapAsync({\n        name: pluginName,\n        stage: Infinity\n      }, function (stats, callback) {\n        if (compiler.watchMode) return callback();\n        tracer.profiler.stopProfiling().then(function (parsedResults) {\n          if (parsedResults === undefined) {\n            tracer.profiler.destroy();\n            tracer.end(callback);\n            return;\n          }\n          var cpuStartTime = parsedResults.profile.startTime;\n          var cpuEndTime = parsedResults.profile.endTime;\n          tracer.trace.completeEvent({\n            name: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n            id: ++tracer.counter,\n            cat: [\"toplevel\"],\n            ts: cpuStartTime,\n            args: {\n              src_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n              src_func: \"Accept\"\n            }\n          });\n          tracer.trace.completeEvent({\n            name: \"EvaluateScript\",\n            id: ++tracer.counter,\n            cat: [\"devtools.timeline\"],\n            ts: cpuStartTime,\n            dur: cpuEndTime - cpuStartTime,\n            args: {\n              data: {\n                url: \"webpack\",\n                lineNumber: 1,\n                columnNumber: 1,\n                frame: \"0xFFF\"\n              }\n            }\n          });\n          tracer.trace.instantEvent({\n            name: \"CpuProfile\",\n            id: ++tracer.counter,\n            cat: [\"disabled-by-default-devtools.timeline\"],\n            ts: cpuEndTime,\n            args: {\n              data: {\n                cpuProfile: parsedResults.profile\n              }\n            }\n          });\n          tracer.profiler.destroy();\n          tracer.end(callback);\n        });\n      });\n    }\n  }]);\n  return ProfilingPlugin;\n}();\nvar interceptAllHooksFor = function interceptAllHooksFor(instance, tracer, logLabel) {\n  if (Reflect.has(instance, \"hooks\")) {\n    Object.keys(instance.hooks).forEach(function (hookName) {\n      var hook = instance.hooks[hookName];\n      if (hook && !hook._fakeHook) {\n        hook.intercept(makeInterceptorFor(logLabel, tracer)(hookName));\n      }\n    });\n  }\n};\nvar interceptAllParserHooks = function interceptAllParserHooks(moduleFactory, tracer) {\n  var moduleTypes = [\"javascript/auto\", \"javascript/dynamic\", \"javascript/esm\", \"json\", \"webassembly/async\", \"webassembly/sync\"];\n  moduleTypes.forEach(function (moduleType) {\n    moduleFactory.hooks.parser.for(moduleType).tap(\"ProfilingPlugin\", function (parser, parserOpts) {\n      interceptAllHooksFor(parser, tracer, \"Parser\");\n    });\n  });\n};\nvar interceptAllJavascriptModulesPluginHooks = function interceptAllJavascriptModulesPluginHooks(compilation, tracer) {\n  interceptAllHooksFor({\n    hooks: require(\"../javascript/JavascriptModulesPlugin\").getCompilationHooks(compilation)\n  }, tracer, \"JavascriptModulesPlugin\");\n};\nvar makeInterceptorFor = function makeInterceptorFor(instance, tracer) {\n  return function (hookName) {\n    return {\n      register: function register(tapInfo) {\n        var name = tapInfo.name,\n          type = tapInfo.type,\n          fn = tapInfo.fn;\n        var newFn =\n        // Don't tap our own hooks to ensure stream can close cleanly\n        name === pluginName ? fn : makeNewProfiledTapFn(hookName, tracer, {\n          name: name,\n          type: type,\n          fn: fn\n        });\n        return _objectSpread(_objectSpread({}, tapInfo), {}, {\n          fn: newFn\n        });\n      }\n    };\n  };\n};\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nvar makeNewProfiledTapFn = function makeNewProfiledTapFn(hookName, tracer, _ref3) {\n  var name = _ref3.name,\n    type = _ref3.type,\n    fn = _ref3.fn;\n  var defaultCategory = [\"blink.user_timing\"];\n  switch (type) {\n    case \"promise\":\n      return function () {\n        var id = ++tracer.counter;\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        var promise = /** @type {Promise<*>} */fn.apply(void 0, arguments);\n        return promise.then(function (r) {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          return r;\n        });\n      };\n    case \"async\":\n      return function () {\n        var id = ++tracer.counter;\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var callback = args.pop();\n        fn.apply(void 0, args.concat([function () {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          callback.apply(void 0, arguments);\n        }]));\n      };\n    case \"sync\":\n      return function () {\n        var id = ++tracer.counter;\n        // Do not instrument ourself due to the CPU\n        // profile needing to be the last event in the trace.\n        if (name === pluginName) {\n          return fn.apply(void 0, arguments);\n        }\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        var r;\n        try {\n          r = fn.apply(void 0, arguments);\n        } catch (error) {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          throw error;\n        }\n        tracer.trace.end({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        return r;\n      };\n    default:\n      break;\n  }\n};\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;","map":{"version":3,"names":["require","Tracer","createSchemaValidation","dirname","mkdirpSync","validate","name","baseDataPath","inspector","undefined","e","console","log","Profiler","session","_startTime","Promise","resolve","Session","connect","_","hrtime","process","Math","round","all","sendCommand","interval","method","params","hasSession","res","rej","post","err","disconnect","then","profile","endTime","startTime","duration","ownDuration","untracked","max","createTrace","fs","outputPath","trace","profiler","test","dirPath","fsStream","createWriteStream","counter","pipe","instantEvent","id","cat","args","data","sessionId","page","frames","frame","url","end","callback","push","on","pluginName","ProfilingPlugin","options","compiler","tracer","intermediateFileSystem","startProfiling","Object","keys","hooks","forEach","hookName","hook","intercept","makeInterceptorFor","resolverFactory","compilation","tap","normalModuleFactory","contextModuleFactory","interceptAllHooksFor","interceptAllParserHooks","interceptAllJavascriptModulesPluginHooks","done","tapAsync","stage","Infinity","stats","watchMode","stopProfiling","parsedResults","destroy","cpuStartTime","cpuEndTime","completeEvent","ts","src_file","src_func","dur","lineNumber","columnNumber","cpuProfile","instance","logLabel","Reflect","has","_fakeHook","moduleFactory","moduleTypes","moduleType","parser","for","parserOpts","getCompilationHooks","register","tapInfo","type","fn","newFn","makeNewProfiledTapFn","defaultCategory","begin","promise","r","pop","error","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/debug/ProfilingPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst { Tracer } = require(\"chrome-trace-event\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst { dirname, mkdirpSync } = require(\"../util/fs\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n/** @typedef {import(\"../util/fs\").IntermediateFileSystem} IntermediateFileSystem */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/debug/ProfilingPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/debug/ProfilingPlugin.json\"),\n\t{\n\t\tname: \"Profiling Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nlet inspector = undefined;\n\ntry {\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tinspector = require(\"inspector\");\n} catch (e) {\n\tconsole.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n\tconstructor(inspector) {\n\t\tthis.session = undefined;\n\t\tthis.inspector = inspector;\n\t\tthis._startTime = 0;\n\t}\n\n\thasSession() {\n\t\treturn this.session !== undefined;\n\t}\n\n\tstartProfiling() {\n\t\tif (this.inspector === undefined) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\ttry {\n\t\t\tthis.session = new inspector.Session();\n\t\t\tthis.session.connect();\n\t\t} catch (_) {\n\t\t\tthis.session = undefined;\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst hrtime = process.hrtime();\n\t\tthis._startTime = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000);\n\n\t\treturn Promise.all([\n\t\t\tthis.sendCommand(\"Profiler.setSamplingInterval\", {\n\t\t\t\tinterval: 100\n\t\t\t}),\n\t\t\tthis.sendCommand(\"Profiler.enable\"),\n\t\t\tthis.sendCommand(\"Profiler.start\")\n\t\t]);\n\t}\n\n\tsendCommand(method, params) {\n\t\tif (this.hasSession()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\treturn this.session.post(method, params, (err, params) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(params);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this.hasSession()) {\n\t\t\tthis.session.disconnect();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstopProfiling() {\n\t\treturn this.sendCommand(\"Profiler.stop\").then(({ profile }) => {\n\t\t\tconst hrtime = process.hrtime();\n\t\t\tconst endTime = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000);\n\t\t\tif (profile.startTime < this._startTime || profile.endTime > endTime) {\n\t\t\t\t// In some cases timestamps mismatch and we need to adjust them\n\t\t\t\t// Both process.hrtime and the inspector timestamps claim to be relative\n\t\t\t\t// to a unknown point in time. But they do not guarantee that this is the\n\t\t\t\t// same point in time.\n\t\t\t\tconst duration = profile.endTime - profile.startTime;\n\t\t\t\tconst ownDuration = endTime - this._startTime;\n\t\t\t\tconst untracked = Math.max(0, ownDuration - duration);\n\t\t\t\tprofile.startTime = this._startTime + untracked / 2;\n\t\t\t\tprofile.endTime = endTime - untracked / 2;\n\t\t\t}\n\t\t\treturn { profile };\n\t\t});\n\t}\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {IntermediateFileSystem} fs filesystem used for output\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = (fs, outputPath) => {\n\tconst trace = new Tracer();\n\tconst profiler = new Profiler(inspector);\n\tif (/\\/|\\\\/.test(outputPath)) {\n\t\tconst dirPath = dirname(fs, outputPath);\n\t\tmkdirpSync(fs, dirPath);\n\t}\n\tconst fsStream = fs.createWriteStream(outputPath);\n\n\tlet counter = 0;\n\n\ttrace.pipe(fsStream);\n\t// These are critical events that need to be inserted so that tools like\n\t// chrome dev tools can load the profile.\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInPage\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\",\n\t\t\t\tpage: \"0xfff\",\n\t\t\t\tframes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tframe: \"0xfff\",\n\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\tname: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInBrowser\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\"\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttrace,\n\t\tcounter,\n\t\tprofiler,\n\t\tend: callback => {\n\t\t\ttrace.push(\"]\");\n\t\t\t// Wait until the write stream finishes.\n\t\t\tfsStream.on(\"close\", () => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\t// Tear down the readable trace stream.\n\t\t\ttrace.push(null);\n\t\t}\n\t};\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n\t/**\n\t * @param {ProfilingPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidate(options);\n\t\tthis.outputPath = options.outputPath || \"events.json\";\n\t}\n\n\tapply(compiler) {\n\t\tconst tracer = createTrace(\n\t\t\tcompiler.intermediateFileSystem,\n\t\t\tthis.outputPath\n\t\t);\n\t\ttracer.profiler.startProfiling();\n\n\t\t// Compiler Hooks\n\t\tObject.keys(compiler.hooks).forEach(hookName => {\n\t\t\tconst hook = compiler.hooks[hookName];\n\t\t\tif (hook) {\n\t\t\t\thook.intercept(makeInterceptorFor(\"Compiler\", tracer)(hookName));\n\t\t\t}\n\t\t});\n\n\t\tObject.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n\t\t\tconst hook = compiler.resolverFactory.hooks[hookName];\n\t\t\tif (hook) {\n\t\t\t\thook.intercept(makeInterceptorFor(\"Resolver\", tracer)(hookName));\n\t\t\t}\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tpluginName,\n\t\t\t(compilation, { normalModuleFactory, contextModuleFactory }) => {\n\t\t\t\tinterceptAllHooksFor(compilation, tracer, \"Compilation\");\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tnormalModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Normal Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tcontextModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Context Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllParserHooks(normalModuleFactory, tracer);\n\t\t\t\tinterceptAllJavascriptModulesPluginHooks(compilation, tracer);\n\t\t\t}\n\t\t);\n\n\t\t// We need to write out the CPU profile when we are all done.\n\t\tcompiler.hooks.done.tapAsync(\n\t\t\t{\n\t\t\t\tname: pluginName,\n\t\t\t\tstage: Infinity\n\t\t\t},\n\t\t\t(stats, callback) => {\n\t\t\t\tif (compiler.watchMode) return callback();\n\t\t\t\ttracer.profiler.stopProfiling().then(parsedResults => {\n\t\t\t\t\tif (parsedResults === undefined) {\n\t\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\t\ttracer.end(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cpuStartTime = parsedResults.profile.startTime;\n\t\t\t\t\tconst cpuEndTime = parsedResults.profile.endTime;\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"toplevel\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tsrc_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n\t\t\t\t\t\t\tsrc_func: \"Accept\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"EvaluateScript\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"devtools.timeline\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\tdur: cpuEndTime - cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\t\t\tcolumnNumber: 1,\n\t\t\t\t\t\t\t\tframe: \"0xFFF\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.instantEvent({\n\t\t\t\t\t\tname: \"CpuProfile\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\t\t\t\t\tts: cpuEndTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tcpuProfile: parsedResults.profile\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\ttracer.end(callback);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n\tif (Reflect.has(instance, \"hooks\")) {\n\t\tObject.keys(instance.hooks).forEach(hookName => {\n\t\t\tconst hook = instance.hooks[hookName];\n\t\t\tif (hook && !hook._fakeHook) {\n\t\t\t\thook.intercept(makeInterceptorFor(logLabel, tracer)(hookName));\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n\tconst moduleTypes = [\n\t\t\"javascript/auto\",\n\t\t\"javascript/dynamic\",\n\t\t\"javascript/esm\",\n\t\t\"json\",\n\t\t\"webassembly/async\",\n\t\t\"webassembly/sync\"\n\t];\n\n\tmoduleTypes.forEach(moduleType => {\n\t\tmoduleFactory.hooks.parser\n\t\t\t.for(moduleType)\n\t\t\t.tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n\t\t\t\tinterceptAllHooksFor(parser, tracer, \"Parser\");\n\t\t\t});\n\t});\n};\n\nconst interceptAllJavascriptModulesPluginHooks = (compilation, tracer) => {\n\tinterceptAllHooksFor(\n\t\t{\n\t\t\thooks:\n\t\t\t\trequire(\"../javascript/JavascriptModulesPlugin\").getCompilationHooks(\n\t\t\t\t\tcompilation\n\t\t\t\t)\n\t\t},\n\t\ttracer,\n\t\t\"JavascriptModulesPlugin\"\n\t);\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n\tregister: tapInfo => {\n\t\tconst { name, type, fn } = tapInfo;\n\t\tconst newFn =\n\t\t\t// Don't tap our own hooks to ensure stream can close cleanly\n\t\t\tname === pluginName\n\t\t\t\t? fn\n\t\t\t\t: makeNewProfiledTapFn(hookName, tracer, {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tfn\n\t\t\t\t  });\n\t\treturn {\n\t\t\t...tapInfo,\n\t\t\tfn: newFn\n\t\t};\n\t}\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, { name, type, fn }) => {\n\tconst defaultCategory = [\"blink.user_timing\"];\n\n\tswitch (type) {\n\t\tcase \"promise\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst promise = /** @type {Promise<*>} */ (fn(...args));\n\t\t\t\treturn promise.then(r => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"async\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst callback = args.pop();\n\t\t\t\tfn(...args, (...r) => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tcallback(...r);\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"sync\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\t// Do not instrument ourself due to the CPU\n\t\t\t\t// profile needing to be the last event in the trace.\n\t\t\t\tif (name === pluginName) {\n\t\t\t\t\treturn fn(...args);\n\t\t\t\t}\n\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tlet r;\n\t\t\t\ttry {\n\t\t\t\t\tr = fn(...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\ttracer.trace.end({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t};\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}