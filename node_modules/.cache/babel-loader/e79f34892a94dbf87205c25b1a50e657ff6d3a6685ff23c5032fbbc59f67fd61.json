{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ArrayPushCallbackChunkFormatPlugin = require(\"../javascript/ArrayPushCallbackChunkFormatPlugin\");\nvar EnableChunkLoadingPlugin = require(\"../javascript/EnableChunkLoadingPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\nvar WebWorkerTemplatePlugin = /*#__PURE__*/function () {\n  function WebWorkerTemplatePlugin() {\n    _classCallCheck(this, WebWorkerTemplatePlugin);\n  }\n  _createClass(WebWorkerTemplatePlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.options.output.chunkLoading = \"import-scripts\";\n      new ArrayPushCallbackChunkFormatPlugin().apply(compiler);\n      new EnableChunkLoadingPlugin(\"import-scripts\").apply(compiler);\n    }\n  }]);\n  return WebWorkerTemplatePlugin;\n}();\nmodule.exports = WebWorkerTemplatePlugin;","map":{"version":3,"names":["ArrayPushCallbackChunkFormatPlugin","require","EnableChunkLoadingPlugin","WebWorkerTemplatePlugin","compiler","options","output","chunkLoading","apply","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/webworker/WebWorkerTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ArrayPushCallbackChunkFormatPlugin = require(\"../javascript/ArrayPushCallbackChunkFormatPlugin\");\nconst EnableChunkLoadingPlugin = require(\"../javascript/EnableChunkLoadingPlugin\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nclass WebWorkerTemplatePlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.options.output.chunkLoading = \"import-scripts\";\n\t\tnew ArrayPushCallbackChunkFormatPlugin().apply(compiler);\n\t\tnew EnableChunkLoadingPlugin(\"import-scripts\").apply(compiler);\n\t}\n}\nmodule.exports = WebWorkerTemplatePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,kCAAkC,GAAGC,OAAO,CAAC,kDAAkD,CAAC;AACtG,IAAMC,wBAAwB,GAAGD,OAAO,CAAC,wCAAwC,CAAC;;AAElF;AAAA,IAEME,uBAAuB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC5B;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,YAAY,GAAG,gBAAgB;MACvD,IAAIP,kCAAkC,EAAE,CAACQ,KAAK,CAACJ,QAAQ,CAAC;MACxD,IAAIF,wBAAwB,CAAC,gBAAgB,CAAC,CAACM,KAAK,CAACJ,QAAQ,CAAC;IAC/D;EAAC;EAAA;AAAA;AAEFK,MAAM,CAACC,OAAO,GAAGP,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}