{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\nvar Template = require(\"../Template\");\nvar WasmChunkLoadingRuntimeModule = require(\"../wasm-sync/WasmChunkLoadingRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n// TODO webpack 6 remove\nvar ReadFileCompileWasmPlugin = /*#__PURE__*/function () {\n  function ReadFileCompileWasmPlugin(options) {\n    _classCallCheck(this, ReadFileCompileWasmPlugin);\n    this.options = options || {};\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(ReadFileCompileWasmPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.thisCompilation.tap(\"ReadFileCompileWasmPlugin\", function (compilation) {\n        var globalWasmLoading = compilation.outputOptions.wasmLoading;\n        var isEnabledForChunk = function isEnabledForChunk(chunk) {\n          var options = chunk.getEntryOptions();\n          var wasmLoading = options && options.wasmLoading !== undefined ? options.wasmLoading : globalWasmLoading;\n          return wasmLoading === \"async-node\";\n        };\n        var generateLoadBinaryCode = function generateLoadBinaryCode(path) {\n          return Template.asString([\"new Promise(function (resolve, reject) {\", Template.indent([\"var { readFile } = require('fs');\", \"var { join } = require('path');\", \"\", \"try {\", Template.indent([\"readFile(join(__dirname, \".concat(path, \"), function(err, buffer){\"), Template.indent([\"if (err) return reject(err);\", \"\", \"// Fake fetch response\", \"resolve({\", Template.indent([\"arrayBuffer() { return buffer; }\"]), \"});\"]), \"});\"]), \"} catch (err) { reject(err); }\"]), \"})\"]);\n        };\n        compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(\"ReadFileCompileWasmPlugin\", function (chunk, set) {\n          if (!isEnabledForChunk(chunk)) return;\n          var chunkGraph = compilation.chunkGraph;\n          if (!chunkGraph.hasModuleInGraph(chunk, function (m) {\n            return m.type === \"webassembly/sync\";\n          })) {\n            return;\n          }\n          set.add(RuntimeGlobals.moduleCache);\n          compilation.addRuntimeModule(chunk, new WasmChunkLoadingRuntimeModule({\n            generateLoadBinaryCode: generateLoadBinaryCode,\n            supportsStreaming: false,\n            mangleImports: _this.options.mangleImports,\n            runtimeRequirements: set\n          }));\n        });\n      });\n    }\n  }]);\n  return ReadFileCompileWasmPlugin;\n}();\nmodule.exports = ReadFileCompileWasmPlugin;","map":{"version":3,"names":["RuntimeGlobals","require","Template","WasmChunkLoadingRuntimeModule","ReadFileCompileWasmPlugin","options","compiler","hooks","thisCompilation","tap","compilation","globalWasmLoading","outputOptions","wasmLoading","isEnabledForChunk","chunk","getEntryOptions","undefined","generateLoadBinaryCode","path","asString","indent","runtimeRequirementInTree","for","ensureChunkHandlers","set","chunkGraph","hasModuleInGraph","m","type","add","moduleCache","addRuntimeModule","supportsStreaming","mangleImports","runtimeRequirements","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/node/ReadFileCompileWasmPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst Template = require(\"../Template\");\nconst WasmChunkLoadingRuntimeModule = require(\"../wasm-sync/WasmChunkLoadingRuntimeModule\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n// TODO webpack 6 remove\n\nclass ReadFileCompileWasmPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"ReadFileCompileWasmPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst globalWasmLoading = compilation.outputOptions.wasmLoading;\n\t\t\t\tconst isEnabledForChunk = chunk => {\n\t\t\t\t\tconst options = chunk.getEntryOptions();\n\t\t\t\t\tconst wasmLoading =\n\t\t\t\t\t\toptions && options.wasmLoading !== undefined\n\t\t\t\t\t\t\t? options.wasmLoading\n\t\t\t\t\t\t\t: globalWasmLoading;\n\t\t\t\t\treturn wasmLoading === \"async-node\";\n\t\t\t\t};\n\t\t\t\tconst generateLoadBinaryCode = path =>\n\t\t\t\t\tTemplate.asString([\n\t\t\t\t\t\t\"new Promise(function (resolve, reject) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"var { readFile } = require('fs');\",\n\t\t\t\t\t\t\t\"var { join } = require('path');\",\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\"try {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`readFile(join(__dirname, ${path}), function(err, buffer){`,\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if (err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"// Fake fetch response\",\n\t\t\t\t\t\t\t\t\t\"resolve({\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\"arrayBuffer() { return buffer; }\"]),\n\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"} catch (err) { reject(err); }\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"})\"\n\t\t\t\t\t]);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap(\"ReadFileCompileWasmPlugin\", (chunk, set) => {\n\t\t\t\t\t\tif (!isEnabledForChunk(chunk)) return;\n\t\t\t\t\t\tconst chunkGraph = compilation.chunkGraph;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!chunkGraph.hasModuleInGraph(\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tm => m.type === \"webassembly/sync\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleCache);\n\t\t\t\t\t\tcompilation.addRuntimeModule(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tnew WasmChunkLoadingRuntimeModule({\n\t\t\t\t\t\t\t\tgenerateLoadBinaryCode,\n\t\t\t\t\t\t\t\tsupportsStreaming: false,\n\t\t\t\t\t\t\t\tmangleImports: this.options.mangleImports,\n\t\t\t\t\t\t\t\truntimeRequirements: set\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ReadFileCompileWasmPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACnD,IAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,IAAME,6BAA6B,GAAGF,OAAO,CAAC,4CAA4C,CAAC;;AAE3F;;AAEA;AAAA,IAEMG,yBAAyB;EAC9B,mCAAYC,OAAO,EAAE;IAAA;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC7B;;EAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,eAAe,CAACC,GAAG,CACjC,2BAA2B,EAC3B,UAAAC,WAAW,EAAI;QACd,IAAMC,iBAAiB,GAAGD,WAAW,CAACE,aAAa,CAACC,WAAW;QAC/D,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGC,KAAK,EAAI;UAClC,IAAMV,OAAO,GAAGU,KAAK,CAACC,eAAe,EAAE;UACvC,IAAMH,WAAW,GAChBR,OAAO,IAAIA,OAAO,CAACQ,WAAW,KAAKI,SAAS,GACzCZ,OAAO,CAACQ,WAAW,GACnBF,iBAAiB;UACrB,OAAOE,WAAW,KAAK,YAAY;QACpC,CAAC;QACD,IAAMK,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAGC,IAAI;UAAA,OAClCjB,QAAQ,CAACkB,QAAQ,CAAC,CACjB,0CAA0C,EAC1ClB,QAAQ,CAACmB,MAAM,CAAC,CACf,mCAAmC,EACnC,iCAAiC,EACjC,EAAE,EACF,OAAO,EACPnB,QAAQ,CAACmB,MAAM,CAAC,oCACaF,IAAI,gCAChCjB,QAAQ,CAACmB,MAAM,CAAC,CACf,8BAA8B,EAC9B,EAAE,EACF,wBAAwB,EACxB,WAAW,EACXnB,QAAQ,CAACmB,MAAM,CAAC,CAAC,kCAAkC,CAAC,CAAC,EACrD,KAAK,CACL,CAAC,EACF,KAAK,CACL,CAAC,EACF,gCAAgC,CAChC,CAAC,EACF,IAAI,CACJ,CAAC;QAAA;QAEHX,WAAW,CAACH,KAAK,CAACe,wBAAwB,CACxCC,GAAG,CAACvB,cAAc,CAACwB,mBAAmB,CAAC,CACvCf,GAAG,CAAC,2BAA2B,EAAE,UAACM,KAAK,EAAEU,GAAG,EAAK;UACjD,IAAI,CAACX,iBAAiB,CAACC,KAAK,CAAC,EAAE;UAC/B,IAAMW,UAAU,GAAGhB,WAAW,CAACgB,UAAU;UACzC,IACC,CAACA,UAAU,CAACC,gBAAgB,CAC3BZ,KAAK,EACL,UAAAa,CAAC;YAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,kBAAkB;UAAA,EAClC,EACA;YACD;UACD;UACAJ,GAAG,CAACK,GAAG,CAAC9B,cAAc,CAAC+B,WAAW,CAAC;UACnCrB,WAAW,CAACsB,gBAAgB,CAC3BjB,KAAK,EACL,IAAIZ,6BAA6B,CAAC;YACjCe,sBAAsB,EAAtBA,sBAAsB;YACtBe,iBAAiB,EAAE,KAAK;YACxBC,aAAa,EAAE,KAAI,CAAC7B,OAAO,CAAC6B,aAAa;YACzCC,mBAAmB,EAAEV;UACtB,CAAC,CAAC,CACF;QACF,CAAC,CAAC;MACJ,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFW,MAAM,CAACC,OAAO,GAAGjC,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}