{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ConditionalInitFragment = require(\"../ConditionalInitFragment\");\nvar Dependency = require(\"../Dependency\");\nvar HarmonyLinkingError = require(\"../HarmonyLinkingError\");\nvar InitFragment = require(\"../InitFragment\");\nvar Template = require(\"../Template\");\nvar AwaitDependenciesInitFragment = require(\"../async-modules/AwaitDependenciesInitFragment\");\nvar _require = require(\"../util/runtime\"),\n  filterRuntime = _require.filterRuntime,\n  mergeRuntime = _require.mergeRuntime;\nvar ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nvar ExportPresenceModes = {\n  NONE: /** @type {0} */0,\n  WARN: /** @type {1} */1,\n  AUTO: /** @type {2} */2,\n  ERROR: /** @type {3} */3,\n  fromUserOption: function fromUserOption(str) {\n    switch (str) {\n      case \"error\":\n        return ExportPresenceModes.ERROR;\n      case \"warn\":\n        return ExportPresenceModes.WARN;\n      case \"auto\":\n        return ExportPresenceModes.AUTO;\n      case false:\n        return ExportPresenceModes.NONE;\n      default:\n        throw new Error(\"Invalid export presence value \".concat(str));\n    }\n  }\n};\nvar HarmonyImportDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(HarmonyImportDependency, _ModuleDependency);\n  var _super = _createSuper(HarmonyImportDependency);\n  /**\n   *\n   * @param {string} request request string\n   * @param {number} sourceOrder source order\n   * @param {Record<string, any>=} assertions import assertions\n   */\n  function HarmonyImportDependency(request, sourceOrder, assertions) {\n    var _this;\n    _classCallCheck(this, HarmonyImportDependency);\n    _this = _super.call(this, request);\n    _this.sourceOrder = sourceOrder;\n    _this.assertions = assertions;\n    return _this;\n  }\n  _createClass(HarmonyImportDependency, [{\n    key: \"category\",\n    get: function get() {\n      return \"esm\";\n    }\n\n    /**\n     * Returns list of exports referenced by this dependency\n     * @param {ModuleGraph} moduleGraph module graph\n     * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n     * @returns {(string[] | ReferencedExport)[]} referenced exports\n     */\n  }, {\n    key: \"getReferencedExports\",\n    value: function getReferencedExports(moduleGraph, runtime) {\n      return Dependency.NO_EXPORTS_REFERENCED;\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph the module graph\n     * @returns {string} name of the variable for the import\n     */\n  }, {\n    key: \"getImportVar\",\n    value: function getImportVar(moduleGraph) {\n      var module = moduleGraph.getParentModule(this);\n      var meta = moduleGraph.getMeta(module);\n      var importVarMap = meta.importVarMap;\n      if (!importVarMap) meta.importVarMap = importVarMap = new Map();\n      var importVar = importVarMap.get(moduleGraph.getModule(this));\n      if (importVar) return importVar;\n      importVar = \"\".concat(Template.toIdentifier(\"\".concat(this.userRequest)), \"__WEBPACK_IMPORTED_MODULE_\").concat(importVarMap.size, \"__\");\n      importVarMap.set(moduleGraph.getModule(this), importVar);\n      return importVar;\n    }\n\n    /**\n     * @param {boolean} update create new variables or update existing one\n     * @param {DependencyTemplateContext} templateContext the template context\n     * @returns {[string, string]} the import statement and the compat statement\n     */\n  }, {\n    key: \"getImportStatement\",\n    value: function getImportStatement(update, _ref) {\n      var runtimeTemplate = _ref.runtimeTemplate,\n        module = _ref.module,\n        moduleGraph = _ref.moduleGraph,\n        chunkGraph = _ref.chunkGraph,\n        runtimeRequirements = _ref.runtimeRequirements;\n      return runtimeTemplate.importStatement({\n        update: update,\n        module: moduleGraph.getModule(this),\n        chunkGraph: chunkGraph,\n        importVar: this.getImportVar(moduleGraph),\n        request: this.request,\n        originModule: module,\n        runtimeRequirements: runtimeRequirements\n      });\n    }\n\n    /**\n     * @param {ModuleGraph} moduleGraph module graph\n     * @param {string[]} ids imported ids\n     * @param {string} additionalMessage extra info included in the error message\n     * @returns {WebpackError[] | undefined} errors\n     */\n  }, {\n    key: \"getLinkingErrors\",\n    value: function getLinkingErrors(moduleGraph, ids, additionalMessage) {\n      var importedModule = moduleGraph.getModule(this);\n      // ignore errors for missing or failed modules\n      if (!importedModule || importedModule.getNumberOfErrors() > 0) {\n        return;\n      }\n      var parentModule = moduleGraph.getParentModule(this);\n      var exportsType = importedModule.getExportsType(moduleGraph, parentModule.buildMeta.strictHarmonyModule);\n      if (exportsType === \"namespace\" || exportsType === \"default-with-named\") {\n        if (ids.length === 0) {\n          return;\n        }\n        if ((exportsType !== \"default-with-named\" || ids[0] !== \"default\") && moduleGraph.isExportProvided(importedModule, ids) === false) {\n          // We are sure that it's not provided\n\n          // Try to provide detailed info in the error message\n          var pos = 0;\n          var exportsInfo = moduleGraph.getExportsInfo(importedModule);\n          while (pos < ids.length && exportsInfo) {\n            var id = ids[pos++];\n            var exportInfo = exportsInfo.getReadOnlyExportInfo(id);\n            if (exportInfo.provided === false) {\n              // We are sure that it's not provided\n              var providedExports = exportsInfo.getProvidedExports();\n              var moreInfo = !Array.isArray(providedExports) ? \" (possible exports unknown)\" : providedExports.length === 0 ? \" (module has no exports)\" : \" (possible exports: \".concat(providedExports.join(\", \"), \")\");\n              return [new HarmonyLinkingError(\"export \".concat(ids.slice(0, pos).map(function (id) {\n                return \"'\".concat(id, \"'\");\n              }).join(\".\"), \" \").concat(additionalMessage, \" was not found in '\").concat(this.userRequest, \"'\").concat(moreInfo))];\n            }\n            exportsInfo = exportInfo.getNestedExportsInfo();\n          }\n\n          // General error message\n          return [new HarmonyLinkingError(\"export \".concat(ids.map(function (id) {\n            return \"'\".concat(id, \"'\");\n          }).join(\".\"), \" \").concat(additionalMessage, \" was not found in '\").concat(this.userRequest, \"'\"))];\n        }\n      }\n      switch (exportsType) {\n        case \"default-only\":\n          // It's has only a default export\n          if (ids.length > 0 && ids[0] !== \"default\") {\n            // In strict harmony modules we only support the default export\n            return [new HarmonyLinkingError(\"Can't import the named export \".concat(ids.map(function (id) {\n              return \"'\".concat(id, \"'\");\n            }).join(\".\"), \" \").concat(additionalMessage, \" from default-exporting module (only default export is available)\"))];\n          }\n          break;\n        case \"default-with-named\":\n          // It has a default export and named properties redirect\n          // In some cases we still want to warn here\n          if (ids.length > 0 && ids[0] !== \"default\" && importedModule.buildMeta.defaultObject === \"redirect-warn\") {\n            // For these modules only the default export is supported\n            return [new HarmonyLinkingError(\"Should not import the named export \".concat(ids.map(function (id) {\n              return \"'\".concat(id, \"'\");\n            }).join(\".\"), \" \").concat(additionalMessage, \" from default-exporting module (only default export is available soon)\"))];\n          }\n          break;\n      }\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize(context) {\n      var write = context.write;\n      write(this.sourceOrder);\n      write(this.assertions);\n      _get(_getPrototypeOf(HarmonyImportDependency.prototype), \"serialize\", this).call(this, context);\n    }\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(context) {\n      var read = context.read;\n      this.sourceOrder = read();\n      this.assertions = read();\n      _get(_getPrototypeOf(HarmonyImportDependency.prototype), \"deserialize\", this).call(this, context);\n    }\n  }]);\n  return HarmonyImportDependency;\n}(ModuleDependency);\nmodule.exports = HarmonyImportDependency;\n\n/** @type {WeakMap<Module, WeakMap<Module, RuntimeSpec | boolean>>} */\nvar importEmittedMap = new WeakMap();\nHarmonyImportDependency.Template = /*#__PURE__*/function (_ModuleDependency$Tem) {\n  _inherits(HarmonyImportDependencyTemplate, _ModuleDependency$Tem);\n  var _super2 = _createSuper(HarmonyImportDependencyTemplate);\n  function HarmonyImportDependencyTemplate() {\n    _classCallCheck(this, HarmonyImportDependencyTemplate);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(HarmonyImportDependencyTemplate, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Dependency} dependency the dependency for which the template should be applied\n     * @param {ReplaceSource} source the current replace source which can be modified\n     * @param {DependencyTemplateContext} templateContext the context object\n     * @returns {void}\n     */\n    function apply(dependency, source, templateContext) {\n      var dep = /** @type {HarmonyImportDependency} */dependency;\n      var module = templateContext.module,\n        chunkGraph = templateContext.chunkGraph,\n        moduleGraph = templateContext.moduleGraph,\n        runtime = templateContext.runtime;\n      var connection = moduleGraph.getConnection(dep);\n      if (connection && !connection.isTargetActive(runtime)) return;\n      var referencedModule = connection && connection.module;\n      if (connection && connection.weak && referencedModule && chunkGraph.getModuleId(referencedModule) === null) {\n        // in weak references, module might not be in any chunk\n        // but that's ok, we don't need that logic in this case\n        return;\n      }\n      var moduleKey = referencedModule ? referencedModule.identifier() : dep.request;\n      var key = \"harmony import \".concat(moduleKey);\n      var runtimeCondition = dep.weak ? false : connection ? filterRuntime(runtime, function (r) {\n        return connection.isTargetActive(r);\n      }) : true;\n      if (module && referencedModule) {\n        var emittedModules = importEmittedMap.get(module);\n        if (emittedModules === undefined) {\n          emittedModules = new WeakMap();\n          importEmittedMap.set(module, emittedModules);\n        }\n        var mergedRuntimeCondition = runtimeCondition;\n        var oldRuntimeCondition = emittedModules.get(referencedModule) || false;\n        if (oldRuntimeCondition !== false && mergedRuntimeCondition !== true) {\n          if (mergedRuntimeCondition === false || oldRuntimeCondition === true) {\n            mergedRuntimeCondition = oldRuntimeCondition;\n          } else {\n            mergedRuntimeCondition = mergeRuntime(oldRuntimeCondition, mergedRuntimeCondition);\n          }\n        }\n        emittedModules.set(referencedModule, mergedRuntimeCondition);\n      }\n      var importStatement = dep.getImportStatement(false, templateContext);\n      if (referencedModule && templateContext.moduleGraph.isAsync(referencedModule)) {\n        templateContext.initFragments.push(new ConditionalInitFragment(importStatement[0], InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder, key, runtimeCondition));\n        templateContext.initFragments.push(new AwaitDependenciesInitFragment(new Set([dep.getImportVar(templateContext.moduleGraph)])));\n        templateContext.initFragments.push(new ConditionalInitFragment(importStatement[1], InitFragment.STAGE_ASYNC_HARMONY_IMPORTS, dep.sourceOrder, key + \" compat\", runtimeCondition));\n      } else {\n        templateContext.initFragments.push(new ConditionalInitFragment(importStatement[0] + importStatement[1], InitFragment.STAGE_HARMONY_IMPORTS, dep.sourceOrder, key, runtimeCondition));\n      }\n    }\n\n    /**\n     *\n     * @param {Module} module the module\n     * @param {Module} referencedModule the referenced module\n     * @returns {RuntimeSpec | boolean} runtimeCondition in which this import has been emitted\n     */\n  }], [{\n    key: \"getImportEmittedRuntime\",\n    value: function getImportEmittedRuntime(module, referencedModule) {\n      var emittedModules = importEmittedMap.get(module);\n      if (emittedModules === undefined) return false;\n      return emittedModules.get(referencedModule) || false;\n    }\n  }]);\n  return HarmonyImportDependencyTemplate;\n}(ModuleDependency.Template);\nmodule.exports.ExportPresenceModes = ExportPresenceModes;","map":{"version":3,"names":["ConditionalInitFragment","require","Dependency","HarmonyLinkingError","InitFragment","Template","AwaitDependenciesInitFragment","filterRuntime","mergeRuntime","ModuleDependency","ExportPresenceModes","NONE","WARN","AUTO","ERROR","fromUserOption","str","Error","HarmonyImportDependency","request","sourceOrder","assertions","moduleGraph","runtime","NO_EXPORTS_REFERENCED","module","getParentModule","meta","getMeta","importVarMap","Map","importVar","get","getModule","toIdentifier","userRequest","size","set","update","runtimeTemplate","chunkGraph","runtimeRequirements","importStatement","getImportVar","originModule","ids","additionalMessage","importedModule","getNumberOfErrors","parentModule","exportsType","getExportsType","buildMeta","strictHarmonyModule","length","isExportProvided","pos","exportsInfo","getExportsInfo","id","exportInfo","getReadOnlyExportInfo","provided","providedExports","getProvidedExports","moreInfo","Array","isArray","join","slice","map","getNestedExportsInfo","defaultObject","context","write","read","exports","importEmittedMap","WeakMap","dependency","source","templateContext","dep","connection","getConnection","isTargetActive","referencedModule","weak","getModuleId","moduleKey","identifier","key","runtimeCondition","r","emittedModules","undefined","mergedRuntimeCondition","oldRuntimeCondition","getImportStatement","isAsync","initFragments","push","STAGE_HARMONY_IMPORTS","Set","STAGE_ASYNC_HARMONY_IMPORTS"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/dependencies/HarmonyImportDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ConditionalInitFragment = require(\"../ConditionalInitFragment\");\nconst Dependency = require(\"../Dependency\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\nconst InitFragment = require(\"../InitFragment\");\nconst Template = require(\"../Template\");\nconst AwaitDependenciesInitFragment = require(\"../async-modules/AwaitDependenciesInitFragment\");\nconst { filterRuntime, mergeRuntime } = require(\"../util/runtime\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst ExportPresenceModes = {\n\tNONE: /** @type {0} */ (0),\n\tWARN: /** @type {1} */ (1),\n\tAUTO: /** @type {2} */ (2),\n\tERROR: /** @type {3} */ (3),\n\tfromUserOption(str) {\n\t\tswitch (str) {\n\t\t\tcase \"error\":\n\t\t\t\treturn ExportPresenceModes.ERROR;\n\t\t\tcase \"warn\":\n\t\t\t\treturn ExportPresenceModes.WARN;\n\t\t\tcase \"auto\":\n\t\t\t\treturn ExportPresenceModes.AUTO;\n\t\t\tcase false:\n\t\t\t\treturn ExportPresenceModes.NONE;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid export presence value ${str}`);\n\t\t}\n\t}\n};\n\nclass HarmonyImportDependency extends ModuleDependency {\n\t/**\n\t *\n\t * @param {string} request request string\n\t * @param {number} sourceOrder source order\n\t * @param {Record<string, any>=} assertions import assertions\n\t */\n\tconstructor(request, sourceOrder, assertions) {\n\t\tsuper(request);\n\t\tthis.sourceOrder = sourceOrder;\n\t\tthis.assertions = assertions;\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\treturn Dependency.NO_EXPORTS_REFERENCED;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string} name of the variable for the import\n\t */\n\tgetImportVar(moduleGraph) {\n\t\tconst module = moduleGraph.getParentModule(this);\n\t\tconst meta = moduleGraph.getMeta(module);\n\t\tlet importVarMap = meta.importVarMap;\n\t\tif (!importVarMap) meta.importVarMap = importVarMap = new Map();\n\t\tlet importVar = importVarMap.get(moduleGraph.getModule(this));\n\t\tif (importVar) return importVar;\n\t\timportVar = `${Template.toIdentifier(\n\t\t\t`${this.userRequest}`\n\t\t)}__WEBPACK_IMPORTED_MODULE_${importVarMap.size}__`;\n\t\timportVarMap.set(moduleGraph.getModule(this), importVar);\n\t\treturn importVar;\n\t}\n\n\t/**\n\t * @param {boolean} update create new variables or update existing one\n\t * @param {DependencyTemplateContext} templateContext the template context\n\t * @returns {[string, string]} the import statement and the compat statement\n\t */\n\tgetImportStatement(\n\t\tupdate,\n\t\t{ runtimeTemplate, module, moduleGraph, chunkGraph, runtimeRequirements }\n\t) {\n\t\treturn runtimeTemplate.importStatement({\n\t\t\tupdate,\n\t\t\tmodule: moduleGraph.getModule(this),\n\t\t\tchunkGraph,\n\t\t\timportVar: this.getImportVar(moduleGraph),\n\t\t\trequest: this.request,\n\t\t\toriginModule: module,\n\t\t\truntimeRequirements\n\t\t});\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {string[]} ids imported ids\n\t * @param {string} additionalMessage extra info included in the error message\n\t * @returns {WebpackError[] | undefined} errors\n\t */\n\tgetLinkingErrors(moduleGraph, ids, additionalMessage) {\n\t\tconst importedModule = moduleGraph.getModule(this);\n\t\t// ignore errors for missing or failed modules\n\t\tif (!importedModule || importedModule.getNumberOfErrors() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parentModule = moduleGraph.getParentModule(this);\n\t\tconst exportsType = importedModule.getExportsType(\n\t\t\tmoduleGraph,\n\t\t\tparentModule.buildMeta.strictHarmonyModule\n\t\t);\n\t\tif (exportsType === \"namespace\" || exportsType === \"default-with-named\") {\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t(exportsType !== \"default-with-named\" || ids[0] !== \"default\") &&\n\t\t\t\tmoduleGraph.isExportProvided(importedModule, ids) === false\n\t\t\t) {\n\t\t\t\t// We are sure that it's not provided\n\n\t\t\t\t// Try to provide detailed info in the error message\n\t\t\t\tlet pos = 0;\n\t\t\t\tlet exportsInfo = moduleGraph.getExportsInfo(importedModule);\n\t\t\t\twhile (pos < ids.length && exportsInfo) {\n\t\t\t\t\tconst id = ids[pos++];\n\t\t\t\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(id);\n\t\t\t\t\tif (exportInfo.provided === false) {\n\t\t\t\t\t\t// We are sure that it's not provided\n\t\t\t\t\t\tconst providedExports = exportsInfo.getProvidedExports();\n\t\t\t\t\t\tconst moreInfo = !Array.isArray(providedExports)\n\t\t\t\t\t\t\t? \" (possible exports unknown)\"\n\t\t\t\t\t\t\t: providedExports.length === 0\n\t\t\t\t\t\t\t? \" (module has no exports)\"\n\t\t\t\t\t\t\t: ` (possible exports: ${providedExports.join(\", \")})`;\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t\t\t`export ${ids\n\t\t\t\t\t\t\t\t\t.slice(0, pos)\n\t\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\n\t\t\t\t\t\t\t\t\t.join(\".\")} ${additionalMessage} was not found in '${\n\t\t\t\t\t\t\t\t\tthis.userRequest\n\t\t\t\t\t\t\t\t}'${moreInfo}`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\texportsInfo = exportInfo.getNestedExportsInfo();\n\t\t\t\t}\n\n\t\t\t\t// General error message\n\t\t\t\treturn [\n\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t`export ${ids\n\t\t\t\t\t\t\t.map(id => `'${id}'`)\n\t\t\t\t\t\t\t.join(\".\")} ${additionalMessage} was not found in '${\n\t\t\t\t\t\t\tthis.userRequest\n\t\t\t\t\t\t}'`\n\t\t\t\t\t)\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t\tswitch (exportsType) {\n\t\t\tcase \"default-only\":\n\t\t\t\t// It's has only a default export\n\t\t\t\tif (ids.length > 0 && ids[0] !== \"default\") {\n\t\t\t\t\t// In strict harmony modules we only support the default export\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t\t`Can't import the named export ${ids\n\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\n\t\t\t\t\t\t\t\t.join(\n\t\t\t\t\t\t\t\t\t\".\"\n\t\t\t\t\t\t\t\t)} ${additionalMessage} from default-exporting module (only default export is available)`\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"default-with-named\":\n\t\t\t\t// It has a default export and named properties redirect\n\t\t\t\t// In some cases we still want to warn here\n\t\t\t\tif (\n\t\t\t\t\tids.length > 0 &&\n\t\t\t\t\tids[0] !== \"default\" &&\n\t\t\t\t\timportedModule.buildMeta.defaultObject === \"redirect-warn\"\n\t\t\t\t) {\n\t\t\t\t\t// For these modules only the default export is supported\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t\t`Should not import the named export ${ids\n\t\t\t\t\t\t\t\t.map(id => `'${id}'`)\n\t\t\t\t\t\t\t\t.join(\n\t\t\t\t\t\t\t\t\t\".\"\n\t\t\t\t\t\t\t\t)} ${additionalMessage} from default-exporting module (only default export is available soon)`\n\t\t\t\t\t\t)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.sourceOrder);\n\t\twrite(this.assertions);\n\t\tsuper.serialize(context);\n\t}\n\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.sourceOrder = read();\n\t\tthis.assertions = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmodule.exports = HarmonyImportDependency;\n\n/** @type {WeakMap<Module, WeakMap<Module, RuntimeSpec | boolean>>} */\nconst importEmittedMap = new WeakMap();\n\nHarmonyImportDependency.Template = class HarmonyImportDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyImportDependency} */ (dependency);\n\t\tconst { module, chunkGraph, moduleGraph, runtime } = templateContext;\n\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\n\n\t\tconst referencedModule = connection && connection.module;\n\n\t\tif (\n\t\t\tconnection &&\n\t\t\tconnection.weak &&\n\t\t\treferencedModule &&\n\t\t\tchunkGraph.getModuleId(referencedModule) === null\n\t\t) {\n\t\t\t// in weak references, module might not be in any chunk\n\t\t\t// but that's ok, we don't need that logic in this case\n\t\t\treturn;\n\t\t}\n\n\t\tconst moduleKey = referencedModule\n\t\t\t? referencedModule.identifier()\n\t\t\t: dep.request;\n\t\tconst key = `harmony import ${moduleKey}`;\n\n\t\tconst runtimeCondition = dep.weak\n\t\t\t? false\n\t\t\t: connection\n\t\t\t? filterRuntime(runtime, r => connection.isTargetActive(r))\n\t\t\t: true;\n\n\t\tif (module && referencedModule) {\n\t\t\tlet emittedModules = importEmittedMap.get(module);\n\t\t\tif (emittedModules === undefined) {\n\t\t\t\temittedModules = new WeakMap();\n\t\t\t\timportEmittedMap.set(module, emittedModules);\n\t\t\t}\n\t\t\tlet mergedRuntimeCondition = runtimeCondition;\n\t\t\tconst oldRuntimeCondition = emittedModules.get(referencedModule) || false;\n\t\t\tif (oldRuntimeCondition !== false && mergedRuntimeCondition !== true) {\n\t\t\t\tif (mergedRuntimeCondition === false || oldRuntimeCondition === true) {\n\t\t\t\t\tmergedRuntimeCondition = oldRuntimeCondition;\n\t\t\t\t} else {\n\t\t\t\t\tmergedRuntimeCondition = mergeRuntime(\n\t\t\t\t\t\toldRuntimeCondition,\n\t\t\t\t\t\tmergedRuntimeCondition\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\temittedModules.set(referencedModule, mergedRuntimeCondition);\n\t\t}\n\n\t\tconst importStatement = dep.getImportStatement(false, templateContext);\n\t\tif (\n\t\t\treferencedModule &&\n\t\t\ttemplateContext.moduleGraph.isAsync(referencedModule)\n\t\t) {\n\t\t\ttemplateContext.initFragments.push(\n\t\t\t\tnew ConditionalInitFragment(\n\t\t\t\t\timportStatement[0],\n\t\t\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t\t\tdep.sourceOrder,\n\t\t\t\t\tkey,\n\t\t\t\t\truntimeCondition\n\t\t\t\t)\n\t\t\t);\n\t\t\ttemplateContext.initFragments.push(\n\t\t\t\tnew AwaitDependenciesInitFragment(\n\t\t\t\t\tnew Set([dep.getImportVar(templateContext.moduleGraph)])\n\t\t\t\t)\n\t\t\t);\n\t\t\ttemplateContext.initFragments.push(\n\t\t\t\tnew ConditionalInitFragment(\n\t\t\t\t\timportStatement[1],\n\t\t\t\t\tInitFragment.STAGE_ASYNC_HARMONY_IMPORTS,\n\t\t\t\t\tdep.sourceOrder,\n\t\t\t\t\tkey + \" compat\",\n\t\t\t\t\truntimeCondition\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\ttemplateContext.initFragments.push(\n\t\t\t\tnew ConditionalInitFragment(\n\t\t\t\t\timportStatement[0] + importStatement[1],\n\t\t\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t\t\tdep.sourceOrder,\n\t\t\t\t\tkey,\n\t\t\t\t\truntimeCondition\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {Module} module the module\n\t * @param {Module} referencedModule the referenced module\n\t * @returns {RuntimeSpec | boolean} runtimeCondition in which this import has been emitted\n\t */\n\tstatic getImportEmittedRuntime(module, referencedModule) {\n\t\tconst emittedModules = importEmittedMap.get(module);\n\t\tif (emittedModules === undefined) return false;\n\t\treturn emittedModules.get(referencedModule) || false;\n\t}\n};\n\nmodule.exports.ExportPresenceModes = ExportPresenceModes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}