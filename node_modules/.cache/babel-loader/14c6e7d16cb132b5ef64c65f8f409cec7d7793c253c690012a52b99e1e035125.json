{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar isValidExternalsType = require(\"../../schemas/plugins/container/ExternalsType.check.js\");\nvar SharePlugin = require(\"../sharing/SharePlugin\");\nvar createSchemaValidation = require(\"../util/create-schema-validation\");\nvar ContainerPlugin = require(\"./ContainerPlugin\");\nvar ContainerReferencePlugin = require(\"./ContainerReferencePlugin\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ExternalsType} ExternalsType */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ModuleFederationPluginOptions} ModuleFederationPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").Shared} Shared */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nvar validate = createSchemaValidation(require(\"../../schemas/plugins/container/ModuleFederationPlugin.check.js\"), function () {\n  return require(\"../../schemas/plugins/container/ModuleFederationPlugin.json\");\n}, {\n  name: \"Module Federation Plugin\",\n  baseDataPath: \"options\"\n});\nvar ModuleFederationPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {ModuleFederationPluginOptions} options options\n   */\n  function ModuleFederationPlugin(options) {\n    _classCallCheck(this, ModuleFederationPlugin);\n    validate(options);\n    this._options = options;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(ModuleFederationPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this._options;\n      var library = options.library || {\n        type: \"var\",\n        name: options.name\n      };\n      var remoteType = options.remoteType || (options.library && isValidExternalsType(options.library.type) ? /** @type {ExternalsType} */options.library.type : \"script\");\n      if (library && !compiler.options.output.enabledLibraryTypes.includes(library.type)) {\n        compiler.options.output.enabledLibraryTypes.push(library.type);\n      }\n      compiler.hooks.afterPlugins.tap(\"ModuleFederationPlugin\", function () {\n        if (options.exposes && (Array.isArray(options.exposes) ? options.exposes.length > 0 : Object.keys(options.exposes).length > 0)) {\n          new ContainerPlugin({\n            name: options.name,\n            library: library,\n            filename: options.filename,\n            runtime: options.runtime,\n            shareScope: options.shareScope,\n            exposes: options.exposes\n          }).apply(compiler);\n        }\n        if (options.remotes && (Array.isArray(options.remotes) ? options.remotes.length > 0 : Object.keys(options.remotes).length > 0)) {\n          new ContainerReferencePlugin({\n            remoteType: remoteType,\n            shareScope: options.shareScope,\n            remotes: options.remotes\n          }).apply(compiler);\n        }\n        if (options.shared) {\n          new SharePlugin({\n            shared: options.shared,\n            shareScope: options.shareScope\n          }).apply(compiler);\n        }\n      });\n    }\n  }]);\n  return ModuleFederationPlugin;\n}();\nmodule.exports = ModuleFederationPlugin;","map":{"version":3,"names":["isValidExternalsType","require","SharePlugin","createSchemaValidation","ContainerPlugin","ContainerReferencePlugin","validate","name","baseDataPath","ModuleFederationPlugin","options","_options","compiler","library","type","remoteType","output","enabledLibraryTypes","includes","push","hooks","afterPlugins","tap","exposes","Array","isArray","length","Object","keys","filename","runtime","shareScope","apply","remotes","shared","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/container/ModuleFederationPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra and Zackary Jackson @ScriptedAlchemy\n*/\n\n\"use strict\";\n\nconst isValidExternalsType = require(\"../../schemas/plugins/container/ExternalsType.check.js\");\nconst SharePlugin = require(\"../sharing/SharePlugin\");\nconst createSchemaValidation = require(\"../util/create-schema-validation\");\nconst ContainerPlugin = require(\"./ContainerPlugin\");\nconst ContainerReferencePlugin = require(\"./ContainerReferencePlugin\");\n\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ExternalsType} ExternalsType */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").ModuleFederationPluginOptions} ModuleFederationPluginOptions */\n/** @typedef {import(\"../../declarations/plugins/container/ModuleFederationPlugin\").Shared} Shared */\n/** @typedef {import(\"../Compiler\")} Compiler */\n\nconst validate = createSchemaValidation(\n\trequire(\"../../schemas/plugins/container/ModuleFederationPlugin.check.js\"),\n\t() => require(\"../../schemas/plugins/container/ModuleFederationPlugin.json\"),\n\t{\n\t\tname: \"Module Federation Plugin\",\n\t\tbaseDataPath: \"options\"\n\t}\n);\nclass ModuleFederationPlugin {\n\t/**\n\t * @param {ModuleFederationPluginOptions} options options\n\t */\n\tconstructor(options) {\n\t\tvalidate(options);\n\n\t\tthis._options = options;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst { _options: options } = this;\n\t\tconst library = options.library || { type: \"var\", name: options.name };\n\t\tconst remoteType =\n\t\t\toptions.remoteType ||\n\t\t\t(options.library && isValidExternalsType(options.library.type)\n\t\t\t\t? /** @type {ExternalsType} */ (options.library.type)\n\t\t\t\t: \"script\");\n\t\tif (\n\t\t\tlibrary &&\n\t\t\t!compiler.options.output.enabledLibraryTypes.includes(library.type)\n\t\t) {\n\t\t\tcompiler.options.output.enabledLibraryTypes.push(library.type);\n\t\t}\n\t\tcompiler.hooks.afterPlugins.tap(\"ModuleFederationPlugin\", () => {\n\t\t\tif (\n\t\t\t\toptions.exposes &&\n\t\t\t\t(Array.isArray(options.exposes)\n\t\t\t\t\t? options.exposes.length > 0\n\t\t\t\t\t: Object.keys(options.exposes).length > 0)\n\t\t\t) {\n\t\t\t\tnew ContainerPlugin({\n\t\t\t\t\tname: options.name,\n\t\t\t\t\tlibrary,\n\t\t\t\t\tfilename: options.filename,\n\t\t\t\t\truntime: options.runtime,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\texposes: options.exposes\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t\tif (\n\t\t\t\toptions.remotes &&\n\t\t\t\t(Array.isArray(options.remotes)\n\t\t\t\t\t? options.remotes.length > 0\n\t\t\t\t\t: Object.keys(options.remotes).length > 0)\n\t\t\t) {\n\t\t\t\tnew ContainerReferencePlugin({\n\t\t\t\t\tremoteType,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\tremotes: options.remotes\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t\tif (options.shared) {\n\t\t\t\tnew SharePlugin({\n\t\t\t\t\tshared: options.shared,\n\t\t\t\t\tshareScope: options.shareScope\n\t\t\t\t}).apply(compiler);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = ModuleFederationPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}