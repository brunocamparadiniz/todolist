{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Yuta Hiroto @hiroppy\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Parser = require(\"../Parser\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\nvar AssetSourceParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AssetSourceParser, _Parser);\n  var _super = _createSuper(AssetSourceParser);\n  function AssetSourceParser() {\n    _classCallCheck(this, AssetSourceParser);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AssetSourceParser, [{\n    key: \"parse\",\n    value:\n    /**\n     * @param {string | Buffer | PreparsedAst} source the source to parse\n     * @param {ParserState} state the parser state\n     * @returns {ParserState} the parser state\n     */\n    function parse(source, state) {\n      if (typeof source === \"object\" && !Buffer.isBuffer(source)) {\n        throw new Error(\"AssetSourceParser doesn't accept preparsed AST\");\n      }\n      var module = state.module;\n      module.buildInfo.strict = true;\n      module.buildMeta.exportsType = \"default\";\n      state.module.buildMeta.defaultObject = false;\n      return state;\n    }\n  }]);\n  return AssetSourceParser;\n}(Parser);\nmodule.exports = AssetSourceParser;","map":{"version":3,"names":["Parser","require","AssetSourceParser","source","state","Buffer","isBuffer","Error","module","buildInfo","strict","buildMeta","exportsType","defaultObject","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/asset/AssetSourceParser.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Yuta Hiroto @hiroppy\n*/\n\n\"use strict\";\n\nconst Parser = require(\"../Parser\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\nclass AssetSourceParser extends Parser {\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (typeof source === \"object\" && !Buffer.isBuffer(source)) {\n\t\t\tthrow new Error(\"AssetSourceParser doesn't accept preparsed AST\");\n\t\t}\n\t\tconst { module } = state;\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"default\";\n\t\tstate.module.buildMeta.defaultObject = false;\n\n\t\treturn state;\n\t}\n}\n\nmodule.exports = AssetSourceParser;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAEnC;AACA;AAAA,IAEMC,iBAAiB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACtB;AACD;AACA;AACA;AACA;IACC,eAAMC,MAAM,EAAEC,KAAK,EAAE;MACpB,IAAI,OAAOD,MAAM,KAAK,QAAQ,IAAI,CAACE,MAAM,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;QAC3D,MAAM,IAAII,KAAK,CAAC,gDAAgD,CAAC;MAClE;MACA,IAAQC,MAAM,GAAKJ,KAAK,CAAhBI,MAAM;MACdA,MAAM,CAACC,SAAS,CAACC,MAAM,GAAG,IAAI;MAC9BF,MAAM,CAACG,SAAS,CAACC,WAAW,GAAG,SAAS;MACxCR,KAAK,CAACI,MAAM,CAACG,SAAS,CAACE,aAAa,GAAG,KAAK;MAE5C,OAAOT,KAAK;IACb;EAAC;EAAA;AAAA,EAhB8BJ,MAAM;AAmBtCQ,MAAM,CAACM,OAAO,GAAGZ,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}