{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Hash = require(\"../Hash\");\nvar MAX_SHORT_STRING = require(\"./wasm-hash\").MAX_SHORT_STRING;\nvar BatchedHash = /*#__PURE__*/function (_Hash) {\n  _inherits(BatchedHash, _Hash);\n  var _super = _createSuper(BatchedHash);\n  function BatchedHash(hash) {\n    var _this;\n    _classCallCheck(this, BatchedHash);\n    _this = _super.call(this);\n    _this.string = undefined;\n    _this.encoding = undefined;\n    _this.hash = hash;\n    return _this;\n  }\n\n  /**\n   * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n   * @param {string|Buffer} data data\n   * @param {string=} inputEncoding data encoding\n   * @returns {this} updated hash\n   */\n  _createClass(BatchedHash, [{\n    key: \"update\",\n    value: function update(data, inputEncoding) {\n      if (this.string !== undefined) {\n        if (typeof data === \"string\" && inputEncoding === this.encoding && this.string.length + data.length < MAX_SHORT_STRING) {\n          this.string += data;\n          return this;\n        }\n        this.hash.update(this.string, this.encoding);\n        this.string = undefined;\n      }\n      if (typeof data === \"string\") {\n        if (data.length < MAX_SHORT_STRING && (\n        // base64 encoding is not valid since it may contain padding chars\n        !inputEncoding || !inputEncoding.startsWith(\"ba\"))) {\n          this.string = data;\n          this.encoding = inputEncoding;\n        } else {\n          this.hash.update(data, inputEncoding);\n        }\n      } else {\n        this.hash.update(data);\n      }\n      return this;\n    }\n\n    /**\n     * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n     * @param {string=} encoding encoding of the return value\n     * @returns {string|Buffer} digest\n     */\n  }, {\n    key: \"digest\",\n    value: function digest(encoding) {\n      if (this.string !== undefined) {\n        this.hash.update(this.string, this.encoding);\n      }\n      return this.hash.digest(encoding);\n    }\n  }]);\n  return BatchedHash;\n}(Hash);\nmodule.exports = BatchedHash;","map":{"version":3,"names":["Hash","require","MAX_SHORT_STRING","BatchedHash","hash","string","undefined","encoding","data","inputEncoding","length","update","startsWith","digest","module","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/util/hash/BatchedHash.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Hash = require(\"../Hash\");\nconst MAX_SHORT_STRING = require(\"./wasm-hash\").MAX_SHORT_STRING;\n\nclass BatchedHash extends Hash {\n\tconstructor(hash) {\n\t\tsuper();\n\t\tthis.string = undefined;\n\t\tthis.encoding = undefined;\n\t\tthis.hash = hash;\n\t}\n\n\t/**\n\t * Update hash {@link https://nodejs.org/api/crypto.html#crypto_hash_update_data_inputencoding}\n\t * @param {string|Buffer} data data\n\t * @param {string=} inputEncoding data encoding\n\t * @returns {this} updated hash\n\t */\n\tupdate(data, inputEncoding) {\n\t\tif (this.string !== undefined) {\n\t\t\tif (\n\t\t\t\ttypeof data === \"string\" &&\n\t\t\t\tinputEncoding === this.encoding &&\n\t\t\t\tthis.string.length + data.length < MAX_SHORT_STRING\n\t\t\t) {\n\t\t\t\tthis.string += data;\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.hash.update(this.string, this.encoding);\n\t\t\tthis.string = undefined;\n\t\t}\n\t\tif (typeof data === \"string\") {\n\t\t\tif (\n\t\t\t\tdata.length < MAX_SHORT_STRING &&\n\t\t\t\t// base64 encoding is not valid since it may contain padding chars\n\t\t\t\t(!inputEncoding || !inputEncoding.startsWith(\"ba\"))\n\t\t\t) {\n\t\t\t\tthis.string = data;\n\t\t\t\tthis.encoding = inputEncoding;\n\t\t\t} else {\n\t\t\t\tthis.hash.update(data, inputEncoding);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.hash.update(data);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calculates the digest {@link https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding}\n\t * @param {string=} encoding encoding of the return value\n\t * @returns {string|Buffer} digest\n\t */\n\tdigest(encoding) {\n\t\tif (this.string !== undefined) {\n\t\t\tthis.hash.update(this.string, this.encoding);\n\t\t}\n\t\treturn this.hash.digest(encoding);\n\t}\n}\n\nmodule.exports = BatchedHash;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAMA,IAAI,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC/B,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,aAAa,CAAC,CAACC,gBAAgB;AAAC,IAE3DC,WAAW;EAAA;EAAA;EAChB,qBAAYC,IAAI,EAAE;IAAA;IAAA;IACjB;IACA,MAAKC,MAAM,GAAGC,SAAS;IACvB,MAAKC,QAAQ,GAAGD,SAAS;IACzB,MAAKF,IAAI,GAAGA,IAAI;IAAC;EAClB;;EAEA;AACD;AACA;AACA;AACA;AACA;EALC;IAAA;IAAA,OAMA,gBAAOI,IAAI,EAAEC,aAAa,EAAE;MAC3B,IAAI,IAAI,CAACJ,MAAM,KAAKC,SAAS,EAAE;QAC9B,IACC,OAAOE,IAAI,KAAK,QAAQ,IACxBC,aAAa,KAAK,IAAI,CAACF,QAAQ,IAC/B,IAAI,CAACF,MAAM,CAACK,MAAM,GAAGF,IAAI,CAACE,MAAM,GAAGR,gBAAgB,EAClD;UACD,IAAI,CAACG,MAAM,IAAIG,IAAI;UACnB,OAAO,IAAI;QACZ;QACA,IAAI,CAACJ,IAAI,CAACO,MAAM,CAAC,IAAI,CAACN,MAAM,EAAE,IAAI,CAACE,QAAQ,CAAC;QAC5C,IAAI,CAACF,MAAM,GAAGC,SAAS;MACxB;MACA,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAAE;QAC7B,IACCA,IAAI,CAACE,MAAM,GAAGR,gBAAgB;QAC9B;QACC,CAACO,aAAa,IAAI,CAACA,aAAa,CAACG,UAAU,CAAC,IAAI,CAAC,CAAC,EAClD;UACD,IAAI,CAACP,MAAM,GAAGG,IAAI;UAClB,IAAI,CAACD,QAAQ,GAAGE,aAAa;QAC9B,CAAC,MAAM;UACN,IAAI,CAACL,IAAI,CAACO,MAAM,CAACH,IAAI,EAAEC,aAAa,CAAC;QACtC;MACD,CAAC,MAAM;QACN,IAAI,CAACL,IAAI,CAACO,MAAM,CAACH,IAAI,CAAC;MACvB;MACA,OAAO,IAAI;IACZ;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,gBAAOD,QAAQ,EAAE;MAChB,IAAI,IAAI,CAACF,MAAM,KAAKC,SAAS,EAAE;QAC9B,IAAI,CAACF,IAAI,CAACO,MAAM,CAAC,IAAI,CAACN,MAAM,EAAE,IAAI,CAACE,QAAQ,CAAC;MAC7C;MACA,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAACN,QAAQ,CAAC;IAClC;EAAC;EAAA;AAAA,EAtDwBP,IAAI;AAyD9Bc,MAAM,CAACC,OAAO,GAAGZ,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}