{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ReplaceSource = _require.ReplaceSource;\nvar Generator = require(\"../Generator\");\nvar InitFragment = require(\"../InitFragment\");\nvar RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Generator\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nvar TYPES = new Set([\"css\"]);\nvar CssGenerator = /*#__PURE__*/function (_Generator) {\n  _inherits(CssGenerator, _Generator);\n  var _super = _createSuper(CssGenerator);\n  function CssGenerator() {\n    _classCallCheck(this, CssGenerator);\n    return _super.call(this);\n  }\n\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source} generated code\n   */\n  _createClass(CssGenerator, [{\n    key: \"generate\",\n    value: function generate(module, generateContext) {\n      var originalSource = module.originalSource();\n      var source = new ReplaceSource(originalSource);\n      var initFragments = [];\n      var cssExports = new Map();\n      generateContext.runtimeRequirements.add(RuntimeGlobals.hasCssModules);\n      var templateContext = {\n        runtimeTemplate: generateContext.runtimeTemplate,\n        dependencyTemplates: generateContext.dependencyTemplates,\n        moduleGraph: generateContext.moduleGraph,\n        chunkGraph: generateContext.chunkGraph,\n        module: module,\n        runtime: generateContext.runtime,\n        runtimeRequirements: generateContext.runtimeRequirements,\n        concatenationScope: generateContext.concatenationScope,\n        codeGenerationResults: generateContext.codeGenerationResults,\n        initFragments: initFragments,\n        cssExports: cssExports\n      };\n      var handleDependency = function handleDependency(dependency) {\n        var constructor = /** @type {new (...args: any[]) => Dependency} */\n        dependency.constructor;\n        var template = generateContext.dependencyTemplates.get(constructor);\n        if (!template) {\n          throw new Error(\"No template for dependency: \" + dependency.constructor.name);\n        }\n        template.apply(dependency, source, templateContext);\n      };\n      module.dependencies.forEach(handleDependency);\n      if (module.presentationalDependencies !== undefined) module.presentationalDependencies.forEach(handleDependency);\n      if (cssExports.size > 0) {\n        var data = generateContext.getData();\n        data.set(\"css-exports\", cssExports);\n      }\n      return InitFragment.addToSource(source, initFragments, generateContext);\n    }\n\n    /**\n     * @param {NormalModule} module fresh module\n     * @returns {Set<string>} available types (do not mutate)\n     */\n  }, {\n    key: \"getTypes\",\n    value: function getTypes(module) {\n      return TYPES;\n    }\n\n    /**\n     * @param {NormalModule} module the module\n     * @param {string=} type source type\n     * @returns {number} estimate size of the module\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize(module, type) {\n      var originalSource = module.originalSource();\n      if (!originalSource) {\n        return 0;\n      }\n      return originalSource.size();\n    }\n\n    /**\n     * @param {Hash} hash hash that will be modified\n     * @param {UpdateHashContext} updateHashContext context for updating hash\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash, _ref) {\n      var module = _ref.module;\n    }\n  }]);\n  return CssGenerator;\n}(Generator);\nmodule.exports = CssGenerator;","map":{"version":3,"names":["require","ReplaceSource","Generator","InitFragment","RuntimeGlobals","TYPES","Set","CssGenerator","module","generateContext","originalSource","source","initFragments","cssExports","Map","runtimeRequirements","add","hasCssModules","templateContext","runtimeTemplate","dependencyTemplates","moduleGraph","chunkGraph","runtime","concatenationScope","codeGenerationResults","handleDependency","dependency","constructor","template","get","Error","name","apply","dependencies","forEach","presentationalDependencies","undefined","size","data","getData","set","addToSource","type","hash","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/css/CssGenerator.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sergey Melyukov @smelukov\n*/\n\n\"use strict\";\n\nconst { ReplaceSource } = require(\"webpack-sources\");\nconst Generator = require(\"../Generator\");\nconst InitFragment = require(\"../InitFragment\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Generator\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nconst TYPES = new Set([\"css\"]);\n\nclass CssGenerator extends Generator {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(module, generateContext) {\n\t\tconst originalSource = module.originalSource();\n\t\tconst source = new ReplaceSource(originalSource);\n\t\tconst initFragments = [];\n\t\tconst cssExports = new Map();\n\n\t\tgenerateContext.runtimeRequirements.add(RuntimeGlobals.hasCssModules);\n\n\t\tconst templateContext = {\n\t\t\truntimeTemplate: generateContext.runtimeTemplate,\n\t\t\tdependencyTemplates: generateContext.dependencyTemplates,\n\t\t\tmoduleGraph: generateContext.moduleGraph,\n\t\t\tchunkGraph: generateContext.chunkGraph,\n\t\t\tmodule,\n\t\t\truntime: generateContext.runtime,\n\t\t\truntimeRequirements: generateContext.runtimeRequirements,\n\t\t\tconcatenationScope: generateContext.concatenationScope,\n\t\t\tcodeGenerationResults: generateContext.codeGenerationResults,\n\t\t\tinitFragments,\n\t\t\tcssExports\n\t\t};\n\n\t\tconst handleDependency = dependency => {\n\t\t\tconst constructor = /** @type {new (...args: any[]) => Dependency} */ (\n\t\t\t\tdependency.constructor\n\t\t\t);\n\t\t\tconst template = generateContext.dependencyTemplates.get(constructor);\n\t\t\tif (!template) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"No template for dependency: \" + dependency.constructor.name\n\t\t\t\t);\n\t\t\t}\n\n\t\t\ttemplate.apply(dependency, source, templateContext);\n\t\t};\n\t\tmodule.dependencies.forEach(handleDependency);\n\t\tif (module.presentationalDependencies !== undefined)\n\t\t\tmodule.presentationalDependencies.forEach(handleDependency);\n\n\t\tif (cssExports.size > 0) {\n\t\t\tconst data = generateContext.getData();\n\t\t\tdata.set(\"css-exports\", cssExports);\n\t\t}\n\n\t\treturn InitFragment.addToSource(source, initFragments, generateContext);\n\t}\n\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\tconst originalSource = module.originalSource();\n\n\t\tif (!originalSource) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn originalSource.size();\n\t}\n\n\t/**\n\t * @param {Hash} hash hash that will be modified\n\t * @param {UpdateHashContext} updateHashContext context for updating hash\n\t */\n\tupdateHash(hash, { module }) {}\n}\n\nmodule.exports = CssGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}