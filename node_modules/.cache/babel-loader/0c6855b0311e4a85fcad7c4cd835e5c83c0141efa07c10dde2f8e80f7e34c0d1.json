{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _defineProperty = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _objectSpread = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _toConsumableArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar util = require(\"util\");\nvar ModuleDependency = require(\"../dependencies/ModuleDependency\");\nvar formatLocation = require(\"../formatLocation\");\nvar _require = require(\"../logging/Logger\"),\n  LogType = _require.LogType;\nvar AggressiveSplittingPlugin = require(\"../optimize/AggressiveSplittingPlugin\");\nvar SizeLimitsPlugin = require(\"../performance/SizeLimitsPlugin\");\nvar _require2 = require(\"../util/IterableHelpers\"),\n  countIterable = _require2.countIterable;\nvar _require3 = require(\"../util/comparators\"),\n  compareLocations = _require3.compareLocations,\n  compareChunksById = _require3.compareChunksById,\n  compareNumbers = _require3.compareNumbers,\n  compareIds = _require3.compareIds,\n  concatComparators = _require3.concatComparators,\n  compareSelect = _require3.compareSelect,\n  compareModulesByIdentifier = _require3.compareModulesByIdentifier;\nvar _require4 = require(\"../util/identifier\"),\n  makePathsRelative = _require4.makePathsRelative,\n  parseResource = _require4.parseResource;\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../ChunkGroup\").OriginRecord} OriginRecord */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compilation\").Asset} Asset */\n/** @typedef {import(\"../Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"../Compilation\").NormalizedStatsOptions} NormalizedStatsOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleProfile\")} ModuleProfile */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @template T @typedef {import(\"../util/comparators\").Comparator<T>} Comparator<T> */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"../util/smartGrouping\").GroupConfig<any, object>} GroupConfig */\n/** @typedef {import(\"./StatsFactory\")} StatsFactory */\n/** @typedef {import(\"./StatsFactory\").StatsFactoryContext} StatsFactoryContext */\n\n/** @typedef {KnownStatsCompilation & Record<string, any>} StatsCompilation */\n/**\n * @typedef {Object} KnownStatsCompilation\n * @property {any=} env\n * @property {string=} name\n * @property {string=} hash\n * @property {string=} version\n * @property {number=} time\n * @property {number=} builtAt\n * @property {boolean=} needAdditionalPass\n * @property {string=} publicPath\n * @property {string=} outputPath\n * @property {Record<string, string[]>=} assetsByChunkName\n * @property {StatsAsset[]=} assets\n * @property {number=} filteredAssets\n * @property {StatsChunk[]=} chunks\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {Record<string, StatsChunkGroup>=} entrypoints\n * @property {Record<string, StatsChunkGroup>=} namedChunkGroups\n * @property {StatsError[]=} errors\n * @property {number=} errorsCount\n * @property {StatsError[]=} warnings\n * @property {number=} warningsCount\n * @property {StatsCompilation[]=} children\n * @property {Record<string, StatsLogging>=} logging\n */\n\n/** @typedef {KnownStatsLogging & Record<string, any>} StatsLogging */\n/**\n * @typedef {Object} KnownStatsLogging\n * @property {StatsLoggingEntry[]} entries\n * @property {number} filteredEntries\n * @property {boolean} debug\n */\n\n/** @typedef {KnownStatsLoggingEntry & Record<string, any>} StatsLoggingEntry */\n/**\n * @typedef {Object} KnownStatsLoggingEntry\n * @property {string} type\n * @property {string} message\n * @property {string[]=} trace\n * @property {StatsLoggingEntry[]=} children\n * @property {any[]=} args\n * @property {number=} time\n */\n\n/** @typedef {KnownStatsAsset & Record<string, any>} StatsAsset */\n/**\n * @typedef {Object} KnownStatsAsset\n * @property {string} type\n * @property {string} name\n * @property {AssetInfo} info\n * @property {number} size\n * @property {boolean} emitted\n * @property {boolean} comparedForEmit\n * @property {boolean} cached\n * @property {StatsAsset[]=} related\n * @property {(string|number)[]=} chunkNames\n * @property {(string|number)[]=} chunkIdHints\n * @property {(string|number)[]=} chunks\n * @property {(string|number)[]=} auxiliaryChunkNames\n * @property {(string|number)[]=} auxiliaryChunks\n * @property {(string|number)[]=} auxiliaryChunkIdHints\n * @property {number=} filteredRelated\n * @property {boolean=} isOverSizeLimit\n */\n\n/** @typedef {KnownStatsChunkGroup & Record<string, any>} StatsChunkGroup */\n/**\n * @typedef {Object} KnownStatsChunkGroup\n * @property {string=} name\n * @property {(string|number)[]=} chunks\n * @property {({ name: string, size?: number })[]=} assets\n * @property {number=} filteredAssets\n * @property {number=} assetsSize\n * @property {({ name: string, size?: number })[]=} auxiliaryAssets\n * @property {number=} filteredAuxiliaryAssets\n * @property {number=} auxiliaryAssetsSize\n * @property {{ [x: string]: StatsChunkGroup[] }=} children\n * @property {{ [x: string]: string[] }=} childAssets\n * @property {boolean=} isOverSizeLimit\n */\n\n/** @typedef {KnownStatsModule & Record<string, any>} StatsModule */\n/**\n * @typedef {Object} KnownStatsModule\n * @property {string=} type\n * @property {string=} moduleType\n * @property {string=} layer\n * @property {string=} identifier\n * @property {string=} name\n * @property {string=} nameForCondition\n * @property {number=} index\n * @property {number=} preOrderIndex\n * @property {number=} index2\n * @property {number=} postOrderIndex\n * @property {number=} size\n * @property {{[x: string]: number}=} sizes\n * @property {boolean=} cacheable\n * @property {boolean=} built\n * @property {boolean=} codeGenerated\n * @property {boolean=} buildTimeExecuted\n * @property {boolean=} cached\n * @property {boolean=} optional\n * @property {boolean=} orphan\n * @property {string|number=} id\n * @property {string|number=} issuerId\n * @property {(string|number)[]=} chunks\n * @property {(string|number)[]=} assets\n * @property {boolean=} dependent\n * @property {string=} issuer\n * @property {string=} issuerName\n * @property {StatsModuleIssuer[]=} issuerPath\n * @property {boolean=} failed\n * @property {number=} errors\n * @property {number=} warnings\n * @property {StatsProfile=} profile\n * @property {StatsModuleReason[]=} reasons\n * @property {(boolean | string[])=} usedExports\n * @property {string[]=} providedExports\n * @property {string[]=} optimizationBailout\n * @property {number=} depth\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {ReturnType<Source[\"source\"]>=} source\n */\n\n/** @typedef {KnownStatsProfile & Record<string, any>} StatsProfile */\n/**\n * @typedef {Object} KnownStatsProfile\n * @property {number} total\n * @property {number} resolving\n * @property {number} restoring\n * @property {number} building\n * @property {number} integration\n * @property {number} storing\n * @property {number} additionalResolving\n * @property {number} additionalIntegration\n * @property {number} factory\n * @property {number} dependencies\n */\n\n/** @typedef {KnownStatsModuleIssuer & Record<string, any>} StatsModuleIssuer */\n/**\n * @typedef {Object} KnownStatsModuleIssuer\n * @property {string=} identifier\n * @property {string=} name\n * @property {(string|number)=} id\n * @property {StatsProfile=} profile\n */\n\n/** @typedef {KnownStatsModuleReason & Record<string, any>} StatsModuleReason */\n/**\n * @typedef {Object} KnownStatsModuleReason\n * @property {string=} moduleIdentifier\n * @property {string=} module\n * @property {string=} moduleName\n * @property {string=} resolvedModuleIdentifier\n * @property {string=} resolvedModule\n * @property {string=} type\n * @property {boolean} active\n * @property {string=} explanation\n * @property {string=} userRequest\n * @property {string=} loc\n * @property {(string|number)=} moduleId\n * @property {(string|number)=} resolvedModuleId\n */\n\n/** @typedef {KnownStatsChunk & Record<string, any>} StatsChunk */\n/**\n * @typedef {Object} KnownStatsChunk\n * @property {boolean} rendered\n * @property {boolean} initial\n * @property {boolean} entry\n * @property {boolean} recorded\n * @property {string=} reason\n * @property {number} size\n * @property {Record<string, number>=} sizes\n * @property {string[]=} names\n * @property {string[]=} idHints\n * @property {string[]=} runtime\n * @property {string[]=} files\n * @property {string[]=} auxiliaryFiles\n * @property {string} hash\n * @property {Record<string, (string|number)[]>=} childrenByOrder\n * @property {(string|number)=} id\n * @property {(string|number)[]=} siblings\n * @property {(string|number)[]=} parents\n * @property {(string|number)[]=} children\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {StatsChunkOrigin[]=} origins\n */\n\n/** @typedef {KnownStatsChunkOrigin & Record<string, any>} StatsChunkOrigin */\n/**\n * @typedef {Object} KnownStatsChunkOrigin\n * @property {string=} module\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {string=} loc\n * @property {string=} request\n * @property {(string|number)=} moduleId\n */\n\n/** @typedef {KnownStatsModuleTraceItem & Record<string, any>} StatsModuleTraceItem */\n/**\n * @typedef {Object} KnownStatsModuleTraceItem\n * @property {string=} originIdentifier\n * @property {string=} originName\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {StatsModuleTraceDependency[]=} dependencies\n * @property {(string|number)=} originId\n * @property {(string|number)=} moduleId\n */\n\n/** @typedef {KnownStatsModuleTraceDependency & Record<string, any>} StatsModuleTraceDependency */\n/**\n * @typedef {Object} KnownStatsModuleTraceDependency\n * @property {string=} loc\n */\n\n/** @typedef {KnownStatsError & Record<string, any>} StatsError */\n/**\n * @typedef {Object} KnownStatsError\n * @property {string} message\n * @property {string=} chunkName\n * @property {boolean=} chunkEntry\n * @property {boolean=} chunkInitial\n * @property {string=} file\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {string=} loc\n * @property {string|number=} chunkId\n * @property {string|number=} moduleId\n * @property {StatsModuleTraceItem[]=} moduleTrace\n * @property {any=} details\n * @property {string=} stack\n */\n\n/** @typedef {Asset & { type: string, related: PreprocessedAsset[] }} PreprocessedAsset */\n\n/**\n * @template T\n * @template O\n * @typedef {Record<string, (object: O, data: T, context: StatsFactoryContext, options: NormalizedStatsOptions, factory: StatsFactory) => void>} ExtractorsByOption\n */\n\n/**\n * @typedef {Object} SimpleExtractors\n * @property {ExtractorsByOption<Compilation, StatsCompilation>} compilation\n * @property {ExtractorsByOption<PreprocessedAsset, StatsAsset>} asset\n * @property {ExtractorsByOption<PreprocessedAsset, StatsAsset>} asset$visible\n * @property {ExtractorsByOption<{ name: string, chunkGroup: ChunkGroup }, StatsChunkGroup>} chunkGroup\n * @property {ExtractorsByOption<Module, StatsModule>} module\n * @property {ExtractorsByOption<Module, StatsModule>} module$visible\n * @property {ExtractorsByOption<Module, StatsModuleIssuer>} moduleIssuer\n * @property {ExtractorsByOption<ModuleProfile, StatsProfile>} profile\n * @property {ExtractorsByOption<ModuleGraphConnection, StatsModuleReason>} moduleReason\n * @property {ExtractorsByOption<Chunk, StatsChunk>} chunk\n * @property {ExtractorsByOption<OriginRecord, StatsChunkOrigin>} chunkOrigin\n * @property {ExtractorsByOption<WebpackError, StatsError>} error\n * @property {ExtractorsByOption<WebpackError, StatsError>} warning\n * @property {ExtractorsByOption<{ origin: Module, module: Module }, StatsModuleTraceItem>} moduleTraceItem\n * @property {ExtractorsByOption<Dependency, StatsModuleTraceDependency>} moduleTraceDependency\n */\n\n/**\n * @template T\n * @template I\n * @param {Iterable<T>} items items to select from\n * @param {function(T): Iterable<I>} selector selector function to select values from item\n * @returns {I[]} array of values\n */\nvar uniqueArray = function uniqueArray(items, selector) {\n  /** @type {Set<I>} */\n  var set = new Set();\n  var _iterator = _createForOfIteratorHelper(items),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(selector(item)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n          set.add(i);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return Array.from(set);\n};\n\n/**\n * @template T\n * @template I\n * @param {Iterable<T>} items items to select from\n * @param {function(T): Iterable<I>} selector selector function to select values from item\n * @param {Comparator<I>} comparator comparator function\n * @returns {I[]} array of values\n */\nvar uniqueOrderedArray = function uniqueOrderedArray(items, selector, comparator) {\n  return uniqueArray(items, selector).sort(comparator);\n};\n\n/** @template T @template R @typedef {{ [P in keyof T]: R }} MappedValues<T, R> */\n\n/**\n * @template T\n * @template R\n * @param {T} obj object to be mapped\n * @param {function(T[keyof T], keyof T): R} fn mapping function\n * @returns {MappedValues<T, R>} mapped object\n */\nvar mapObject = function mapObject(obj, fn) {\n  var newObj = Object.create(null);\n  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    newObj[key] = fn(obj[key], /** @type {keyof T} */key);\n  }\n  return newObj;\n};\n\n/**\n * @param {Compilation} compilation the compilation\n * @param {function(Compilation, string): any[]} getItems get items\n * @returns {number} total number\n */\nvar countWithChildren = function countWithChildren(compilation, getItems) {\n  var count = getItems(compilation, \"\").length;\n  var _iterator3 = _createForOfIteratorHelper(compilation.children),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var child = _step3.value;\n      count += countWithChildren(child, function (c, type) {\n        return getItems(c, \".children[].compilation\".concat(type));\n      });\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return count;\n};\n\n/** @type {ExtractorsByOption<WebpackError | string, StatsError>} */\nvar EXTRACT_ERROR = {\n  _: function _(object, error, context, _ref) {\n    var requestShortener = _ref.requestShortener;\n    // TODO webpack 6 disallow strings in the errors/warnings list\n    if (typeof error === \"string\") {\n      object.message = error;\n    } else {\n      if (error.chunk) {\n        object.chunkName = error.chunk.name;\n        object.chunkEntry = error.chunk.hasRuntime();\n        object.chunkInitial = error.chunk.canBeInitial();\n      }\n      if (error.file) {\n        object.file = error.file;\n      }\n      if (error.module) {\n        object.moduleIdentifier = error.module.identifier();\n        object.moduleName = error.module.readableIdentifier(requestShortener);\n      }\n      if (error.loc) {\n        object.loc = formatLocation(error.loc);\n      }\n      object.message = error.message;\n    }\n  },\n  ids: function ids(object, error, _ref2) {\n    var chunkGraph = _ref2.compilation.chunkGraph;\n    if (typeof error !== \"string\") {\n      if (error.chunk) {\n        object.chunkId = error.chunk.id;\n      }\n      if (error.module) {\n        object.moduleId = chunkGraph.getModuleId(error.module);\n      }\n    }\n  },\n  moduleTrace: function moduleTrace(object, error, context, options, factory) {\n    if (typeof error !== \"string\" && error.module) {\n      var type = context.type,\n        moduleGraph = context.compilation.moduleGraph;\n      /** @type {Set<Module>} */\n      var visitedModules = new Set();\n      var moduleTrace = [];\n      var current = error.module;\n      while (current) {\n        if (visitedModules.has(current)) break; // circular (technically impossible, but how knows)\n        visitedModules.add(current);\n        var origin = moduleGraph.getIssuer(current);\n        if (!origin) break;\n        moduleTrace.push({\n          origin: origin,\n          module: current\n        });\n        current = origin;\n      }\n      object.moduleTrace = factory.create(\"\".concat(type, \".moduleTrace\"), moduleTrace, context);\n    }\n  },\n  errorDetails: function errorDetails(object, error, _ref3, _ref4) {\n    var type = _ref3.type,\n      compilation = _ref3.compilation,\n      cachedGetErrors = _ref3.cachedGetErrors,\n      cachedGetWarnings = _ref3.cachedGetWarnings;\n    var _errorDetails = _ref4.errorDetails;\n    if (typeof error !== \"string\" && (_errorDetails === true || type.endsWith(\".error\") && cachedGetErrors(compilation).length < 3)) {\n      object.details = error.details;\n    }\n  },\n  errorStack: function errorStack(object, error) {\n    if (typeof error !== \"string\") {\n      object.stack = error.stack;\n    }\n  }\n};\n\n/** @type {SimpleExtractors} */\nvar SIMPLE_EXTRACTORS = {\n  compilation: {\n    _: function _(object, compilation, context, options) {\n      if (!context.makePathsRelative) {\n        context.makePathsRelative = makePathsRelative.bindContextCache(compilation.compiler.context, compilation.compiler.root);\n      }\n      if (!context.cachedGetErrors) {\n        var map = new WeakMap();\n        context.cachedGetErrors = function (compilation) {\n          return map.get(compilation) || function (errors) {\n            return map.set(compilation, errors), errors;\n          }(compilation.getErrors());\n        };\n      }\n      if (!context.cachedGetWarnings) {\n        var _map = new WeakMap();\n        context.cachedGetWarnings = function (compilation) {\n          return _map.get(compilation) || function (warnings) {\n            return _map.set(compilation, warnings), warnings;\n          }(compilation.getWarnings());\n        };\n      }\n      if (compilation.name) {\n        object.name = compilation.name;\n      }\n      if (compilation.needAdditionalPass) {\n        object.needAdditionalPass = true;\n      }\n      var logging = options.logging,\n        loggingDebug = options.loggingDebug,\n        loggingTrace = options.loggingTrace;\n      if (logging || loggingDebug && loggingDebug.length > 0) {\n        var _util = require(\"util\");\n        object.logging = {};\n        var acceptedTypes;\n        var collapsedGroups = false;\n        switch (logging) {\n          default:\n            acceptedTypes = new Set();\n            break;\n          case \"error\":\n            acceptedTypes = new Set([LogType.error]);\n            break;\n          case \"warn\":\n            acceptedTypes = new Set([LogType.error, LogType.warn]);\n            break;\n          case \"info\":\n            acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info]);\n            break;\n          case \"log\":\n            acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.clear]);\n            break;\n          case \"verbose\":\n            acceptedTypes = new Set([LogType.error, LogType.warn, LogType.info, LogType.log, LogType.group, LogType.groupEnd, LogType.groupCollapsed, LogType.profile, LogType.profileEnd, LogType.time, LogType.status, LogType.clear]);\n            collapsedGroups = true;\n            break;\n        }\n        var cachedMakePathsRelative = makePathsRelative.bindContextCache(options.context, compilation.compiler.root);\n        var depthInCollapsedGroup = 0;\n        var _iterator4 = _createForOfIteratorHelper(compilation.logging),\n          _step4;\n        try {\n          var _loop = function _loop() {\n            var _step4$value = _slicedToArray(_step4.value, 2),\n              origin = _step4$value[0],\n              logEntries = _step4$value[1];\n            var debugMode = loggingDebug.some(function (fn) {\n              return fn(origin);\n            });\n            if (logging === false && !debugMode) return \"continue\";\n            /** @type {KnownStatsLoggingEntry[]} */\n            var groupStack = [];\n            /** @type {KnownStatsLoggingEntry[]} */\n            var rootList = [];\n            var currentList = rootList;\n            var processedLogEntries = 0;\n            var _iterator5 = _createForOfIteratorHelper(logEntries),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var entry = _step5.value;\n                var type = entry.type;\n                if (!debugMode && !acceptedTypes.has(type)) continue;\n\n                // Expand groups in verbose and debug modes\n                if (type === LogType.groupCollapsed && (debugMode || collapsedGroups)) type = LogType.group;\n                if (depthInCollapsedGroup === 0) {\n                  processedLogEntries++;\n                }\n                if (type === LogType.groupEnd) {\n                  groupStack.pop();\n                  if (groupStack.length > 0) {\n                    currentList = groupStack[groupStack.length - 1].children;\n                  } else {\n                    currentList = rootList;\n                  }\n                  if (depthInCollapsedGroup > 0) depthInCollapsedGroup--;\n                  continue;\n                }\n                var message = undefined;\n                if (entry.type === LogType.time) {\n                  message = \"\".concat(entry.args[0], \": \").concat(entry.args[1] * 1000 + entry.args[2] / 1000000, \" ms\");\n                } else if (entry.args && entry.args.length > 0) {\n                  message = _util.format.apply(_util, [entry.args[0]].concat(_toConsumableArray(entry.args.slice(1))));\n                }\n                /** @type {KnownStatsLoggingEntry} */\n                var newEntry = _objectSpread(_objectSpread({}, entry), {}, {\n                  type: type,\n                  message: message,\n                  trace: loggingTrace ? entry.trace : undefined,\n                  children: type === LogType.group || type === LogType.groupCollapsed ? [] : undefined\n                });\n                currentList.push(newEntry);\n                if (newEntry.children) {\n                  groupStack.push(newEntry);\n                  currentList = newEntry.children;\n                  if (depthInCollapsedGroup > 0) {\n                    depthInCollapsedGroup++;\n                  } else if (type === LogType.groupCollapsed) {\n                    depthInCollapsedGroup = 1;\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            var name = cachedMakePathsRelative(origin).replace(/\\|/g, \" \");\n            if (name in object.logging) {\n              var i = 1;\n              while (\"\".concat(name, \"#\").concat(i) in object.logging) {\n                i++;\n              }\n              name = \"\".concat(name, \"#\").concat(i);\n            }\n            object.logging[name] = {\n              entries: rootList,\n              filteredEntries: logEntries.length - processedLogEntries,\n              debug: debugMode\n            };\n          };\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _ret = _loop();\n            if (_ret === \"continue\") continue;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n    },\n    hash: function hash(object, compilation) {\n      object.hash = compilation.hash;\n    },\n    version: function version(object) {\n      object.version = require(\"../../package.json\").version;\n    },\n    env: function env(object, compilation, context, _ref5) {\n      var _env = _ref5._env;\n      object.env = _env;\n    },\n    timings: function timings(object, compilation) {\n      object.time = compilation.endTime - compilation.startTime;\n    },\n    builtAt: function builtAt(object, compilation) {\n      object.builtAt = compilation.endTime;\n    },\n    publicPath: function publicPath(object, compilation) {\n      object.publicPath = compilation.getPath(compilation.outputOptions.publicPath);\n    },\n    outputPath: function outputPath(object, compilation) {\n      object.outputPath = compilation.outputOptions.path;\n    },\n    assets: function assets(object, compilation, context, options, factory) {\n      var type = context.type;\n      /** @type {Map<string, Chunk[]>} */\n      var compilationFileToChunks = new Map();\n      /** @type {Map<string, Chunk[]>} */\n      var compilationAuxiliaryFileToChunks = new Map();\n      var _iterator6 = _createForOfIteratorHelper(compilation.chunks),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var chunk = _step6.value;\n          var _iterator10 = _createForOfIteratorHelper(chunk.files),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var file = _step10.value;\n              var array = compilationFileToChunks.get(file);\n              if (array === undefined) {\n                array = [];\n                compilationFileToChunks.set(file, array);\n              }\n              array.push(chunk);\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n          var _iterator11 = _createForOfIteratorHelper(chunk.auxiliaryFiles),\n            _step11;\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var _file = _step11.value;\n              var _array = compilationAuxiliaryFileToChunks.get(_file);\n              if (_array === undefined) {\n                _array = [];\n                compilationAuxiliaryFileToChunks.set(_file, _array);\n              }\n              _array.push(chunk);\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n        }\n        /** @type {Map<string, PreprocessedAsset>} */\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var assetMap = new Map();\n      /** @type {Set<PreprocessedAsset>} */\n      var assets = new Set();\n      var _iterator7 = _createForOfIteratorHelper(compilation.getAssets()),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var asset = _step7.value;\n          /** @type {PreprocessedAsset} */\n          var item = _objectSpread(_objectSpread({}, asset), {}, {\n            type: \"asset\",\n            related: undefined\n          });\n          assets.add(item);\n          assetMap.set(asset.name, item);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(assetMap.values()),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _item = _step8.value;\n          var related = _item.info.related;\n          if (!related) continue;\n          for (var _i2 = 0, _Object$keys2 = Object.keys(related); _i2 < _Object$keys2.length; _i2++) {\n            var _type = _Object$keys2[_i2];\n            var relatedEntry = related[_type];\n            var deps = Array.isArray(relatedEntry) ? relatedEntry : [relatedEntry];\n            var _iterator12 = _createForOfIteratorHelper(deps),\n              _step12;\n            try {\n              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                var dep = _step12.value;\n                var depItem = assetMap.get(dep);\n                if (!depItem) continue;\n                assets.delete(depItem);\n                depItem.type = _type;\n                _item.related = _item.related || [];\n                _item.related.push(depItem);\n              }\n            } catch (err) {\n              _iterator12.e(err);\n            } finally {\n              _iterator12.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      object.assetsByChunkName = {};\n      var _iterator9 = _createForOfIteratorHelper(compilationFileToChunks),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var _step9$value = _slicedToArray(_step9.value, 2),\n            _file2 = _step9$value[0],\n            chunks = _step9$value[1];\n          var _iterator13 = _createForOfIteratorHelper(chunks),\n            _step13;\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var _chunk = _step13.value;\n              var name = _chunk.name;\n              if (!name) continue;\n              if (!Object.prototype.hasOwnProperty.call(object.assetsByChunkName, name)) {\n                object.assetsByChunkName[name] = [];\n              }\n              object.assetsByChunkName[name].push(_file2);\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      var groupedAssets = factory.create(\"\".concat(type, \".assets\"), Array.from(assets), _objectSpread(_objectSpread({}, context), {}, {\n        compilationFileToChunks: compilationFileToChunks,\n        compilationAuxiliaryFileToChunks: compilationAuxiliaryFileToChunks\n      }));\n      var limited = spaceLimited(groupedAssets, options.assetsSpace);\n      object.assets = limited.children;\n      object.filteredAssets = limited.filteredChildren;\n    },\n    chunks: function chunks(object, compilation, context, options, factory) {\n      var type = context.type;\n      object.chunks = factory.create(\"\".concat(type, \".chunks\"), Array.from(compilation.chunks), context);\n    },\n    modules: function modules(object, compilation, context, options, factory) {\n      var type = context.type;\n      var array = Array.from(compilation.modules);\n      var groupedModules = factory.create(\"\".concat(type, \".modules\"), array, context);\n      var limited = spaceLimited(groupedModules, options.modulesSpace);\n      object.modules = limited.children;\n      object.filteredModules = limited.filteredChildren;\n    },\n    entrypoints: function entrypoints(object, compilation, context, _ref6, factory) {\n      var _entrypoints = _ref6.entrypoints,\n        chunkGroups = _ref6.chunkGroups,\n        chunkGroupAuxiliary = _ref6.chunkGroupAuxiliary,\n        chunkGroupChildren = _ref6.chunkGroupChildren;\n      var type = context.type;\n      var array = Array.from(compilation.entrypoints, function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          key = _ref8[0],\n          value = _ref8[1];\n        return {\n          name: key,\n          chunkGroup: value\n        };\n      });\n      if (_entrypoints === \"auto\" && !chunkGroups) {\n        if (array.length > 5) return;\n        if (!chunkGroupChildren && array.every(function (_ref9) {\n          var chunkGroup = _ref9.chunkGroup;\n          if (chunkGroup.chunks.length !== 1) return false;\n          var chunk = chunkGroup.chunks[0];\n          return chunk.files.size === 1 && (!chunkGroupAuxiliary || chunk.auxiliaryFiles.size === 0);\n        })) {\n          return;\n        }\n      }\n      object.entrypoints = factory.create(\"\".concat(type, \".entrypoints\"), array, context);\n    },\n    chunkGroups: function chunkGroups(object, compilation, context, options, factory) {\n      var type = context.type;\n      var array = Array.from(compilation.namedChunkGroups, function (_ref10) {\n        var _ref11 = _slicedToArray(_ref10, 2),\n          key = _ref11[0],\n          value = _ref11[1];\n        return {\n          name: key,\n          chunkGroup: value\n        };\n      });\n      object.namedChunkGroups = factory.create(\"\".concat(type, \".namedChunkGroups\"), array, context);\n    },\n    errors: function errors(object, compilation, context, options, factory) {\n      var type = context.type,\n        cachedGetErrors = context.cachedGetErrors;\n      object.errors = factory.create(\"\".concat(type, \".errors\"), cachedGetErrors(compilation), context);\n    },\n    errorsCount: function errorsCount(object, compilation, _ref12) {\n      var cachedGetErrors = _ref12.cachedGetErrors;\n      object.errorsCount = countWithChildren(compilation, function (c) {\n        return cachedGetErrors(c);\n      });\n    },\n    warnings: function warnings(object, compilation, context, options, factory) {\n      var type = context.type,\n        cachedGetWarnings = context.cachedGetWarnings;\n      object.warnings = factory.create(\"\".concat(type, \".warnings\"), cachedGetWarnings(compilation), context);\n    },\n    warningsCount: function warningsCount(object, compilation, context, _ref13, factory) {\n      var warningsFilter = _ref13.warningsFilter;\n      var type = context.type,\n        cachedGetWarnings = context.cachedGetWarnings;\n      object.warningsCount = countWithChildren(compilation, function (c, childType) {\n        if (!warningsFilter && warningsFilter.length === 0) return cachedGetWarnings(c);\n        return factory.create(\"\".concat(type).concat(childType, \".warnings\"), cachedGetWarnings(c), context).filter(function (warning) {\n          var warningString = Object.keys(warning).map(function (key) {\n            return \"\".concat(warning[key]);\n          }).join(\"\\n\");\n          return !warningsFilter.some(function (filter) {\n            return filter(warning, warningString);\n          });\n        });\n      });\n    },\n    errorDetails: function errorDetails(object, compilation, _ref14, _ref15) {\n      var cachedGetErrors = _ref14.cachedGetErrors,\n        cachedGetWarnings = _ref14.cachedGetWarnings;\n      var _errorDetails2 = _ref15.errorDetails,\n        errors = _ref15.errors,\n        warnings = _ref15.warnings;\n      if (_errorDetails2 === \"auto\") {\n        if (warnings) {\n          var _warnings = cachedGetWarnings(compilation);\n          object.filteredWarningDetailsCount = _warnings.map(function (e) {\n            return typeof e !== \"string\" && e.details;\n          }).filter(Boolean).length;\n        }\n        if (errors) {\n          var _errors = cachedGetErrors(compilation);\n          if (_errors.length >= 3) {\n            object.filteredErrorDetailsCount = _errors.map(function (e) {\n              return typeof e !== \"string\" && e.details;\n            }).filter(Boolean).length;\n          }\n        }\n      }\n    },\n    children: function children(object, compilation, context, options, factory) {\n      var type = context.type;\n      object.children = factory.create(\"\".concat(type, \".children\"), compilation.children, context);\n    }\n  },\n  asset: {\n    _: function _(object, asset, context, options, factory) {\n      var compilation = context.compilation;\n      object.type = asset.type;\n      object.name = asset.name;\n      object.size = asset.source.size();\n      object.emitted = compilation.emittedAssets.has(asset.name);\n      object.comparedForEmit = compilation.comparedForEmitAssets.has(asset.name);\n      var cached = !object.emitted && !object.comparedForEmit;\n      object.cached = cached;\n      object.info = asset.info;\n      if (!cached || options.cachedAssets) {\n        Object.assign(object, factory.create(\"\".concat(context.type, \"$visible\"), asset, context));\n      }\n    }\n  },\n  asset$visible: {\n    _: function _(object, asset, _ref16) {\n      var compilation = _ref16.compilation,\n        compilationFileToChunks = _ref16.compilationFileToChunks,\n        compilationAuxiliaryFileToChunks = _ref16.compilationAuxiliaryFileToChunks;\n      var chunks = compilationFileToChunks.get(asset.name) || [];\n      var auxiliaryChunks = compilationAuxiliaryFileToChunks.get(asset.name) || [];\n      object.chunkNames = uniqueOrderedArray(chunks, function (c) {\n        return c.name ? [c.name] : [];\n      }, compareIds);\n      object.chunkIdHints = uniqueOrderedArray(chunks, function (c) {\n        return Array.from(c.idNameHints);\n      }, compareIds);\n      object.auxiliaryChunkNames = uniqueOrderedArray(auxiliaryChunks, function (c) {\n        return c.name ? [c.name] : [];\n      }, compareIds);\n      object.auxiliaryChunkIdHints = uniqueOrderedArray(auxiliaryChunks, function (c) {\n        return Array.from(c.idNameHints);\n      }, compareIds);\n      object.filteredRelated = asset.related ? asset.related.length : undefined;\n    },\n    relatedAssets: function relatedAssets(object, asset, context, options, factory) {\n      var type = context.type;\n      object.related = factory.create(\"\".concat(type.slice(0, -8), \".related\"), asset.related, context);\n      object.filteredRelated = asset.related ? asset.related.length - object.related.length : undefined;\n    },\n    ids: function ids(object, asset, _ref17) {\n      var compilationFileToChunks = _ref17.compilationFileToChunks,\n        compilationAuxiliaryFileToChunks = _ref17.compilationAuxiliaryFileToChunks;\n      var chunks = compilationFileToChunks.get(asset.name) || [];\n      var auxiliaryChunks = compilationAuxiliaryFileToChunks.get(asset.name) || [];\n      object.chunks = uniqueOrderedArray(chunks, function (c) {\n        return c.ids;\n      }, compareIds);\n      object.auxiliaryChunks = uniqueOrderedArray(auxiliaryChunks, function (c) {\n        return c.ids;\n      }, compareIds);\n    },\n    performance: function performance(object, asset) {\n      object.isOverSizeLimit = SizeLimitsPlugin.isOverSizeLimit(asset.source);\n    }\n  },\n  chunkGroup: {\n    _: function _(object, _ref18, _ref19, _ref20) {\n      var name = _ref18.name,\n        chunkGroup = _ref18.chunkGroup;\n      var compilation = _ref19.compilation,\n        _ref19$compilation = _ref19.compilation,\n        moduleGraph = _ref19$compilation.moduleGraph,\n        chunkGraph = _ref19$compilation.chunkGraph;\n      var ids = _ref20.ids,\n        chunkGroupAuxiliary = _ref20.chunkGroupAuxiliary,\n        chunkGroupChildren = _ref20.chunkGroupChildren,\n        chunkGroupMaxAssets = _ref20.chunkGroupMaxAssets;\n      var children = chunkGroupChildren && chunkGroup.getChildrenByOrders(moduleGraph, chunkGraph);\n      /**\n       * @param {string} name Name\n       * @returns {{ name: string, size: number }} Asset object\n       */\n      var toAsset = function toAsset(name) {\n        var asset = compilation.getAsset(name);\n        return {\n          name: name,\n          size: asset ? asset.info.size : -1\n        };\n      };\n      /** @type {(total: number, asset: { size: number }) => number} */\n      var sizeReducer = function sizeReducer(total, _ref21) {\n        var size = _ref21.size;\n        return total + size;\n      };\n      var assets = uniqueArray(chunkGroup.chunks, function (c) {\n        return c.files;\n      }).map(toAsset);\n      var auxiliaryAssets = uniqueOrderedArray(chunkGroup.chunks, function (c) {\n        return c.auxiliaryFiles;\n      }, compareIds).map(toAsset);\n      var assetsSize = assets.reduce(sizeReducer, 0);\n      var auxiliaryAssetsSize = auxiliaryAssets.reduce(sizeReducer, 0);\n      /** @type {KnownStatsChunkGroup} */\n      var statsChunkGroup = {\n        name: name,\n        chunks: ids ? chunkGroup.chunks.map(function (c) {\n          return c.id;\n        }) : undefined,\n        assets: assets.length <= chunkGroupMaxAssets ? assets : undefined,\n        filteredAssets: assets.length <= chunkGroupMaxAssets ? 0 : assets.length,\n        assetsSize: assetsSize,\n        auxiliaryAssets: chunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets ? auxiliaryAssets : undefined,\n        filteredAuxiliaryAssets: chunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets ? 0 : auxiliaryAssets.length,\n        auxiliaryAssetsSize: auxiliaryAssetsSize,\n        children: children ? mapObject(children, function (groups) {\n          return groups.map(function (group) {\n            var assets = uniqueArray(group.chunks, function (c) {\n              return c.files;\n            }).map(toAsset);\n            var auxiliaryAssets = uniqueOrderedArray(group.chunks, function (c) {\n              return c.auxiliaryFiles;\n            }, compareIds).map(toAsset);\n\n            /** @type {KnownStatsChunkGroup} */\n            var childStatsChunkGroup = {\n              name: group.name,\n              chunks: ids ? group.chunks.map(function (c) {\n                return c.id;\n              }) : undefined,\n              assets: assets.length <= chunkGroupMaxAssets ? assets : undefined,\n              filteredAssets: assets.length <= chunkGroupMaxAssets ? 0 : assets.length,\n              auxiliaryAssets: chunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets ? auxiliaryAssets : undefined,\n              filteredAuxiliaryAssets: chunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets ? 0 : auxiliaryAssets.length\n            };\n            return childStatsChunkGroup;\n          });\n        }) : undefined,\n        childAssets: children ? mapObject(children, function (groups) {\n          /** @type {Set<string>} */\n          var set = new Set();\n          var _iterator14 = _createForOfIteratorHelper(groups),\n            _step14;\n          try {\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              var group = _step14.value;\n              var _iterator15 = _createForOfIteratorHelper(group.chunks),\n                _step15;\n              try {\n                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                  var chunk = _step15.value;\n                  var _iterator16 = _createForOfIteratorHelper(chunk.files),\n                    _step16;\n                  try {\n                    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                      var asset = _step16.value;\n                      set.add(asset);\n                    }\n                  } catch (err) {\n                    _iterator16.e(err);\n                  } finally {\n                    _iterator16.f();\n                  }\n                }\n              } catch (err) {\n                _iterator15.e(err);\n              } finally {\n                _iterator15.f();\n              }\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n          return Array.from(set);\n        }) : undefined\n      };\n      Object.assign(object, statsChunkGroup);\n    },\n    performance: function performance(object, _ref22) {\n      var chunkGroup = _ref22.chunkGroup;\n      object.isOverSizeLimit = SizeLimitsPlugin.isOverSizeLimit(chunkGroup);\n    }\n  },\n  module: {\n    _: function _(object, module, context, options, factory) {\n      var compilation = context.compilation,\n        type = context.type;\n      var built = compilation.builtModules.has(module);\n      var codeGenerated = compilation.codeGeneratedModules.has(module);\n      var buildTimeExecuted = compilation.buildTimeExecutedModules.has(module);\n      /** @type {{[x: string]: number}} */\n      var sizes = {};\n      var _iterator17 = _createForOfIteratorHelper(module.getSourceTypes()),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var sourceType = _step17.value;\n          sizes[sourceType] = module.size(sourceType);\n        }\n        /** @type {KnownStatsModule} */\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      var statsModule = {\n        type: \"module\",\n        moduleType: module.type,\n        layer: module.layer,\n        size: module.size(),\n        sizes: sizes,\n        built: built,\n        codeGenerated: codeGenerated,\n        buildTimeExecuted: buildTimeExecuted,\n        cached: !built && !codeGenerated\n      };\n      Object.assign(object, statsModule);\n      if (built || codeGenerated || options.cachedModules) {\n        Object.assign(object, factory.create(\"\".concat(type, \"$visible\"), module, context));\n      }\n    }\n  },\n  module$visible: {\n    _: function _(object, module, context, _ref23, factory) {\n      var requestShortener = _ref23.requestShortener;\n      var compilation = context.compilation,\n        type = context.type,\n        rootModules = context.rootModules;\n      var moduleGraph = compilation.moduleGraph;\n      /** @type {Module[]} */\n      var path = [];\n      var issuer = moduleGraph.getIssuer(module);\n      var current = issuer;\n      while (current) {\n        path.push(current);\n        current = moduleGraph.getIssuer(current);\n      }\n      path.reverse();\n      var profile = moduleGraph.getProfile(module);\n      var errors = module.getErrors();\n      var errorsCount = errors !== undefined ? countIterable(errors) : 0;\n      var warnings = module.getWarnings();\n      var warningsCount = warnings !== undefined ? countIterable(warnings) : 0;\n      /** @type {{[x: string]: number}} */\n      var sizes = {};\n      var _iterator18 = _createForOfIteratorHelper(module.getSourceTypes()),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var sourceType = _step18.value;\n          sizes[sourceType] = module.size(sourceType);\n        }\n        /** @type {KnownStatsModule} */\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n      var statsModule = {\n        identifier: module.identifier(),\n        name: module.readableIdentifier(requestShortener),\n        nameForCondition: module.nameForCondition(),\n        index: moduleGraph.getPreOrderIndex(module),\n        preOrderIndex: moduleGraph.getPreOrderIndex(module),\n        index2: moduleGraph.getPostOrderIndex(module),\n        postOrderIndex: moduleGraph.getPostOrderIndex(module),\n        cacheable: module.buildInfo.cacheable,\n        optional: module.isOptional(moduleGraph),\n        orphan: !type.endsWith(\"module.modules[].module$visible\") && compilation.chunkGraph.getNumberOfModuleChunks(module) === 0,\n        dependent: rootModules ? !rootModules.has(module) : undefined,\n        issuer: issuer && issuer.identifier(),\n        issuerName: issuer && issuer.readableIdentifier(requestShortener),\n        issuerPath: issuer && factory.create(\"\".concat(type.slice(0, -8), \".issuerPath\"), path, context),\n        failed: errorsCount > 0,\n        errors: errorsCount,\n        warnings: warningsCount\n      };\n      Object.assign(object, statsModule);\n      if (profile) {\n        object.profile = factory.create(\"\".concat(type.slice(0, -8), \".profile\"), profile, context);\n      }\n    },\n    ids: function ids(object, module, _ref24) {\n      var _ref24$compilation = _ref24.compilation,\n        chunkGraph = _ref24$compilation.chunkGraph,\n        moduleGraph = _ref24$compilation.moduleGraph;\n      object.id = chunkGraph.getModuleId(module);\n      var issuer = moduleGraph.getIssuer(module);\n      object.issuerId = issuer && chunkGraph.getModuleId(issuer);\n      object.chunks = Array.from(chunkGraph.getOrderedModuleChunksIterable(module, compareChunksById), function (chunk) {\n        return chunk.id;\n      });\n    },\n    moduleAssets: function moduleAssets(object, module) {\n      object.assets = module.buildInfo.assets ? Object.keys(module.buildInfo.assets) : [];\n    },\n    reasons: function reasons(object, module, context, options, factory) {\n      var type = context.type,\n        moduleGraph = context.compilation.moduleGraph;\n      var groupsReasons = factory.create(\"\".concat(type.slice(0, -8), \".reasons\"), Array.from(moduleGraph.getIncomingConnections(module)), context);\n      var limited = spaceLimited(groupsReasons, options.reasonsSpace);\n      object.reasons = limited.children;\n      object.filteredReasons = limited.filteredChildren;\n    },\n    usedExports: function usedExports(object, module, _ref25) {\n      var runtime = _ref25.runtime,\n        moduleGraph = _ref25.compilation.moduleGraph;\n      var usedExports = moduleGraph.getUsedExports(module, runtime);\n      if (usedExports === null) {\n        object.usedExports = null;\n      } else if (typeof usedExports === \"boolean\") {\n        object.usedExports = usedExports;\n      } else {\n        object.usedExports = Array.from(usedExports);\n      }\n    },\n    providedExports: function providedExports(object, module, _ref26) {\n      var moduleGraph = _ref26.compilation.moduleGraph;\n      var providedExports = moduleGraph.getProvidedExports(module);\n      object.providedExports = Array.isArray(providedExports) ? providedExports : null;\n    },\n    optimizationBailout: function optimizationBailout(object, module, _ref27, _ref28) {\n      var moduleGraph = _ref27.compilation.moduleGraph;\n      var requestShortener = _ref28.requestShortener;\n      object.optimizationBailout = moduleGraph.getOptimizationBailout(module).map(function (item) {\n        if (typeof item === \"function\") return item(requestShortener);\n        return item;\n      });\n    },\n    depth: function depth(object, module, _ref29) {\n      var moduleGraph = _ref29.compilation.moduleGraph;\n      object.depth = moduleGraph.getDepth(module);\n    },\n    nestedModules: function nestedModules(object, module, context, options, factory) {\n      var type = context.type;\n      var innerModules = /** @type {Module & { modules?: Module[] }} */module.modules;\n      if (Array.isArray(innerModules)) {\n        var groupedModules = factory.create(\"\".concat(type.slice(0, -8), \".modules\"), innerModules, context);\n        var limited = spaceLimited(groupedModules, options.nestedModulesSpace);\n        object.modules = limited.children;\n        object.filteredModules = limited.filteredChildren;\n      }\n    },\n    source: function source(object, module) {\n      var originalSource = module.originalSource();\n      if (originalSource) {\n        object.source = originalSource.source();\n      }\n    }\n  },\n  profile: {\n    _: function _(object, profile) {\n      /** @type {KnownStatsProfile} */\n      var statsProfile = {\n        total: profile.factory + profile.restoring + profile.integration + profile.building + profile.storing,\n        resolving: profile.factory,\n        restoring: profile.restoring,\n        building: profile.building,\n        integration: profile.integration,\n        storing: profile.storing,\n        additionalResolving: profile.additionalFactories,\n        additionalIntegration: profile.additionalIntegration,\n        // TODO remove this in webpack 6\n        factory: profile.factory,\n        // TODO remove this in webpack 6\n        dependencies: profile.additionalFactories\n      };\n      Object.assign(object, statsProfile);\n    }\n  },\n  moduleIssuer: {\n    _: function _(object, module, context, _ref30, factory) {\n      var requestShortener = _ref30.requestShortener;\n      var compilation = context.compilation,\n        type = context.type;\n      var moduleGraph = compilation.moduleGraph;\n      var profile = moduleGraph.getProfile(module);\n      /** @type {KnownStatsModuleIssuer} */\n      var statsModuleIssuer = {\n        identifier: module.identifier(),\n        name: module.readableIdentifier(requestShortener)\n      };\n      Object.assign(object, statsModuleIssuer);\n      if (profile) {\n        object.profile = factory.create(\"\".concat(type, \".profile\"), profile, context);\n      }\n    },\n    ids: function ids(object, module, _ref31) {\n      var chunkGraph = _ref31.compilation.chunkGraph;\n      object.id = chunkGraph.getModuleId(module);\n    }\n  },\n  moduleReason: {\n    _: function _(object, reason, _ref32, _ref33) {\n      var runtime = _ref32.runtime;\n      var requestShortener = _ref33.requestShortener;\n      var dep = reason.dependency;\n      var moduleDep = dep && dep instanceof ModuleDependency ? dep : undefined;\n      /** @type {KnownStatsModuleReason} */\n      var statsModuleReason = {\n        moduleIdentifier: reason.originModule ? reason.originModule.identifier() : null,\n        module: reason.originModule ? reason.originModule.readableIdentifier(requestShortener) : null,\n        moduleName: reason.originModule ? reason.originModule.readableIdentifier(requestShortener) : null,\n        resolvedModuleIdentifier: reason.resolvedOriginModule ? reason.resolvedOriginModule.identifier() : null,\n        resolvedModule: reason.resolvedOriginModule ? reason.resolvedOriginModule.readableIdentifier(requestShortener) : null,\n        type: reason.dependency ? reason.dependency.type : null,\n        active: reason.isActive(runtime),\n        explanation: reason.explanation,\n        userRequest: moduleDep && moduleDep.userRequest || null\n      };\n      Object.assign(object, statsModuleReason);\n      if (reason.dependency) {\n        var locInfo = formatLocation(reason.dependency.loc);\n        if (locInfo) {\n          object.loc = locInfo;\n        }\n      }\n    },\n    ids: function ids(object, reason, _ref34) {\n      var chunkGraph = _ref34.compilation.chunkGraph;\n      object.moduleId = reason.originModule ? chunkGraph.getModuleId(reason.originModule) : null;\n      object.resolvedModuleId = reason.resolvedOriginModule ? chunkGraph.getModuleId(reason.resolvedOriginModule) : null;\n    }\n  },\n  chunk: {\n    _: function _(object, chunk, _ref35) {\n      var makePathsRelative = _ref35.makePathsRelative,\n        chunkGraph = _ref35.compilation.chunkGraph;\n      var childIdByOrder = chunk.getChildIdsByOrders(chunkGraph);\n\n      /** @type {KnownStatsChunk} */\n      var statsChunk = {\n        rendered: chunk.rendered,\n        initial: chunk.canBeInitial(),\n        entry: chunk.hasRuntime(),\n        recorded: AggressiveSplittingPlugin.wasChunkRecorded(chunk),\n        reason: chunk.chunkReason,\n        size: chunkGraph.getChunkModulesSize(chunk),\n        sizes: chunkGraph.getChunkModulesSizes(chunk),\n        names: chunk.name ? [chunk.name] : [],\n        idHints: Array.from(chunk.idNameHints),\n        runtime: chunk.runtime === undefined ? undefined : typeof chunk.runtime === \"string\" ? [makePathsRelative(chunk.runtime)] : Array.from(chunk.runtime.sort(), makePathsRelative),\n        files: Array.from(chunk.files),\n        auxiliaryFiles: Array.from(chunk.auxiliaryFiles).sort(compareIds),\n        hash: chunk.renderedHash,\n        childrenByOrder: childIdByOrder\n      };\n      Object.assign(object, statsChunk);\n    },\n    ids: function ids(object, chunk) {\n      object.id = chunk.id;\n    },\n    chunkRelations: function chunkRelations(object, chunk, _ref36) {\n      var chunkGraph = _ref36.compilation.chunkGraph;\n      /** @type {Set<string|number>} */\n      var parents = new Set();\n      /** @type {Set<string|number>} */\n      var children = new Set();\n      /** @type {Set<string|number>} */\n      var siblings = new Set();\n      var _iterator19 = _createForOfIteratorHelper(chunk.groupsIterable),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var chunkGroup = _step19.value;\n          var _iterator20 = _createForOfIteratorHelper(chunkGroup.parentsIterable),\n            _step20;\n          try {\n            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n              var parentGroup = _step20.value;\n              var _iterator23 = _createForOfIteratorHelper(parentGroup.chunks),\n                _step23;\n              try {\n                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                  var _chunk2 = _step23.value;\n                  parents.add(_chunk2.id);\n                }\n              } catch (err) {\n                _iterator23.e(err);\n              } finally {\n                _iterator23.f();\n              }\n            }\n          } catch (err) {\n            _iterator20.e(err);\n          } finally {\n            _iterator20.f();\n          }\n          var _iterator21 = _createForOfIteratorHelper(chunkGroup.childrenIterable),\n            _step21;\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var childGroup = _step21.value;\n              var _iterator24 = _createForOfIteratorHelper(childGroup.chunks),\n                _step24;\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var _chunk3 = _step24.value;\n                  children.add(_chunk3.id);\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n          var _iterator22 = _createForOfIteratorHelper(chunkGroup.chunks),\n            _step22;\n          try {\n            for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n              var sibling = _step22.value;\n              if (sibling !== chunk) siblings.add(sibling.id);\n            }\n          } catch (err) {\n            _iterator22.e(err);\n          } finally {\n            _iterator22.f();\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      object.siblings = Array.from(siblings).sort(compareIds);\n      object.parents = Array.from(parents).sort(compareIds);\n      object.children = Array.from(children).sort(compareIds);\n    },\n    chunkModules: function chunkModules(object, chunk, context, options, factory) {\n      var type = context.type,\n        chunkGraph = context.compilation.chunkGraph;\n      var array = chunkGraph.getChunkModules(chunk);\n      var groupedModules = factory.create(\"\".concat(type, \".modules\"), array, _objectSpread(_objectSpread({}, context), {}, {\n        runtime: chunk.runtime,\n        rootModules: new Set(chunkGraph.getChunkRootModules(chunk))\n      }));\n      var limited = spaceLimited(groupedModules, options.chunkModulesSpace);\n      object.modules = limited.children;\n      object.filteredModules = limited.filteredChildren;\n    },\n    chunkOrigins: function chunkOrigins(object, chunk, context, options, factory) {\n      var type = context.type,\n        chunkGraph = context.compilation.chunkGraph;\n      /** @type {Set<string>} */\n      var originsKeySet = new Set();\n      var origins = [];\n      var _iterator25 = _createForOfIteratorHelper(chunk.groupsIterable),\n        _step25;\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var g = _step25.value;\n          origins.push.apply(origins, _toConsumableArray(g.origins));\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n      var array = origins.filter(function (origin) {\n        var key = [origin.module ? chunkGraph.getModuleId(origin.module) : undefined, formatLocation(origin.loc), origin.request].join();\n        if (originsKeySet.has(key)) return false;\n        originsKeySet.add(key);\n        return true;\n      });\n      object.origins = factory.create(\"\".concat(type, \".origins\"), array, context);\n    }\n  },\n  chunkOrigin: {\n    _: function _(object, origin, context, _ref37) {\n      var requestShortener = _ref37.requestShortener;\n      /** @type {KnownStatsChunkOrigin} */\n      var statsChunkOrigin = {\n        module: origin.module ? origin.module.identifier() : \"\",\n        moduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n        moduleName: origin.module ? origin.module.readableIdentifier(requestShortener) : \"\",\n        loc: formatLocation(origin.loc),\n        request: origin.request\n      };\n      Object.assign(object, statsChunkOrigin);\n    },\n    ids: function ids(object, origin, _ref38) {\n      var chunkGraph = _ref38.compilation.chunkGraph;\n      object.moduleId = origin.module ? chunkGraph.getModuleId(origin.module) : undefined;\n    }\n  },\n  error: EXTRACT_ERROR,\n  warning: EXTRACT_ERROR,\n  moduleTraceItem: {\n    _: function _(object, _ref39, context, _ref40, factory) {\n      var origin = _ref39.origin,\n        module = _ref39.module;\n      var requestShortener = _ref40.requestShortener;\n      var type = context.type,\n        moduleGraph = context.compilation.moduleGraph;\n      object.originIdentifier = origin.identifier();\n      object.originName = origin.readableIdentifier(requestShortener);\n      object.moduleIdentifier = module.identifier();\n      object.moduleName = module.readableIdentifier(requestShortener);\n      var dependencies = Array.from(moduleGraph.getIncomingConnections(module)).filter(function (c) {\n        return c.resolvedOriginModule === origin && c.dependency;\n      }).map(function (c) {\n        return c.dependency;\n      });\n      object.dependencies = factory.create(\"\".concat(type, \".dependencies\"), Array.from(new Set(dependencies)), context);\n    },\n    ids: function ids(object, _ref41, _ref42) {\n      var origin = _ref41.origin,\n        module = _ref41.module;\n      var chunkGraph = _ref42.compilation.chunkGraph;\n      object.originId = chunkGraph.getModuleId(origin);\n      object.moduleId = chunkGraph.getModuleId(module);\n    }\n  },\n  moduleTraceDependency: {\n    _: function _(object, dependency) {\n      object.loc = formatLocation(dependency.loc);\n    }\n  }\n};\n\n/** @type {Record<string, Record<string, (thing: any, context: StatsFactoryContext, options: NormalizedStatsOptions) => boolean | undefined>>} */\nvar FILTER = {\n  \"module.reasons\": {\n    \"!orphanModules\": function orphanModules(reason, _ref43) {\n      var chunkGraph = _ref43.compilation.chunkGraph;\n      if (reason.originModule && chunkGraph.getNumberOfModuleChunks(reason.originModule) === 0) {\n        return false;\n      }\n    }\n  }\n};\n\n/** @type {Record<string, Record<string, (thing: Object, context: StatsFactoryContext, options: NormalizedStatsOptions) => boolean | undefined>>} */\nvar FILTER_RESULTS = {\n  \"compilation.warnings\": {\n    warningsFilter: util.deprecate(function (warning, context, _ref44) {\n      var warningsFilter = _ref44.warningsFilter;\n      var warningString = Object.keys(warning).map(function (key) {\n        return \"\".concat(warning[key]);\n      }).join(\"\\n\");\n      return !warningsFilter.some(function (filter) {\n        return filter(warning, warningString);\n      });\n    }, \"config.stats.warningsFilter is deprecated in favor of config.ignoreWarnings\", \"DEP_WEBPACK_STATS_WARNINGS_FILTER\")\n  }\n};\n\n/** @type {Record<string, (comparators: Function[], context: StatsFactoryContext) => void>} */\nvar MODULES_SORTER = {\n  _: function _(comparators, _ref45) {\n    var moduleGraph = _ref45.compilation.moduleGraph;\n    comparators.push(compareSelect(\n    /**\n     * @param {Module} m module\n     * @returns {number} depth\n     */\n    function (m) {\n      return moduleGraph.getDepth(m);\n    }, compareNumbers), compareSelect(\n    /**\n     * @param {Module} m module\n     * @returns {number} index\n     */\n    function (m) {\n      return moduleGraph.getPreOrderIndex(m);\n    }, compareNumbers), compareSelect(\n    /**\n     * @param {Module} m module\n     * @returns {string} identifier\n     */\n    function (m) {\n      return m.identifier();\n    }, compareIds));\n  }\n};\n\n/** @type {Record<string, Record<string, (comparators: Function[], context: StatsFactoryContext) => void>>} */\nvar SORTERS = {\n  \"compilation.chunks\": {\n    _: function _(comparators) {\n      comparators.push(compareSelect(function (c) {\n        return c.id;\n      }, compareIds));\n    }\n  },\n  \"compilation.modules\": MODULES_SORTER,\n  \"chunk.rootModules\": MODULES_SORTER,\n  \"chunk.modules\": MODULES_SORTER,\n  \"module.modules\": MODULES_SORTER,\n  \"module.reasons\": {\n    _: function _(comparators, _ref46) {\n      var chunkGraph = _ref46.compilation.chunkGraph;\n      comparators.push(compareSelect(function (x) {\n        return x.originModule;\n      }, compareModulesByIdentifier));\n      comparators.push(compareSelect(function (x) {\n        return x.resolvedOriginModule;\n      }, compareModulesByIdentifier));\n      comparators.push(compareSelect(function (x) {\n        return x.dependency;\n      }, concatComparators(compareSelect(\n      /**\n       * @param {Dependency} x dependency\n       * @returns {DependencyLocation} location\n       */\n      function (x) {\n        return x.loc;\n      }, compareLocations), compareSelect(function (x) {\n        return x.type;\n      }, compareIds))));\n    }\n  },\n  \"chunk.origins\": {\n    _: function _(comparators, _ref47) {\n      var chunkGraph = _ref47.compilation.chunkGraph;\n      comparators.push(compareSelect(function (origin) {\n        return origin.module ? chunkGraph.getModuleId(origin.module) : undefined;\n      }, compareIds), compareSelect(function (origin) {\n        return formatLocation(origin.loc);\n      }, compareIds), compareSelect(function (origin) {\n        return origin.request;\n      }, compareIds));\n    }\n  }\n};\nvar getItemSize = function getItemSize(item) {\n  // Each item takes 1 line\n  // + the size of the children\n  // + 1 extra line when it has children and filteredChildren\n  return !item.children ? 1 : item.filteredChildren ? 2 + getTotalSize(item.children) : 1 + getTotalSize(item.children);\n};\nvar getTotalSize = function getTotalSize(children) {\n  var size = 0;\n  var _iterator26 = _createForOfIteratorHelper(children),\n    _step26;\n  try {\n    for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n      var child = _step26.value;\n      size += getItemSize(child);\n    }\n  } catch (err) {\n    _iterator26.e(err);\n  } finally {\n    _iterator26.f();\n  }\n  return size;\n};\nvar getTotalItems = function getTotalItems(children) {\n  var count = 0;\n  var _iterator27 = _createForOfIteratorHelper(children),\n    _step27;\n  try {\n    for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n      var child = _step27.value;\n      if (!child.children && !child.filteredChildren) {\n        count++;\n      } else {\n        if (child.children) count += getTotalItems(child.children);\n        if (child.filteredChildren) count += child.filteredChildren;\n      }\n    }\n  } catch (err) {\n    _iterator27.e(err);\n  } finally {\n    _iterator27.f();\n  }\n  return count;\n};\nvar collapse = function collapse(children) {\n  // After collapse each child must take exactly one line\n  var newChildren = [];\n  var _iterator28 = _createForOfIteratorHelper(children),\n    _step28;\n  try {\n    for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n      var child = _step28.value;\n      if (child.children) {\n        var filteredChildren = child.filteredChildren || 0;\n        filteredChildren += getTotalItems(child.children);\n        newChildren.push(_objectSpread(_objectSpread({}, child), {}, {\n          children: undefined,\n          filteredChildren: filteredChildren\n        }));\n      } else {\n        newChildren.push(child);\n      }\n    }\n  } catch (err) {\n    _iterator28.e(err);\n  } finally {\n    _iterator28.f();\n  }\n  return newChildren;\n};\nvar spaceLimited = function spaceLimited(itemsAndGroups, max) {\n  var filteredChildrenLineReserved = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (max < 1) {\n    return {\n      children: undefined,\n      filteredChildren: getTotalItems(itemsAndGroups)\n    };\n  }\n  /** @type {any[] | undefined} */\n  var children = undefined;\n  /** @type {number | undefined} */\n  var filteredChildren = undefined;\n  // This are the groups, which take 1+ lines each\n  var groups = [];\n  // The sizes of the groups are stored in groupSizes\n  var groupSizes = [];\n  // This are the items, which take 1 line each\n  var items = [];\n  // The total of group sizes\n  var groupsSize = 0;\n  var _iterator29 = _createForOfIteratorHelper(itemsAndGroups),\n    _step29;\n  try {\n    for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n      var itemOrGroup = _step29.value;\n      // is item\n      if (!itemOrGroup.children && !itemOrGroup.filteredChildren) {\n        items.push(itemOrGroup);\n      } else {\n        groups.push(itemOrGroup);\n        var size = getItemSize(itemOrGroup);\n        groupSizes.push(size);\n        groupsSize += size;\n      }\n    }\n  } catch (err) {\n    _iterator29.e(err);\n  } finally {\n    _iterator29.f();\n  }\n  if (groupsSize + items.length <= max) {\n    // The total size in the current state fits into the max\n    // keep all\n    children = groups.length > 0 ? groups.concat(items) : items;\n  } else if (groups.length === 0) {\n    // slice items to max\n    // inner space marks that lines for filteredChildren already reserved\n    var limit = max - (filteredChildrenLineReserved ? 0 : 1);\n    filteredChildren = items.length - limit;\n    items.length = limit;\n    children = items;\n  } else {\n    // limit is the size when all groups are collapsed\n    var _limit = groups.length + (filteredChildrenLineReserved || items.length === 0 ? 0 : 1);\n    if (_limit < max) {\n      // calculate how much we are over the size limit\n      // this allows to approach the limit faster\n      var oversize;\n      // If each group would take 1 line the total would be below the maximum\n      // collapse some groups, keep items\n      while ((oversize = groupsSize + items.length + (filteredChildren && !filteredChildrenLineReserved ? 1 : 0) - max) > 0) {\n        // Find the maximum group and process only this one\n        var maxGroupSize = Math.max.apply(Math, groupSizes);\n        if (maxGroupSize < items.length) {\n          filteredChildren = items.length;\n          items.length = 0;\n          continue;\n        }\n        for (var i = 0; i < groups.length; i++) {\n          if (groupSizes[i] === maxGroupSize) {\n            var group = groups[i];\n            // run this algorithm recursively and limit the size of the children to\n            // current size - oversize / number of groups\n            // So it should always end up being smaller\n            var headerSize = group.filteredChildren ? 2 : 1;\n            var limited = spaceLimited(group.children, maxGroupSize -\n            // we should use ceil to always feet in max\n            Math.ceil(oversize / groups.length) -\n            // we substitute size of group head\n            headerSize, headerSize === 2);\n            groups[i] = _objectSpread(_objectSpread({}, group), {}, {\n              children: limited.children,\n              filteredChildren: limited.filteredChildren ? (group.filteredChildren || 0) + limited.filteredChildren : group.filteredChildren\n            });\n            var newSize = getItemSize(groups[i]);\n            groupsSize -= maxGroupSize - newSize;\n            groupSizes[i] = newSize;\n            break;\n          }\n        }\n      }\n      children = groups.concat(items);\n    } else if (_limit === max) {\n      // If we have only enough space to show one line per group and one line for the filtered items\n      // collapse all groups and items\n      children = collapse(groups);\n      filteredChildren = items.length;\n    } else {\n      // If we have no space\n      // collapse complete group\n      filteredChildren = getTotalItems(itemsAndGroups);\n    }\n  }\n  return {\n    children: children,\n    filteredChildren: filteredChildren\n  };\n};\nvar assetGroup = function assetGroup(children, assets) {\n  var size = 0;\n  var _iterator30 = _createForOfIteratorHelper(children),\n    _step30;\n  try {\n    for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n      var asset = _step30.value;\n      size += asset.size;\n    }\n  } catch (err) {\n    _iterator30.e(err);\n  } finally {\n    _iterator30.f();\n  }\n  return {\n    size: size\n  };\n};\nvar moduleGroup = function moduleGroup(children, modules) {\n  var size = 0;\n  var sizes = {};\n  var _iterator31 = _createForOfIteratorHelper(children),\n    _step31;\n  try {\n    for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n      var _module = _step31.value;\n      size += _module.size;\n      for (var _i3 = 0, _Object$keys3 = Object.keys(_module.sizes); _i3 < _Object$keys3.length; _i3++) {\n        var key = _Object$keys3[_i3];\n        sizes[key] = (sizes[key] || 0) + _module.sizes[key];\n      }\n    }\n  } catch (err) {\n    _iterator31.e(err);\n  } finally {\n    _iterator31.f();\n  }\n  return {\n    size: size,\n    sizes: sizes\n  };\n};\nvar reasonGroup = function reasonGroup(children, reasons) {\n  var active = false;\n  var _iterator32 = _createForOfIteratorHelper(children),\n    _step32;\n  try {\n    for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n      var reason = _step32.value;\n      active = active || reason.active;\n    }\n  } catch (err) {\n    _iterator32.e(err);\n  } finally {\n    _iterator32.f();\n  }\n  return {\n    active: active\n  };\n};\nvar GROUP_EXTENSION_REGEXP = /(\\.[^.]+?)(?:\\?|(?: \\+ \\d+ modules?)?$)/;\nvar GROUP_PATH_REGEXP = /(.+)[/\\\\][^/\\\\]+?(?:\\?|(?: \\+ \\d+ modules?)?$)/;\n\n/** @type {Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>} */\nvar ASSETS_GROUPERS = {\n  _: function _(groupConfigs, context, options) {\n    var groupByFlag = function groupByFlag(name, exclude) {\n      groupConfigs.push({\n        getKeys: function getKeys(asset) {\n          return asset[name] ? [\"1\"] : undefined;\n        },\n        getOptions: function getOptions() {\n          return {\n            groupChildren: !exclude,\n            force: exclude\n          };\n        },\n        createGroup: function createGroup(key, children, assets) {\n          var _objectSpread2, _objectSpread3;\n          return exclude ? _objectSpread((_objectSpread2 = {\n            type: \"assets by status\"\n          }, _defineProperty(_objectSpread2, name, !!key), _defineProperty(_objectSpread2, \"filteredChildren\", assets.length), _objectSpread2), assetGroup(children, assets)) : _objectSpread((_objectSpread3 = {\n            type: \"assets by status\"\n          }, _defineProperty(_objectSpread3, name, !!key), _defineProperty(_objectSpread3, \"children\", children), _objectSpread3), assetGroup(children, assets));\n        }\n      });\n    };\n    var groupAssetsByEmitStatus = options.groupAssetsByEmitStatus,\n      groupAssetsByPath = options.groupAssetsByPath,\n      groupAssetsByExtension = options.groupAssetsByExtension;\n    if (groupAssetsByEmitStatus) {\n      groupByFlag(\"emitted\");\n      groupByFlag(\"comparedForEmit\");\n      groupByFlag(\"isOverSizeLimit\");\n    }\n    if (groupAssetsByEmitStatus || !options.cachedAssets) {\n      groupByFlag(\"cached\", !options.cachedAssets);\n    }\n    if (groupAssetsByPath || groupAssetsByExtension) {\n      groupConfigs.push({\n        getKeys: function getKeys(asset) {\n          var extensionMatch = groupAssetsByExtension && GROUP_EXTENSION_REGEXP.exec(asset.name);\n          var extension = extensionMatch ? extensionMatch[1] : \"\";\n          var pathMatch = groupAssetsByPath && GROUP_PATH_REGEXP.exec(asset.name);\n          var path = pathMatch ? pathMatch[1].split(/[/\\\\]/) : [];\n          var keys = [];\n          if (groupAssetsByPath) {\n            keys.push(\".\");\n            if (extension) keys.push(path.length ? \"\".concat(path.join(\"/\"), \"/*\").concat(extension) : \"*\".concat(extension));\n            while (path.length > 0) {\n              keys.push(path.join(\"/\") + \"/\");\n              path.pop();\n            }\n          } else {\n            if (extension) keys.push(\"*\".concat(extension));\n          }\n          return keys;\n        },\n        createGroup: function createGroup(key, children, assets) {\n          return _objectSpread({\n            type: groupAssetsByPath ? \"assets by path\" : \"assets by extension\",\n            name: key,\n            children: children\n          }, assetGroup(children, assets));\n        }\n      });\n    }\n  },\n  groupAssetsByInfo: function groupAssetsByInfo(groupConfigs, context, options) {\n    var groupByAssetInfoFlag = function groupByAssetInfoFlag(name) {\n      groupConfigs.push({\n        getKeys: function getKeys(asset) {\n          return asset.info && asset.info[name] ? [\"1\"] : undefined;\n        },\n        createGroup: function createGroup(key, children, assets) {\n          return _objectSpread({\n            type: \"assets by info\",\n            info: _defineProperty({}, name, !!key),\n            children: children\n          }, assetGroup(children, assets));\n        }\n      });\n    };\n    groupByAssetInfoFlag(\"immutable\");\n    groupByAssetInfoFlag(\"development\");\n    groupByAssetInfoFlag(\"hotModuleReplacement\");\n  },\n  groupAssetsByChunk: function groupAssetsByChunk(groupConfigs, context, options) {\n    var groupByNames = function groupByNames(name) {\n      groupConfigs.push({\n        getKeys: function getKeys(asset) {\n          return asset[name];\n        },\n        createGroup: function createGroup(key, children, assets) {\n          var _objectSpread4;\n          return _objectSpread((_objectSpread4 = {\n            type: \"assets by chunk\"\n          }, _defineProperty(_objectSpread4, name, [key]), _defineProperty(_objectSpread4, \"children\", children), _objectSpread4), assetGroup(children, assets));\n        }\n      });\n    };\n    groupByNames(\"chunkNames\");\n    groupByNames(\"auxiliaryChunkNames\");\n    groupByNames(\"chunkIdHints\");\n    groupByNames(\"auxiliaryChunkIdHints\");\n  },\n  excludeAssets: function excludeAssets(groupConfigs, context, _ref48) {\n    var _excludeAssets = _ref48.excludeAssets;\n    groupConfigs.push({\n      getKeys: function getKeys(asset) {\n        var ident = asset.name;\n        var excluded = _excludeAssets.some(function (fn) {\n          return fn(ident, asset);\n        });\n        if (excluded) return [\"excluded\"];\n      },\n      getOptions: function getOptions() {\n        return {\n          groupChildren: false,\n          force: true\n        };\n      },\n      createGroup: function createGroup(key, children, assets) {\n        return _objectSpread({\n          type: \"hidden assets\",\n          filteredChildren: assets.length\n        }, assetGroup(children, assets));\n      }\n    });\n  }\n};\n\n/** @type {function(\"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\"): Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>} */\nvar MODULES_GROUPERS = function MODULES_GROUPERS(type) {\n  return {\n    _: function _(groupConfigs, context, options) {\n      var groupByFlag = function groupByFlag(name, type, exclude) {\n        groupConfigs.push({\n          getKeys: function getKeys(module) {\n            return module[name] ? [\"1\"] : undefined;\n          },\n          getOptions: function getOptions() {\n            return {\n              groupChildren: !exclude,\n              force: exclude\n            };\n          },\n          createGroup: function createGroup(key, children, modules) {\n            return _objectSpread(_objectSpread(_defineProperty({\n              type: type\n            }, name, !!key), exclude ? {\n              filteredChildren: modules.length\n            } : {\n              children: children\n            }), moduleGroup(children, modules));\n          }\n        });\n      };\n      var groupModulesByCacheStatus = options.groupModulesByCacheStatus,\n        groupModulesByLayer = options.groupModulesByLayer,\n        groupModulesByAttributes = options.groupModulesByAttributes,\n        groupModulesByType = options.groupModulesByType,\n        groupModulesByPath = options.groupModulesByPath,\n        groupModulesByExtension = options.groupModulesByExtension;\n      if (groupModulesByAttributes) {\n        groupByFlag(\"errors\", \"modules with errors\");\n        groupByFlag(\"warnings\", \"modules with warnings\");\n        groupByFlag(\"assets\", \"modules with assets\");\n        groupByFlag(\"optional\", \"optional modules\");\n      }\n      if (groupModulesByCacheStatus) {\n        groupByFlag(\"cacheable\", \"cacheable modules\");\n        groupByFlag(\"built\", \"built modules\");\n        groupByFlag(\"codeGenerated\", \"code generated modules\");\n      }\n      if (groupModulesByCacheStatus || !options.cachedModules) {\n        groupByFlag(\"cached\", \"cached modules\", !options.cachedModules);\n      }\n      if (groupModulesByAttributes || !options.orphanModules) {\n        groupByFlag(\"orphan\", \"orphan modules\", !options.orphanModules);\n      }\n      if (groupModulesByAttributes || !options.dependentModules) {\n        groupByFlag(\"dependent\", \"dependent modules\", !options.dependentModules);\n      }\n      if (groupModulesByType || !options.runtimeModules) {\n        groupConfigs.push({\n          getKeys: function getKeys(module) {\n            if (!module.moduleType) return;\n            if (groupModulesByType) {\n              return [module.moduleType.split(\"/\", 1)[0]];\n            } else if (module.moduleType === \"runtime\") {\n              return [\"runtime\"];\n            }\n          },\n          getOptions: function getOptions(key) {\n            var exclude = key === \"runtime\" && !options.runtimeModules;\n            return {\n              groupChildren: !exclude,\n              force: exclude\n            };\n          },\n          createGroup: function createGroup(key, children, modules) {\n            var exclude = key === \"runtime\" && !options.runtimeModules;\n            return _objectSpread(_objectSpread({\n              type: \"\".concat(key, \" modules\"),\n              moduleType: key\n            }, exclude ? {\n              filteredChildren: modules.length\n            } : {\n              children: children\n            }), moduleGroup(children, modules));\n          }\n        });\n      }\n      if (groupModulesByLayer) {\n        groupConfigs.push({\n          getKeys: function getKeys(module) {\n            return [module.layer];\n          },\n          createGroup: function createGroup(key, children, modules) {\n            return _objectSpread({\n              type: \"modules by layer\",\n              layer: key,\n              children: children\n            }, moduleGroup(children, modules));\n          }\n        });\n      }\n      if (groupModulesByPath || groupModulesByExtension) {\n        groupConfigs.push({\n          getKeys: function getKeys(module) {\n            if (!module.name) return;\n            var resource = parseResource(module.name.split(\"!\").pop()).path;\n            var dataUrl = /^data:[^,;]+/.exec(resource);\n            if (dataUrl) return [dataUrl[0]];\n            var extensionMatch = groupModulesByExtension && GROUP_EXTENSION_REGEXP.exec(resource);\n            var extension = extensionMatch ? extensionMatch[1] : \"\";\n            var pathMatch = groupModulesByPath && GROUP_PATH_REGEXP.exec(resource);\n            var path = pathMatch ? pathMatch[1].split(/[/\\\\]/) : [];\n            var keys = [];\n            if (groupModulesByPath) {\n              if (extension) keys.push(path.length ? \"\".concat(path.join(\"/\"), \"/*\").concat(extension) : \"*\".concat(extension));\n              while (path.length > 0) {\n                keys.push(path.join(\"/\") + \"/\");\n                path.pop();\n              }\n            } else {\n              if (extension) keys.push(\"*\".concat(extension));\n            }\n            return keys;\n          },\n          createGroup: function createGroup(key, children, modules) {\n            var isDataUrl = key.startsWith(\"data:\");\n            return _objectSpread({\n              type: isDataUrl ? \"modules by mime type\" : groupModulesByPath ? \"modules by path\" : \"modules by extension\",\n              name: isDataUrl ? key.slice( /* 'data:'.length */5) : key,\n              children: children\n            }, moduleGroup(children, modules));\n          }\n        });\n      }\n    },\n    excludeModules: function excludeModules(groupConfigs, context, _ref49) {\n      var _excludeModules = _ref49.excludeModules;\n      groupConfigs.push({\n        getKeys: function getKeys(module) {\n          var name = module.name;\n          if (name) {\n            var excluded = _excludeModules.some(function (fn) {\n              return fn(name, module, type);\n            });\n            if (excluded) return [\"1\"];\n          }\n        },\n        getOptions: function getOptions() {\n          return {\n            groupChildren: false,\n            force: true\n          };\n        },\n        createGroup: function createGroup(key, children, modules) {\n          return _objectSpread({\n            type: \"hidden modules\",\n            filteredChildren: children.length\n          }, moduleGroup(children, modules));\n        }\n      });\n    }\n  };\n};\n\n/** @type {Record<string, Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>>} */\nvar RESULT_GROUPERS = {\n  \"compilation.assets\": ASSETS_GROUPERS,\n  \"asset.related\": ASSETS_GROUPERS,\n  \"compilation.modules\": MODULES_GROUPERS(\"module\"),\n  \"chunk.modules\": MODULES_GROUPERS(\"chunk\"),\n  \"chunk.rootModules\": MODULES_GROUPERS(\"root-of-chunk\"),\n  \"module.modules\": MODULES_GROUPERS(\"nested\"),\n  \"module.reasons\": {\n    groupReasonsByOrigin: function groupReasonsByOrigin(groupConfigs) {\n      groupConfigs.push({\n        getKeys: function getKeys(reason) {\n          return [reason.module];\n        },\n        createGroup: function createGroup(key, children, reasons) {\n          return _objectSpread({\n            type: \"from origin\",\n            module: key,\n            children: children\n          }, reasonGroup(children, reasons));\n        }\n      });\n    }\n  }\n};\n\n// remove a prefixed \"!\" that can be specified to reverse sort order\nvar normalizeFieldKey = function normalizeFieldKey(field) {\n  if (field[0] === \"!\") {\n    return field.slice(1);\n  }\n  return field;\n};\n\n// if a field is prefixed by a \"!\" reverse sort order\nvar sortOrderRegular = function sortOrderRegular(field) {\n  if (field[0] === \"!\") {\n    return false;\n  }\n  return true;\n};\n\n/**\n * @param {string} field field name\n * @returns {function(Object, Object): number} comparators\n */\nvar sortByField = function sortByField(field) {\n  if (!field) {\n    /**\n     * @param {any} a first\n     * @param {any} b second\n     * @returns {-1|0|1} zero\n     */\n    var noSort = function noSort(a, b) {\n      return 0;\n    };\n    return noSort;\n  }\n  var fieldKey = normalizeFieldKey(field);\n  var sortFn = compareSelect(function (m) {\n    return m[fieldKey];\n  }, compareIds);\n\n  // if a field is prefixed with a \"!\" the sort is reversed!\n  var sortIsRegular = sortOrderRegular(field);\n  if (!sortIsRegular) {\n    var oldSortFn = sortFn;\n    sortFn = function sortFn(a, b) {\n      return oldSortFn(b, a);\n    };\n  }\n  return sortFn;\n};\nvar ASSET_SORTERS = {\n  /** @type {(comparators: Function[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void} */\n  assetsSort: function assetsSort(comparators, context, _ref50) {\n    var _assetsSort = _ref50.assetsSort;\n    comparators.push(sortByField(_assetsSort));\n  },\n  _: function _(comparators) {\n    comparators.push(compareSelect(function (a) {\n      return a.name;\n    }, compareIds));\n  }\n};\n\n/** @type {Record<string, Record<string, (comparators: Function[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>>} */\nvar RESULT_SORTERS = {\n  \"compilation.chunks\": {\n    chunksSort: function chunksSort(comparators, context, _ref51) {\n      var _chunksSort = _ref51.chunksSort;\n      comparators.push(sortByField(_chunksSort));\n    }\n  },\n  \"compilation.modules\": {\n    modulesSort: function modulesSort(comparators, context, _ref52) {\n      var _modulesSort = _ref52.modulesSort;\n      comparators.push(sortByField(_modulesSort));\n    }\n  },\n  \"chunk.modules\": {\n    chunkModulesSort: function chunkModulesSort(comparators, context, _ref53) {\n      var _chunkModulesSort = _ref53.chunkModulesSort;\n      comparators.push(sortByField(_chunkModulesSort));\n    }\n  },\n  \"module.modules\": {\n    nestedModulesSort: function nestedModulesSort(comparators, context, _ref54) {\n      var _nestedModulesSort = _ref54.nestedModulesSort;\n      comparators.push(sortByField(_nestedModulesSort));\n    }\n  },\n  \"compilation.assets\": ASSET_SORTERS,\n  \"asset.related\": ASSET_SORTERS\n};\n\n/**\n * @param {Record<string, Record<string, Function>>} config the config see above\n * @param {NormalizedStatsOptions} options stats options\n * @param {function(string, Function): void} fn handler function called for every active line in config\n * @returns {void}\n */\nvar iterateConfig = function iterateConfig(config, options, fn) {\n  for (var _i4 = 0, _Object$keys4 = Object.keys(config); _i4 < _Object$keys4.length; _i4++) {\n    var hookFor = _Object$keys4[_i4];\n    var subConfig = config[hookFor];\n    for (var _i5 = 0, _Object$keys5 = Object.keys(subConfig); _i5 < _Object$keys5.length; _i5++) {\n      var option = _Object$keys5[_i5];\n      if (option !== \"_\") {\n        if (option.startsWith(\"!\")) {\n          if (options[option.slice(1)]) continue;\n        } else {\n          var value = options[option];\n          if (value === false || value === undefined || Array.isArray(value) && value.length === 0) continue;\n        }\n      }\n      fn(hookFor, subConfig[option]);\n    }\n  }\n};\n\n/** @type {Record<string, string>} */\nvar ITEM_NAMES = {\n  \"compilation.children[]\": \"compilation\",\n  \"compilation.modules[]\": \"module\",\n  \"compilation.entrypoints[]\": \"chunkGroup\",\n  \"compilation.namedChunkGroups[]\": \"chunkGroup\",\n  \"compilation.errors[]\": \"error\",\n  \"compilation.warnings[]\": \"warning\",\n  \"chunk.modules[]\": \"module\",\n  \"chunk.rootModules[]\": \"module\",\n  \"chunk.origins[]\": \"chunkOrigin\",\n  \"compilation.chunks[]\": \"chunk\",\n  \"compilation.assets[]\": \"asset\",\n  \"asset.related[]\": \"asset\",\n  \"module.issuerPath[]\": \"moduleIssuer\",\n  \"module.reasons[]\": \"moduleReason\",\n  \"module.modules[]\": \"module\",\n  \"module.children[]\": \"module\",\n  \"moduleTrace[]\": \"moduleTraceItem\",\n  \"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\n/**\n * @param {Object[]} items items to be merged\n * @returns {Object} an object\n */\nvar mergeToObject = function mergeToObject(items) {\n  var obj = Object.create(null);\n  var _iterator33 = _createForOfIteratorHelper(items),\n    _step33;\n  try {\n    for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n      var item = _step33.value;\n      obj[item.name] = item;\n    }\n  } catch (err) {\n    _iterator33.e(err);\n  } finally {\n    _iterator33.f();\n  }\n  return obj;\n};\n\n/** @type {Record<string, (items: Object[]) => any>} */\nvar MERGER = {\n  \"compilation.entrypoints\": mergeToObject,\n  \"compilation.namedChunkGroups\": mergeToObject\n};\nvar DefaultStatsFactoryPlugin = /*#__PURE__*/function () {\n  function DefaultStatsFactoryPlugin() {\n    _classCallCheck(this, DefaultStatsFactoryPlugin);\n  }\n  _createClass(DefaultStatsFactoryPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler the compiler instance\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"DefaultStatsFactoryPlugin\", function (compilation) {\n        compilation.hooks.statsFactory.tap(\"DefaultStatsFactoryPlugin\", function (stats, options, context) {\n          iterateConfig(SIMPLE_EXTRACTORS, options, function (hookFor, fn) {\n            stats.hooks.extract.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (obj, data, ctx) {\n              return fn(obj, data, ctx, options, stats);\n            });\n          });\n          iterateConfig(FILTER, options, function (hookFor, fn) {\n            stats.hooks.filter.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (item, ctx, idx, i) {\n              return fn(item, ctx, options, idx, i);\n            });\n          });\n          iterateConfig(FILTER_RESULTS, options, function (hookFor, fn) {\n            stats.hooks.filterResults.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (item, ctx, idx, i) {\n              return fn(item, ctx, options, idx, i);\n            });\n          });\n          iterateConfig(SORTERS, options, function (hookFor, fn) {\n            stats.hooks.sort.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (comparators, ctx) {\n              return fn(comparators, ctx, options);\n            });\n          });\n          iterateConfig(RESULT_SORTERS, options, function (hookFor, fn) {\n            stats.hooks.sortResults.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (comparators, ctx) {\n              return fn(comparators, ctx, options);\n            });\n          });\n          iterateConfig(RESULT_GROUPERS, options, function (hookFor, fn) {\n            stats.hooks.groupResults.for(hookFor).tap(\"DefaultStatsFactoryPlugin\", function (groupConfigs, ctx) {\n              return fn(groupConfigs, ctx, options);\n            });\n          });\n          var _loop2 = function _loop2() {\n            var key = _Object$keys6[_i6];\n            var itemName = ITEM_NAMES[key];\n            stats.hooks.getItemName.for(key).tap(\"DefaultStatsFactoryPlugin\", function () {\n              return itemName;\n            });\n          };\n          for (var _i6 = 0, _Object$keys6 = Object.keys(ITEM_NAMES); _i6 < _Object$keys6.length; _i6++) {\n            _loop2();\n          }\n          for (var _i7 = 0, _Object$keys7 = Object.keys(MERGER); _i7 < _Object$keys7.length; _i7++) {\n            var key = _Object$keys7[_i7];\n            var merger = MERGER[key];\n            stats.hooks.merge.for(key).tap(\"DefaultStatsFactoryPlugin\", merger);\n          }\n          if (options.children) {\n            if (Array.isArray(options.children)) {\n              stats.hooks.getItemFactory.for(\"compilation.children[].compilation\").tap(\"DefaultStatsFactoryPlugin\", function (comp, _ref55) {\n                var idx = _ref55._index;\n                if (idx < options.children.length) {\n                  return compilation.createStatsFactory(compilation.createStatsOptions(options.children[idx], context));\n                }\n              });\n            } else if (options.children !== true) {\n              var childFactory = compilation.createStatsFactory(compilation.createStatsOptions(options.children, context));\n              stats.hooks.getItemFactory.for(\"compilation.children[].compilation\").tap(\"DefaultStatsFactoryPlugin\", function () {\n                return childFactory;\n              });\n            }\n          }\n        });\n      });\n    }\n  }]);\n  return DefaultStatsFactoryPlugin;\n}();\nmodule.exports = DefaultStatsFactoryPlugin;","map":{"version":3,"names":["util","require","ModuleDependency","formatLocation","LogType","AggressiveSplittingPlugin","SizeLimitsPlugin","countIterable","compareLocations","compareChunksById","compareNumbers","compareIds","concatComparators","compareSelect","compareModulesByIdentifier","makePathsRelative","parseResource","uniqueArray","items","selector","set","Set","item","i","add","Array","from","uniqueOrderedArray","comparator","sort","mapObject","obj","fn","newObj","Object","create","keys","key","countWithChildren","compilation","getItems","count","length","children","child","c","type","EXTRACT_ERROR","_","object","error","context","requestShortener","message","chunk","chunkName","name","chunkEntry","hasRuntime","chunkInitial","canBeInitial","file","module","moduleIdentifier","identifier","moduleName","readableIdentifier","loc","ids","chunkGraph","chunkId","id","moduleId","getModuleId","moduleTrace","options","factory","moduleGraph","visitedModules","current","has","origin","getIssuer","push","errorDetails","cachedGetErrors","cachedGetWarnings","endsWith","details","errorStack","stack","SIMPLE_EXTRACTORS","bindContextCache","compiler","root","map","WeakMap","get","errors","getErrors","warnings","getWarnings","needAdditionalPass","logging","loggingDebug","loggingTrace","acceptedTypes","collapsedGroups","warn","info","log","group","groupEnd","groupCollapsed","clear","profile","profileEnd","time","status","cachedMakePathsRelative","depthInCollapsedGroup","logEntries","debugMode","some","groupStack","rootList","currentList","processedLogEntries","entry","pop","undefined","args","format","slice","newEntry","trace","replace","entries","filteredEntries","debug","hash","version","env","_env","timings","endTime","startTime","builtAt","publicPath","getPath","outputOptions","outputPath","path","assets","compilationFileToChunks","Map","compilationAuxiliaryFileToChunks","chunks","files","array","auxiliaryFiles","assetMap","getAssets","asset","related","values","relatedEntry","deps","isArray","dep","depItem","delete","assetsByChunkName","prototype","hasOwnProperty","call","groupedAssets","limited","spaceLimited","assetsSpace","filteredAssets","filteredChildren","modules","groupedModules","modulesSpace","filteredModules","entrypoints","chunkGroups","chunkGroupAuxiliary","chunkGroupChildren","value","chunkGroup","every","size","namedChunkGroups","errorsCount","warningsCount","warningsFilter","childType","filter","warning","warningString","join","filteredWarningDetailsCount","e","Boolean","filteredErrorDetailsCount","source","emitted","emittedAssets","comparedForEmit","comparedForEmitAssets","cached","cachedAssets","assign","asset$visible","auxiliaryChunks","chunkNames","chunkIdHints","idNameHints","auxiliaryChunkNames","auxiliaryChunkIdHints","filteredRelated","relatedAssets","performance","isOverSizeLimit","chunkGroupMaxAssets","getChildrenByOrders","toAsset","getAsset","sizeReducer","total","auxiliaryAssets","assetsSize","reduce","auxiliaryAssetsSize","statsChunkGroup","filteredAuxiliaryAssets","groups","childStatsChunkGroup","childAssets","built","builtModules","codeGenerated","codeGeneratedModules","buildTimeExecuted","buildTimeExecutedModules","sizes","getSourceTypes","sourceType","statsModule","moduleType","layer","cachedModules","module$visible","rootModules","issuer","reverse","getProfile","nameForCondition","index","getPreOrderIndex","preOrderIndex","index2","getPostOrderIndex","postOrderIndex","cacheable","buildInfo","optional","isOptional","orphan","getNumberOfModuleChunks","dependent","issuerName","issuerPath","failed","issuerId","getOrderedModuleChunksIterable","moduleAssets","reasons","groupsReasons","getIncomingConnections","reasonsSpace","filteredReasons","usedExports","runtime","getUsedExports","providedExports","getProvidedExports","optimizationBailout","getOptimizationBailout","depth","getDepth","nestedModules","innerModules","nestedModulesSpace","originalSource","statsProfile","restoring","integration","building","storing","resolving","additionalResolving","additionalFactories","additionalIntegration","dependencies","moduleIssuer","statsModuleIssuer","moduleReason","reason","dependency","moduleDep","statsModuleReason","originModule","resolvedModuleIdentifier","resolvedOriginModule","resolvedModule","active","isActive","explanation","userRequest","locInfo","resolvedModuleId","childIdByOrder","getChildIdsByOrders","statsChunk","rendered","initial","recorded","wasChunkRecorded","chunkReason","getChunkModulesSize","getChunkModulesSizes","names","idHints","renderedHash","childrenByOrder","chunkRelations","parents","siblings","groupsIterable","parentsIterable","parentGroup","childrenIterable","childGroup","sibling","chunkModules","getChunkModules","getChunkRootModules","chunkModulesSpace","chunkOrigins","originsKeySet","origins","g","request","chunkOrigin","statsChunkOrigin","moduleTraceItem","originIdentifier","originName","originId","moduleTraceDependency","FILTER","FILTER_RESULTS","deprecate","MODULES_SORTER","comparators","m","SORTERS","x","getItemSize","getTotalSize","getTotalItems","collapse","newChildren","itemsAndGroups","max","filteredChildrenLineReserved","groupSizes","groupsSize","itemOrGroup","concat","limit","oversize","maxGroupSize","Math","headerSize","ceil","newSize","assetGroup","moduleGroup","reasonGroup","GROUP_EXTENSION_REGEXP","GROUP_PATH_REGEXP","ASSETS_GROUPERS","groupConfigs","groupByFlag","exclude","getKeys","getOptions","groupChildren","force","createGroup","groupAssetsByEmitStatus","groupAssetsByPath","groupAssetsByExtension","extensionMatch","exec","extension","pathMatch","split","groupAssetsByInfo","groupByAssetInfoFlag","groupAssetsByChunk","groupByNames","excludeAssets","ident","excluded","MODULES_GROUPERS","groupModulesByCacheStatus","groupModulesByLayer","groupModulesByAttributes","groupModulesByType","groupModulesByPath","groupModulesByExtension","orphanModules","dependentModules","runtimeModules","resource","dataUrl","isDataUrl","startsWith","excludeModules","RESULT_GROUPERS","groupReasonsByOrigin","normalizeFieldKey","field","sortOrderRegular","sortByField","noSort","a","b","fieldKey","sortFn","sortIsRegular","oldSortFn","ASSET_SORTERS","assetsSort","RESULT_SORTERS","chunksSort","modulesSort","chunkModulesSort","nestedModulesSort","iterateConfig","config","hookFor","subConfig","option","ITEM_NAMES","mergeToObject","MERGER","DefaultStatsFactoryPlugin","hooks","tap","statsFactory","stats","extract","for","data","ctx","idx","filterResults","sortResults","groupResults","itemName","getItemName","merger","merge","getItemFactory","comp","_index","createStatsFactory","createStatsOptions","childFactory","exports"],"sources":["/Users/brunocamparadiniz/Desktop/coding/BC-AY/react/todolist/node_modules/webpack/lib/stats/DefaultStatsFactoryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst ModuleDependency = require(\"../dependencies/ModuleDependency\");\nconst formatLocation = require(\"../formatLocation\");\nconst { LogType } = require(\"../logging/Logger\");\nconst AggressiveSplittingPlugin = require(\"../optimize/AggressiveSplittingPlugin\");\nconst SizeLimitsPlugin = require(\"../performance/SizeLimitsPlugin\");\nconst { countIterable } = require(\"../util/IterableHelpers\");\nconst {\n\tcompareLocations,\n\tcompareChunksById,\n\tcompareNumbers,\n\tcompareIds,\n\tconcatComparators,\n\tcompareSelect,\n\tcompareModulesByIdentifier\n} = require(\"../util/comparators\");\nconst { makePathsRelative, parseResource } = require(\"../util/identifier\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../ChunkGroup\").OriginRecord} OriginRecord */\n/** @typedef {import(\"../Compilation\")} Compilation */\n/** @typedef {import(\"../Compilation\").Asset} Asset */\n/** @typedef {import(\"../Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"../Compilation\").NormalizedStatsOptions} NormalizedStatsOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleProfile\")} ModuleProfile */\n/** @typedef {import(\"../RequestShortener\")} RequestShortener */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @template T @typedef {import(\"../util/comparators\").Comparator<T>} Comparator<T> */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"../util/smartGrouping\").GroupConfig<any, object>} GroupConfig */\n/** @typedef {import(\"./StatsFactory\")} StatsFactory */\n/** @typedef {import(\"./StatsFactory\").StatsFactoryContext} StatsFactoryContext */\n\n/** @typedef {KnownStatsCompilation & Record<string, any>} StatsCompilation */\n/**\n * @typedef {Object} KnownStatsCompilation\n * @property {any=} env\n * @property {string=} name\n * @property {string=} hash\n * @property {string=} version\n * @property {number=} time\n * @property {number=} builtAt\n * @property {boolean=} needAdditionalPass\n * @property {string=} publicPath\n * @property {string=} outputPath\n * @property {Record<string, string[]>=} assetsByChunkName\n * @property {StatsAsset[]=} assets\n * @property {number=} filteredAssets\n * @property {StatsChunk[]=} chunks\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {Record<string, StatsChunkGroup>=} entrypoints\n * @property {Record<string, StatsChunkGroup>=} namedChunkGroups\n * @property {StatsError[]=} errors\n * @property {number=} errorsCount\n * @property {StatsError[]=} warnings\n * @property {number=} warningsCount\n * @property {StatsCompilation[]=} children\n * @property {Record<string, StatsLogging>=} logging\n */\n\n/** @typedef {KnownStatsLogging & Record<string, any>} StatsLogging */\n/**\n * @typedef {Object} KnownStatsLogging\n * @property {StatsLoggingEntry[]} entries\n * @property {number} filteredEntries\n * @property {boolean} debug\n */\n\n/** @typedef {KnownStatsLoggingEntry & Record<string, any>} StatsLoggingEntry */\n/**\n * @typedef {Object} KnownStatsLoggingEntry\n * @property {string} type\n * @property {string} message\n * @property {string[]=} trace\n * @property {StatsLoggingEntry[]=} children\n * @property {any[]=} args\n * @property {number=} time\n */\n\n/** @typedef {KnownStatsAsset & Record<string, any>} StatsAsset */\n/**\n * @typedef {Object} KnownStatsAsset\n * @property {string} type\n * @property {string} name\n * @property {AssetInfo} info\n * @property {number} size\n * @property {boolean} emitted\n * @property {boolean} comparedForEmit\n * @property {boolean} cached\n * @property {StatsAsset[]=} related\n * @property {(string|number)[]=} chunkNames\n * @property {(string|number)[]=} chunkIdHints\n * @property {(string|number)[]=} chunks\n * @property {(string|number)[]=} auxiliaryChunkNames\n * @property {(string|number)[]=} auxiliaryChunks\n * @property {(string|number)[]=} auxiliaryChunkIdHints\n * @property {number=} filteredRelated\n * @property {boolean=} isOverSizeLimit\n */\n\n/** @typedef {KnownStatsChunkGroup & Record<string, any>} StatsChunkGroup */\n/**\n * @typedef {Object} KnownStatsChunkGroup\n * @property {string=} name\n * @property {(string|number)[]=} chunks\n * @property {({ name: string, size?: number })[]=} assets\n * @property {number=} filteredAssets\n * @property {number=} assetsSize\n * @property {({ name: string, size?: number })[]=} auxiliaryAssets\n * @property {number=} filteredAuxiliaryAssets\n * @property {number=} auxiliaryAssetsSize\n * @property {{ [x: string]: StatsChunkGroup[] }=} children\n * @property {{ [x: string]: string[] }=} childAssets\n * @property {boolean=} isOverSizeLimit\n */\n\n/** @typedef {KnownStatsModule & Record<string, any>} StatsModule */\n/**\n * @typedef {Object} KnownStatsModule\n * @property {string=} type\n * @property {string=} moduleType\n * @property {string=} layer\n * @property {string=} identifier\n * @property {string=} name\n * @property {string=} nameForCondition\n * @property {number=} index\n * @property {number=} preOrderIndex\n * @property {number=} index2\n * @property {number=} postOrderIndex\n * @property {number=} size\n * @property {{[x: string]: number}=} sizes\n * @property {boolean=} cacheable\n * @property {boolean=} built\n * @property {boolean=} codeGenerated\n * @property {boolean=} buildTimeExecuted\n * @property {boolean=} cached\n * @property {boolean=} optional\n * @property {boolean=} orphan\n * @property {string|number=} id\n * @property {string|number=} issuerId\n * @property {(string|number)[]=} chunks\n * @property {(string|number)[]=} assets\n * @property {boolean=} dependent\n * @property {string=} issuer\n * @property {string=} issuerName\n * @property {StatsModuleIssuer[]=} issuerPath\n * @property {boolean=} failed\n * @property {number=} errors\n * @property {number=} warnings\n * @property {StatsProfile=} profile\n * @property {StatsModuleReason[]=} reasons\n * @property {(boolean | string[])=} usedExports\n * @property {string[]=} providedExports\n * @property {string[]=} optimizationBailout\n * @property {number=} depth\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {ReturnType<Source[\"source\"]>=} source\n */\n\n/** @typedef {KnownStatsProfile & Record<string, any>} StatsProfile */\n/**\n * @typedef {Object} KnownStatsProfile\n * @property {number} total\n * @property {number} resolving\n * @property {number} restoring\n * @property {number} building\n * @property {number} integration\n * @property {number} storing\n * @property {number} additionalResolving\n * @property {number} additionalIntegration\n * @property {number} factory\n * @property {number} dependencies\n */\n\n/** @typedef {KnownStatsModuleIssuer & Record<string, any>} StatsModuleIssuer */\n/**\n * @typedef {Object} KnownStatsModuleIssuer\n * @property {string=} identifier\n * @property {string=} name\n * @property {(string|number)=} id\n * @property {StatsProfile=} profile\n */\n\n/** @typedef {KnownStatsModuleReason & Record<string, any>} StatsModuleReason */\n/**\n * @typedef {Object} KnownStatsModuleReason\n * @property {string=} moduleIdentifier\n * @property {string=} module\n * @property {string=} moduleName\n * @property {string=} resolvedModuleIdentifier\n * @property {string=} resolvedModule\n * @property {string=} type\n * @property {boolean} active\n * @property {string=} explanation\n * @property {string=} userRequest\n * @property {string=} loc\n * @property {(string|number)=} moduleId\n * @property {(string|number)=} resolvedModuleId\n */\n\n/** @typedef {KnownStatsChunk & Record<string, any>} StatsChunk */\n/**\n * @typedef {Object} KnownStatsChunk\n * @property {boolean} rendered\n * @property {boolean} initial\n * @property {boolean} entry\n * @property {boolean} recorded\n * @property {string=} reason\n * @property {number} size\n * @property {Record<string, number>=} sizes\n * @property {string[]=} names\n * @property {string[]=} idHints\n * @property {string[]=} runtime\n * @property {string[]=} files\n * @property {string[]=} auxiliaryFiles\n * @property {string} hash\n * @property {Record<string, (string|number)[]>=} childrenByOrder\n * @property {(string|number)=} id\n * @property {(string|number)[]=} siblings\n * @property {(string|number)[]=} parents\n * @property {(string|number)[]=} children\n * @property {StatsModule[]=} modules\n * @property {number=} filteredModules\n * @property {StatsChunkOrigin[]=} origins\n */\n\n/** @typedef {KnownStatsChunkOrigin & Record<string, any>} StatsChunkOrigin */\n/**\n * @typedef {Object} KnownStatsChunkOrigin\n * @property {string=} module\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {string=} loc\n * @property {string=} request\n * @property {(string|number)=} moduleId\n */\n\n/** @typedef {KnownStatsModuleTraceItem & Record<string, any>} StatsModuleTraceItem */\n/**\n * @typedef {Object} KnownStatsModuleTraceItem\n * @property {string=} originIdentifier\n * @property {string=} originName\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {StatsModuleTraceDependency[]=} dependencies\n * @property {(string|number)=} originId\n * @property {(string|number)=} moduleId\n */\n\n/** @typedef {KnownStatsModuleTraceDependency & Record<string, any>} StatsModuleTraceDependency */\n/**\n * @typedef {Object} KnownStatsModuleTraceDependency\n * @property {string=} loc\n */\n\n/** @typedef {KnownStatsError & Record<string, any>} StatsError */\n/**\n * @typedef {Object} KnownStatsError\n * @property {string} message\n * @property {string=} chunkName\n * @property {boolean=} chunkEntry\n * @property {boolean=} chunkInitial\n * @property {string=} file\n * @property {string=} moduleIdentifier\n * @property {string=} moduleName\n * @property {string=} loc\n * @property {string|number=} chunkId\n * @property {string|number=} moduleId\n * @property {StatsModuleTraceItem[]=} moduleTrace\n * @property {any=} details\n * @property {string=} stack\n */\n\n/** @typedef {Asset & { type: string, related: PreprocessedAsset[] }} PreprocessedAsset */\n\n/**\n * @template T\n * @template O\n * @typedef {Record<string, (object: O, data: T, context: StatsFactoryContext, options: NormalizedStatsOptions, factory: StatsFactory) => void>} ExtractorsByOption\n */\n\n/**\n * @typedef {Object} SimpleExtractors\n * @property {ExtractorsByOption<Compilation, StatsCompilation>} compilation\n * @property {ExtractorsByOption<PreprocessedAsset, StatsAsset>} asset\n * @property {ExtractorsByOption<PreprocessedAsset, StatsAsset>} asset$visible\n * @property {ExtractorsByOption<{ name: string, chunkGroup: ChunkGroup }, StatsChunkGroup>} chunkGroup\n * @property {ExtractorsByOption<Module, StatsModule>} module\n * @property {ExtractorsByOption<Module, StatsModule>} module$visible\n * @property {ExtractorsByOption<Module, StatsModuleIssuer>} moduleIssuer\n * @property {ExtractorsByOption<ModuleProfile, StatsProfile>} profile\n * @property {ExtractorsByOption<ModuleGraphConnection, StatsModuleReason>} moduleReason\n * @property {ExtractorsByOption<Chunk, StatsChunk>} chunk\n * @property {ExtractorsByOption<OriginRecord, StatsChunkOrigin>} chunkOrigin\n * @property {ExtractorsByOption<WebpackError, StatsError>} error\n * @property {ExtractorsByOption<WebpackError, StatsError>} warning\n * @property {ExtractorsByOption<{ origin: Module, module: Module }, StatsModuleTraceItem>} moduleTraceItem\n * @property {ExtractorsByOption<Dependency, StatsModuleTraceDependency>} moduleTraceDependency\n */\n\n/**\n * @template T\n * @template I\n * @param {Iterable<T>} items items to select from\n * @param {function(T): Iterable<I>} selector selector function to select values from item\n * @returns {I[]} array of values\n */\nconst uniqueArray = (items, selector) => {\n\t/** @type {Set<I>} */\n\tconst set = new Set();\n\tfor (const item of items) {\n\t\tfor (const i of selector(item)) {\n\t\t\tset.add(i);\n\t\t}\n\t}\n\treturn Array.from(set);\n};\n\n/**\n * @template T\n * @template I\n * @param {Iterable<T>} items items to select from\n * @param {function(T): Iterable<I>} selector selector function to select values from item\n * @param {Comparator<I>} comparator comparator function\n * @returns {I[]} array of values\n */\nconst uniqueOrderedArray = (items, selector, comparator) => {\n\treturn uniqueArray(items, selector).sort(comparator);\n};\n\n/** @template T @template R @typedef {{ [P in keyof T]: R }} MappedValues<T, R> */\n\n/**\n * @template T\n * @template R\n * @param {T} obj object to be mapped\n * @param {function(T[keyof T], keyof T): R} fn mapping function\n * @returns {MappedValues<T, R>} mapped object\n */\nconst mapObject = (obj, fn) => {\n\tconst newObj = Object.create(null);\n\tfor (const key of Object.keys(obj)) {\n\t\tnewObj[key] = fn(obj[key], /** @type {keyof T} */ (key));\n\t}\n\treturn newObj;\n};\n\n/**\n * @param {Compilation} compilation the compilation\n * @param {function(Compilation, string): any[]} getItems get items\n * @returns {number} total number\n */\nconst countWithChildren = (compilation, getItems) => {\n\tlet count = getItems(compilation, \"\").length;\n\tfor (const child of compilation.children) {\n\t\tcount += countWithChildren(child, (c, type) =>\n\t\t\tgetItems(c, `.children[].compilation${type}`)\n\t\t);\n\t}\n\treturn count;\n};\n\n/** @type {ExtractorsByOption<WebpackError | string, StatsError>} */\nconst EXTRACT_ERROR = {\n\t_: (object, error, context, { requestShortener }) => {\n\t\t// TODO webpack 6 disallow strings in the errors/warnings list\n\t\tif (typeof error === \"string\") {\n\t\t\tobject.message = error;\n\t\t} else {\n\t\t\tif (error.chunk) {\n\t\t\t\tobject.chunkName = error.chunk.name;\n\t\t\t\tobject.chunkEntry = error.chunk.hasRuntime();\n\t\t\t\tobject.chunkInitial = error.chunk.canBeInitial();\n\t\t\t}\n\t\t\tif (error.file) {\n\t\t\t\tobject.file = error.file;\n\t\t\t}\n\t\t\tif (error.module) {\n\t\t\t\tobject.moduleIdentifier = error.module.identifier();\n\t\t\t\tobject.moduleName = error.module.readableIdentifier(requestShortener);\n\t\t\t}\n\t\t\tif (error.loc) {\n\t\t\t\tobject.loc = formatLocation(error.loc);\n\t\t\t}\n\t\t\tobject.message = error.message;\n\t\t}\n\t},\n\tids: (object, error, { compilation: { chunkGraph } }) => {\n\t\tif (typeof error !== \"string\") {\n\t\t\tif (error.chunk) {\n\t\t\t\tobject.chunkId = error.chunk.id;\n\t\t\t}\n\t\t\tif (error.module) {\n\t\t\t\tobject.moduleId = chunkGraph.getModuleId(error.module);\n\t\t\t}\n\t\t}\n\t},\n\tmoduleTrace: (object, error, context, options, factory) => {\n\t\tif (typeof error !== \"string\" && error.module) {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tcompilation: { moduleGraph }\n\t\t\t} = context;\n\t\t\t/** @type {Set<Module>} */\n\t\t\tconst visitedModules = new Set();\n\t\t\tconst moduleTrace = [];\n\t\t\tlet current = error.module;\n\t\t\twhile (current) {\n\t\t\t\tif (visitedModules.has(current)) break; // circular (technically impossible, but how knows)\n\t\t\t\tvisitedModules.add(current);\n\t\t\t\tconst origin = moduleGraph.getIssuer(current);\n\t\t\t\tif (!origin) break;\n\t\t\t\tmoduleTrace.push({ origin, module: current });\n\t\t\t\tcurrent = origin;\n\t\t\t}\n\t\t\tobject.moduleTrace = factory.create(\n\t\t\t\t`${type}.moduleTrace`,\n\t\t\t\tmoduleTrace,\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\t},\n\terrorDetails: (\n\t\tobject,\n\t\terror,\n\t\t{ type, compilation, cachedGetErrors, cachedGetWarnings },\n\t\t{ errorDetails }\n\t) => {\n\t\tif (\n\t\t\ttypeof error !== \"string\" &&\n\t\t\t(errorDetails === true ||\n\t\t\t\t(type.endsWith(\".error\") && cachedGetErrors(compilation).length < 3))\n\t\t) {\n\t\t\tobject.details = error.details;\n\t\t}\n\t},\n\terrorStack: (object, error) => {\n\t\tif (typeof error !== \"string\") {\n\t\t\tobject.stack = error.stack;\n\t\t}\n\t}\n};\n\n/** @type {SimpleExtractors} */\nconst SIMPLE_EXTRACTORS = {\n\tcompilation: {\n\t\t_: (object, compilation, context, options) => {\n\t\t\tif (!context.makePathsRelative) {\n\t\t\t\tcontext.makePathsRelative = makePathsRelative.bindContextCache(\n\t\t\t\t\tcompilation.compiler.context,\n\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!context.cachedGetErrors) {\n\t\t\t\tconst map = new WeakMap();\n\t\t\t\tcontext.cachedGetErrors = compilation => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tmap.get(compilation) ||\n\t\t\t\t\t\t(errors => (map.set(compilation, errors), errors))(\n\t\t\t\t\t\t\tcompilation.getErrors()\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!context.cachedGetWarnings) {\n\t\t\t\tconst map = new WeakMap();\n\t\t\t\tcontext.cachedGetWarnings = compilation => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tmap.get(compilation) ||\n\t\t\t\t\t\t(warnings => (map.set(compilation, warnings), warnings))(\n\t\t\t\t\t\t\tcompilation.getWarnings()\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (compilation.name) {\n\t\t\t\tobject.name = compilation.name;\n\t\t\t}\n\t\t\tif (compilation.needAdditionalPass) {\n\t\t\t\tobject.needAdditionalPass = true;\n\t\t\t}\n\n\t\t\tconst { logging, loggingDebug, loggingTrace } = options;\n\t\t\tif (logging || (loggingDebug && loggingDebug.length > 0)) {\n\t\t\t\tconst util = require(\"util\");\n\t\t\t\tobject.logging = {};\n\t\t\t\tlet acceptedTypes;\n\t\t\t\tlet collapsedGroups = false;\n\t\t\t\tswitch (logging) {\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tacceptedTypes = new Set();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tacceptedTypes = new Set([LogType.error]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"warn\":\n\t\t\t\t\t\tacceptedTypes = new Set([LogType.error, LogType.warn]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"info\":\n\t\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\t\tLogType.info\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"verbose\":\n\t\t\t\t\t\tacceptedTypes = new Set([\n\t\t\t\t\t\t\tLogType.error,\n\t\t\t\t\t\t\tLogType.warn,\n\t\t\t\t\t\t\tLogType.info,\n\t\t\t\t\t\t\tLogType.log,\n\t\t\t\t\t\t\tLogType.group,\n\t\t\t\t\t\t\tLogType.groupEnd,\n\t\t\t\t\t\t\tLogType.groupCollapsed,\n\t\t\t\t\t\t\tLogType.profile,\n\t\t\t\t\t\t\tLogType.profileEnd,\n\t\t\t\t\t\t\tLogType.time,\n\t\t\t\t\t\t\tLogType.status,\n\t\t\t\t\t\t\tLogType.clear\n\t\t\t\t\t\t]);\n\t\t\t\t\t\tcollapsedGroups = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst cachedMakePathsRelative = makePathsRelative.bindContextCache(\n\t\t\t\t\toptions.context,\n\t\t\t\t\tcompilation.compiler.root\n\t\t\t\t);\n\t\t\t\tlet depthInCollapsedGroup = 0;\n\t\t\t\tfor (const [origin, logEntries] of compilation.logging) {\n\t\t\t\t\tconst debugMode = loggingDebug.some(fn => fn(origin));\n\t\t\t\t\tif (logging === false && !debugMode) continue;\n\t\t\t\t\t/** @type {KnownStatsLoggingEntry[]} */\n\t\t\t\t\tconst groupStack = [];\n\t\t\t\t\t/** @type {KnownStatsLoggingEntry[]} */\n\t\t\t\t\tconst rootList = [];\n\t\t\t\t\tlet currentList = rootList;\n\t\t\t\t\tlet processedLogEntries = 0;\n\t\t\t\t\tfor (const entry of logEntries) {\n\t\t\t\t\t\tlet type = entry.type;\n\t\t\t\t\t\tif (!debugMode && !acceptedTypes.has(type)) continue;\n\n\t\t\t\t\t\t// Expand groups in verbose and debug modes\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttype === LogType.groupCollapsed &&\n\t\t\t\t\t\t\t(debugMode || collapsedGroups)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\ttype = LogType.group;\n\n\t\t\t\t\t\tif (depthInCollapsedGroup === 0) {\n\t\t\t\t\t\t\tprocessedLogEntries++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (type === LogType.groupEnd) {\n\t\t\t\t\t\t\tgroupStack.pop();\n\t\t\t\t\t\t\tif (groupStack.length > 0) {\n\t\t\t\t\t\t\t\tcurrentList = groupStack[groupStack.length - 1].children;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentList = rootList;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (depthInCollapsedGroup > 0) depthInCollapsedGroup--;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet message = undefined;\n\t\t\t\t\t\tif (entry.type === LogType.time) {\n\t\t\t\t\t\t\tmessage = `${entry.args[0]}: ${\n\t\t\t\t\t\t\t\tentry.args[1] * 1000 + entry.args[2] / 1000000\n\t\t\t\t\t\t\t} ms`;\n\t\t\t\t\t\t} else if (entry.args && entry.args.length > 0) {\n\t\t\t\t\t\t\tmessage = util.format(entry.args[0], ...entry.args.slice(1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/** @type {KnownStatsLoggingEntry} */\n\t\t\t\t\t\tconst newEntry = {\n\t\t\t\t\t\t\t...entry,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\ttrace: loggingTrace ? entry.trace : undefined,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\ttype === LogType.group || type === LogType.groupCollapsed\n\t\t\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcurrentList.push(newEntry);\n\t\t\t\t\t\tif (newEntry.children) {\n\t\t\t\t\t\t\tgroupStack.push(newEntry);\n\t\t\t\t\t\t\tcurrentList = newEntry.children;\n\t\t\t\t\t\t\tif (depthInCollapsedGroup > 0) {\n\t\t\t\t\t\t\t\tdepthInCollapsedGroup++;\n\t\t\t\t\t\t\t} else if (type === LogType.groupCollapsed) {\n\t\t\t\t\t\t\t\tdepthInCollapsedGroup = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet name = cachedMakePathsRelative(origin).replace(/\\|/g, \" \");\n\t\t\t\t\tif (name in object.logging) {\n\t\t\t\t\t\tlet i = 1;\n\t\t\t\t\t\twhile (`${name}#${i}` in object.logging) {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tname = `${name}#${i}`;\n\t\t\t\t\t}\n\t\t\t\t\tobject.logging[name] = {\n\t\t\t\t\t\tentries: rootList,\n\t\t\t\t\t\tfilteredEntries: logEntries.length - processedLogEntries,\n\t\t\t\t\t\tdebug: debugMode\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thash: (object, compilation) => {\n\t\t\tobject.hash = compilation.hash;\n\t\t},\n\t\tversion: object => {\n\t\t\tobject.version = require(\"../../package.json\").version;\n\t\t},\n\t\tenv: (object, compilation, context, { _env }) => {\n\t\t\tobject.env = _env;\n\t\t},\n\t\ttimings: (object, compilation) => {\n\t\t\tobject.time = compilation.endTime - compilation.startTime;\n\t\t},\n\t\tbuiltAt: (object, compilation) => {\n\t\t\tobject.builtAt = compilation.endTime;\n\t\t},\n\t\tpublicPath: (object, compilation) => {\n\t\t\tobject.publicPath = compilation.getPath(\n\t\t\t\tcompilation.outputOptions.publicPath\n\t\t\t);\n\t\t},\n\t\toutputPath: (object, compilation) => {\n\t\t\tobject.outputPath = compilation.outputOptions.path;\n\t\t},\n\t\tassets: (object, compilation, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\t/** @type {Map<string, Chunk[]>} */\n\t\t\tconst compilationFileToChunks = new Map();\n\t\t\t/** @type {Map<string, Chunk[]>} */\n\t\t\tconst compilationAuxiliaryFileToChunks = new Map();\n\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\tfor (const file of chunk.files) {\n\t\t\t\t\tlet array = compilationFileToChunks.get(file);\n\t\t\t\t\tif (array === undefined) {\n\t\t\t\t\t\tarray = [];\n\t\t\t\t\t\tcompilationFileToChunks.set(file, array);\n\t\t\t\t\t}\n\t\t\t\t\tarray.push(chunk);\n\t\t\t\t}\n\t\t\t\tfor (const file of chunk.auxiliaryFiles) {\n\t\t\t\t\tlet array = compilationAuxiliaryFileToChunks.get(file);\n\t\t\t\t\tif (array === undefined) {\n\t\t\t\t\t\tarray = [];\n\t\t\t\t\t\tcompilationAuxiliaryFileToChunks.set(file, array);\n\t\t\t\t\t}\n\t\t\t\t\tarray.push(chunk);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/** @type {Map<string, PreprocessedAsset>} */\n\t\t\tconst assetMap = new Map();\n\t\t\t/** @type {Set<PreprocessedAsset>} */\n\t\t\tconst assets = new Set();\n\t\t\tfor (const asset of compilation.getAssets()) {\n\t\t\t\t/** @type {PreprocessedAsset} */\n\t\t\t\tconst item = {\n\t\t\t\t\t...asset,\n\t\t\t\t\ttype: \"asset\",\n\t\t\t\t\trelated: undefined\n\t\t\t\t};\n\t\t\t\tassets.add(item);\n\t\t\t\tassetMap.set(asset.name, item);\n\t\t\t}\n\t\t\tfor (const item of assetMap.values()) {\n\t\t\t\tconst related = item.info.related;\n\t\t\t\tif (!related) continue;\n\t\t\t\tfor (const type of Object.keys(related)) {\n\t\t\t\t\tconst relatedEntry = related[type];\n\t\t\t\t\tconst deps = Array.isArray(relatedEntry)\n\t\t\t\t\t\t? relatedEntry\n\t\t\t\t\t\t: [relatedEntry];\n\t\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\t\tconst depItem = assetMap.get(dep);\n\t\t\t\t\t\tif (!depItem) continue;\n\t\t\t\t\t\tassets.delete(depItem);\n\t\t\t\t\t\tdepItem.type = type;\n\t\t\t\t\t\titem.related = item.related || [];\n\t\t\t\t\t\titem.related.push(depItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobject.assetsByChunkName = {};\n\t\t\tfor (const [file, chunks] of compilationFileToChunks) {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tconst name = chunk.name;\n\t\t\t\t\tif (!name) continue;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(\n\t\t\t\t\t\t\tobject.assetsByChunkName,\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tobject.assetsByChunkName[name] = [];\n\t\t\t\t\t}\n\t\t\t\t\tobject.assetsByChunkName[name].push(file);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst groupedAssets = factory.create(\n\t\t\t\t`${type}.assets`,\n\t\t\t\tArray.from(assets),\n\t\t\t\t{\n\t\t\t\t\t...context,\n\t\t\t\t\tcompilationFileToChunks,\n\t\t\t\t\tcompilationAuxiliaryFileToChunks\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst limited = spaceLimited(groupedAssets, options.assetsSpace);\n\t\t\tobject.assets = limited.children;\n\t\t\tobject.filteredAssets = limited.filteredChildren;\n\t\t},\n\t\tchunks: (object, compilation, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tobject.chunks = factory.create(\n\t\t\t\t`${type}.chunks`,\n\t\t\t\tArray.from(compilation.chunks),\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\tmodules: (object, compilation, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tconst array = Array.from(compilation.modules);\n\t\t\tconst groupedModules = factory.create(`${type}.modules`, array, context);\n\t\t\tconst limited = spaceLimited(groupedModules, options.modulesSpace);\n\t\t\tobject.modules = limited.children;\n\t\t\tobject.filteredModules = limited.filteredChildren;\n\t\t},\n\t\tentrypoints: (\n\t\t\tobject,\n\t\t\tcompilation,\n\t\t\tcontext,\n\t\t\t{ entrypoints, chunkGroups, chunkGroupAuxiliary, chunkGroupChildren },\n\t\t\tfactory\n\t\t) => {\n\t\t\tconst { type } = context;\n\t\t\tconst array = Array.from(compilation.entrypoints, ([key, value]) => ({\n\t\t\t\tname: key,\n\t\t\t\tchunkGroup: value\n\t\t\t}));\n\t\t\tif (entrypoints === \"auto\" && !chunkGroups) {\n\t\t\t\tif (array.length > 5) return;\n\t\t\t\tif (\n\t\t\t\t\t!chunkGroupChildren &&\n\t\t\t\t\tarray.every(({ chunkGroup }) => {\n\t\t\t\t\t\tif (chunkGroup.chunks.length !== 1) return false;\n\t\t\t\t\t\tconst chunk = chunkGroup.chunks[0];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tchunk.files.size === 1 &&\n\t\t\t\t\t\t\t(!chunkGroupAuxiliary || chunk.auxiliaryFiles.size === 0)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject.entrypoints = factory.create(\n\t\t\t\t`${type}.entrypoints`,\n\t\t\t\tarray,\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\tchunkGroups: (object, compilation, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tconst array = Array.from(\n\t\t\t\tcompilation.namedChunkGroups,\n\t\t\t\t([key, value]) => ({\n\t\t\t\t\tname: key,\n\t\t\t\t\tchunkGroup: value\n\t\t\t\t})\n\t\t\t);\n\t\t\tobject.namedChunkGroups = factory.create(\n\t\t\t\t`${type}.namedChunkGroups`,\n\t\t\t\tarray,\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\terrors: (object, compilation, context, options, factory) => {\n\t\t\tconst { type, cachedGetErrors } = context;\n\t\t\tobject.errors = factory.create(\n\t\t\t\t`${type}.errors`,\n\t\t\t\tcachedGetErrors(compilation),\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\terrorsCount: (object, compilation, { cachedGetErrors }) => {\n\t\t\tobject.errorsCount = countWithChildren(compilation, c =>\n\t\t\t\tcachedGetErrors(c)\n\t\t\t);\n\t\t},\n\t\twarnings: (object, compilation, context, options, factory) => {\n\t\t\tconst { type, cachedGetWarnings } = context;\n\t\t\tobject.warnings = factory.create(\n\t\t\t\t`${type}.warnings`,\n\t\t\t\tcachedGetWarnings(compilation),\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\twarningsCount: (\n\t\t\tobject,\n\t\t\tcompilation,\n\t\t\tcontext,\n\t\t\t{ warningsFilter },\n\t\t\tfactory\n\t\t) => {\n\t\t\tconst { type, cachedGetWarnings } = context;\n\t\t\tobject.warningsCount = countWithChildren(compilation, (c, childType) => {\n\t\t\t\tif (!warningsFilter && warningsFilter.length === 0)\n\t\t\t\t\treturn cachedGetWarnings(c);\n\t\t\t\treturn factory\n\t\t\t\t\t.create(`${type}${childType}.warnings`, cachedGetWarnings(c), context)\n\t\t\t\t\t.filter(warning => {\n\t\t\t\t\t\tconst warningString = Object.keys(warning)\n\t\t\t\t\t\t\t.map(key => `${warning[key]}`)\n\t\t\t\t\t\t\t.join(\"\\n\");\n\t\t\t\t\t\treturn !warningsFilter.some(filter =>\n\t\t\t\t\t\t\tfilter(warning, warningString)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\terrorDetails: (\n\t\t\tobject,\n\t\t\tcompilation,\n\t\t\t{ cachedGetErrors, cachedGetWarnings },\n\t\t\t{ errorDetails, errors, warnings }\n\t\t) => {\n\t\t\tif (errorDetails === \"auto\") {\n\t\t\t\tif (warnings) {\n\t\t\t\t\tconst warnings = cachedGetWarnings(compilation);\n\t\t\t\t\tobject.filteredWarningDetailsCount = warnings\n\t\t\t\t\t\t.map(e => typeof e !== \"string\" && e.details)\n\t\t\t\t\t\t.filter(Boolean).length;\n\t\t\t\t}\n\t\t\t\tif (errors) {\n\t\t\t\t\tconst errors = cachedGetErrors(compilation);\n\t\t\t\t\tif (errors.length >= 3) {\n\t\t\t\t\t\tobject.filteredErrorDetailsCount = errors\n\t\t\t\t\t\t\t.map(e => typeof e !== \"string\" && e.details)\n\t\t\t\t\t\t\t.filter(Boolean).length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tchildren: (object, compilation, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tobject.children = factory.create(\n\t\t\t\t`${type}.children`,\n\t\t\t\tcompilation.children,\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\t},\n\tasset: {\n\t\t_: (object, asset, context, options, factory) => {\n\t\t\tconst { compilation } = context;\n\t\t\tobject.type = asset.type;\n\t\t\tobject.name = asset.name;\n\t\t\tobject.size = asset.source.size();\n\t\t\tobject.emitted = compilation.emittedAssets.has(asset.name);\n\t\t\tobject.comparedForEmit = compilation.comparedForEmitAssets.has(\n\t\t\t\tasset.name\n\t\t\t);\n\t\t\tconst cached = !object.emitted && !object.comparedForEmit;\n\t\t\tobject.cached = cached;\n\t\t\tobject.info = asset.info;\n\t\t\tif (!cached || options.cachedAssets) {\n\t\t\t\tObject.assign(\n\t\t\t\t\tobject,\n\t\t\t\t\tfactory.create(`${context.type}$visible`, asset, context)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tasset$visible: {\n\t\t_: (\n\t\t\tobject,\n\t\t\tasset,\n\t\t\t{ compilation, compilationFileToChunks, compilationAuxiliaryFileToChunks }\n\t\t) => {\n\t\t\tconst chunks = compilationFileToChunks.get(asset.name) || [];\n\t\t\tconst auxiliaryChunks =\n\t\t\t\tcompilationAuxiliaryFileToChunks.get(asset.name) || [];\n\t\t\tobject.chunkNames = uniqueOrderedArray(\n\t\t\t\tchunks,\n\t\t\t\tc => (c.name ? [c.name] : []),\n\t\t\t\tcompareIds\n\t\t\t);\n\t\t\tobject.chunkIdHints = uniqueOrderedArray(\n\t\t\t\tchunks,\n\t\t\t\tc => Array.from(c.idNameHints),\n\t\t\t\tcompareIds\n\t\t\t);\n\t\t\tobject.auxiliaryChunkNames = uniqueOrderedArray(\n\t\t\t\tauxiliaryChunks,\n\t\t\t\tc => (c.name ? [c.name] : []),\n\t\t\t\tcompareIds\n\t\t\t);\n\t\t\tobject.auxiliaryChunkIdHints = uniqueOrderedArray(\n\t\t\t\tauxiliaryChunks,\n\t\t\t\tc => Array.from(c.idNameHints),\n\t\t\t\tcompareIds\n\t\t\t);\n\t\t\tobject.filteredRelated = asset.related ? asset.related.length : undefined;\n\t\t},\n\t\trelatedAssets: (object, asset, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tobject.related = factory.create(\n\t\t\t\t`${type.slice(0, -8)}.related`,\n\t\t\t\tasset.related,\n\t\t\t\tcontext\n\t\t\t);\n\t\t\tobject.filteredRelated = asset.related\n\t\t\t\t? asset.related.length - object.related.length\n\t\t\t\t: undefined;\n\t\t},\n\t\tids: (\n\t\t\tobject,\n\t\t\tasset,\n\t\t\t{ compilationFileToChunks, compilationAuxiliaryFileToChunks }\n\t\t) => {\n\t\t\tconst chunks = compilationFileToChunks.get(asset.name) || [];\n\t\t\tconst auxiliaryChunks =\n\t\t\t\tcompilationAuxiliaryFileToChunks.get(asset.name) || [];\n\t\t\tobject.chunks = uniqueOrderedArray(chunks, c => c.ids, compareIds);\n\t\t\tobject.auxiliaryChunks = uniqueOrderedArray(\n\t\t\t\tauxiliaryChunks,\n\t\t\t\tc => c.ids,\n\t\t\t\tcompareIds\n\t\t\t);\n\t\t},\n\t\tperformance: (object, asset) => {\n\t\t\tobject.isOverSizeLimit = SizeLimitsPlugin.isOverSizeLimit(asset.source);\n\t\t}\n\t},\n\tchunkGroup: {\n\t\t_: (\n\t\t\tobject,\n\t\t\t{ name, chunkGroup },\n\t\t\t{ compilation, compilation: { moduleGraph, chunkGraph } },\n\t\t\t{ ids, chunkGroupAuxiliary, chunkGroupChildren, chunkGroupMaxAssets }\n\t\t) => {\n\t\t\tconst children =\n\t\t\t\tchunkGroupChildren &&\n\t\t\t\tchunkGroup.getChildrenByOrders(moduleGraph, chunkGraph);\n\t\t\t/**\n\t\t\t * @param {string} name Name\n\t\t\t * @returns {{ name: string, size: number }} Asset object\n\t\t\t */\n\t\t\tconst toAsset = name => {\n\t\t\t\tconst asset = compilation.getAsset(name);\n\t\t\t\treturn {\n\t\t\t\t\tname,\n\t\t\t\t\tsize: asset ? asset.info.size : -1\n\t\t\t\t};\n\t\t\t};\n\t\t\t/** @type {(total: number, asset: { size: number }) => number} */\n\t\t\tconst sizeReducer = (total, { size }) => total + size;\n\t\t\tconst assets = uniqueArray(chunkGroup.chunks, c => c.files).map(toAsset);\n\t\t\tconst auxiliaryAssets = uniqueOrderedArray(\n\t\t\t\tchunkGroup.chunks,\n\t\t\t\tc => c.auxiliaryFiles,\n\t\t\t\tcompareIds\n\t\t\t).map(toAsset);\n\t\t\tconst assetsSize = assets.reduce(sizeReducer, 0);\n\t\t\tconst auxiliaryAssetsSize = auxiliaryAssets.reduce(sizeReducer, 0);\n\t\t\t/** @type {KnownStatsChunkGroup} */\n\t\t\tconst statsChunkGroup = {\n\t\t\t\tname,\n\t\t\t\tchunks: ids ? chunkGroup.chunks.map(c => c.id) : undefined,\n\t\t\t\tassets: assets.length <= chunkGroupMaxAssets ? assets : undefined,\n\t\t\t\tfilteredAssets:\n\t\t\t\t\tassets.length <= chunkGroupMaxAssets ? 0 : assets.length,\n\t\t\t\tassetsSize,\n\t\t\t\tauxiliaryAssets:\n\t\t\t\t\tchunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets\n\t\t\t\t\t\t? auxiliaryAssets\n\t\t\t\t\t\t: undefined,\n\t\t\t\tfilteredAuxiliaryAssets:\n\t\t\t\t\tchunkGroupAuxiliary && auxiliaryAssets.length <= chunkGroupMaxAssets\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: auxiliaryAssets.length,\n\t\t\t\tauxiliaryAssetsSize,\n\t\t\t\tchildren: children\n\t\t\t\t\t? mapObject(children, groups =>\n\t\t\t\t\t\t\tgroups.map(group => {\n\t\t\t\t\t\t\t\tconst assets = uniqueArray(group.chunks, c => c.files).map(\n\t\t\t\t\t\t\t\t\ttoAsset\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst auxiliaryAssets = uniqueOrderedArray(\n\t\t\t\t\t\t\t\t\tgroup.chunks,\n\t\t\t\t\t\t\t\t\tc => c.auxiliaryFiles,\n\t\t\t\t\t\t\t\t\tcompareIds\n\t\t\t\t\t\t\t\t).map(toAsset);\n\n\t\t\t\t\t\t\t\t/** @type {KnownStatsChunkGroup} */\n\t\t\t\t\t\t\t\tconst childStatsChunkGroup = {\n\t\t\t\t\t\t\t\t\tname: group.name,\n\t\t\t\t\t\t\t\t\tchunks: ids ? group.chunks.map(c => c.id) : undefined,\n\t\t\t\t\t\t\t\t\tassets:\n\t\t\t\t\t\t\t\t\t\tassets.length <= chunkGroupMaxAssets ? assets : undefined,\n\t\t\t\t\t\t\t\t\tfilteredAssets:\n\t\t\t\t\t\t\t\t\t\tassets.length <= chunkGroupMaxAssets ? 0 : assets.length,\n\t\t\t\t\t\t\t\t\tauxiliaryAssets:\n\t\t\t\t\t\t\t\t\t\tchunkGroupAuxiliary &&\n\t\t\t\t\t\t\t\t\t\tauxiliaryAssets.length <= chunkGroupMaxAssets\n\t\t\t\t\t\t\t\t\t\t\t? auxiliaryAssets\n\t\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t\tfilteredAuxiliaryAssets:\n\t\t\t\t\t\t\t\t\t\tchunkGroupAuxiliary &&\n\t\t\t\t\t\t\t\t\t\tauxiliaryAssets.length <= chunkGroupMaxAssets\n\t\t\t\t\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t\t\t\t\t: auxiliaryAssets.length\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\treturn childStatsChunkGroup;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\t\tchildAssets: children\n\t\t\t\t\t? mapObject(children, groups => {\n\t\t\t\t\t\t\t/** @type {Set<string>} */\n\t\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\t\tfor (const group of groups) {\n\t\t\t\t\t\t\t\tfor (const chunk of group.chunks) {\n\t\t\t\t\t\t\t\t\tfor (const asset of chunk.files) {\n\t\t\t\t\t\t\t\t\t\tset.add(asset);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Array.from(set);\n\t\t\t\t\t  })\n\t\t\t\t\t: undefined\n\t\t\t};\n\t\t\tObject.assign(object, statsChunkGroup);\n\t\t},\n\t\tperformance: (object, { chunkGroup }) => {\n\t\t\tobject.isOverSizeLimit = SizeLimitsPlugin.isOverSizeLimit(chunkGroup);\n\t\t}\n\t},\n\tmodule: {\n\t\t_: (object, module, context, options, factory) => {\n\t\t\tconst { compilation, type } = context;\n\t\t\tconst built = compilation.builtModules.has(module);\n\t\t\tconst codeGenerated = compilation.codeGeneratedModules.has(module);\n\t\t\tconst buildTimeExecuted =\n\t\t\t\tcompilation.buildTimeExecutedModules.has(module);\n\t\t\t/** @type {{[x: string]: number}} */\n\t\t\tconst sizes = {};\n\t\t\tfor (const sourceType of module.getSourceTypes()) {\n\t\t\t\tsizes[sourceType] = module.size(sourceType);\n\t\t\t}\n\t\t\t/** @type {KnownStatsModule} */\n\t\t\tconst statsModule = {\n\t\t\t\ttype: \"module\",\n\t\t\t\tmoduleType: module.type,\n\t\t\t\tlayer: module.layer,\n\t\t\t\tsize: module.size(),\n\t\t\t\tsizes,\n\t\t\t\tbuilt,\n\t\t\t\tcodeGenerated,\n\t\t\t\tbuildTimeExecuted,\n\t\t\t\tcached: !built && !codeGenerated\n\t\t\t};\n\t\t\tObject.assign(object, statsModule);\n\n\t\t\tif (built || codeGenerated || options.cachedModules) {\n\t\t\t\tObject.assign(\n\t\t\t\t\tobject,\n\t\t\t\t\tfactory.create(`${type}$visible`, module, context)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tmodule$visible: {\n\t\t_: (object, module, context, { requestShortener }, factory) => {\n\t\t\tconst { compilation, type, rootModules } = context;\n\t\t\tconst { moduleGraph } = compilation;\n\t\t\t/** @type {Module[]} */\n\t\t\tconst path = [];\n\t\t\tconst issuer = moduleGraph.getIssuer(module);\n\t\t\tlet current = issuer;\n\t\t\twhile (current) {\n\t\t\t\tpath.push(current);\n\t\t\t\tcurrent = moduleGraph.getIssuer(current);\n\t\t\t}\n\t\t\tpath.reverse();\n\t\t\tconst profile = moduleGraph.getProfile(module);\n\t\t\tconst errors = module.getErrors();\n\t\t\tconst errorsCount = errors !== undefined ? countIterable(errors) : 0;\n\t\t\tconst warnings = module.getWarnings();\n\t\t\tconst warningsCount =\n\t\t\t\twarnings !== undefined ? countIterable(warnings) : 0;\n\t\t\t/** @type {{[x: string]: number}} */\n\t\t\tconst sizes = {};\n\t\t\tfor (const sourceType of module.getSourceTypes()) {\n\t\t\t\tsizes[sourceType] = module.size(sourceType);\n\t\t\t}\n\t\t\t/** @type {KnownStatsModule} */\n\t\t\tconst statsModule = {\n\t\t\t\tidentifier: module.identifier(),\n\t\t\t\tname: module.readableIdentifier(requestShortener),\n\t\t\t\tnameForCondition: module.nameForCondition(),\n\t\t\t\tindex: moduleGraph.getPreOrderIndex(module),\n\t\t\t\tpreOrderIndex: moduleGraph.getPreOrderIndex(module),\n\t\t\t\tindex2: moduleGraph.getPostOrderIndex(module),\n\t\t\t\tpostOrderIndex: moduleGraph.getPostOrderIndex(module),\n\t\t\t\tcacheable: module.buildInfo.cacheable,\n\t\t\t\toptional: module.isOptional(moduleGraph),\n\t\t\t\torphan:\n\t\t\t\t\t!type.endsWith(\"module.modules[].module$visible\") &&\n\t\t\t\t\tcompilation.chunkGraph.getNumberOfModuleChunks(module) === 0,\n\t\t\t\tdependent: rootModules ? !rootModules.has(module) : undefined,\n\t\t\t\tissuer: issuer && issuer.identifier(),\n\t\t\t\tissuerName: issuer && issuer.readableIdentifier(requestShortener),\n\t\t\t\tissuerPath:\n\t\t\t\t\tissuer &&\n\t\t\t\t\tfactory.create(`${type.slice(0, -8)}.issuerPath`, path, context),\n\t\t\t\tfailed: errorsCount > 0,\n\t\t\t\terrors: errorsCount,\n\t\t\t\twarnings: warningsCount\n\t\t\t};\n\t\t\tObject.assign(object, statsModule);\n\t\t\tif (profile) {\n\t\t\t\tobject.profile = factory.create(\n\t\t\t\t\t`${type.slice(0, -8)}.profile`,\n\t\t\t\t\tprofile,\n\t\t\t\t\tcontext\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tids: (object, module, { compilation: { chunkGraph, moduleGraph } }) => {\n\t\t\tobject.id = chunkGraph.getModuleId(module);\n\t\t\tconst issuer = moduleGraph.getIssuer(module);\n\t\t\tobject.issuerId = issuer && chunkGraph.getModuleId(issuer);\n\t\t\tobject.chunks = Array.from(\n\t\t\t\tchunkGraph.getOrderedModuleChunksIterable(module, compareChunksById),\n\t\t\t\tchunk => chunk.id\n\t\t\t);\n\t\t},\n\t\tmoduleAssets: (object, module) => {\n\t\t\tobject.assets = module.buildInfo.assets\n\t\t\t\t? Object.keys(module.buildInfo.assets)\n\t\t\t\t: [];\n\t\t},\n\t\treasons: (object, module, context, options, factory) => {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tcompilation: { moduleGraph }\n\t\t\t} = context;\n\t\t\tconst groupsReasons = factory.create(\n\t\t\t\t`${type.slice(0, -8)}.reasons`,\n\t\t\t\tArray.from(moduleGraph.getIncomingConnections(module)),\n\t\t\t\tcontext\n\t\t\t);\n\t\t\tconst limited = spaceLimited(groupsReasons, options.reasonsSpace);\n\t\t\tobject.reasons = limited.children;\n\t\t\tobject.filteredReasons = limited.filteredChildren;\n\t\t},\n\t\tusedExports: (\n\t\t\tobject,\n\t\t\tmodule,\n\t\t\t{ runtime, compilation: { moduleGraph } }\n\t\t) => {\n\t\t\tconst usedExports = moduleGraph.getUsedExports(module, runtime);\n\t\t\tif (usedExports === null) {\n\t\t\t\tobject.usedExports = null;\n\t\t\t} else if (typeof usedExports === \"boolean\") {\n\t\t\t\tobject.usedExports = usedExports;\n\t\t\t} else {\n\t\t\t\tobject.usedExports = Array.from(usedExports);\n\t\t\t}\n\t\t},\n\t\tprovidedExports: (object, module, { compilation: { moduleGraph } }) => {\n\t\t\tconst providedExports = moduleGraph.getProvidedExports(module);\n\t\t\tobject.providedExports = Array.isArray(providedExports)\n\t\t\t\t? providedExports\n\t\t\t\t: null;\n\t\t},\n\t\toptimizationBailout: (\n\t\t\tobject,\n\t\t\tmodule,\n\t\t\t{ compilation: { moduleGraph } },\n\t\t\t{ requestShortener }\n\t\t) => {\n\t\t\tobject.optimizationBailout = moduleGraph\n\t\t\t\t.getOptimizationBailout(module)\n\t\t\t\t.map(item => {\n\t\t\t\t\tif (typeof item === \"function\") return item(requestShortener);\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t},\n\t\tdepth: (object, module, { compilation: { moduleGraph } }) => {\n\t\t\tobject.depth = moduleGraph.getDepth(module);\n\t\t},\n\t\tnestedModules: (object, module, context, options, factory) => {\n\t\t\tconst { type } = context;\n\t\t\tconst innerModules = /** @type {Module & { modules?: Module[] }} */ (\n\t\t\t\tmodule\n\t\t\t).modules;\n\t\t\tif (Array.isArray(innerModules)) {\n\t\t\t\tconst groupedModules = factory.create(\n\t\t\t\t\t`${type.slice(0, -8)}.modules`,\n\t\t\t\t\tinnerModules,\n\t\t\t\t\tcontext\n\t\t\t\t);\n\t\t\t\tconst limited = spaceLimited(\n\t\t\t\t\tgroupedModules,\n\t\t\t\t\toptions.nestedModulesSpace\n\t\t\t\t);\n\t\t\t\tobject.modules = limited.children;\n\t\t\t\tobject.filteredModules = limited.filteredChildren;\n\t\t\t}\n\t\t},\n\t\tsource: (object, module) => {\n\t\t\tconst originalSource = module.originalSource();\n\t\t\tif (originalSource) {\n\t\t\t\tobject.source = originalSource.source();\n\t\t\t}\n\t\t}\n\t},\n\tprofile: {\n\t\t_: (object, profile) => {\n\t\t\t/** @type {KnownStatsProfile} */\n\t\t\tconst statsProfile = {\n\t\t\t\ttotal:\n\t\t\t\t\tprofile.factory +\n\t\t\t\t\tprofile.restoring +\n\t\t\t\t\tprofile.integration +\n\t\t\t\t\tprofile.building +\n\t\t\t\t\tprofile.storing,\n\t\t\t\tresolving: profile.factory,\n\t\t\t\trestoring: profile.restoring,\n\t\t\t\tbuilding: profile.building,\n\t\t\t\tintegration: profile.integration,\n\t\t\t\tstoring: profile.storing,\n\t\t\t\tadditionalResolving: profile.additionalFactories,\n\t\t\t\tadditionalIntegration: profile.additionalIntegration,\n\t\t\t\t// TODO remove this in webpack 6\n\t\t\t\tfactory: profile.factory,\n\t\t\t\t// TODO remove this in webpack 6\n\t\t\t\tdependencies: profile.additionalFactories\n\t\t\t};\n\t\t\tObject.assign(object, statsProfile);\n\t\t}\n\t},\n\tmoduleIssuer: {\n\t\t_: (object, module, context, { requestShortener }, factory) => {\n\t\t\tconst { compilation, type } = context;\n\t\t\tconst { moduleGraph } = compilation;\n\t\t\tconst profile = moduleGraph.getProfile(module);\n\t\t\t/** @type {KnownStatsModuleIssuer} */\n\t\t\tconst statsModuleIssuer = {\n\t\t\t\tidentifier: module.identifier(),\n\t\t\t\tname: module.readableIdentifier(requestShortener)\n\t\t\t};\n\t\t\tObject.assign(object, statsModuleIssuer);\n\t\t\tif (profile) {\n\t\t\t\tobject.profile = factory.create(`${type}.profile`, profile, context);\n\t\t\t}\n\t\t},\n\t\tids: (object, module, { compilation: { chunkGraph } }) => {\n\t\t\tobject.id = chunkGraph.getModuleId(module);\n\t\t}\n\t},\n\tmoduleReason: {\n\t\t_: (object, reason, { runtime }, { requestShortener }) => {\n\t\t\tconst dep = reason.dependency;\n\t\t\tconst moduleDep =\n\t\t\t\tdep && dep instanceof ModuleDependency ? dep : undefined;\n\t\t\t/** @type {KnownStatsModuleReason} */\n\t\t\tconst statsModuleReason = {\n\t\t\t\tmoduleIdentifier: reason.originModule\n\t\t\t\t\t? reason.originModule.identifier()\n\t\t\t\t\t: null,\n\t\t\t\tmodule: reason.originModule\n\t\t\t\t\t? reason.originModule.readableIdentifier(requestShortener)\n\t\t\t\t\t: null,\n\t\t\t\tmoduleName: reason.originModule\n\t\t\t\t\t? reason.originModule.readableIdentifier(requestShortener)\n\t\t\t\t\t: null,\n\t\t\t\tresolvedModuleIdentifier: reason.resolvedOriginModule\n\t\t\t\t\t? reason.resolvedOriginModule.identifier()\n\t\t\t\t\t: null,\n\t\t\t\tresolvedModule: reason.resolvedOriginModule\n\t\t\t\t\t? reason.resolvedOriginModule.readableIdentifier(requestShortener)\n\t\t\t\t\t: null,\n\t\t\t\ttype: reason.dependency ? reason.dependency.type : null,\n\t\t\t\tactive: reason.isActive(runtime),\n\t\t\t\texplanation: reason.explanation,\n\t\t\t\tuserRequest: (moduleDep && moduleDep.userRequest) || null\n\t\t\t};\n\t\t\tObject.assign(object, statsModuleReason);\n\t\t\tif (reason.dependency) {\n\t\t\t\tconst locInfo = formatLocation(reason.dependency.loc);\n\t\t\t\tif (locInfo) {\n\t\t\t\t\tobject.loc = locInfo;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tids: (object, reason, { compilation: { chunkGraph } }) => {\n\t\t\tobject.moduleId = reason.originModule\n\t\t\t\t? chunkGraph.getModuleId(reason.originModule)\n\t\t\t\t: null;\n\t\t\tobject.resolvedModuleId = reason.resolvedOriginModule\n\t\t\t\t? chunkGraph.getModuleId(reason.resolvedOriginModule)\n\t\t\t\t: null;\n\t\t}\n\t},\n\tchunk: {\n\t\t_: (object, chunk, { makePathsRelative, compilation: { chunkGraph } }) => {\n\t\t\tconst childIdByOrder = chunk.getChildIdsByOrders(chunkGraph);\n\n\t\t\t/** @type {KnownStatsChunk} */\n\t\t\tconst statsChunk = {\n\t\t\t\trendered: chunk.rendered,\n\t\t\t\tinitial: chunk.canBeInitial(),\n\t\t\t\tentry: chunk.hasRuntime(),\n\t\t\t\trecorded: AggressiveSplittingPlugin.wasChunkRecorded(chunk),\n\t\t\t\treason: chunk.chunkReason,\n\t\t\t\tsize: chunkGraph.getChunkModulesSize(chunk),\n\t\t\t\tsizes: chunkGraph.getChunkModulesSizes(chunk),\n\t\t\t\tnames: chunk.name ? [chunk.name] : [],\n\t\t\t\tidHints: Array.from(chunk.idNameHints),\n\t\t\t\truntime:\n\t\t\t\t\tchunk.runtime === undefined\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: typeof chunk.runtime === \"string\"\n\t\t\t\t\t\t? [makePathsRelative(chunk.runtime)]\n\t\t\t\t\t\t: Array.from(chunk.runtime.sort(), makePathsRelative),\n\t\t\t\tfiles: Array.from(chunk.files),\n\t\t\t\tauxiliaryFiles: Array.from(chunk.auxiliaryFiles).sort(compareIds),\n\t\t\t\thash: chunk.renderedHash,\n\t\t\t\tchildrenByOrder: childIdByOrder\n\t\t\t};\n\t\t\tObject.assign(object, statsChunk);\n\t\t},\n\t\tids: (object, chunk) => {\n\t\t\tobject.id = chunk.id;\n\t\t},\n\t\tchunkRelations: (object, chunk, { compilation: { chunkGraph } }) => {\n\t\t\t/** @type {Set<string|number>} */\n\t\t\tconst parents = new Set();\n\t\t\t/** @type {Set<string|number>} */\n\t\t\tconst children = new Set();\n\t\t\t/** @type {Set<string|number>} */\n\t\t\tconst siblings = new Set();\n\n\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\tfor (const parentGroup of chunkGroup.parentsIterable) {\n\t\t\t\t\tfor (const chunk of parentGroup.chunks) {\n\t\t\t\t\t\tparents.add(chunk.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const childGroup of chunkGroup.childrenIterable) {\n\t\t\t\t\tfor (const chunk of childGroup.chunks) {\n\t\t\t\t\t\tchildren.add(chunk.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const sibling of chunkGroup.chunks) {\n\t\t\t\t\tif (sibling !== chunk) siblings.add(sibling.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tobject.siblings = Array.from(siblings).sort(compareIds);\n\t\t\tobject.parents = Array.from(parents).sort(compareIds);\n\t\t\tobject.children = Array.from(children).sort(compareIds);\n\t\t},\n\t\tchunkModules: (object, chunk, context, options, factory) => {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tcompilation: { chunkGraph }\n\t\t\t} = context;\n\t\t\tconst array = chunkGraph.getChunkModules(chunk);\n\t\t\tconst groupedModules = factory.create(`${type}.modules`, array, {\n\t\t\t\t...context,\n\t\t\t\truntime: chunk.runtime,\n\t\t\t\trootModules: new Set(chunkGraph.getChunkRootModules(chunk))\n\t\t\t});\n\t\t\tconst limited = spaceLimited(groupedModules, options.chunkModulesSpace);\n\t\t\tobject.modules = limited.children;\n\t\t\tobject.filteredModules = limited.filteredChildren;\n\t\t},\n\t\tchunkOrigins: (object, chunk, context, options, factory) => {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tcompilation: { chunkGraph }\n\t\t\t} = context;\n\t\t\t/** @type {Set<string>} */\n\t\t\tconst originsKeySet = new Set();\n\t\t\tconst origins = [];\n\t\t\tfor (const g of chunk.groupsIterable) {\n\t\t\t\torigins.push(...g.origins);\n\t\t\t}\n\t\t\tconst array = origins.filter(origin => {\n\t\t\t\tconst key = [\n\t\t\t\t\torigin.module ? chunkGraph.getModuleId(origin.module) : undefined,\n\t\t\t\t\tformatLocation(origin.loc),\n\t\t\t\t\torigin.request\n\t\t\t\t].join();\n\t\t\t\tif (originsKeySet.has(key)) return false;\n\t\t\t\toriginsKeySet.add(key);\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tobject.origins = factory.create(`${type}.origins`, array, context);\n\t\t}\n\t},\n\tchunkOrigin: {\n\t\t_: (object, origin, context, { requestShortener }) => {\n\t\t\t/** @type {KnownStatsChunkOrigin} */\n\t\t\tconst statsChunkOrigin = {\n\t\t\t\tmodule: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\tmoduleIdentifier: origin.module ? origin.module.identifier() : \"\",\n\t\t\t\tmoduleName: origin.module\n\t\t\t\t\t? origin.module.readableIdentifier(requestShortener)\n\t\t\t\t\t: \"\",\n\t\t\t\tloc: formatLocation(origin.loc),\n\t\t\t\trequest: origin.request\n\t\t\t};\n\t\t\tObject.assign(object, statsChunkOrigin);\n\t\t},\n\t\tids: (object, origin, { compilation: { chunkGraph } }) => {\n\t\t\tobject.moduleId = origin.module\n\t\t\t\t? chunkGraph.getModuleId(origin.module)\n\t\t\t\t: undefined;\n\t\t}\n\t},\n\terror: EXTRACT_ERROR,\n\twarning: EXTRACT_ERROR,\n\tmoduleTraceItem: {\n\t\t_: (object, { origin, module }, context, { requestShortener }, factory) => {\n\t\t\tconst {\n\t\t\t\ttype,\n\t\t\t\tcompilation: { moduleGraph }\n\t\t\t} = context;\n\t\t\tobject.originIdentifier = origin.identifier();\n\t\t\tobject.originName = origin.readableIdentifier(requestShortener);\n\t\t\tobject.moduleIdentifier = module.identifier();\n\t\t\tobject.moduleName = module.readableIdentifier(requestShortener);\n\t\t\tconst dependencies = Array.from(\n\t\t\t\tmoduleGraph.getIncomingConnections(module)\n\t\t\t)\n\t\t\t\t.filter(c => c.resolvedOriginModule === origin && c.dependency)\n\t\t\t\t.map(c => c.dependency);\n\t\t\tobject.dependencies = factory.create(\n\t\t\t\t`${type}.dependencies`,\n\t\t\t\tArray.from(new Set(dependencies)),\n\t\t\t\tcontext\n\t\t\t);\n\t\t},\n\t\tids: (object, { origin, module }, { compilation: { chunkGraph } }) => {\n\t\t\tobject.originId = chunkGraph.getModuleId(origin);\n\t\t\tobject.moduleId = chunkGraph.getModuleId(module);\n\t\t}\n\t},\n\tmoduleTraceDependency: {\n\t\t_: (object, dependency) => {\n\t\t\tobject.loc = formatLocation(dependency.loc);\n\t\t}\n\t}\n};\n\n/** @type {Record<string, Record<string, (thing: any, context: StatsFactoryContext, options: NormalizedStatsOptions) => boolean | undefined>>} */\nconst FILTER = {\n\t\"module.reasons\": {\n\t\t\"!orphanModules\": (reason, { compilation: { chunkGraph } }) => {\n\t\t\tif (\n\t\t\t\treason.originModule &&\n\t\t\t\tchunkGraph.getNumberOfModuleChunks(reason.originModule) === 0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/** @type {Record<string, Record<string, (thing: Object, context: StatsFactoryContext, options: NormalizedStatsOptions) => boolean | undefined>>} */\nconst FILTER_RESULTS = {\n\t\"compilation.warnings\": {\n\t\twarningsFilter: util.deprecate(\n\t\t\t(warning, context, { warningsFilter }) => {\n\t\t\t\tconst warningString = Object.keys(warning)\n\t\t\t\t\t.map(key => `${warning[key]}`)\n\t\t\t\t\t.join(\"\\n\");\n\t\t\t\treturn !warningsFilter.some(filter => filter(warning, warningString));\n\t\t\t},\n\t\t\t\"config.stats.warningsFilter is deprecated in favor of config.ignoreWarnings\",\n\t\t\t\"DEP_WEBPACK_STATS_WARNINGS_FILTER\"\n\t\t)\n\t}\n};\n\n/** @type {Record<string, (comparators: Function[], context: StatsFactoryContext) => void>} */\nconst MODULES_SORTER = {\n\t_: (comparators, { compilation: { moduleGraph } }) => {\n\t\tcomparators.push(\n\t\t\tcompareSelect(\n\t\t\t\t/**\n\t\t\t\t * @param {Module} m module\n\t\t\t\t * @returns {number} depth\n\t\t\t\t */\n\t\t\t\tm => moduleGraph.getDepth(m),\n\t\t\t\tcompareNumbers\n\t\t\t),\n\t\t\tcompareSelect(\n\t\t\t\t/**\n\t\t\t\t * @param {Module} m module\n\t\t\t\t * @returns {number} index\n\t\t\t\t */\n\t\t\t\tm => moduleGraph.getPreOrderIndex(m),\n\t\t\t\tcompareNumbers\n\t\t\t),\n\t\t\tcompareSelect(\n\t\t\t\t/**\n\t\t\t\t * @param {Module} m module\n\t\t\t\t * @returns {string} identifier\n\t\t\t\t */\n\t\t\t\tm => m.identifier(),\n\t\t\t\tcompareIds\n\t\t\t)\n\t\t);\n\t}\n};\n\n/** @type {Record<string, Record<string, (comparators: Function[], context: StatsFactoryContext) => void>>} */\nconst SORTERS = {\n\t\"compilation.chunks\": {\n\t\t_: comparators => {\n\t\t\tcomparators.push(compareSelect(c => c.id, compareIds));\n\t\t}\n\t},\n\t\"compilation.modules\": MODULES_SORTER,\n\t\"chunk.rootModules\": MODULES_SORTER,\n\t\"chunk.modules\": MODULES_SORTER,\n\t\"module.modules\": MODULES_SORTER,\n\t\"module.reasons\": {\n\t\t_: (comparators, { compilation: { chunkGraph } }) => {\n\t\t\tcomparators.push(\n\t\t\t\tcompareSelect(x => x.originModule, compareModulesByIdentifier)\n\t\t\t);\n\t\t\tcomparators.push(\n\t\t\t\tcompareSelect(x => x.resolvedOriginModule, compareModulesByIdentifier)\n\t\t\t);\n\t\t\tcomparators.push(\n\t\t\t\tcompareSelect(\n\t\t\t\t\tx => x.dependency,\n\t\t\t\t\tconcatComparators(\n\t\t\t\t\t\tcompareSelect(\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {Dependency} x dependency\n\t\t\t\t\t\t\t * @returns {DependencyLocation} location\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tx => x.loc,\n\t\t\t\t\t\t\tcompareLocations\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcompareSelect(x => x.type, compareIds)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t},\n\t\"chunk.origins\": {\n\t\t_: (comparators, { compilation: { chunkGraph } }) => {\n\t\t\tcomparators.push(\n\t\t\t\tcompareSelect(\n\t\t\t\t\torigin =>\n\t\t\t\t\t\torigin.module ? chunkGraph.getModuleId(origin.module) : undefined,\n\t\t\t\t\tcompareIds\n\t\t\t\t),\n\t\t\t\tcompareSelect(origin => formatLocation(origin.loc), compareIds),\n\t\t\t\tcompareSelect(origin => origin.request, compareIds)\n\t\t\t);\n\t\t}\n\t}\n};\n\nconst getItemSize = item => {\n\t// Each item takes 1 line\n\t// + the size of the children\n\t// + 1 extra line when it has children and filteredChildren\n\treturn !item.children\n\t\t? 1\n\t\t: item.filteredChildren\n\t\t? 2 + getTotalSize(item.children)\n\t\t: 1 + getTotalSize(item.children);\n};\n\nconst getTotalSize = children => {\n\tlet size = 0;\n\tfor (const child of children) {\n\t\tsize += getItemSize(child);\n\t}\n\treturn size;\n};\n\nconst getTotalItems = children => {\n\tlet count = 0;\n\tfor (const child of children) {\n\t\tif (!child.children && !child.filteredChildren) {\n\t\t\tcount++;\n\t\t} else {\n\t\t\tif (child.children) count += getTotalItems(child.children);\n\t\t\tif (child.filteredChildren) count += child.filteredChildren;\n\t\t}\n\t}\n\treturn count;\n};\n\nconst collapse = children => {\n\t// After collapse each child must take exactly one line\n\tconst newChildren = [];\n\tfor (const child of children) {\n\t\tif (child.children) {\n\t\t\tlet filteredChildren = child.filteredChildren || 0;\n\t\t\tfilteredChildren += getTotalItems(child.children);\n\t\t\tnewChildren.push({\n\t\t\t\t...child,\n\t\t\t\tchildren: undefined,\n\t\t\t\tfilteredChildren\n\t\t\t});\n\t\t} else {\n\t\t\tnewChildren.push(child);\n\t\t}\n\t}\n\treturn newChildren;\n};\n\nconst spaceLimited = (\n\titemsAndGroups,\n\tmax,\n\tfilteredChildrenLineReserved = false\n) => {\n\tif (max < 1) {\n\t\treturn {\n\t\t\tchildren: undefined,\n\t\t\tfilteredChildren: getTotalItems(itemsAndGroups)\n\t\t};\n\t}\n\t/** @type {any[] | undefined} */\n\tlet children = undefined;\n\t/** @type {number | undefined} */\n\tlet filteredChildren = undefined;\n\t// This are the groups, which take 1+ lines each\n\tconst groups = [];\n\t// The sizes of the groups are stored in groupSizes\n\tconst groupSizes = [];\n\t// This are the items, which take 1 line each\n\tconst items = [];\n\t// The total of group sizes\n\tlet groupsSize = 0;\n\n\tfor (const itemOrGroup of itemsAndGroups) {\n\t\t// is item\n\t\tif (!itemOrGroup.children && !itemOrGroup.filteredChildren) {\n\t\t\titems.push(itemOrGroup);\n\t\t} else {\n\t\t\tgroups.push(itemOrGroup);\n\t\t\tconst size = getItemSize(itemOrGroup);\n\t\t\tgroupSizes.push(size);\n\t\t\tgroupsSize += size;\n\t\t}\n\t}\n\n\tif (groupsSize + items.length <= max) {\n\t\t// The total size in the current state fits into the max\n\t\t// keep all\n\t\tchildren = groups.length > 0 ? groups.concat(items) : items;\n\t} else if (groups.length === 0) {\n\t\t// slice items to max\n\t\t// inner space marks that lines for filteredChildren already reserved\n\t\tconst limit = max - (filteredChildrenLineReserved ? 0 : 1);\n\t\tfilteredChildren = items.length - limit;\n\t\titems.length = limit;\n\t\tchildren = items;\n\t} else {\n\t\t// limit is the size when all groups are collapsed\n\t\tconst limit =\n\t\t\tgroups.length +\n\t\t\t(filteredChildrenLineReserved || items.length === 0 ? 0 : 1);\n\t\tif (limit < max) {\n\t\t\t// calculate how much we are over the size limit\n\t\t\t// this allows to approach the limit faster\n\t\t\tlet oversize;\n\t\t\t// If each group would take 1 line the total would be below the maximum\n\t\t\t// collapse some groups, keep items\n\t\t\twhile (\n\t\t\t\t(oversize =\n\t\t\t\t\tgroupsSize +\n\t\t\t\t\titems.length +\n\t\t\t\t\t(filteredChildren && !filteredChildrenLineReserved ? 1 : 0) -\n\t\t\t\t\tmax) > 0\n\t\t\t) {\n\t\t\t\t// Find the maximum group and process only this one\n\t\t\t\tconst maxGroupSize = Math.max(...groupSizes);\n\t\t\t\tif (maxGroupSize < items.length) {\n\t\t\t\t\tfilteredChildren = items.length;\n\t\t\t\t\titems.length = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < groups.length; i++) {\n\t\t\t\t\tif (groupSizes[i] === maxGroupSize) {\n\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t// run this algorithm recursively and limit the size of the children to\n\t\t\t\t\t\t// current size - oversize / number of groups\n\t\t\t\t\t\t// So it should always end up being smaller\n\t\t\t\t\t\tconst headerSize = group.filteredChildren ? 2 : 1;\n\t\t\t\t\t\tconst limited = spaceLimited(\n\t\t\t\t\t\t\tgroup.children,\n\t\t\t\t\t\t\tmaxGroupSize -\n\t\t\t\t\t\t\t\t// we should use ceil to always feet in max\n\t\t\t\t\t\t\t\tMath.ceil(oversize / groups.length) -\n\t\t\t\t\t\t\t\t// we substitute size of group head\n\t\t\t\t\t\t\t\theaderSize,\n\t\t\t\t\t\t\theaderSize === 2\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgroups[i] = {\n\t\t\t\t\t\t\t...group,\n\t\t\t\t\t\t\tchildren: limited.children,\n\t\t\t\t\t\t\tfilteredChildren: limited.filteredChildren\n\t\t\t\t\t\t\t\t? (group.filteredChildren || 0) + limited.filteredChildren\n\t\t\t\t\t\t\t\t: group.filteredChildren\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst newSize = getItemSize(groups[i]);\n\t\t\t\t\t\tgroupsSize -= maxGroupSize - newSize;\n\t\t\t\t\t\tgroupSizes[i] = newSize;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tchildren = groups.concat(items);\n\t\t} else if (limit === max) {\n\t\t\t// If we have only enough space to show one line per group and one line for the filtered items\n\t\t\t// collapse all groups and items\n\t\t\tchildren = collapse(groups);\n\t\t\tfilteredChildren = items.length;\n\t\t} else {\n\t\t\t// If we have no space\n\t\t\t// collapse complete group\n\t\t\tfilteredChildren = getTotalItems(itemsAndGroups);\n\t\t}\n\t}\n\n\treturn {\n\t\tchildren,\n\t\tfilteredChildren\n\t};\n};\n\nconst assetGroup = (children, assets) => {\n\tlet size = 0;\n\tfor (const asset of children) {\n\t\tsize += asset.size;\n\t}\n\treturn {\n\t\tsize\n\t};\n};\n\nconst moduleGroup = (children, modules) => {\n\tlet size = 0;\n\tconst sizes = {};\n\tfor (const module of children) {\n\t\tsize += module.size;\n\t\tfor (const key of Object.keys(module.sizes)) {\n\t\t\tsizes[key] = (sizes[key] || 0) + module.sizes[key];\n\t\t}\n\t}\n\treturn {\n\t\tsize,\n\t\tsizes\n\t};\n};\n\nconst reasonGroup = (children, reasons) => {\n\tlet active = false;\n\tfor (const reason of children) {\n\t\tactive = active || reason.active;\n\t}\n\treturn {\n\t\tactive\n\t};\n};\n\nconst GROUP_EXTENSION_REGEXP = /(\\.[^.]+?)(?:\\?|(?: \\+ \\d+ modules?)?$)/;\nconst GROUP_PATH_REGEXP = /(.+)[/\\\\][^/\\\\]+?(?:\\?|(?: \\+ \\d+ modules?)?$)/;\n\n/** @type {Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>} */\nconst ASSETS_GROUPERS = {\n\t_: (groupConfigs, context, options) => {\n\t\tconst groupByFlag = (name, exclude) => {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: asset => {\n\t\t\t\t\treturn asset[name] ? [\"1\"] : undefined;\n\t\t\t\t},\n\t\t\t\tgetOptions: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgroupChildren: !exclude,\n\t\t\t\t\t\tforce: exclude\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, assets) => {\n\t\t\t\t\treturn exclude\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\ttype: \"assets by status\",\n\t\t\t\t\t\t\t\t[name]: !!key,\n\t\t\t\t\t\t\t\tfilteredChildren: assets.length,\n\t\t\t\t\t\t\t\t...assetGroup(children, assets)\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\ttype: \"assets by status\",\n\t\t\t\t\t\t\t\t[name]: !!key,\n\t\t\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t\t\t...assetGroup(children, assets)\n\t\t\t\t\t\t  };\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tconst {\n\t\t\tgroupAssetsByEmitStatus,\n\t\t\tgroupAssetsByPath,\n\t\t\tgroupAssetsByExtension\n\t\t} = options;\n\t\tif (groupAssetsByEmitStatus) {\n\t\t\tgroupByFlag(\"emitted\");\n\t\t\tgroupByFlag(\"comparedForEmit\");\n\t\t\tgroupByFlag(\"isOverSizeLimit\");\n\t\t}\n\t\tif (groupAssetsByEmitStatus || !options.cachedAssets) {\n\t\t\tgroupByFlag(\"cached\", !options.cachedAssets);\n\t\t}\n\t\tif (groupAssetsByPath || groupAssetsByExtension) {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: asset => {\n\t\t\t\t\tconst extensionMatch =\n\t\t\t\t\t\tgroupAssetsByExtension && GROUP_EXTENSION_REGEXP.exec(asset.name);\n\t\t\t\t\tconst extension = extensionMatch ? extensionMatch[1] : \"\";\n\t\t\t\t\tconst pathMatch =\n\t\t\t\t\t\tgroupAssetsByPath && GROUP_PATH_REGEXP.exec(asset.name);\n\t\t\t\t\tconst path = pathMatch ? pathMatch[1].split(/[/\\\\]/) : [];\n\t\t\t\t\tconst keys = [];\n\t\t\t\t\tif (groupAssetsByPath) {\n\t\t\t\t\t\tkeys.push(\".\");\n\t\t\t\t\t\tif (extension)\n\t\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t\tpath.length\n\t\t\t\t\t\t\t\t\t? `${path.join(\"/\")}/*${extension}`\n\t\t\t\t\t\t\t\t\t: `*${extension}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\twhile (path.length > 0) {\n\t\t\t\t\t\t\tkeys.push(path.join(\"/\") + \"/\");\n\t\t\t\t\t\t\tpath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (extension) keys.push(`*${extension}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn keys;\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, assets) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: groupAssetsByPath ? \"assets by path\" : \"assets by extension\",\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...assetGroup(children, assets)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\tgroupAssetsByInfo: (groupConfigs, context, options) => {\n\t\tconst groupByAssetInfoFlag = name => {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: asset => {\n\t\t\t\t\treturn asset.info && asset.info[name] ? [\"1\"] : undefined;\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, assets) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"assets by info\",\n\t\t\t\t\t\tinfo: {\n\t\t\t\t\t\t\t[name]: !!key\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...assetGroup(children, assets)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tgroupByAssetInfoFlag(\"immutable\");\n\t\tgroupByAssetInfoFlag(\"development\");\n\t\tgroupByAssetInfoFlag(\"hotModuleReplacement\");\n\t},\n\tgroupAssetsByChunk: (groupConfigs, context, options) => {\n\t\tconst groupByNames = name => {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: asset => {\n\t\t\t\t\treturn asset[name];\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, assets) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"assets by chunk\",\n\t\t\t\t\t\t[name]: [key],\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...assetGroup(children, assets)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tgroupByNames(\"chunkNames\");\n\t\tgroupByNames(\"auxiliaryChunkNames\");\n\t\tgroupByNames(\"chunkIdHints\");\n\t\tgroupByNames(\"auxiliaryChunkIdHints\");\n\t},\n\texcludeAssets: (groupConfigs, context, { excludeAssets }) => {\n\t\tgroupConfigs.push({\n\t\t\tgetKeys: asset => {\n\t\t\t\tconst ident = asset.name;\n\t\t\t\tconst excluded = excludeAssets.some(fn => fn(ident, asset));\n\t\t\t\tif (excluded) return [\"excluded\"];\n\t\t\t},\n\t\t\tgetOptions: () => ({\n\t\t\t\tgroupChildren: false,\n\t\t\t\tforce: true\n\t\t\t}),\n\t\t\tcreateGroup: (key, children, assets) => ({\n\t\t\t\ttype: \"hidden assets\",\n\t\t\t\tfilteredChildren: assets.length,\n\t\t\t\t...assetGroup(children, assets)\n\t\t\t})\n\t\t});\n\t}\n};\n\n/** @type {function(\"module\" | \"chunk\" | \"root-of-chunk\" | \"nested\"): Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>} */\nconst MODULES_GROUPERS = type => ({\n\t_: (groupConfigs, context, options) => {\n\t\tconst groupByFlag = (name, type, exclude) => {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: module => {\n\t\t\t\t\treturn module[name] ? [\"1\"] : undefined;\n\t\t\t\t},\n\t\t\t\tgetOptions: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgroupChildren: !exclude,\n\t\t\t\t\t\tforce: exclude\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, modules) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\t[name]: !!key,\n\t\t\t\t\t\t...(exclude ? { filteredChildren: modules.length } : { children }),\n\t\t\t\t\t\t...moduleGroup(children, modules)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tconst {\n\t\t\tgroupModulesByCacheStatus,\n\t\t\tgroupModulesByLayer,\n\t\t\tgroupModulesByAttributes,\n\t\t\tgroupModulesByType,\n\t\t\tgroupModulesByPath,\n\t\t\tgroupModulesByExtension\n\t\t} = options;\n\t\tif (groupModulesByAttributes) {\n\t\t\tgroupByFlag(\"errors\", \"modules with errors\");\n\t\t\tgroupByFlag(\"warnings\", \"modules with warnings\");\n\t\t\tgroupByFlag(\"assets\", \"modules with assets\");\n\t\t\tgroupByFlag(\"optional\", \"optional modules\");\n\t\t}\n\t\tif (groupModulesByCacheStatus) {\n\t\t\tgroupByFlag(\"cacheable\", \"cacheable modules\");\n\t\t\tgroupByFlag(\"built\", \"built modules\");\n\t\t\tgroupByFlag(\"codeGenerated\", \"code generated modules\");\n\t\t}\n\t\tif (groupModulesByCacheStatus || !options.cachedModules) {\n\t\t\tgroupByFlag(\"cached\", \"cached modules\", !options.cachedModules);\n\t\t}\n\t\tif (groupModulesByAttributes || !options.orphanModules) {\n\t\t\tgroupByFlag(\"orphan\", \"orphan modules\", !options.orphanModules);\n\t\t}\n\t\tif (groupModulesByAttributes || !options.dependentModules) {\n\t\t\tgroupByFlag(\"dependent\", \"dependent modules\", !options.dependentModules);\n\t\t}\n\t\tif (groupModulesByType || !options.runtimeModules) {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: module => {\n\t\t\t\t\tif (!module.moduleType) return;\n\t\t\t\t\tif (groupModulesByType) {\n\t\t\t\t\t\treturn [module.moduleType.split(\"/\", 1)[0]];\n\t\t\t\t\t} else if (module.moduleType === \"runtime\") {\n\t\t\t\t\t\treturn [\"runtime\"];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetOptions: key => {\n\t\t\t\t\tconst exclude = key === \"runtime\" && !options.runtimeModules;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tgroupChildren: !exclude,\n\t\t\t\t\t\tforce: exclude\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, modules) => {\n\t\t\t\t\tconst exclude = key === \"runtime\" && !options.runtimeModules;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: `${key} modules`,\n\t\t\t\t\t\tmoduleType: key,\n\t\t\t\t\t\t...(exclude ? { filteredChildren: modules.length } : { children }),\n\t\t\t\t\t\t...moduleGroup(children, modules)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (groupModulesByLayer) {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: module => {\n\t\t\t\t\treturn [module.layer];\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, modules) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"modules by layer\",\n\t\t\t\t\t\tlayer: key,\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...moduleGroup(children, modules)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (groupModulesByPath || groupModulesByExtension) {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: module => {\n\t\t\t\t\tif (!module.name) return;\n\t\t\t\t\tconst resource = parseResource(module.name.split(\"!\").pop()).path;\n\t\t\t\t\tconst dataUrl = /^data:[^,;]+/.exec(resource);\n\t\t\t\t\tif (dataUrl) return [dataUrl[0]];\n\t\t\t\t\tconst extensionMatch =\n\t\t\t\t\t\tgroupModulesByExtension && GROUP_EXTENSION_REGEXP.exec(resource);\n\t\t\t\t\tconst extension = extensionMatch ? extensionMatch[1] : \"\";\n\t\t\t\t\tconst pathMatch =\n\t\t\t\t\t\tgroupModulesByPath && GROUP_PATH_REGEXP.exec(resource);\n\t\t\t\t\tconst path = pathMatch ? pathMatch[1].split(/[/\\\\]/) : [];\n\t\t\t\t\tconst keys = [];\n\t\t\t\t\tif (groupModulesByPath) {\n\t\t\t\t\t\tif (extension)\n\t\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t\tpath.length\n\t\t\t\t\t\t\t\t\t? `${path.join(\"/\")}/*${extension}`\n\t\t\t\t\t\t\t\t\t: `*${extension}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\twhile (path.length > 0) {\n\t\t\t\t\t\t\tkeys.push(path.join(\"/\") + \"/\");\n\t\t\t\t\t\t\tpath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (extension) keys.push(`*${extension}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn keys;\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, modules) => {\n\t\t\t\t\tconst isDataUrl = key.startsWith(\"data:\");\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: isDataUrl\n\t\t\t\t\t\t\t? \"modules by mime type\"\n\t\t\t\t\t\t\t: groupModulesByPath\n\t\t\t\t\t\t\t? \"modules by path\"\n\t\t\t\t\t\t\t: \"modules by extension\",\n\t\t\t\t\t\tname: isDataUrl ? key.slice(/* 'data:'.length */ 5) : key,\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...moduleGroup(children, modules)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\texcludeModules: (groupConfigs, context, { excludeModules }) => {\n\t\tgroupConfigs.push({\n\t\t\tgetKeys: module => {\n\t\t\t\tconst name = module.name;\n\t\t\t\tif (name) {\n\t\t\t\t\tconst excluded = excludeModules.some(fn => fn(name, module, type));\n\t\t\t\t\tif (excluded) return [\"1\"];\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetOptions: () => ({\n\t\t\t\tgroupChildren: false,\n\t\t\t\tforce: true\n\t\t\t}),\n\t\t\tcreateGroup: (key, children, modules) => ({\n\t\t\t\ttype: \"hidden modules\",\n\t\t\t\tfilteredChildren: children.length,\n\t\t\t\t...moduleGroup(children, modules)\n\t\t\t})\n\t\t});\n\t}\n});\n\n/** @type {Record<string, Record<string, (groupConfigs: GroupConfig[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>>} */\nconst RESULT_GROUPERS = {\n\t\"compilation.assets\": ASSETS_GROUPERS,\n\t\"asset.related\": ASSETS_GROUPERS,\n\t\"compilation.modules\": MODULES_GROUPERS(\"module\"),\n\t\"chunk.modules\": MODULES_GROUPERS(\"chunk\"),\n\t\"chunk.rootModules\": MODULES_GROUPERS(\"root-of-chunk\"),\n\t\"module.modules\": MODULES_GROUPERS(\"nested\"),\n\t\"module.reasons\": {\n\t\tgroupReasonsByOrigin: groupConfigs => {\n\t\t\tgroupConfigs.push({\n\t\t\t\tgetKeys: reason => {\n\t\t\t\t\treturn [reason.module];\n\t\t\t\t},\n\t\t\t\tcreateGroup: (key, children, reasons) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"from origin\",\n\t\t\t\t\t\tmodule: key,\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\t...reasonGroup(children, reasons)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n\n// remove a prefixed \"!\" that can be specified to reverse sort order\nconst normalizeFieldKey = field => {\n\tif (field[0] === \"!\") {\n\t\treturn field.slice(1);\n\t}\n\treturn field;\n};\n\n// if a field is prefixed by a \"!\" reverse sort order\nconst sortOrderRegular = field => {\n\tif (field[0] === \"!\") {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\n/**\n * @param {string} field field name\n * @returns {function(Object, Object): number} comparators\n */\nconst sortByField = field => {\n\tif (!field) {\n\t\t/**\n\t\t * @param {any} a first\n\t\t * @param {any} b second\n\t\t * @returns {-1|0|1} zero\n\t\t */\n\t\tconst noSort = (a, b) => 0;\n\t\treturn noSort;\n\t}\n\n\tconst fieldKey = normalizeFieldKey(field);\n\n\tlet sortFn = compareSelect(m => m[fieldKey], compareIds);\n\n\t// if a field is prefixed with a \"!\" the sort is reversed!\n\tconst sortIsRegular = sortOrderRegular(field);\n\n\tif (!sortIsRegular) {\n\t\tconst oldSortFn = sortFn;\n\t\tsortFn = (a, b) => oldSortFn(b, a);\n\t}\n\n\treturn sortFn;\n};\n\nconst ASSET_SORTERS = {\n\t/** @type {(comparators: Function[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void} */\n\tassetsSort: (comparators, context, { assetsSort }) => {\n\t\tcomparators.push(sortByField(assetsSort));\n\t},\n\t_: comparators => {\n\t\tcomparators.push(compareSelect(a => a.name, compareIds));\n\t}\n};\n\n/** @type {Record<string, Record<string, (comparators: Function[], context: StatsFactoryContext, options: NormalizedStatsOptions) => void>>} */\nconst RESULT_SORTERS = {\n\t\"compilation.chunks\": {\n\t\tchunksSort: (comparators, context, { chunksSort }) => {\n\t\t\tcomparators.push(sortByField(chunksSort));\n\t\t}\n\t},\n\t\"compilation.modules\": {\n\t\tmodulesSort: (comparators, context, { modulesSort }) => {\n\t\t\tcomparators.push(sortByField(modulesSort));\n\t\t}\n\t},\n\t\"chunk.modules\": {\n\t\tchunkModulesSort: (comparators, context, { chunkModulesSort }) => {\n\t\t\tcomparators.push(sortByField(chunkModulesSort));\n\t\t}\n\t},\n\t\"module.modules\": {\n\t\tnestedModulesSort: (comparators, context, { nestedModulesSort }) => {\n\t\t\tcomparators.push(sortByField(nestedModulesSort));\n\t\t}\n\t},\n\t\"compilation.assets\": ASSET_SORTERS,\n\t\"asset.related\": ASSET_SORTERS\n};\n\n/**\n * @param {Record<string, Record<string, Function>>} config the config see above\n * @param {NormalizedStatsOptions} options stats options\n * @param {function(string, Function): void} fn handler function called for every active line in config\n * @returns {void}\n */\nconst iterateConfig = (config, options, fn) => {\n\tfor (const hookFor of Object.keys(config)) {\n\t\tconst subConfig = config[hookFor];\n\t\tfor (const option of Object.keys(subConfig)) {\n\t\t\tif (option !== \"_\") {\n\t\t\t\tif (option.startsWith(\"!\")) {\n\t\t\t\t\tif (options[option.slice(1)]) continue;\n\t\t\t\t} else {\n\t\t\t\t\tconst value = options[option];\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue === false ||\n\t\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t\t(Array.isArray(value) && value.length === 0)\n\t\t\t\t\t)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfn(hookFor, subConfig[option]);\n\t\t}\n\t}\n};\n\n/** @type {Record<string, string>} */\nconst ITEM_NAMES = {\n\t\"compilation.children[]\": \"compilation\",\n\t\"compilation.modules[]\": \"module\",\n\t\"compilation.entrypoints[]\": \"chunkGroup\",\n\t\"compilation.namedChunkGroups[]\": \"chunkGroup\",\n\t\"compilation.errors[]\": \"error\",\n\t\"compilation.warnings[]\": \"warning\",\n\t\"chunk.modules[]\": \"module\",\n\t\"chunk.rootModules[]\": \"module\",\n\t\"chunk.origins[]\": \"chunkOrigin\",\n\t\"compilation.chunks[]\": \"chunk\",\n\t\"compilation.assets[]\": \"asset\",\n\t\"asset.related[]\": \"asset\",\n\t\"module.issuerPath[]\": \"moduleIssuer\",\n\t\"module.reasons[]\": \"moduleReason\",\n\t\"module.modules[]\": \"module\",\n\t\"module.children[]\": \"module\",\n\t\"moduleTrace[]\": \"moduleTraceItem\",\n\t\"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\n/**\n * @param {Object[]} items items to be merged\n * @returns {Object} an object\n */\nconst mergeToObject = items => {\n\tconst obj = Object.create(null);\n\tfor (const item of items) {\n\t\tobj[item.name] = item;\n\t}\n\treturn obj;\n};\n\n/** @type {Record<string, (items: Object[]) => any>} */\nconst MERGER = {\n\t\"compilation.entrypoints\": mergeToObject,\n\t\"compilation.namedChunkGroups\": mergeToObject\n};\n\nclass DefaultStatsFactoryPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"DefaultStatsFactoryPlugin\", compilation => {\n\t\t\tcompilation.hooks.statsFactory.tap(\n\t\t\t\t\"DefaultStatsFactoryPlugin\",\n\t\t\t\t(stats, options, context) => {\n\t\t\t\t\titerateConfig(SIMPLE_EXTRACTORS, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.extract\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (obj, data, ctx) =>\n\t\t\t\t\t\t\t\tfn(obj, data, ctx, options, stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\titerateConfig(FILTER, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.filter\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (item, ctx, idx, i) =>\n\t\t\t\t\t\t\t\tfn(item, ctx, options, idx, i)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\titerateConfig(FILTER_RESULTS, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.filterResults\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (item, ctx, idx, i) =>\n\t\t\t\t\t\t\t\tfn(item, ctx, options, idx, i)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\titerateConfig(SORTERS, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.sort\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (comparators, ctx) =>\n\t\t\t\t\t\t\t\tfn(comparators, ctx, options)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\titerateConfig(RESULT_SORTERS, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.sortResults\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (comparators, ctx) =>\n\t\t\t\t\t\t\t\tfn(comparators, ctx, options)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\titerateConfig(RESULT_GROUPERS, options, (hookFor, fn) => {\n\t\t\t\t\t\tstats.hooks.groupResults\n\t\t\t\t\t\t\t.for(hookFor)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (groupConfigs, ctx) =>\n\t\t\t\t\t\t\t\tfn(groupConfigs, ctx, options)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tfor (const key of Object.keys(ITEM_NAMES)) {\n\t\t\t\t\t\tconst itemName = ITEM_NAMES[key];\n\t\t\t\t\t\tstats.hooks.getItemName\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", () => itemName);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const key of Object.keys(MERGER)) {\n\t\t\t\t\t\tconst merger = MERGER[key];\n\t\t\t\t\t\tstats.hooks.merge.for(key).tap(\"DefaultStatsFactoryPlugin\", merger);\n\t\t\t\t\t}\n\t\t\t\t\tif (options.children) {\n\t\t\t\t\t\tif (Array.isArray(options.children)) {\n\t\t\t\t\t\t\tstats.hooks.getItemFactory\n\t\t\t\t\t\t\t\t.for(\"compilation.children[].compilation\")\n\t\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", (comp, { _index: idx }) => {\n\t\t\t\t\t\t\t\t\tif (idx < options.children.length) {\n\t\t\t\t\t\t\t\t\t\treturn compilation.createStatsFactory(\n\t\t\t\t\t\t\t\t\t\t\tcompilation.createStatsOptions(\n\t\t\t\t\t\t\t\t\t\t\t\toptions.children[idx],\n\t\t\t\t\t\t\t\t\t\t\t\tcontext\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (options.children !== true) {\n\t\t\t\t\t\t\tconst childFactory = compilation.createStatsFactory(\n\t\t\t\t\t\t\t\tcompilation.createStatsOptions(options.children, context)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tstats.hooks.getItemFactory\n\t\t\t\t\t\t\t\t.for(\"compilation.children[].compilation\")\n\t\t\t\t\t\t\t\t.tap(\"DefaultStatsFactoryPlugin\", () => {\n\t\t\t\t\t\t\t\t\treturn childFactory;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = DefaultStatsFactoryPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}